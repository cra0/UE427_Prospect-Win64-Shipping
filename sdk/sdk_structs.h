#pragma once
#include "common.h"
namespace SDK
{


    struct FBlueprintSessionResult //ScriptStruct OnlineSubsystemUtils.BlueprintSessionResult
    {
    public:


    };

    struct FDefault__ScriptStruct //ScriptStruct CoreUObject.Default__ScriptStruct
    {
    public:


    };

    struct FInAppPurchaseProductInfo //ScriptStruct OnlineSubsystem.InAppPurchaseProductInfo
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString Identifier; // 0x0
        struct FString TransactionIdentifier; // 0x10
        struct FString DisplayName; // 0x20
        struct FString DisplayDescription; // 0x30
        struct FString DisplayPrice; // 0x40
        float RawPrice; // 0x50
        struct FString CurrencyCode; // 0x58
        struct FString CurrencySymbol; // 0x68
        struct FString DecimalSeparator; // 0x78
        struct FString GroupingSeparator; // 0x88
        struct FString ReceiptData; // 0x98

    };

    struct FInAppPurchaseReceiptInfo2 //ScriptStruct OnlineSubsystemUtils.InAppPurchaseReceiptInfo2
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ItemName; // 0x0
        struct FString ItemId; // 0x10
        struct FString ValidationInfo; // 0x20

    };

    struct FOnlineProxyStoreOffer //ScriptStruct OnlineSubsystemUtils.OnlineProxyStoreOffer
    {
    //Children Prop Count (Fields): 13
    public:

        struct FString OfferId; // 0x0
        struct FText Title; // 0x10
        struct FText Description; // 0x30
        struct FText LongDescription; // 0x50
        struct FText RegularPriceText; // 0x70
        int32_t RegularPrice; // 0x90
        struct FText PriceText; // 0x98
        int32_t NumericPrice; // 0xb8
        struct FString CurrencyCode; // 0xc0
        struct FDateTime ReleaseDate; // 0xd0
        struct FDateTime ExpirationDate; // 0xd8
        enum class EOnlineProxyStoreOfferDiscountType DiscountType; // 0xe0
        struct TMap<struct FString, struct FString> DynamicFields; // 0xe8

    };

    struct FJoinabilitySettings //ScriptStruct CoreUObject.JoinabilitySettings
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName SessionName; // 0x0
        bool bPublicSearchable; // 0x8
        bool bAllowInvites; // 0x9
        bool bJoinViaPresence; // 0xa
        bool bJoinViaPresenceFriendsOnly; // 0xb
        int32_t MaxPlayers; // 0xc
        int32_t MaxPartySize; // 0x10

    };

    struct FUniqueNetIdWrapper //ScriptStruct CoreUObject.UniqueNetIdWrapper
    {
    public:


    };

    struct FGuid //ScriptStruct CoreUObject.Guid
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t A; // 0x0
        int32_t B; // 0x4
        int32_t C; // 0x8
        int32_t D; // 0xc

    };

    struct FVector //ScriptStruct CoreUObject.Vector
    {
    //Children Prop Count (Fields): 3
    public:

        float X; // 0x0
        float Y; // 0x4
        float Z; // 0x8

    };

    struct FVector4 //ScriptStruct CoreUObject.Vector4
    {
    //Children Prop Count (Fields): 4
    public:

        float X; // 0x0
        float Y; // 0x4
        float Z; // 0x8
        float W; // 0xc

    };

    struct FVector2D //ScriptStruct CoreUObject.Vector2D
    {
    //Children Prop Count (Fields): 2
    public:

        float X; // 0x0
        float Y; // 0x4

    };

    struct FTwoVectors //ScriptStruct CoreUObject.TwoVectors
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector v1; // 0x0
        struct FVector v2; // 0xc

    };

    struct FPlane : FVector //ScriptStruct CoreUObject.Plane
    {
    //Children Prop Count (Fields): 1
    public:

        float W; // 0xc

    };

    struct FRotator //ScriptStruct CoreUObject.Rotator
    {
    //Children Prop Count (Fields): 3
    public:

        float Pitch; // 0x0
        float Yaw; // 0x4
        float Roll; // 0x8

    };

    struct FQuat //ScriptStruct CoreUObject.Quat
    {
    //Children Prop Count (Fields): 4
    public:

        float X; // 0x0
        float Y; // 0x4
        float Z; // 0x8
        float W; // 0xc

    };

    struct FPackedNormal //ScriptStruct CoreUObject.PackedNormal
    {
    //Children Prop Count (Fields): 4
    public:

        char X; // 0x0
        char Y; // 0x1
        char Z; // 0x2
        char W; // 0x3

    };

    struct FPackedRGB10A2N //ScriptStruct CoreUObject.PackedRGB10A2N
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Packed; // 0x0

    };

    struct FPackedRGBA16N //ScriptStruct CoreUObject.PackedRGBA16N
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t XY; // 0x0
        int32_t ZW; // 0x4

    };

    struct FIntPoint //ScriptStruct CoreUObject.IntPoint
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t X; // 0x0
        int32_t Y; // 0x4

    };

    struct FIntVector //ScriptStruct CoreUObject.IntVector
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t X; // 0x0
        int32_t Y; // 0x4
        int32_t Z; // 0x8

    };

    struct FColor //ScriptStruct CoreUObject.Color
    {
    //Children Prop Count (Fields): 4
    public:

        char B; // 0x0
        char G; // 0x1
        char R; // 0x2
        char A; // 0x3

    };

    struct FLinearColor //ScriptStruct CoreUObject.LinearColor
    {
    //Children Prop Count (Fields): 4
    public:

        float R; // 0x0
        float G; // 0x4
        float B; // 0x8
        float A; // 0xc

    };

    struct FBox //ScriptStruct CoreUObject.Box
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Min; // 0x0
        struct FVector Max; // 0xc
        char IsValid; // 0x18

    };

    struct FBox2D //ScriptStruct CoreUObject.Box2D
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector2D Min; // 0x0
        struct FVector2D Max; // 0x8
        char bIsValid; // 0x10

    };

    struct FBoxSphereBounds //ScriptStruct CoreUObject.BoxSphereBounds
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Origin; // 0x0
        struct FVector BoxExtent; // 0xc
        float SphereRadius; // 0x18

    };

    struct FOrientedBox //ScriptStruct CoreUObject.OrientedBox
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Center; // 0x0
        struct FVector AxisX; // 0xc
        struct FVector AxisY; // 0x18
        struct FVector AxisZ; // 0x24
        float ExtentX; // 0x30
        float ExtentY; // 0x34
        float ExtentZ; // 0x38

    };

    struct FMatrix //ScriptStruct CoreUObject.Matrix
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPlane XPlane; // 0x0
        struct FPlane YPlane; // 0x10
        struct FPlane ZPlane; // 0x20
        struct FPlane WPlane; // 0x30

    };

    struct FInterpCurvePointFloat //ScriptStruct CoreUObject.InterpCurvePointFloat
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        float OutVal; // 0x4
        float ArriveTangent; // 0x8
        float LeaveTangent; // 0xc
        enum class EInterpCurveMode InterpMode; // 0x10

    };

    struct FInterpCurveFloat //ScriptStruct CoreUObject.InterpCurveFloat
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointFloat> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FInterpCurvePointVector2D //ScriptStruct CoreUObject.InterpCurvePointVector2D
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        struct FVector2D OutVal; // 0x4
        struct FVector2D ArriveTangent; // 0xc
        struct FVector2D LeaveTangent; // 0x14
        enum class EInterpCurveMode InterpMode; // 0x1c

    };

    struct FInterpCurveVector2D //ScriptStruct CoreUObject.InterpCurveVector2D
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointVector2D> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FInterpCurvePointVector //ScriptStruct CoreUObject.InterpCurvePointVector
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        struct FVector OutVal; // 0x4
        struct FVector ArriveTangent; // 0x10
        struct FVector LeaveTangent; // 0x1c
        enum class EInterpCurveMode InterpMode; // 0x28

    };

    struct FInterpCurveVector //ScriptStruct CoreUObject.InterpCurveVector
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointVector> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FInterpCurvePointQuat //ScriptStruct CoreUObject.InterpCurvePointQuat
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        struct FQuat OutVal; // 0x10
        struct FQuat ArriveTangent; // 0x20
        struct FQuat LeaveTangent; // 0x30
        enum class EInterpCurveMode InterpMode; // 0x40

    };

    struct FInterpCurveQuat //ScriptStruct CoreUObject.InterpCurveQuat
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointQuat> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FInterpCurvePointTwoVectors //ScriptStruct CoreUObject.InterpCurvePointTwoVectors
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        struct FTwoVectors OutVal; // 0x4
        struct FTwoVectors ArriveTangent; // 0x1c
        struct FTwoVectors LeaveTangent; // 0x34
        enum class EInterpCurveMode InterpMode; // 0x4c

    };

    struct FInterpCurveTwoVectors //ScriptStruct CoreUObject.InterpCurveTwoVectors
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointTwoVectors> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FInterpCurvePointLinearColor //ScriptStruct CoreUObject.InterpCurvePointLinearColor
    {
    //Children Prop Count (Fields): 5
    public:

        float InVal; // 0x0
        struct FLinearColor OutVal; // 0x4
        struct FLinearColor ArriveTangent; // 0x14
        struct FLinearColor LeaveTangent; // 0x24
        enum class EInterpCurveMode InterpMode; // 0x34

    };

    struct FInterpCurveLinearColor //ScriptStruct CoreUObject.InterpCurveLinearColor
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FInterpCurvePointLinearColor> Points; // 0x0
        bool bIsLooped; // 0x10
        float LoopKeyOffset; // 0x14

    };

    struct FTransform //ScriptStruct CoreUObject.Transform
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Rotation; // 0x0
        struct FVector Translation; // 0x10
        struct FVector Scale3D; // 0x20

    };

    struct FRandomStream //ScriptStruct CoreUObject.RandomStream
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t InitialSeed; // 0x0
        int32_t Seed; // 0x4

    };

    struct FDateTime //ScriptStruct CoreUObject.DateTime
    {
    public:


    };

    struct FFrameNumber //ScriptStruct CoreUObject.FrameNumber
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Value; // 0x0

    };

    struct FFrameRate //ScriptStruct CoreUObject.FrameRate
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Numerator; // 0x0
        int32_t Denominator; // 0x4

    };

    struct FFrameTime //ScriptStruct CoreUObject.FrameTime
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumber FrameNumber; // 0x0
        float SubFrame; // 0x4

    };

    struct FQualifiedFrameTime //ScriptStruct CoreUObject.QualifiedFrameTime
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameTime Time; // 0x0
        struct FFrameRate Rate; // 0x8

    };

    struct FTimecode //ScriptStruct CoreUObject.Timecode
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Hours; // 0x0
        int32_t Minutes; // 0x4
        int32_t Seconds; // 0x8
        int32_t Frames; // 0xc
        bool bDropFrameFormat; // 0x10

    };

    struct FTimespan //ScriptStruct CoreUObject.Timespan
    {
    public:


    };

    struct FSoftObjectPath //ScriptStruct CoreUObject.SoftObjectPath
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName AssetPathName; // 0x0
        struct FString SubPathString; // 0x8

    };

    struct FSoftClassPath : FSoftObjectPath //ScriptStruct CoreUObject.SoftClassPath
    {
    public:


    };

    struct FPrimaryAssetType //ScriptStruct CoreUObject.PrimaryAssetType
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FPrimaryAssetId //ScriptStruct CoreUObject.PrimaryAssetId
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPrimaryAssetType PrimaryAssetType; // 0x0
        struct FName PrimaryAssetName; // 0x8

    };

    struct FFallbackStruct //ScriptStruct CoreUObject.FallbackStruct
    {
    public:


    };

    struct FFloatRangeBound //ScriptStruct CoreUObject.FloatRangeBound
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ERangeBoundTypes Type; // 0x0
        float Value; // 0x4

    };

    struct FFloatRange //ScriptStruct CoreUObject.FloatRange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFloatRangeBound LowerBound; // 0x0
        struct FFloatRangeBound UpperBound; // 0x8

    };

    struct FInt32RangeBound //ScriptStruct CoreUObject.Int32RangeBound
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ERangeBoundTypes Type; // 0x0
        int32_t Value; // 0x4

    };

    struct FInt32Range //ScriptStruct CoreUObject.Int32Range
    {
    //Children Prop Count (Fields): 2
    public:

        struct FInt32RangeBound LowerBound; // 0x0
        struct FInt32RangeBound UpperBound; // 0x8

    };

    struct FFrameNumberRangeBound //ScriptStruct CoreUObject.FrameNumberRangeBound
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ERangeBoundTypes Type; // 0x0
        struct FFrameNumber Value; // 0x4

    };

    struct FFrameNumberRange //ScriptStruct CoreUObject.FrameNumberRange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumberRangeBound LowerBound; // 0x0
        struct FFrameNumberRangeBound UpperBound; // 0x8

    };

    struct FFloatInterval //ScriptStruct CoreUObject.FloatInterval
    {
    //Children Prop Count (Fields): 2
    public:

        float Min; // 0x0
        float Max; // 0x4

    };

    struct FInt32Interval //ScriptStruct CoreUObject.Int32Interval
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Min; // 0x0
        int32_t Max; // 0x4

    };

    struct FPolyglotTextData //ScriptStruct CoreUObject.PolyglotTextData
    {
    //Children Prop Count (Fields): 8
    public:

        enum class ELocalizedTextSourceCategory Category; // 0x0
        struct FString NativeCulture; // 0x8
        struct FString Namespace; // 0x18
        struct FString Key; // 0x28
        struct FString NativeString; // 0x38
        struct TMap<struct FString, struct FString> LocalizedStrings; // 0x48
        bool bIsMinimalPatch; // 0x98
        struct FText CachedText; // 0xa0

    };

    struct FAutomationEvent //ScriptStruct CoreUObject.AutomationEvent
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EAutomationEventType Type; // 0x0
        struct FString Message; // 0x8
        struct FString Context; // 0x18
        struct FGuid Artifact; // 0x28

    };

    struct FAutomationExecutionEntry //ScriptStruct CoreUObject.AutomationExecutionEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FAutomationEvent Event; // 0x0
        struct FString Filename; // 0x38
        int32_t LineNumber; // 0x48
        struct FDateTime Timestamp; // 0x50

    };

    struct FARFilter //ScriptStruct CoreUObject.ARFilter
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FName> PackageNames; // 0x0
        struct TArray<struct FName> PackagePaths; // 0x10
        struct TArray<struct FName> ObjectPaths; // 0x20
        struct TArray<struct FName> ClassNames; // 0x30
        struct TSet<struct FName> RecursiveClassesExclusionSet; // 0x90
        bool bRecursivePaths; // 0xe0
        bool bRecursiveClasses; // 0xe1
        bool bIncludeOnlyOnDiskAssets; // 0xe2

    };

    struct FAssetBundleEntry //ScriptStruct CoreUObject.AssetBundleEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName BundleName; // 0x0
        struct TArray<struct FSoftObjectPath> BundleAssets; // 0x8

    };

    struct FAssetBundleData //ScriptStruct CoreUObject.AssetBundleData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FAssetBundleEntry> Bundles; // 0x0

    };

    struct FAssetData //ScriptStruct CoreUObject.AssetData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName ObjectPath; // 0x0
        struct FName PackageName; // 0x8
        struct FName PackagePath; // 0x10
        struct FName AssetName; // 0x18
        struct FName AssetClass; // 0x20

    };

    struct FTestUninitializedScriptStructMembersTest //ScriptStruct CoreUObject.TestUninitializedScriptStructMembersTest
    {
    //Children Prop Count (Fields): 3
    public:

        class UObject* UninitializedObjectReference; // 0x0
        class UObject* InitializedObjectReference; // 0x8
        float UnusedValue; // 0x10

    };

    struct FInAppPurchaseRestoreInfo //ScriptStruct OnlineSubsystem.InAppPurchaseRestoreInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Identifier; // 0x0
        struct FString ReceiptData; // 0x10
        struct FString TransactionIdentifier; // 0x20

    };

    struct FInAppPurchaseRestoreInfo2 //ScriptStruct OnlineSubsystemUtils.InAppPurchaseRestoreInfo2
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ItemName; // 0x0
        struct FString ItemId; // 0x10
        struct FString ValidationInfo; // 0x20

    };

    struct FYPlayfabMessage //ScriptStruct BackendModels.YPlayfabMessage
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_userId; // 0x0
        struct FString m_service; // 0x10
        class UScriptStruct* m_desiredStruct; // 0x20
        struct FString m_jsonData; // 0x28
        int32_t m_requestHandle; // 0x38

    };

    struct FPlayFabBaseModel //ScriptStruct PlayFab.PlayFabBaseModel
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPlayFabError responseError; // 0x0
        class UPlayFabJsonObject* responseData; // 0x38

    };

    struct FPlayFabError //ScriptStruct PlayFab.PlayFabError
    {
    //Children Prop Count (Fields): 5
    public:

        bool HasError; // 0x0
        int32_t ErrorCode; // 0x4
        struct FString ErrorName; // 0x8
        struct FString errorMessage; // 0x18
        struct FString ErrorDetails; // 0x28

    };

    struct FDistributionLookupTable //ScriptStruct Engine.DistributionLookupTable
    {
    //Children Prop Count (Fields): 8
    public:

        float TimeScale; // 0x0
        float TimeBias; // 0x4
        struct TArray<float> Values; // 0x8
        char Op; // 0x18
        char EntryCount; // 0x19
        char EntryStride; // 0x1a
        char SubEntryStride; // 0x1b
        char LockFlag; // 0x1c

    };

    struct FRawDistribution //ScriptStruct Engine.RawDistribution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDistributionLookupTable Table; // 0x0

    };

    struct FFloatDistribution //ScriptStruct Engine.FloatDistribution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDistributionLookupTable Table; // 0x0

    };

    struct FVectorDistribution //ScriptStruct Engine.VectorDistribution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDistributionLookupTable Table; // 0x0

    };

    struct FVector4Distribution //ScriptStruct Engine.Vector4Distribution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDistributionLookupTable Table; // 0x0

    };

    struct FFloatRK4SpringInterpolator //ScriptStruct Engine.FloatRK4SpringInterpolator
    {
    //Children Prop Count (Fields): 2
    public:

        float StiffnessConstant; // 0x0
        float DampeningRatio; // 0x4

    };

    struct FVectorRK4SpringInterpolator //ScriptStruct Engine.VectorRK4SpringInterpolator
    {
    //Children Prop Count (Fields): 2
    public:

        float StiffnessConstant; // 0x0
        float DampeningRatio; // 0x4

    };

    struct FFormatArgumentData //ScriptStruct Engine.FormatArgumentData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString ArgumentName; // 0x0
        enum class EFormatArgumentType ArgumentValueType; // 0x10
        struct FText ArgumentValue; // 0x18
        int32_t ArgumentValueInt; // 0x38
        float ArgumentValueFloat; // 0x3c
        enum class ETextGender ArgumentValueGender; // 0x40

    };

    struct FExpressionInput //ScriptStruct Engine.ExpressionInput
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t OutputIndex; // 0x0
        struct FName InputName; // 0x4
        struct FName ExpressionName; // 0xc

    };

    struct FMaterialAttributesInput : FExpressionInput //ScriptStruct Engine.MaterialAttributesInput
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t PropertyConnectedBitmask; // 0x14

    };

    struct FExpressionOutput //ScriptStruct Engine.ExpressionOutput
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName OutputName; // 0x0

    };

    struct FMaterialInput //ScriptStruct Engine.MaterialInput
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t OutputIndex; // 0x0
        struct FName InputName; // 0x4
        struct FName ExpressionName; // 0xc

    };

    struct FColorMaterialInput : FMaterialInput //ScriptStruct Engine.ColorMaterialInput
    {
    public:


    };

    struct FScalarMaterialInput : FMaterialInput //ScriptStruct Engine.ScalarMaterialInput
    {
    public:


    };

    struct FShadingModelMaterialInput : FMaterialInput //ScriptStruct Engine.ShadingModelMaterialInput
    {
    public:


    };

    struct FVectorMaterialInput : FMaterialInput //ScriptStruct Engine.VectorMaterialInput
    {
    public:


    };

    struct FVector2MaterialInput : FMaterialInput //ScriptStruct Engine.Vector2MaterialInput
    {
    public:


    };

    struct FHitResult //ScriptStruct Engine.HitResult
    {
    //Children Prop Count (Fields): 19
    public:

        int32_t FaceIndex; // 0x0
        float Time; // 0x4
        float Distance; // 0x8
        struct FVector_NetQuantize Location; // 0xc
        struct FVector_NetQuantize ImpactPoint; // 0x18
        struct FVector_NetQuantizeNormal Normal; // 0x24
        struct FVector_NetQuantizeNormal ImpactNormal; // 0x30
        struct FVector_NetQuantize TraceStart; // 0x3c
        struct FVector_NetQuantize TraceEnd; // 0x48
        float PenetrationDepth; // 0x54
        int32_t Item; // 0x58
        char ElementIndex; // 0x5c
        char bBlockingHit; // 0x5d
        char bStartPenetrating; // 0x5d
        struct TWeakObjectPtr<struct UPhysicalMaterial> PhysMaterial; // 0x60
        struct TWeakObjectPtr<struct AActor> Actor; // 0x68
        struct TWeakObjectPtr<struct UPrimitiveComponent> Component; // 0x70
        struct FName BoneName; // 0x78
        struct FName MyBoneName; // 0x80

    };

    struct FVector_NetQuantize : FVector //ScriptStruct Engine.Vector_NetQuantize
    {
    public:


    };

    struct FVector_NetQuantizeNormal : FVector //ScriptStruct Engine.Vector_NetQuantizeNormal
    {
    public:


    };

    struct FKey //ScriptStruct InputCore.Key
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName KeyName; // 0x0

    };

    struct FBranchingPointNotifyPayload //ScriptStruct Engine.BranchingPointNotifyPayload
    {
    public:


    };

    struct FSimpleMemberReference //ScriptStruct Engine.SimpleMemberReference
    {
    //Children Prop Count (Fields): 3
    public:

        class UObject* MemberParent; // 0x0
        struct FName MemberName; // 0x8
        struct FGuid MemberGuid; // 0x10

    };

    struct FTickFunction //ScriptStruct Engine.TickFunction
    {
    //Children Prop Count (Fields): 7
    public:

        enum class ETickingGroup TickGroup; // 0x8
        enum class ETickingGroup EndTickGroup; // 0x9
        char bTickEvenWhenPaused; // 0xa
        char bCanEverTick; // 0xa
        char bStartWithTickEnabled; // 0xa
        char bAllowTickOnDedicatedServer; // 0xa
        float TickInterval; // 0xc

    };

    struct FActorComponentTickFunction : FTickFunction //ScriptStruct Engine.ActorComponentTickFunction
    {
    public:


    };

    struct FSubtitleCue //ScriptStruct Engine.SubtitleCue
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText Text; // 0x0
        float Time; // 0x20

    };

    struct FInterpControlPoint //ScriptStruct Engine.InterpControlPoint
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector PositionControlPoint; // 0x0
        bool bPositionIsRelative; // 0xc

    };

    struct FPlatformInterfaceDelegateResult //ScriptStruct Engine.PlatformInterfaceDelegateResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool bSuccessful; // 0x0
        struct FPlatformInterfaceData Data; // 0x8

    };

    struct FPlatformInterfaceData //ScriptStruct Engine.PlatformInterfaceData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName DataName; // 0x0
        enum class EPlatformInterfaceDataType Type; // 0x8
        int32_t IntValue; // 0xc
        float FloatValue; // 0x10
        struct FString StringValue; // 0x18
        class UObject* ObjectValue; // 0x28

    };

    struct FRepAttachment //ScriptStruct Engine.RepAttachment
    {
    //Children Prop Count (Fields): 6
    public:

        class AActor* AttachParent; // 0x0
        struct FVector_NetQuantize100 LocationOffset; // 0x8
        struct FVector_NetQuantize100 RelativeScale3D; // 0x14
        struct FRotator RotationOffset; // 0x20
        struct FName AttachSocket; // 0x2c
        class USceneComponent* AttachComponent; // 0x38

    };

    struct FVector_NetQuantize100 : FVector //ScriptStruct Engine.Vector_NetQuantize100
    {
    public:


    };

    struct FRepMovement //ScriptStruct Engine.RepMovement
    {
    //Children Prop Count (Fields): 11
    public:

        struct FVector LinearVelocity; // 0x0
        struct FVector AngularVelocity; // 0xc
        struct FVector Location; // 0x18
        struct FRotator Rotation; // 0x24
        char bSimulatedPhysicSleep; // 0x30
        char bRepPhysics; // 0x30
        char m_repAngularYawMovement; // 0x31
        float m_angularYawRotation; // 0x34
        enum class EVectorQuantization LocationQuantizationLevel; // 0x38
        enum class EVectorQuantization VelocityQuantizationLevel; // 0x39
        enum class ERotatorQuantization RotationQuantizationLevel; // 0x3a

    };

    struct FActorTickFunction : FTickFunction //ScriptStruct Engine.ActorTickFunction
    {
    public:


    };

    struct FUniqueNetIdRepl : FUniqueNetIdWrapper //ScriptStruct Engine.UniqueNetIdRepl
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> ReplicationBytes; // 0x18

    };

    struct FDebugFloatHistory //ScriptStruct Engine.DebugFloatHistory
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<float> Samples; // 0x0
        float MaxSamples; // 0x10
        float MinValue; // 0x14
        float MaxValue; // 0x18
        bool bAutoAdjustMinMax; // 0x1c

    };

    struct FLatentActionInfo //ScriptStruct Engine.LatentActionInfo
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Linkage; // 0x0
        int32_t UUID; // 0x4
        struct FName ExecutionFunction; // 0x8
        class UObject* CallbackTarget; // 0x10

    };

    struct FTimerHandle //ScriptStruct Engine.TimerHandle
    {
    //Children Prop Count (Fields): 1
    public:

        uint64_t Handle; // 0x0

    };

    struct FCollisionProfileName //ScriptStruct Engine.CollisionProfileName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FGenericStruct //ScriptStruct Engine.GenericStruct
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Data; // 0x0

    };

    struct FUserActivity //ScriptStruct Engine.UserActivity
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ActionName; // 0x0

    };

    struct FPlayFabResultCommon //ScriptStruct PlayFab.PlayFabResultCommon
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Request; // 0x0

    };

    struct FAdminEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminEmptyResponse
    {
    public:


    };

    struct FPlayFabRequestCommon //ScriptStruct PlayFab.PlayFabRequestCommon
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabAuthenticationContext* AuthenticationContext; // 0x0

    };

    struct FAdminAbortTaskInstanceRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAbortTaskInstanceRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString TaskInstanceId; // 0x10

    };

    struct FAdminAddLocalizedNewsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminAddLocalizedNewsResult
    {
    public:


    };

    struct FAdminAddLocalizedNewsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddLocalizedNewsRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Language; // 0x20
        struct FString NewsId; // 0x30
        struct FString Title; // 0x40

    };

    struct FAdminAddNewsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminAddNewsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString NewsId; // 0x8

    };

    struct FAdminAddNewsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddNewsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Timestamp; // 0x20
        struct FString Title; // 0x30

    };

    struct FAdminAddPlayerTagResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminAddPlayerTagResult
    {
    public:


    };

    struct FAdminAddPlayerTagRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddPlayerTagRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString TagName; // 0x20

    };

    struct FAdminAddServerBuildResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminAddServerBuildResult
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString ActiveRegions; // 0x8
        struct FString BuildId; // 0x18
        struct FString CommandLineTemplate; // 0x28
        struct FString Comment; // 0x38
        struct FString ExecutablePath; // 0x48
        int32_t MaxGamesPerHost; // 0x58
        int32_t MinFreeGameSlots; // 0x5c
        enum class EGameBuildStatus Status; // 0x60
        struct FString Timestamp; // 0x68
        struct FString TitleId; // 0x78

    };

    struct FAdminAddServerBuildRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddServerBuildRequest
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString ActiveRegions; // 0x8
        struct FString BuildId; // 0x18
        struct FString CommandLineTemplate; // 0x28
        struct FString Comment; // 0x38
        class UPlayFabJsonObject* CustomTags; // 0x48
        struct FString ExecutablePath; // 0x50
        int32_t MaxGamesPerHost; // 0x60
        int32_t MinFreeGameSlots; // 0x64

    };

    struct FAdminModifyUserVirtualCurrencyResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminModifyUserVirtualCurrencyResult
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Balance; // 0x8
        int32_t BalanceChange; // 0xc
        struct FString PlayFabId; // 0x10
        struct FString VirtualCurrency; // 0x20

    };

    struct FAdminAddUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString VirtualCurrency; // 0x28

    };

    struct FAdminBlankResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminBlankResult
    {
    public:


    };

    struct FAdminAddVirtualCurrencyTypesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminAddVirtualCurrencyTypesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> VirtualCurrencies; // 0x8

    };

    struct FAdminBanUsersResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminBanUsersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FAdminBanUsersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminBanUsersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UPlayFabJsonObject*> Bans; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FAdminCheckLimitedEditionItemAvailabilityResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminCheckLimitedEditionItemAvailabilityResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Amount; // 0x8

    };

    struct FAdminCheckLimitedEditionItemAvailabilityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCheckLimitedEditionItemAvailabilityRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CatalogVersion; // 0x8
        struct FString ItemId; // 0x18

    };

    struct FAdminCreateTaskResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminCreateTaskResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TaskId; // 0x8

    };

    struct FAdminCreateActionsOnPlayerSegmentTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreateActionsOnPlayerSegmentTaskRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        bool IsActive; // 0x20
        struct FString Name; // 0x28
        class UPlayFabJsonObject* Parameter; // 0x38
        struct FString Schedule; // 0x40

    };

    struct FAdminCreateCloudScriptTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreateCloudScriptTaskRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        bool IsActive; // 0x20
        struct FString Name; // 0x28
        class UPlayFabJsonObject* Parameter; // 0x38
        struct FString Schedule; // 0x40

    };

    struct FAdminCreateInsightsScheduledScalingTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreateInsightsScheduledScalingTaskRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        bool IsActive; // 0x20
        struct FString Name; // 0x28
        class UPlayFabJsonObject* Parameter; // 0x38
        struct FString Schedule; // 0x40

    };

    struct FAdminCreateOpenIdConnectionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreateOpenIdConnectionRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ClientId; // 0x8
        struct FString ClientSecret; // 0x18
        struct FString ConnectionId; // 0x28
        struct FString IssuerDiscoveryUrl; // 0x38
        class UPlayFabJsonObject* IssuerInformation; // 0x48

    };

    struct FAdminCreatePlayerSharedSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminCreatePlayerSharedSecretResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SecretKey; // 0x8

    };

    struct FAdminCreatePlayerSharedSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreatePlayerSharedSecretRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FriendlyName; // 0x8

    };

    struct FAdminCreatePlayerStatisticDefinitionResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminCreatePlayerStatisticDefinitionResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Statistic; // 0x8

    };

    struct FAdminCreatePlayerStatisticDefinitionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminCreatePlayerStatisticDefinitionRequest
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EStatisticAggregationMethod AggregationMethod; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString StatisticName; // 0x18
        enum class EStatisticResetIntervalOption VersionChangeInterval; // 0x28

    };

    struct FAdminDeleteMasterPlayerAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeleteMasterPlayerAccountResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString JobReceiptId; // 0x8
        struct FString TitleIds; // 0x18

    };

    struct FAdminDeletePlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeletePlayerResult
    {
    public:


    };

    struct FAdminDeletePlayerSharedSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeletePlayerSharedSecretResult
    {
    public:


    };

    struct FAdminDeleteStoreResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeleteStoreResult
    {
    public:


    };

    struct FAdminDeleteTitleResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeleteTitleResult
    {
    public:


    };

    struct FAdminDeleteTitleDataOverrideResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminDeleteTitleDataOverrideResult
    {
    public:


    };

    struct FAdminExportMasterPlayerDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminExportMasterPlayerDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString JobReceiptId; // 0x8

    };

    struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetActionsOnPlayersInSegmentTaskInstanceResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Parameter; // 0x8
        class UPlayFabJsonObject* Summary; // 0x10

    };

    struct FAdminGetAllSegmentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetAllSegmentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Segments; // 0x8

    };

    struct FAdminGetCatalogItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetCatalogItemsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Catalog; // 0x8

    };

    struct FAdminGetCloudScriptRevisionResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetCloudScriptRevisionResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CreatedAt; // 0x8
        struct TArray<class UPlayFabJsonObject*> Files; // 0x18
        bool IsPublished; // 0x28
        int32_t Revision; // 0x2c
        int32_t Version; // 0x30

    };

    struct FAdminGetCloudScriptTaskInstanceResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetCloudScriptTaskInstanceResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Parameter; // 0x8
        class UPlayFabJsonObject* Summary; // 0x10

    };

    struct FAdminGetCloudScriptVersionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetCloudScriptVersionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Versions; // 0x8

    };

    struct FAdminGetContentListResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetContentListResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Contents; // 0x8
        int32_t ItemCount; // 0x18
        int32_t TotalSize; // 0x1c

    };

    struct FAdminGetContentUploadUrlResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetContentUploadUrlResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString URL; // 0x8

    };

    struct FAdminGetDataReportResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetDataReportResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString DownloadUrl; // 0x8

    };

    struct FAdminGetMatchmakerGameInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetMatchmakerGameInfoResult
    {
    //Children Prop Count (Fields): 12
    public:

        struct FString BuildVersion; // 0x8
        struct FString EndTime; // 0x18
        struct FString LobbyId; // 0x28
        struct FString Mode; // 0x38
        struct FString Players; // 0x48
        enum class ERegion Region; // 0x58
        struct FString ServerIPV4Address; // 0x60
        struct FString ServerIPV6Address; // 0x70
        int32_t ServerPort; // 0x80
        struct FString ServerPublicDNSName; // 0x88
        struct FString StartTime; // 0x98
        struct FString TitleId; // 0xa8

    };

    struct FAdminGetMatchmakerGameModesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetMatchmakerGameModesResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> GameModes; // 0x8

    };

    struct FAdminGetPlayedTitleListResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayedTitleListResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TitleIds; // 0x8

    };

    struct FAdminGetPlayerIdFromAuthTokenResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerIdFromAuthTokenResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminGetPlayerProfileResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerProfileResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* PlayerProfile; // 0x8

    };

    struct FAdminGetPlayerSegmentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerSegmentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Segments; // 0x8

    };

    struct FAdminGetPlayerSharedSecretsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerSharedSecretsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> SharedSecrets; // 0x8

    };

    struct FAdminGetPlayersInSegmentResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayersInSegmentResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ContinuationToken; // 0x8
        struct TArray<class UPlayFabJsonObject*> PlayerProfiles; // 0x18
        int32_t ProfilesInSegment; // 0x28

    };

    struct FAdminGetPlayerStatisticDefinitionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerStatisticDefinitionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Statistics; // 0x8

    };

    struct FAdminGetPlayerStatisticVersionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerStatisticVersionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> StatisticVersions; // 0x8

    };

    struct FAdminGetPlayerTagsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPlayerTagsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x8
        struct FString Tags; // 0x18

    };

    struct FAdminGetPolicyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPolicyResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PolicyName; // 0x8
        struct TArray<class UPlayFabJsonObject*> Statements; // 0x18

    };

    struct FAdminGetPublisherDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetPublisherDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FAdminGetRandomResultTablesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetRandomResultTablesResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Tables; // 0x8

    };

    struct FAdminGetServerBuildInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetServerBuildInfoResult
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString ActiveRegions; // 0x8
        struct FString BuildId; // 0x18
        struct FString Comment; // 0x28
        struct FString errorMessage; // 0x38
        int32_t MaxGamesPerHost; // 0x48
        int32_t MinFreeGameSlots; // 0x4c
        enum class EGameBuildStatus Status; // 0x50
        struct FString Timestamp; // 0x58
        struct FString TitleId; // 0x68

    };

    struct FAdminGetServerBuildUploadURLResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetServerBuildUploadURLResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString URL; // 0x8

    };

    struct FAdminGetStoreItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetStoreItemsResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* MarketingData; // 0x18
        enum class EPfSourceType Source; // 0x20
        struct TArray<class UPlayFabJsonObject*> Store; // 0x28
        struct FString StoreId; // 0x38

    };

    struct FAdminGetTaskInstancesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetTaskInstancesResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Summaries; // 0x8

    };

    struct FAdminGetTasksResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetTasksResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Tasks; // 0x8

    };

    struct FAdminGetTitleDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetTitleDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FAdminLookupUserAccountInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminLookupUserAccountInfoResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* UserInfo; // 0x8

    };

    struct FAdminGetUserBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetUserBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FAdminGetUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetUserDataResult
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Data; // 0x8
        int32_t DataVersion; // 0x10
        struct FString PlayFabId; // 0x18

    };

    struct FAdminGetUserInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGetUserInventoryResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x8
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* VirtualCurrency; // 0x28
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x30

    };

    struct FAdminGrantItemsToUsersResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminGrantItemsToUsersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> ItemGrantResults; // 0x8

    };

    struct FAdminIncrementLimitedEditionItemAvailabilityResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminIncrementLimitedEditionItemAvailabilityResult
    {
    public:


    };

    struct FAdminIncrementPlayerStatisticVersionResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminIncrementPlayerStatisticVersionResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* StatisticVersion; // 0x8

    };

    struct FAdminListOpenIdConnectionResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminListOpenIdConnectionResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Connections; // 0x8

    };

    struct FAdminListBuildsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminListBuildsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Builds; // 0x8

    };

    struct FAdminListVirtualCurrencyTypesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminListVirtualCurrencyTypesResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> VirtualCurrencies; // 0x8

    };

    struct FAdminModifyMatchmakerGameModesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminModifyMatchmakerGameModesResult
    {
    public:


    };

    struct FAdminModifyServerBuildResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminModifyServerBuildResult
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString ActiveRegions; // 0x8
        struct FString BuildId; // 0x18
        struct FString CommandLineTemplate; // 0x28
        struct FString Comment; // 0x38
        struct FString ExecutablePath; // 0x48
        int32_t MaxGamesPerHost; // 0x58
        int32_t MinFreeGameSlots; // 0x5c
        enum class EGameBuildStatus Status; // 0x60
        struct FString Timestamp; // 0x68
        struct FString TitleId; // 0x78

    };

    struct FAdminRefundPurchaseResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRefundPurchaseResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PurchaseStatus; // 0x8

    };

    struct FAdminRemovePlayerTagResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRemovePlayerTagResult
    {
    public:


    };

    struct FAdminRemoveServerBuildResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRemoveServerBuildResult
    {
    public:


    };

    struct FAdminResetCharacterStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminResetCharacterStatisticsResult
    {
    public:


    };

    struct FAdminResetPasswordResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminResetPasswordResult
    {
    public:


    };

    struct FAdminResetUserStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminResetUserStatisticsResult
    {
    public:


    };

    struct FAdminResolvePurchaseDisputeResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminResolvePurchaseDisputeResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PurchaseStatus; // 0x8

    };

    struct FAdminRevokeAllBansForUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRevokeAllBansForUserResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FAdminRevokeBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRevokeBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FAdminRevokeInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRevokeInventoryResult
    {
    public:


    };

    struct FAdminRevokeInventoryItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRevokeInventoryItemsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Errors; // 0x8

    };

    struct FAdminRunTaskResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminRunTaskResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TaskInstanceId; // 0x8

    };

    struct FAdminSendAccountRecoveryEmailResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSendAccountRecoveryEmailResult
    {
    public:


    };

    struct FAdminUpdateCatalogItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateCatalogItemsResult
    {
    public:


    };

    struct FAdminSetPlayerSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetPlayerSecretResult
    {
    public:


    };

    struct FAdminSetPublishedRevisionResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetPublishedRevisionResult
    {
    public:


    };

    struct FAdminSetPublisherDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetPublisherDataResult
    {
    public:


    };

    struct FAdminUpdateStoreItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateStoreItemsResult
    {
    public:


    };

    struct FAdminSetTitleDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetTitleDataResult
    {
    public:


    };

    struct FAdminSetTitleDataAndOverridesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetTitleDataAndOverridesResult
    {
    public:


    };

    struct FAdminSetupPushNotificationResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminSetupPushNotificationResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ARN; // 0x8

    };

    struct FAdminUpdateBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FAdminUpdateCloudScriptResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateCloudScriptResult
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Revision; // 0x8
        int32_t Version; // 0xc

    };

    struct FAdminUpdatePlayerSharedSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdatePlayerSharedSecretResult
    {
    public:


    };

    struct FAdminUpdatePlayerStatisticDefinitionResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdatePlayerStatisticDefinitionResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Statistic; // 0x8

    };

    struct FAdminUpdatePolicyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdatePolicyResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PolicyName; // 0x8
        struct TArray<class UPlayFabJsonObject*> Statements; // 0x18

    };

    struct FAdminUpdateRandomResultTablesResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateRandomResultTablesResult
    {
    public:


    };

    struct FAdminUpdateUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateUserDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DataVersion; // 0x8

    };

    struct FAdminUpdateUserTitleDisplayNameResult : FPlayFabResultCommon //ScriptStruct PlayFab.AdminUpdateUserTitleDisplayNameResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString DisplayName; // 0x8

    };

    struct FAdminDeleteContentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteContentRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Key; // 0x8

    };

    struct FAdminDeleteMasterPlayerAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteMasterPlayerAccountRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString MetaData; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FAdminDeleteOpenIdConnectionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteOpenIdConnectionRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ConnectionId; // 0x8

    };

    struct FAdminDeletePlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeletePlayerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminDeletePlayerSharedSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeletePlayerSharedSecretRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SecretKey; // 0x8

    };

    struct FAdminDeleteStoreRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteStoreRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString StoreId; // 0x20

    };

    struct FAdminDeleteTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteTaskRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Identifier; // 0x8

    };

    struct FAdminDeleteTitleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteTitleRequest
    {
    public:


    };

    struct FAdminDeleteTitleDataOverrideRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminDeleteTitleDataOverrideRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString OverrideLabel; // 0x8

    };

    struct FAdminExportMasterPlayerDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminExportMasterPlayerDataRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminGetTaskInstanceRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetTaskInstanceRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TaskInstanceId; // 0x8

    };

    struct FAdminGetAllSegmentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetAllSegmentsRequest
    {
    public:


    };

    struct FAdminGetCatalogItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetCatalogItemsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CatalogVersion; // 0x8

    };

    struct FAdminGetCloudScriptRevisionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetCloudScriptRevisionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Revision; // 0x8
        int32_t Version; // 0xc

    };

    struct FAdminGetCloudScriptVersionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetCloudScriptVersionsRequest
    {
    public:


    };

    struct FAdminGetContentListRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetContentListRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Prefix; // 0x8

    };

    struct FAdminGetContentUploadUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetContentUploadUrlRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ContentType; // 0x8
        struct FString Key; // 0x18

    };

    struct FAdminGetDataReportRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetDataReportRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Day; // 0x8
        int32_t Month; // 0xc
        struct FString ReportName; // 0x10
        int32_t Year; // 0x20

    };

    struct FAdminGetMatchmakerGameInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetMatchmakerGameInfoRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString LobbyId; // 0x8

    };

    struct FAdminGetMatchmakerGameModesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetMatchmakerGameModesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BuildVersion; // 0x8

    };

    struct FAdminGetPlayedTitleListRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayedTitleListRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminGetPlayerIdFromAuthTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerIdFromAuthTokenRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Token; // 0x8
        enum class EAuthTokenType TokenType; // 0x18

    };

    struct FAdminGetPlayerProfileRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerProfileRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        class UPlayFabJsonObject* ProfileConstraints; // 0x20

    };

    struct FAdminGetPlayersSegmentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayersSegmentsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FAdminGetPlayerSharedSecretsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerSharedSecretsRequest
    {
    public:


    };

    struct FAdminGetPlayersInSegmentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayersInSegmentRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ContinuationToken; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t MaxBatchSize; // 0x20
        int32_t SecondsToLive; // 0x24
        struct FString SegmentId; // 0x28

    };

    struct FAdminGetPlayerStatisticDefinitionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerStatisticDefinitionsRequest
    {
    public:


    };

    struct FAdminGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerStatisticVersionsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString StatisticName; // 0x10

    };

    struct FAdminGetPlayerTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPlayerTagsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Namespace; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FAdminGetPolicyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPolicyRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PolicyName; // 0x8

    };

    struct FAdminGetPublisherDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetPublisherDataRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Keys; // 0x8

    };

    struct FAdminGetRandomResultTablesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetRandomResultTablesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CatalogVersion; // 0x8

    };

    struct FAdminGetServerBuildInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetServerBuildInfoRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BuildId; // 0x8

    };

    struct FAdminGetServerBuildUploadURLRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetServerBuildUploadURLRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BuildId; // 0x8

    };

    struct FAdminGetStoreItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetStoreItemsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CatalogVersion; // 0x8
        struct FString StoreId; // 0x18

    };

    struct FAdminGetTaskInstancesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetTaskInstancesRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString StartedAtRangeFrom; // 0x8
        struct FString StartedAtRangeTo; // 0x18
        enum class ETaskInstanceStatus StatusFilter; // 0x28
        class UPlayFabJsonObject* TaskIdentifier; // 0x30

    };

    struct FAdminGetTasksRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetTasksRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Identifier; // 0x8

    };

    struct FAdminGetTitleDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetTitleDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Keys; // 0x8
        struct FString OverrideLabel; // 0x18

    };

    struct FAdminLookupUserAccountInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminLookupUserAccountInfoRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Email; // 0x8
        struct FString PlayFabId; // 0x18
        struct FString TitleDisplayName; // 0x28
        struct FString Username; // 0x38

    };

    struct FAdminGetUserBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetUserBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminGetUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetUserDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t IfChangedFromDataVersion; // 0x8
        struct FString Keys; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FAdminGetUserInventoryRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGetUserInventoryRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FAdminGrantItemsToUsersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminGrantItemsToUsersRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct TArray<class UPlayFabJsonObject*> ItemGrants; // 0x20

    };

    struct FAdminIncrementLimitedEditionItemAvailabilityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminIncrementLimitedEditionItemAvailabilityRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Amount; // 0x8
        struct FString CatalogVersion; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString ItemId; // 0x28

    };

    struct FAdminIncrementPlayerStatisticVersionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminIncrementPlayerStatisticVersionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString StatisticName; // 0x10

    };

    struct FAdminListOpenIdConnectionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminListOpenIdConnectionRequest
    {
    public:


    };

    struct FAdminListBuildsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminListBuildsRequest
    {
    public:


    };

    struct FAdminListVirtualCurrencyTypesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminListVirtualCurrencyTypesRequest
    {
    public:


    };

    struct FAdminModifyMatchmakerGameModesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminModifyMatchmakerGameModesRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString BuildVersion; // 0x8
        struct TArray<class UPlayFabJsonObject*> GameModes; // 0x18

    };

    struct FAdminModifyServerBuildRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminModifyServerBuildRequest
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString ActiveRegions; // 0x8
        struct FString BuildId; // 0x18
        struct FString CommandLineTemplate; // 0x28
        struct FString Comment; // 0x38
        class UPlayFabJsonObject* CustomTags; // 0x48
        struct FString ExecutablePath; // 0x50
        int32_t MaxGamesPerHost; // 0x60
        int32_t MinFreeGameSlots; // 0x64
        struct FString Timestamp; // 0x68

    };

    struct FAdminRefundPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRefundPurchaseRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString OrderId; // 0x8
        struct FString PlayFabId; // 0x18
        struct FString Reason; // 0x28

    };

    struct FAdminRemovePlayerTagRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRemovePlayerTagRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString TagName; // 0x20

    };

    struct FAdminRemoveServerBuildRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRemoveServerBuildRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BuildId; // 0x8

    };

    struct FAdminRemoveVirtualCurrencyTypesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRemoveVirtualCurrencyTypesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> VirtualCurrencies; // 0x8

    };

    struct FAdminResetCharacterStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminResetCharacterStatisticsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString PlayFabId; // 0x20

    };

    struct FAdminResetPasswordRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminResetPasswordRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Password; // 0x10
        struct FString Token; // 0x20

    };

    struct FAdminResetUserStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminResetUserStatisticsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FAdminResolvePurchaseDisputeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminResolvePurchaseDisputeRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString OrderId; // 0x8
        enum class EResolutionOutcome Outcome; // 0x18
        struct FString PlayFabId; // 0x20
        struct FString Reason; // 0x30

    };

    struct FAdminRevokeAllBansForUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRevokeAllBansForUserRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FAdminRevokeBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRevokeBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BanIds; // 0x8

    };

    struct FAdminRevokeInventoryItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRevokeInventoryItemRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        struct FString ItemInstanceId; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FAdminRevokeInventoryItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRevokeInventoryItemsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Items; // 0x8

    };

    struct FAdminRunTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminRunTaskRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Identifier; // 0x10

    };

    struct FAdminSendAccountRecoveryEmailRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSendAccountRecoveryEmailRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Email; // 0x10
        struct FString EmailTemplateId; // 0x20

    };

    struct FAdminUpdateCatalogItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateCatalogItemsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> Catalog; // 0x8
        struct FString CatalogVersion; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        bool SetAsDefaultCatalog; // 0x30

    };

    struct FAdminSetPlayerSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetPlayerSecretRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayerSecret; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FAdminSetPublishedRevisionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetPublishedRevisionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t Revision; // 0x10
        int32_t Version; // 0x14

    };

    struct FAdminSetPublisherDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetPublisherDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Key; // 0x8
        struct FString Value; // 0x18

    };

    struct FAdminUpdateStoreItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateStoreItemsRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        class UPlayFabJsonObject* MarketingData; // 0x20
        struct TArray<class UPlayFabJsonObject*> Store; // 0x28
        struct FString StoreId; // 0x38

    };

    struct FAdminSetTitleDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetTitleDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Key; // 0x8
        struct FString Value; // 0x18

    };

    struct FAdminSetTitleDataAndOverridesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetTitleDataAndOverridesRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UPlayFabJsonObject*> KeyValues; // 0x8
        struct FString OverrideLabel; // 0x18

    };

    struct FAdminSetupPushNotificationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSetupPushNotificationRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString Credential; // 0x8
        struct FString Key; // 0x18
        struct FString Name; // 0x28
        bool OverwriteOldARN; // 0x38
        enum class EPushSetupPlatform Platform; // 0x39

    };

    struct FAdminSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminSubtractUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString VirtualCurrency; // 0x28

    };

    struct FAdminUpdateBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Bans; // 0x8

    };

    struct FAdminUpdateCloudScriptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateCloudScriptRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DeveloperPlayFabId; // 0x10
        struct TArray<class UPlayFabJsonObject*> Files; // 0x20
        bool Publish; // 0x30

    };

    struct FAdminUpdateOpenIdConnectionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateOpenIdConnectionRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ClientId; // 0x8
        struct FString ClientSecret; // 0x18
        struct FString ConnectionId; // 0x28
        struct FString IssuerDiscoveryUrl; // 0x38
        class UPlayFabJsonObject* IssuerInformation; // 0x48

    };

    struct FAdminUpdatePlayerSharedSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdatePlayerSharedSecretRequest
    {
    //Children Prop Count (Fields): 3
    public:

        bool Disabled; // 0x8
        struct FString FriendlyName; // 0x10
        struct FString SecretKey; // 0x20

    };

    struct FAdminUpdatePlayerStatisticDefinitionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdatePlayerStatisticDefinitionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EStatisticAggregationMethod AggregationMethod; // 0x8
        struct FString StatisticName; // 0x10
        enum class EStatisticResetIntervalOption VersionChangeInterval; // 0x20

    };

    struct FAdminUpdatePolicyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdatePolicyRequest
    {
    //Children Prop Count (Fields): 3
    public:

        bool OverwritePolicy; // 0x8
        struct FString PolicyName; // 0x10
        struct TArray<class UPlayFabJsonObject*> Statements; // 0x20

    };

    struct FAdminUpdateRandomResultTablesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateRandomResultTablesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct TArray<class UPlayFabJsonObject*> Tables; // 0x20

    };

    struct FAdminUpdateTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateTaskRequest
    {
    //Children Prop Count (Fields): 8
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        class UPlayFabJsonObject* Identifier; // 0x20
        bool IsActive; // 0x28
        struct FString Name; // 0x30
        class UPlayFabJsonObject* Parameter; // 0x40
        struct FString Schedule; // 0x48
        enum class EScheduledTaskType Type; // 0x58

    };

    struct FAdminUpdateUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateUserDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        enum class EUserDataPermission Permission; // 0x28
        struct FString PlayFabId; // 0x30

    };

    struct FAdminUpdateUserInternalDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateUserInternalDataRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FAdminUpdateUserTitleDisplayNameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AdminUpdateUserTitleDisplayNameRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DisplayName; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FAuthenticationGetEntityTokenResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AuthenticationGetEntityTokenResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        struct FString EntityToken; // 0x10
        struct FString TokenExpiration; // 0x20

    };

    struct FAuthenticationValidateEntityTokenResponse : FPlayFabResultCommon //ScriptStruct PlayFab.AuthenticationValidateEntityTokenResponse
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        enum class EIdentifiedDeviceType IdentifiedDeviceType; // 0x10
        enum class ELoginIdentityProvider IdentityProvider; // 0x11
        class UPlayFabJsonObject* Lineage; // 0x18

    };

    struct FAuthenticationGetEntityTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AuthenticationGetEntityTokenRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10

    };

    struct FAuthenticationValidateEntityTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.AuthenticationValidateEntityTokenRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString EntityToken; // 0x10

    };

    struct FClientAcceptTradeResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAcceptTradeResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Trade; // 0x8

    };

    struct FClientAcceptTradeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAcceptTradeRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AcceptedInventoryInstanceIds; // 0x8
        struct FString OfferingPlayerId; // 0x18
        struct FString TradeId; // 0x28

    };

    struct FClientAddFriendResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAddFriendResult
    {
    //Children Prop Count (Fields): 1
    public:

        bool Created; // 0x8

    };

    struct FClientAddFriendRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddFriendRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString FriendEmail; // 0x8
        struct FString FriendPlayFabId; // 0x18
        struct FString FriendTitleDisplayName; // 0x28
        struct FString FriendUsername; // 0x38

    };

    struct FClientAddGenericIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAddGenericIDResult
    {
    public:


    };

    struct FClientAddGenericIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddGenericIDRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* GenericId; // 0x8

    };

    struct FClientAddOrUpdateContactEmailResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAddOrUpdateContactEmailResult
    {
    public:


    };

    struct FClientAddOrUpdateContactEmailRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddOrUpdateContactEmailRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString EmailAddress; // 0x10

    };

    struct FClientAddSharedGroupMembersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAddSharedGroupMembersResult
    {
    public:


    };

    struct FClientAddSharedGroupMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddSharedGroupMembersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabIds; // 0x8
        struct FString SharedGroupId; // 0x18

    };

    struct FClientAddUsernamePasswordResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAddUsernamePasswordResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Username; // 0x8

    };

    struct FClientAddUsernamePasswordRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddUsernamePasswordRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Email; // 0x10
        struct FString Password; // 0x20
        struct FString Username; // 0x30

    };

    struct FClientModifyUserVirtualCurrencyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientModifyUserVirtualCurrencyResult
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Balance; // 0x8
        int32_t BalanceChange; // 0xc
        struct FString PlayFabId; // 0x10
        struct FString VirtualCurrency; // 0x20

    };

    struct FClientAddUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAddUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString VirtualCurrency; // 0x18

    };

    struct FClientAndroidDevicePushNotificationRegistrationResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAndroidDevicePushNotificationRegistrationResult
    {
    public:


    };

    struct FClientAndroidDevicePushNotificationRegistrationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAndroidDevicePushNotificationRegistrationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ConfirmationMessage; // 0x8
        struct FString DeviceToken; // 0x18
        bool SendPushNotificationConfirmation; // 0x28

    };

    struct FClientAttributeInstallResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientAttributeInstallResult
    {
    public:


    };

    struct FClientAttributeInstallRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientAttributeInstallRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Adid; // 0x8
        struct FString Idfa; // 0x18

    };

    struct FClientCancelTradeResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientCancelTradeResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Trade; // 0x8

    };

    struct FClientCancelTradeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientCancelTradeRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TradeId; // 0x8

    };

    struct FClientConfirmPurchaseResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientConfirmPurchaseResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Items; // 0x8
        struct FString OrderId; // 0x18
        struct FString PurchaseDate; // 0x28

    };

    struct FClientConfirmPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientConfirmPurchaseRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString OrderId; // 0x10

    };

    struct FClientConsumeItemResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientConsumeItemResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ItemInstanceId; // 0x8
        int32_t RemainingUses; // 0x18

    };

    struct FClientConsumeItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientConsumeItemRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        int32_t ConsumeCount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString ItemInstanceId; // 0x28

    };

    struct FClientConsumePSNEntitlementsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientConsumePSNEntitlementsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> ItemsGranted; // 0x8

    };

    struct FClientConsumePSNEntitlementsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientConsumePSNEntitlementsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t ServiceLabel; // 0x20

    };

    struct FClientConsumeXboxEntitlementsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientConsumeXboxEntitlementsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Items; // 0x8

    };

    struct FClientConsumeXboxEntitlementsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientConsumeXboxEntitlementsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString XboxToken; // 0x20

    };

    struct FClientCreateSharedGroupResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientCreateSharedGroupResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SharedGroupId; // 0x8

    };

    struct FClientCreateSharedGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientCreateSharedGroupRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SharedGroupId; // 0x8

    };

    struct FClientExecuteCloudScriptResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientExecuteCloudScriptResult
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t APIRequestsIssued; // 0x8
        class UPlayFabJsonObject* Error; // 0x10
        int32_t ExecutionTimeSeconds; // 0x18
        struct FString FunctionName; // 0x20
        class UPlayFabJsonObject* FunctionResult; // 0x30
        bool FunctionResultTooLarge; // 0x38
        int32_t HttpRequestsIssued; // 0x3c
        struct TArray<class UPlayFabJsonObject*> Logs; // 0x40
        bool LogsTooLarge; // 0x50
        int32_t MemoryConsumedBytes; // 0x54
        int32_t ProcessorTimeSeconds; // 0x58
        int32_t Revision; // 0x5c

    };

    struct FClientGetAccountInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetAccountInfoResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* AccountInfo; // 0x8

    };

    struct FClientGetAdPlacementsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetAdPlacementsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> AdPlacements; // 0x8

    };

    struct FClientListUsersCharactersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientListUsersCharactersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Characters; // 0x8

    };

    struct FClientGetCatalogItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetCatalogItemsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Catalog; // 0x8

    };

    struct FClientGetCharacterDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetCharacterDataResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* Data; // 0x18
        int32_t DataVersion; // 0x20

    };

    struct FClientGetCharacterInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetCharacterInventoryResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x18
        class UPlayFabJsonObject* VirtualCurrency; // 0x28
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x30

    };

    struct FClientGetCharacterLeaderboardResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetCharacterLeaderboardResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FClientGetCharacterStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetCharacterStatisticsResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CharacterStatistics; // 0x8

    };

    struct FClientGetContentDownloadUrlResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetContentDownloadUrlResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString URL; // 0x8

    };

    struct FClientCurrentGamesResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientCurrentGamesResult
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t GameCount; // 0x8
        struct TArray<class UPlayFabJsonObject*> Games; // 0x10
        int32_t PlayerCount; // 0x20

    };

    struct FClientGetLeaderboardResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetLeaderboardResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8
        struct FString NextReset; // 0x18
        int32_t Version; // 0x28

    };

    struct FClientGetFriendLeaderboardAroundPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetFriendLeaderboardAroundPlayerResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8
        struct FString NextReset; // 0x18
        int32_t Version; // 0x28

    };

    struct FClientGetFriendsListResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetFriendsListResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Friends; // 0x8

    };

    struct FClientGameServerRegionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGameServerRegionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Regions; // 0x8

    };

    struct FClientGetLeaderboardAroundCharacterResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetLeaderboardAroundCharacterResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FClientGetLeaderboardAroundPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetLeaderboardAroundPlayerResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8
        struct FString NextReset; // 0x18
        int32_t Version; // 0x28

    };

    struct FClientGetLeaderboardForUsersCharactersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetLeaderboardForUsersCharactersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FClientGetPaymentTokenResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPaymentTokenResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString OrderId; // 0x8
        struct FString ProviderToken; // 0x18

    };

    struct FClientGetPhotonAuthenticationTokenResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPhotonAuthenticationTokenResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PhotonCustomAuthenticationToken; // 0x8

    };

    struct FClientGetPlayerCombinedInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerCombinedInfoResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* InfoResultPayload; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FClientGetPlayerProfileResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerProfileResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* PlayerProfile; // 0x8

    };

    struct FClientGetPlayerSegmentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerSegmentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Segments; // 0x8

    };

    struct FClientGetPlayerStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerStatisticsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Statistics; // 0x8

    };

    struct FClientGetPlayerStatisticVersionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerStatisticVersionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> StatisticVersions; // 0x8

    };

    struct FClientGetPlayerTagsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerTagsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x8
        struct FString Tags; // 0x18

    };

    struct FClientGetPlayerTradesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayerTradesResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UPlayFabJsonObject*> AcceptedTrades; // 0x8
        struct TArray<class UPlayFabJsonObject*> OpenedTrades; // 0x18

    };

    struct FClientGetPlayFabIDsFromFacebookIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromFacebookIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromFacebookInstantGamesIdsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromGameCenterIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGameCenterIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromGenericIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGenericIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromGoogleIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGoogleIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromKongregateIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromKongregateIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromPSNAccountIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromPSNAccountIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromSteamIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromSteamIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromTwitchIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromTwitchIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPlayFabIDsFromXboxLiveIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromXboxLiveIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FClientGetPublisherDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPublisherDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FClientGetPurchaseResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetPurchaseResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString OrderId; // 0x8
        struct FString PaymentProvider; // 0x18
        struct FString PurchaseDate; // 0x28
        struct FString TransactionId; // 0x38
        struct FString TransactionStatus; // 0x48

    };

    struct FClientGetSharedGroupDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetSharedGroupDataResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Data; // 0x8
        struct FString Members; // 0x10

    };

    struct FClientGetStoreItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetStoreItemsResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* MarketingData; // 0x18
        enum class EPfSourceType Source; // 0x20
        struct TArray<class UPlayFabJsonObject*> Store; // 0x28
        struct FString StoreId; // 0x38

    };

    struct FClientGetTimeResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetTimeResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Time; // 0x8

    };

    struct FClientGetTitleDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetTitleDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FClientGetTitleNewsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetTitleNewsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> News; // 0x8

    };

    struct FClientGetTitlePublicKeyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetTitlePublicKeyResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString RSAPublicKey; // 0x8

    };

    struct FClientGetTradeStatusResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetTradeStatusResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Trade; // 0x8

    };

    struct FClientGetUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetUserDataResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Data; // 0x8
        int32_t DataVersion; // 0x10

    };

    struct FClientGetUserInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetUserInventoryResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x8
        class UPlayFabJsonObject* VirtualCurrency; // 0x18
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x20

    };

    struct FClientGetWindowsHelloChallengeResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGetWindowsHelloChallengeResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Challenge; // 0x8

    };

    struct FClientGrantCharacterToUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientGrantCharacterToUserResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        struct FString CharacterType; // 0x18
        bool Result; // 0x28

    };

    struct FClientLinkAndroidDeviceIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkAndroidDeviceIDResult
    {
    public:


    };

    struct FClientEmptyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientEmptyResult
    {
    public:


    };

    struct FClientLinkCustomIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkCustomIDResult
    {
    public:


    };

    struct FClientLinkFacebookAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkFacebookAccountResult
    {
    public:


    };

    struct FClientLinkFacebookInstantGamesIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkFacebookInstantGamesIdResult
    {
    public:


    };

    struct FClientLinkGameCenterAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkGameCenterAccountResult
    {
    public:


    };

    struct FClientLinkGoogleAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkGoogleAccountResult
    {
    public:


    };

    struct FClientLinkIOSDeviceIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkIOSDeviceIDResult
    {
    public:


    };

    struct FClientLinkKongregateAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkKongregateAccountResult
    {
    public:


    };

    struct FClientLinkNintendoSwitchDeviceIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkNintendoSwitchDeviceIdResult
    {
    public:


    };

    struct FClientLinkPSNAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkPSNAccountResult
    {
    public:


    };

    struct FClientLinkSteamAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkSteamAccountResult
    {
    public:


    };

    struct FClientLinkTwitchAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkTwitchAccountResult
    {
    public:


    };

    struct FClientLinkWindowsHelloAccountResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkWindowsHelloAccountResponse
    {
    public:


    };

    struct FClientLinkXboxAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientLinkXboxAccountResult
    {
    public:


    };

    struct FPlayFabLoginResultCommon : FPlayFabResultCommon //ScriptStruct PlayFab.PlayFabLoginResultCommon
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabAuthenticationContext* AuthenticationContext; // 0x8

    };

    struct FClientLoginResult : FPlayFabLoginResultCommon //ScriptStruct PlayFab.ClientLoginResult
    {
    //Children Prop Count (Fields): 8
    public:

        class UPlayFabJsonObject* EntityToken; // 0x10
        class UPlayFabJsonObject* InfoResultPayload; // 0x18
        struct FString LastLoginTime; // 0x20
        bool NewlyCreated; // 0x30
        struct FString PlayFabId; // 0x38
        struct FString SessionTicket; // 0x48
        class UPlayFabJsonObject* SettingsForUser; // 0x58
        class UPlayFabJsonObject* TreatmentAssignment; // 0x60

    };

    struct FClientMatchmakeResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientMatchmakeResult
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString Expires; // 0x8
        struct FString LobbyId; // 0x18
        int32_t PollWaitTimeMS; // 0x28
        struct FString ServerIPV4Address; // 0x30
        struct FString ServerIPV6Address; // 0x40
        int32_t ServerPort; // 0x50
        struct FString ServerPublicDNSName; // 0x58
        enum class EMatchmakeStatus Status; // 0x68
        struct FString Ticket; // 0x70

    };

    struct FClientOpenTradeResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientOpenTradeResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Trade; // 0x8

    };

    struct FClientPayForPurchaseResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientPayForPurchaseResult
    {
    //Children Prop Count (Fields): 10
    public:

        int32_t CreditApplied; // 0x8
        struct FString OrderId; // 0x10
        struct FString ProviderData; // 0x20
        struct FString ProviderToken; // 0x30
        struct FString PurchaseConfirmationPageURL; // 0x40
        struct FString PurchaseCurrency; // 0x50
        int32_t PurchasePrice; // 0x60
        enum class ETransactionStatus Status; // 0x64
        class UPlayFabJsonObject* VCAmount; // 0x68
        class UPlayFabJsonObject* VirtualCurrency; // 0x70

    };

    struct FClientPurchaseItemResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientPurchaseItemResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Items; // 0x8

    };

    struct FClientRedeemCouponResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRedeemCouponResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> GrantedItems; // 0x8

    };

    struct FClientEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientEmptyResponse
    {
    public:


    };

    struct FClientRegisterForIOSPushNotificationResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRegisterForIOSPushNotificationResult
    {
    public:


    };

    struct FClientRegisterPlayFabUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRegisterPlayFabUserResult
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* EntityToken; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString SessionTicket; // 0x20
        class UPlayFabJsonObject* SettingsForUser; // 0x30
        struct FString Username; // 0x38

    };

    struct FClientRemoveContactEmailResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRemoveContactEmailResult
    {
    public:


    };

    struct FClientRemoveFriendResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRemoveFriendResult
    {
    public:


    };

    struct FClientRemoveGenericIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRemoveGenericIDResult
    {
    public:


    };

    struct FClientRemoveSharedGroupMembersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRemoveSharedGroupMembersResult
    {
    public:


    };

    struct FClientReportAdActivityResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientReportAdActivityResult
    {
    public:


    };

    struct FClientReportPlayerClientResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientReportPlayerClientResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t SubmissionsRemaining; // 0x8

    };

    struct FClientRestoreIOSPurchasesResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRestoreIOSPurchasesResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Fulfillments; // 0x8

    };

    struct FClientRewardAdActivityResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientRewardAdActivityResult
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString AdActivityEventId; // 0x8
        struct FString DebugResults; // 0x18
        struct FString PlacementId; // 0x28
        struct FString PlacementName; // 0x38
        int32_t PlacementViewsRemaining; // 0x48
        int32_t PlacementViewsResetMinutes; // 0x4c
        class UPlayFabJsonObject* RewardResults; // 0x50

    };

    struct FClientSendAccountRecoveryEmailResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientSendAccountRecoveryEmailResult
    {
    public:


    };

    struct FClientSetFriendTagsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientSetFriendTagsResult
    {
    public:


    };

    struct FClientSetPlayerSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientSetPlayerSecretResult
    {
    public:


    };

    struct FClientStartGameResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientStartGameResult
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString Expires; // 0x8
        struct FString LobbyId; // 0x18
        struct FString Password; // 0x28
        struct FString ServerIPV4Address; // 0x38
        struct FString ServerIPV6Address; // 0x48
        int32_t ServerPort; // 0x58
        struct FString ServerPublicDNSName; // 0x60
        struct FString Ticket; // 0x70

    };

    struct FClientStartPurchaseResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientStartPurchaseResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> Contents; // 0x8
        struct FString OrderId; // 0x18
        struct TArray<class UPlayFabJsonObject*> PaymentOptions; // 0x28
        class UPlayFabJsonObject* VirtualCurrencyBalances; // 0x38

    };

    struct FClientUnlinkAndroidDeviceIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkAndroidDeviceIDResult
    {
    public:


    };

    struct FClientUnlinkCustomIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkCustomIDResult
    {
    public:


    };

    struct FClientUnlinkFacebookAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkFacebookAccountResult
    {
    public:


    };

    struct FClientUnlinkFacebookInstantGamesIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkFacebookInstantGamesIdResult
    {
    public:


    };

    struct FClientUnlinkGameCenterAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkGameCenterAccountResult
    {
    public:


    };

    struct FClientUnlinkGoogleAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkGoogleAccountResult
    {
    public:


    };

    struct FClientUnlinkIOSDeviceIDResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkIOSDeviceIDResult
    {
    public:


    };

    struct FClientUnlinkKongregateAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkKongregateAccountResult
    {
    public:


    };

    struct FClientUnlinkNintendoSwitchDeviceIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkNintendoSwitchDeviceIdResult
    {
    public:


    };

    struct FClientUnlinkPSNAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkPSNAccountResult
    {
    public:


    };

    struct FClientUnlinkSteamAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkSteamAccountResult
    {
    public:


    };

    struct FClientUnlinkTwitchAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkTwitchAccountResult
    {
    public:


    };

    struct FClientUnlinkWindowsHelloAccountResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkWindowsHelloAccountResponse
    {
    public:


    };

    struct FClientUnlinkXboxAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlinkXboxAccountResult
    {
    public:


    };

    struct FClientUnlockContainerItemResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUnlockContainerItemResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> GrantedItems; // 0x8
        struct FString UnlockedItemInstanceId; // 0x18
        struct FString UnlockedWithItemInstanceId; // 0x28
        class UPlayFabJsonObject* VirtualCurrency; // 0x38

    };

    struct FClientUpdateCharacterDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdateCharacterDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DataVersion; // 0x8

    };

    struct FClientUpdateCharacterStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdateCharacterStatisticsResult
    {
    public:


    };

    struct FClientUpdatePlayerStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdatePlayerStatisticsResult
    {
    public:


    };

    struct FClientUpdateSharedGroupDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdateSharedGroupDataResult
    {
    public:


    };

    struct FClientUpdateUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdateUserDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DataVersion; // 0x8

    };

    struct FClientUpdateUserTitleDisplayNameResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientUpdateUserTitleDisplayNameResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString DisplayName; // 0x8

    };

    struct FClientValidateAmazonReceiptResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientValidateAmazonReceiptResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Fulfillments; // 0x8

    };

    struct FClientValidateGooglePlayPurchaseResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientValidateGooglePlayPurchaseResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Fulfillments; // 0x8

    };

    struct FClientValidateIOSReceiptResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientValidateIOSReceiptResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Fulfillments; // 0x8

    };

    struct FClientValidateWindowsReceiptResult : FPlayFabResultCommon //ScriptStruct PlayFab.ClientValidateWindowsReceiptResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Fulfillments; // 0x8

    };

    struct FClientWriteEventResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ClientWriteEventResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString EventId; // 0x8

    };

    struct FClientExecuteCloudScriptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientExecuteCloudScriptRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FunctionName; // 0x10
        class UPlayFabJsonObject* FunctionParameter; // 0x20
        bool GeneratePlayStreamEvent; // 0x28
        enum class ECloudScriptRevisionOption RevisionSelection; // 0x29
        int32_t SpecificRevision; // 0x2c

    };

    struct FClientGetAccountInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetAccountInfoRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Email; // 0x8
        struct FString PlayFabId; // 0x18
        struct FString TitleDisplayName; // 0x28
        struct FString Username; // 0x38

    };

    struct FClientGetAdPlacementsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetAdPlacementsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AppId; // 0x8
        class UPlayFabJsonObject* Identifier; // 0x18

    };

    struct FClientListUsersCharactersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientListUsersCharactersRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FClientGetCatalogItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetCatalogItemsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CatalogVersion; // 0x8

    };

    struct FClientGetCharacterDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetCharacterDataRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        int32_t IfChangedFromDataVersion; // 0x18
        struct FString Keys; // 0x20
        struct FString PlayFabId; // 0x30

    };

    struct FClientGetCharacterInventoryRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetCharacterInventoryRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28

    };

    struct FClientGetCharacterLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetCharacterLeaderboardRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterType; // 0x8
        int32_t MaxResultsCount; // 0x18
        int32_t StartPosition; // 0x1c
        struct FString StatisticName; // 0x20

    };

    struct FClientGetCharacterStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetCharacterStatisticsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CharacterId; // 0x8

    };

    struct FClientGetContentDownloadUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetContentDownloadUrlRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString HttpMethod; // 0x8
        struct FString Key; // 0x18
        bool ThruCDN; // 0x28

    };

    struct FClientCurrentGamesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientCurrentGamesRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString BuildVersion; // 0x8
        struct FString GameMode; // 0x18
        enum class ERegion Region; // 0x28
        struct FString StatisticName; // 0x30
        class UPlayFabJsonObject* TagFilter; // 0x40

    };

    struct FClientGetFriendLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetFriendLeaderboardRequest
    {
    //Children Prop Count (Fields): 10
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeFacebookFriends; // 0x10
        bool IncludeSteamFriends; // 0x11
        int32_t MaxResultsCount; // 0x14
        class UPlayFabJsonObject* ProfileConstraints; // 0x18
        int32_t StartPosition; // 0x20
        struct FString StatisticName; // 0x28
        bool UseSpecificVersion; // 0x38
        int32_t Version; // 0x3c
        struct FString XboxToken; // 0x40

    };

    struct FClientGetFriendLeaderboardAroundPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetFriendLeaderboardAroundPlayerRequest
    {
    //Children Prop Count (Fields): 10
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeFacebookFriends; // 0x10
        bool IncludeSteamFriends; // 0x11
        int32_t MaxResultsCount; // 0x14
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* ProfileConstraints; // 0x28
        struct FString StatisticName; // 0x30
        bool UseSpecificVersion; // 0x40
        int32_t Version; // 0x44
        struct FString XboxToken; // 0x48

    };

    struct FClientGetFriendsListRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetFriendsListRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeFacebookFriends; // 0x10
        bool IncludeSteamFriends; // 0x11
        class UPlayFabJsonObject* ProfileConstraints; // 0x18
        struct FString XboxToken; // 0x20

    };

    struct FClientGameServerRegionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGameServerRegionsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BuildVersion; // 0x8

    };

    struct FClientGetLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetLeaderboardRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t MaxResultsCount; // 0x10
        class UPlayFabJsonObject* ProfileConstraints; // 0x18
        int32_t StartPosition; // 0x20
        struct FString StatisticName; // 0x28
        bool UseSpecificVersion; // 0x38
        int32_t Version; // 0x3c

    };

    struct FClientGetLeaderboardAroundCharacterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetLeaderboardAroundCharacterRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        struct FString CharacterType; // 0x18
        int32_t MaxResultsCount; // 0x28
        struct FString StatisticName; // 0x30

    };

    struct FClientGetLeaderboardAroundPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetLeaderboardAroundPlayerRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t MaxResultsCount; // 0x10
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* ProfileConstraints; // 0x28
        struct FString StatisticName; // 0x30
        bool UseSpecificVersion; // 0x40
        int32_t Version; // 0x44

    };

    struct FClientGetLeaderboardForUsersCharactersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetLeaderboardForUsersCharactersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t MaxResultsCount; // 0x8
        struct FString StatisticName; // 0x10

    };

    struct FClientGetPaymentTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPaymentTokenRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TokenProvider; // 0x8

    };

    struct FClientGetPhotonAuthenticationTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPhotonAuthenticationTokenRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PhotonApplicationId; // 0x8

    };

    struct FClientGetPlayerCombinedInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerCombinedInfoRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* InfoRequestParameters; // 0x10
        struct FString PlayFabId; // 0x18

    };

    struct FClientGetPlayerProfileRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerProfileRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        class UPlayFabJsonObject* ProfileConstraints; // 0x20

    };

    struct FClientGetPlayerSegmentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerSegmentsRequest
    {
    public:


    };

    struct FClientGetPlayerStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerStatisticsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString StatisticNames; // 0x10
        struct TArray<class UPlayFabJsonObject*> StatisticNameVersions; // 0x20

    };

    struct FClientGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerStatisticVersionsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString StatisticName; // 0x10

    };

    struct FClientGetPlayerTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerTagsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Namespace; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FClientGetPlayerTradesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayerTradesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ETradeStatus StatusFilter; // 0x8

    };

    struct FClientGetPlayFabIDsFromFacebookIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromFacebookIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FacebookIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FacebookInstantGamesIds; // 0x8

    };

    struct FClientGetPlayFabIDsFromGameCenterIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGameCenterIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString GameCenterIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromGenericIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGenericIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> GenericIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromGoogleIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromGoogleIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString GoogleIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromKongregateIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromKongregateIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString KongregateIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString NintendoSwitchDeviceIds; // 0x8

    };

    struct FClientGetPlayFabIDsFromPSNAccountIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromPSNAccountIDsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t IssuerId; // 0x8
        struct FString PSNAccountIDs; // 0x10

    };

    struct FClientGetPlayFabIDsFromSteamIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromSteamIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SteamStringIDs; // 0x8

    };

    struct FClientGetPlayFabIDsFromTwitchIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromTwitchIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TwitchIds; // 0x8

    };

    struct FClientGetPlayFabIDsFromXboxLiveIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPlayFabIDsFromXboxLiveIDsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Sandbox; // 0x8
        struct FString XboxLiveAccountIDs; // 0x18

    };

    struct FClientGetPublisherDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPublisherDataRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Keys; // 0x8

    };

    struct FClientGetPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetPurchaseRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString OrderId; // 0x8

    };

    struct FClientGetSharedGroupDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetSharedGroupDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        bool GetMembers; // 0x8
        struct FString Keys; // 0x10
        struct FString SharedGroupId; // 0x20

    };

    struct FClientGetStoreItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetStoreItemsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CatalogVersion; // 0x8
        struct FString StoreId; // 0x18

    };

    struct FClientGetTimeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetTimeRequest
    {
    public:


    };

    struct FClientGetTitleDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetTitleDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Keys; // 0x8
        struct FString OverrideLabel; // 0x18

    };

    struct FClientGetTitleNewsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetTitleNewsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Count; // 0x8

    };

    struct FClientGetTitlePublicKeyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetTitlePublicKeyRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TitleSharedSecret; // 0x8

    };

    struct FClientGetTradeStatusRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetTradeStatusRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString OfferingPlayerId; // 0x8
        struct FString TradeId; // 0x18

    };

    struct FClientGetUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetUserDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t IfChangedFromDataVersion; // 0x8
        struct FString Keys; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FClientGetUserInventoryRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetUserInventoryRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientGetWindowsHelloChallengeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGetWindowsHelloChallengeRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PublicKeyHint; // 0x8

    };

    struct FClientGrantCharacterToUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientGrantCharacterToUserRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterName; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString ItemId; // 0x30

    };

    struct FClientLinkAndroidDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkAndroidDeviceIDRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString AndroidDevice; // 0x8
        struct FString AndroidDeviceId; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        bool ForceLink; // 0x30
        struct FString OS; // 0x38

    };

    struct FClientLinkAppleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkAppleRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString IdentityToken; // 0x18

    };

    struct FClientLinkCustomIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkCustomIDRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CustomId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20

    };

    struct FClientLinkFacebookAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkFacebookAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AccessToken; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20

    };

    struct FClientLinkFacebookInstantGamesIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkFacebookInstantGamesIdRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FacebookInstantGamesSignature; // 0x10
        bool ForceLink; // 0x20

    };

    struct FClientLinkGameCenterAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkGameCenterAccountRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString GameCenterId; // 0x18
        struct FString PublicKeyUrl; // 0x28
        struct FString Salt; // 0x38
        struct FString Signature; // 0x48
        struct FString Timestamp; // 0x58

    };

    struct FClientLinkGoogleAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkGoogleAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString ServerAuthCode; // 0x18

    };

    struct FClientLinkIOSDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkIOSDeviceIDRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DeviceID; // 0x10
        struct FString DeviceModel; // 0x20
        bool ForceLink; // 0x30
        struct FString OS; // 0x38

    };

    struct FClientLinkKongregateAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkKongregateAccountRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString AuthTicket; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20
        struct FString KongregateId; // 0x28

    };

    struct FClientLinkNintendoServiceAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkNintendoServiceAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString IdentityToken; // 0x18

    };

    struct FClientLinkNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkNintendoSwitchDeviceIdRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString NintendoSwitchDeviceId; // 0x18

    };

    struct FClientLinkOpenIdConnectRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkOpenIdConnectRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString ConnectionId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20
        struct FString IdToken; // 0x28

    };

    struct FClientLinkPSNAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkPSNAccountRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString AuthCode; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20
        int32_t IssuerId; // 0x24
        struct FString RedirectUri; // 0x28

    };

    struct FClientLinkSteamAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkSteamAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString SteamTicket; // 0x18

    };

    struct FClientLinkTwitchAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkTwitchAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AccessToken; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20

    };

    struct FClientLinkWindowsHelloAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkWindowsHelloAccountRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DeviceName; // 0x10
        bool ForceLink; // 0x20
        struct FString PublicKey; // 0x28
        struct FString Username; // 0x38

    };

    struct FClientLinkXboxAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLinkXboxAccountRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString XboxToken; // 0x18

    };

    struct FClientLoginWithAndroidDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithAndroidDeviceIDRequest
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString AndroidDevice; // 0x8
        struct FString AndroidDeviceId; // 0x18
        bool CreateAccount; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x30
        struct FString EncryptedRequest; // 0x38
        class UPlayFabJsonObject* InfoRequestParameters; // 0x48
        struct FString OS; // 0x50
        struct FString PlayerSecret; // 0x60

    };

    struct FClientLoginWithAppleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithAppleRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        struct FString IdentityToken; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithCustomIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithCustomIDRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        struct FString CustomId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithEmailAddressRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithEmailAddressRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Email; // 0x10
        class UPlayFabJsonObject* InfoRequestParameters; // 0x20
        struct FString Password; // 0x28

    };

    struct FClientLoginWithFacebookRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithFacebookRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString AccessToken; // 0x8
        bool CreateAccount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithFacebookInstantGamesIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithFacebookInstantGamesIdRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        struct FString FacebookInstantGamesSignature; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithGameCenterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithGameCenterRequest
    {
    //Children Prop Count (Fields): 10
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x28
        struct FString PlayerId; // 0x30
        struct FString PlayerSecret; // 0x40
        struct FString PublicKeyUrl; // 0x50
        struct FString Salt; // 0x60
        struct FString Signature; // 0x70
        struct FString Timestamp; // 0x80

    };

    struct FClientLoginWithGoogleAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithGoogleAccountRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x28
        struct FString PlayerSecret; // 0x30
        struct FString ServerAuthCode; // 0x40

    };

    struct FClientLoginWithIOSDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithIOSDeviceIDRequest
    {
    //Children Prop Count (Fields): 8
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString DeviceID; // 0x18
        struct FString DeviceModel; // 0x28
        struct FString EncryptedRequest; // 0x38
        class UPlayFabJsonObject* InfoRequestParameters; // 0x48
        struct FString OS; // 0x50
        struct FString PlayerSecret; // 0x60

    };

    struct FClientLoginWithKongregateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithKongregateRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString AuthTicket; // 0x8
        bool CreateAccount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString KongregateId; // 0x40
        struct FString PlayerSecret; // 0x50

    };

    struct FClientLoginWithNintendoServiceAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithNintendoServiceAccountRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        struct FString IdentityToken; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithNintendoSwitchDeviceIdRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x28
        struct FString NintendoSwitchDeviceId; // 0x30
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithOpenIdConnectRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithOpenIdConnectRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString ConnectionId; // 0x8
        bool CreateAccount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        struct FString IdToken; // 0x38
        class UPlayFabJsonObject* InfoRequestParameters; // 0x48
        struct FString PlayerSecret; // 0x50

    };

    struct FClientLoginWithPlayFabRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithPlayFabRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* InfoRequestParameters; // 0x10
        struct FString Password; // 0x18
        struct FString Username; // 0x28

    };

    struct FClientLoginWithPSNRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithPSNRequest
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString AuthCode; // 0x8
        bool CreateAccount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        int32_t IssuerId; // 0x40
        struct FString PlayerSecret; // 0x48
        struct FString RedirectUri; // 0x58

    };

    struct FClientLoginWithSteamRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithSteamRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x28
        struct FString PlayerSecret; // 0x30
        struct FString SteamTicket; // 0x40

    };

    struct FClientLoginWithTwitchRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithTwitchRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString AccessToken; // 0x8
        bool CreateAccount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EncryptedRequest; // 0x28
        class UPlayFabJsonObject* InfoRequestParameters; // 0x38
        struct FString PlayerSecret; // 0x40

    };

    struct FClientLoginWithWindowsHelloRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithWindowsHelloRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString ChallengeSignature; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x20
        struct FString PublicKeyHint; // 0x28

    };

    struct FClientLoginWithXboxRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientLoginWithXboxRequest
    {
    //Children Prop Count (Fields): 6
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EncryptedRequest; // 0x18
        class UPlayFabJsonObject* InfoRequestParameters; // 0x28
        struct FString PlayerSecret; // 0x30
        struct FString XboxToken; // 0x40

    };

    struct FClientMatchmakeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientMatchmakeRequest
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString BuildVersion; // 0x8
        struct FString CharacterId; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString GameMode; // 0x30
        struct FString LobbyId; // 0x40
        enum class ERegion Region; // 0x50
        bool StartNewIfNoneFound; // 0x51
        struct FString StatisticName; // 0x58
        class UPlayFabJsonObject* TagFilter; // 0x68

    };

    struct FClientOpenTradeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientOpenTradeRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AllowedPlayerIds; // 0x8
        struct FString OfferedInventoryInstanceIds; // 0x18
        struct FString RequestedCatalogItemIds; // 0x28

    };

    struct FClientPayForPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientPayForPurchaseRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString Currency; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString OrderId; // 0x20
        struct FString ProviderName; // 0x30
        struct FString ProviderTransactionId; // 0x40

    };

    struct FClientPurchaseItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientPurchaseItemRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString ItemId; // 0x30
        int32_t Price; // 0x40
        struct FString StoreId; // 0x48
        struct FString VirtualCurrency; // 0x58

    };

    struct FClientRedeemCouponRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRedeemCouponRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString CouponCode; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38

    };

    struct FClientRefreshPSNAuthTokenRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRefreshPSNAuthTokenRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AuthCode; // 0x8
        int32_t IssuerId; // 0x18
        struct FString RedirectUri; // 0x20

    };

    struct FClientRegisterForIOSPushNotificationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRegisterForIOSPushNotificationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ConfirmationMessage; // 0x8
        struct FString DeviceToken; // 0x18
        bool SendPushNotificationConfirmation; // 0x28

    };

    struct FClientRegisterPlayFabUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRegisterPlayFabUserRequest
    {
    //Children Prop Count (Fields): 9
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DisplayName; // 0x10
        struct FString Email; // 0x20
        struct FString EncryptedRequest; // 0x30
        class UPlayFabJsonObject* InfoRequestParameters; // 0x40
        struct FString Password; // 0x48
        struct FString PlayerSecret; // 0x58
        bool RequireBothUsernameAndEmail; // 0x68
        struct FString Username; // 0x70

    };

    struct FClientRegisterWithWindowsHelloRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRegisterWithWindowsHelloRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DeviceName; // 0x10
        struct FString EncryptedRequest; // 0x20
        class UPlayFabJsonObject* InfoRequestParameters; // 0x30
        struct FString PlayerSecret; // 0x38
        struct FString PublicKey; // 0x48
        struct FString Username; // 0x58

    };

    struct FClientRemoveContactEmailRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRemoveContactEmailRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientRemoveFriendRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRemoveFriendRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FriendPlayFabId; // 0x8

    };

    struct FClientRemoveGenericIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRemoveGenericIDRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* GenericId; // 0x8

    };

    struct FClientRemoveSharedGroupMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRemoveSharedGroupMembersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabIds; // 0x8
        struct FString SharedGroupId; // 0x18

    };

    struct FClientReportAdActivityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientReportAdActivityRequest
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EAdActivity Activity; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString PlacementId; // 0x18
        struct FString RewardId; // 0x28

    };

    struct FClientDeviceInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientDeviceInfoRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Info; // 0x8

    };

    struct FClientReportPlayerClientRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientReportPlayerClientRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Comment; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString ReporteeId; // 0x20

    };

    struct FClientRestoreIOSPurchasesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRestoreIOSPurchasesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString ReceiptData; // 0x20

    };

    struct FClientRewardAdActivityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientRewardAdActivityRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlacementId; // 0x10
        struct FString RewardId; // 0x20

    };

    struct FClientSendAccountRecoveryEmailRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientSendAccountRecoveryEmailRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Email; // 0x10
        struct FString EmailTemplateId; // 0x20

    };

    struct FClientSetFriendTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientSetFriendTagsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString FriendPlayFabId; // 0x8
        struct FString Tags; // 0x18

    };

    struct FClientSetPlayerSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientSetPlayerSecretRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString EncryptedRequest; // 0x8
        struct FString PlayerSecret; // 0x18

    };

    struct FClientStartGameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientStartGameRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString BuildVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString CustomCommandLineData; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString GameMode; // 0x40
        enum class ERegion Region; // 0x50
        struct FString StatisticName; // 0x58

    };

    struct FClientStartPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientStartPurchaseRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct TArray<class UPlayFabJsonObject*> Items; // 0x20
        struct FString StoreId; // 0x30

    };

    struct FClientSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientSubtractUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString VirtualCurrency; // 0x18

    };

    struct FClientUnlinkAndroidDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkAndroidDeviceIDRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AndroidDeviceId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FClientUnlinkAppleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkAppleRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkCustomIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkCustomIDRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CustomId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FClientUnlinkFacebookAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkFacebookAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkFacebookInstantGamesIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkFacebookInstantGamesIdRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FacebookInstantGamesId; // 0x10

    };

    struct FClientUnlinkGameCenterAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkGameCenterAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkGoogleAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkGoogleAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkIOSDeviceIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkIOSDeviceIDRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DeviceID; // 0x10

    };

    struct FClientUnlinkKongregateAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkKongregateAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkNintendoServiceAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkNintendoServiceAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkNintendoSwitchDeviceIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkNintendoSwitchDeviceIdRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString NintendoSwitchDeviceId; // 0x10

    };

    struct FClientUnlinkOpenIdConnectRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkOpenIdConnectRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ConnectionId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FClientUnlinkPSNAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkPSNAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkSteamAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkSteamAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlinkTwitchAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkTwitchAccountRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AccessToken; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FClientUnlinkWindowsHelloAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkWindowsHelloAccountRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PublicKeyHint; // 0x10

    };

    struct FClientUnlinkXboxAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlinkXboxAccountRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FClientUnlockContainerInstanceRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlockContainerInstanceRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString ContainerItemInstanceId; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString KeyItemInstanceId; // 0x40

    };

    struct FClientUnlockContainerItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUnlockContainerItemRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString ContainerItemId; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38

    };

    struct FClientUpdateAvatarUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateAvatarUrlRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ImageUrl; // 0x8

    };

    struct FClientUpdateCharacterDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateCharacterDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        class UPlayFabJsonObject* Data; // 0x20
        struct FString KeysToRemove; // 0x28
        enum class EUserDataPermission Permission; // 0x38

    };

    struct FClientUpdateCharacterStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateCharacterStatisticsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CharacterStatistics; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20

    };

    struct FClientUpdatePlayerStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdatePlayerStatisticsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct TArray<class UPlayFabJsonObject*> Statistics; // 0x10

    };

    struct FClientUpdateSharedGroupDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateSharedGroupDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        enum class EUserDataPermission Permission; // 0x28
        struct FString SharedGroupId; // 0x30

    };

    struct FClientUpdateUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateUserDataRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        enum class EUserDataPermission Permission; // 0x28

    };

    struct FClientUpdateUserTitleDisplayNameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientUpdateUserTitleDisplayNameRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DisplayName; // 0x10

    };

    struct FClientValidateAmazonReceiptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientValidateAmazonReceiptRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CurrencyCode; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        int32_t PurchasePrice; // 0x30
        struct FString ReceiptId; // 0x38
        struct FString UserId; // 0x48

    };

    struct FClientValidateGooglePlayPurchaseRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientValidateGooglePlayPurchaseRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CurrencyCode; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        int32_t PurchasePrice; // 0x30
        struct FString ReceiptJson; // 0x38
        struct FString Signature; // 0x48

    };

    struct FClientValidateIOSReceiptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientValidateIOSReceiptRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CurrencyCode; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        int32_t PurchasePrice; // 0x30
        struct FString ReceiptData; // 0x38

    };

    struct FClientValidateWindowsReceiptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientValidateWindowsReceiptRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CurrencyCode; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        int32_t PurchasePrice; // 0x30
        struct FString Receipt; // 0x38

    };

    struct FClientWriteClientCharacterEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientWriteClientCharacterEventRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* Body; // 0x8
        struct FString CharacterId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EventName; // 0x28
        struct FString Timestamp; // 0x38

    };

    struct FClientWriteClientPlayerEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientWriteClientPlayerEventRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EventName; // 0x18
        struct FString Timestamp; // 0x28

    };

    struct FClientWriteTitleEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ClientWriteTitleEventRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EventName; // 0x18
        struct FString Timestamp; // 0x28

    };

    struct FCloudScriptExecuteCloudScriptResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptExecuteCloudScriptResult
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t APIRequestsIssued; // 0x8
        class UPlayFabJsonObject* Error; // 0x10
        int32_t ExecutionTimeSeconds; // 0x18
        struct FString FunctionName; // 0x20
        class UPlayFabJsonObject* FunctionResult; // 0x30
        bool FunctionResultTooLarge; // 0x38
        int32_t HttpRequestsIssued; // 0x3c
        struct TArray<class UPlayFabJsonObject*> Logs; // 0x40
        bool LogsTooLarge; // 0x50
        int32_t MemoryConsumedBytes; // 0x54
        int32_t ProcessorTimeSeconds; // 0x58
        int32_t Revision; // 0x5c

    };

    struct FCloudScriptExecuteFunctionResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptExecuteFunctionResult
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* Error; // 0x8
        int32_t ExecutionTimeMilliseconds; // 0x10
        struct FString FunctionName; // 0x18
        class UPlayFabJsonObject* FunctionResult; // 0x28
        bool FunctionResultTooLarge; // 0x30

    };

    struct FCloudScriptListFunctionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptListFunctionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Functions; // 0x8

    };

    struct FCloudScriptListHttpFunctionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptListHttpFunctionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Functions; // 0x8

    };

    struct FCloudScriptListQueuedFunctionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptListQueuedFunctionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Functions; // 0x8

    };

    struct FCloudScriptEmptyResult : FPlayFabResultCommon //ScriptStruct PlayFab.CloudScriptEmptyResult
    {
    public:


    };

    struct FCloudScriptExecuteEntityCloudScriptRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptExecuteEntityCloudScriptRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FunctionName; // 0x18
        class UPlayFabJsonObject* FunctionParameter; // 0x28
        bool GeneratePlayStreamEvent; // 0x30
        enum class ECloudScriptRevisionOption RevisionSelection; // 0x31
        int32_t SpecificRevision; // 0x34

    };

    struct FCloudScriptExecuteFunctionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptExecuteFunctionRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FunctionName; // 0x18
        class UPlayFabJsonObject* FunctionParameter; // 0x28
        bool GeneratePlayStreamEvent; // 0x30

    };

    struct FCloudScriptListFunctionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptListFunctionsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptPostFunctionResultForEntityTriggeredActionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* FunctionResult; // 0x18

    };

    struct FCloudScriptPostFunctionResultForFunctionExecutionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptPostFunctionResultForFunctionExecutionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* FunctionResult; // 0x18

    };

    struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptPostFunctionResultForPlayerTriggeredActionRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* FunctionResult; // 0x18
        class UPlayFabJsonObject* PlayerProfile; // 0x20
        class UPlayFabJsonObject* PlayStreamEventEnvelope; // 0x28

    };

    struct FCloudScriptPostFunctionResultForScheduledTaskRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptPostFunctionResultForScheduledTaskRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* FunctionResult; // 0x18
        class UPlayFabJsonObject* ScheduledTaskId; // 0x20

    };

    struct FCloudScriptRegisterHttpFunctionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptRegisterHttpFunctionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FunctionName; // 0x10
        struct FString FunctionUrl; // 0x20

    };

    struct FCloudScriptRegisterQueuedFunctionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptRegisterQueuedFunctionRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString ConnectionString; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString FunctionName; // 0x20
        struct FString QueueName; // 0x30

    };

    struct FCloudScriptUnregisterFunctionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.CloudScriptUnregisterFunctionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FunctionName; // 0x10

    };

    struct FDataAbortFileUploadsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataAbortFileUploadsResponse
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        int32_t ProfileVersion; // 0x10

    };

    struct FDataAbortFileUploadsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataAbortFileUploadsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FileNames; // 0x18
        int32_t ProfileVersion; // 0x28

    };

    struct FDataDeleteFilesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataDeleteFilesResponse
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        int32_t ProfileVersion; // 0x10

    };

    struct FDataFinalizeFileUploadsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataFinalizeFileUploadsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        class UPlayFabJsonObject* MetaData; // 0x10
        int32_t ProfileVersion; // 0x18

    };

    struct FDataGetFilesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataGetFilesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        class UPlayFabJsonObject* MetaData; // 0x10
        int32_t ProfileVersion; // 0x18

    };

    struct FDataGetObjectsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataGetObjectsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        class UPlayFabJsonObject* Objects; // 0x10
        int32_t ProfileVersion; // 0x18

    };

    struct FDataInitiateFileUploadsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataInitiateFileUploadsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        int32_t ProfileVersion; // 0x10
        struct TArray<class UPlayFabJsonObject*> UploadDetails; // 0x18

    };

    struct FDataSetObjectsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.DataSetObjectsResponse
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t ProfileVersion; // 0x8
        struct TArray<class UPlayFabJsonObject*> SetResults; // 0x10

    };

    struct FDataDeleteFilesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataDeleteFilesRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FileNames; // 0x18
        int32_t ProfileVersion; // 0x28

    };

    struct FDataFinalizeFileUploadsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataFinalizeFileUploadsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FileNames; // 0x18

    };

    struct FDataGetFilesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataGetFilesRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10

    };

    struct FDataGetObjectsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataGetObjectsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        bool EscapeObject; // 0x18

    };

    struct FDataInitiateFileUploadsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataInitiateFileUploadsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString FileNames; // 0x18
        int32_t ProfileVersion; // 0x28

    };

    struct FDataSetObjectsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.DataSetObjectsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        int32_t ExpectedProfileVersion; // 0x18
        struct TArray<class UPlayFabJsonObject*> Objects; // 0x20

    };

    struct FEventsWriteEventsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.EventsWriteEventsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString AssignedEventIds; // 0x8

    };

    struct FEventsWriteEventsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.EventsWriteEventsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct TArray<class UPlayFabJsonObject*> Events; // 0x10

    };

    struct FExperimentationCreateExperimentResult : FPlayFabResultCommon //ScriptStruct PlayFab.ExperimentationCreateExperimentResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ExperimentId; // 0x8

    };

    struct FExperimentationCreateExperimentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationCreateExperimentRequest
    {
    //Children Prop Count (Fields): 9
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        int32_t Duration; // 0x20
        enum class EExperimentType ExperimentType; // 0x24
        struct FString Name; // 0x28
        struct FString SegmentId; // 0x38
        struct FString StartDate; // 0x48
        struct FString TitlePlayerAccountTestIds; // 0x58
        struct TArray<class UPlayFabJsonObject*> Variants; // 0x68

    };

    struct FExperimentationEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ExperimentationEmptyResponse
    {
    public:


    };

    struct FExperimentationGetExperimentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ExperimentationGetExperimentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Experiments; // 0x8

    };

    struct FExperimentationGetLatestScorecardResult : FPlayFabResultCommon //ScriptStruct PlayFab.ExperimentationGetLatestScorecardResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Scorecard; // 0x8

    };

    struct FExperimentationGetTreatmentAssignmentResult : FPlayFabResultCommon //ScriptStruct PlayFab.ExperimentationGetTreatmentAssignmentResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* TreatmentAssignment; // 0x8

    };

    struct FExperimentationDeleteExperimentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationDeleteExperimentRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ExperimentId; // 0x10

    };

    struct FExperimentationGetExperimentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationGetExperimentsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FExperimentationGetLatestScorecardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationGetLatestScorecardRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ExperimentId; // 0x10

    };

    struct FExperimentationGetTreatmentAssignmentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationGetTreatmentAssignmentRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10

    };

    struct FExperimentationStartExperimentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationStartExperimentRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ExperimentId; // 0x10

    };

    struct FExperimentationStopExperimentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationStopExperimentRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ExperimentId; // 0x10

    };

    struct FExperimentationUpdateExperimentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ExperimentationUpdateExperimentRequest
    {
    //Children Prop Count (Fields): 10
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Description; // 0x10
        int32_t Duration; // 0x20
        enum class EExperimentType ExperimentType; // 0x24
        struct FString ID; // 0x28
        struct FString Name; // 0x38
        struct FString SegmentId; // 0x48
        struct FString StartDate; // 0x58
        struct FString TitlePlayerAccountTestIds; // 0x68
        struct TArray<class UPlayFabJsonObject*> Variants; // 0x78

    };

    struct FGroupsEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsEmptyResponse
    {
    public:


    };

    struct FGroupsAcceptGroupApplicationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsAcceptGroupApplicationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsAcceptGroupInvitationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsAcceptGroupInvitationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsAddMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsAddMembersRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10
        struct TArray<class UPlayFabJsonObject*> Members; // 0x18
        struct FString RoleId; // 0x28

    };

    struct FGroupsApplyToGroupResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsApplyToGroupResponse
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Entity; // 0x8
        struct FString Expires; // 0x10
        class UPlayFabJsonObject* Group; // 0x20

    };

    struct FGroupsApplyToGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsApplyToGroupRequest
    {
    //Children Prop Count (Fields): 4
    public:

        bool AutoAcceptOutstandingInvite; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        class UPlayFabJsonObject* Entity; // 0x18
        class UPlayFabJsonObject* Group; // 0x20

    };

    struct FGroupsBlockEntityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsBlockEntityRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsChangeMemberRoleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsChangeMemberRoleRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString DestinationRoleId; // 0x10
        class UPlayFabJsonObject* Group; // 0x20
        struct TArray<class UPlayFabJsonObject*> Members; // 0x28
        struct FString OriginRoleId; // 0x38

    };

    struct FGroupsCreateGroupResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsCreateGroupResponse
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString AdminRoleId; // 0x8
        struct FString Created; // 0x18
        class UPlayFabJsonObject* Group; // 0x28
        struct FString GroupName; // 0x30
        struct FString MemberRoleId; // 0x40
        int32_t ProfileVersion; // 0x50
        class UPlayFabJsonObject* Roles; // 0x58

    };

    struct FGroupsCreateGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsCreateGroupRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString GroupName; // 0x18

    };

    struct FGroupsCreateGroupRoleResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsCreateGroupRoleResponse
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ProfileVersion; // 0x8
        struct FString RoleId; // 0x10
        struct FString RoleName; // 0x20

    };

    struct FGroupsCreateGroupRoleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsCreateGroupRoleRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10
        struct FString RoleId; // 0x18
        struct FString RoleName; // 0x28

    };

    struct FGroupsGetGroupResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsGetGroupResponse
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString AdminRoleId; // 0x8
        struct FString Created; // 0x18
        class UPlayFabJsonObject* Group; // 0x28
        struct FString GroupName; // 0x30
        struct FString MemberRoleId; // 0x40
        int32_t ProfileVersion; // 0x50
        class UPlayFabJsonObject* Roles; // 0x58

    };

    struct FGroupsInviteToGroupResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsInviteToGroupResponse
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString Expires; // 0x8
        class UPlayFabJsonObject* Group; // 0x18
        class UPlayFabJsonObject* InvitedByEntity; // 0x20
        class UPlayFabJsonObject* InvitedEntity; // 0x28
        struct FString RoleId; // 0x30

    };

    struct FGroupsIsMemberResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsIsMemberResponse
    {
    //Children Prop Count (Fields): 1
    public:

        bool IsMember; // 0x8

    };

    struct FGroupsListGroupApplicationsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListGroupApplicationsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Applications; // 0x8

    };

    struct FGroupsListGroupBlocksResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListGroupBlocksResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BlockedEntities; // 0x8

    };

    struct FGroupsListGroupInvitationsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListGroupInvitationsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Invitations; // 0x8

    };

    struct FGroupsListGroupMembersResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListGroupMembersResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Members; // 0x8

    };

    struct FGroupsListMembershipResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListMembershipResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Groups; // 0x8

    };

    struct FGroupsListMembershipOpportunitiesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsListMembershipOpportunitiesResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UPlayFabJsonObject*> Applications; // 0x8
        struct TArray<class UPlayFabJsonObject*> Invitations; // 0x18

    };

    struct FGroupsUpdateGroupResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsUpdateGroupResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString OperationReason; // 0x8
        int32_t ProfileVersion; // 0x18
        enum class EOperationTypes SetResult; // 0x1c

    };

    struct FGroupsUpdateGroupRoleResponse : FPlayFabResultCommon //ScriptStruct PlayFab.GroupsUpdateGroupRoleResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString OperationReason; // 0x8
        int32_t ProfileVersion; // 0x18
        enum class EOperationTypes SetResult; // 0x1c

    };

    struct FGroupsDeleteGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsDeleteGroupRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10

    };

    struct FGroupsDeleteRoleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsDeleteRoleRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10
        struct FString RoleId; // 0x18

    };

    struct FGroupsGetGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsGetGroupRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10
        struct FString GroupName; // 0x18

    };

    struct FGroupsInviteToGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsInviteToGroupRequest
    {
    //Children Prop Count (Fields): 5
    public:

        bool AutoAcceptOutstandingApplication; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        class UPlayFabJsonObject* Entity; // 0x18
        class UPlayFabJsonObject* Group; // 0x20
        struct FString RoleId; // 0x28

    };

    struct FGroupsIsMemberRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsIsMemberRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18
        struct FString RoleId; // 0x20

    };

    struct FGroupsListGroupApplicationsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListGroupApplicationsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10

    };

    struct FGroupsListGroupBlocksRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListGroupBlocksRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10

    };

    struct FGroupsListGroupInvitationsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListGroupInvitationsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10

    };

    struct FGroupsListGroupMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListGroupMembersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10

    };

    struct FGroupsListMembershipRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListMembershipRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10

    };

    struct FGroupsListMembershipOpportunitiesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsListMembershipOpportunitiesRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10

    };

    struct FGroupsRemoveGroupApplicationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsRemoveGroupApplicationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsRemoveGroupInvitationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsRemoveGroupInvitationRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsRemoveMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsRemoveMembersRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Group; // 0x10
        struct TArray<class UPlayFabJsonObject*> Members; // 0x18
        struct FString RoleId; // 0x28

    };

    struct FGroupsUnblockEntityRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsUnblockEntityRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        class UPlayFabJsonObject* Group; // 0x18

    };

    struct FGroupsUpdateGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsUpdateGroupRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString AdminRoleId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t ExpectedProfileVersion; // 0x20
        class UPlayFabJsonObject* Group; // 0x28
        struct FString GroupName; // 0x30
        struct FString MemberRoleId; // 0x40

    };

    struct FGroupsUpdateGroupRoleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.GroupsUpdateGroupRoleRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t ExpectedProfileVersion; // 0x10
        class UPlayFabJsonObject* Group; // 0x18
        struct FString RoleId; // 0x20
        struct FString RoleName; // 0x30

    };

    struct FInsightsInsightsGetDetailsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.InsightsInsightsGetDetailsResponse
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t DataUsageMb; // 0x8
        struct FString errorMessage; // 0x10
        class UPlayFabJsonObject* Limits; // 0x20
        struct TArray<class UPlayFabJsonObject*> PendingOperations; // 0x28
        int32_t PerformanceLevel; // 0x38
        int32_t RetentionDays; // 0x3c

    };

    struct FInsightsInsightsGetLimitsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.InsightsInsightsGetLimitsResponse
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t DefaultPerformanceLevel; // 0x8
        int32_t DefaultStorageRetentionDays; // 0xc
        int32_t StorageMaxRetentionDays; // 0x10
        int32_t StorageMinRetentionDays; // 0x14
        struct TArray<class UPlayFabJsonObject*> SubMeters; // 0x18

    };

    struct FInsightsInsightsGetOperationStatusResponse : FPlayFabResultCommon //ScriptStruct PlayFab.InsightsInsightsGetOperationStatusResponse
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString Message; // 0x8
        struct FString OperationCompletedTime; // 0x18
        struct FString OperationId; // 0x28
        struct FString OperationLastUpdated; // 0x38
        struct FString OperationStartedTime; // 0x48
        struct FString OperationType; // 0x58
        int32_t OperationValue; // 0x68
        struct FString Status; // 0x70

    };

    struct FInsightsInsightsGetPendingOperationsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.InsightsInsightsGetPendingOperationsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> PendingOperations; // 0x8

    };

    struct FInsightsInsightsOperationResponse : FPlayFabResultCommon //ScriptStruct PlayFab.InsightsInsightsOperationResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Message; // 0x8
        struct FString OperationId; // 0x18
        struct FString OperationType; // 0x28

    };

    struct FInsightsInsightsEmptyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.InsightsInsightsEmptyRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FInsightsInsightsGetOperationStatusRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.InsightsInsightsGetOperationStatusRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString OperationId; // 0x10

    };

    struct FInsightsInsightsGetPendingOperationsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.InsightsInsightsGetPendingOperationsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString OperationType; // 0x10

    };

    struct FInsightsInsightsSetPerformanceRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.InsightsInsightsSetPerformanceRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t PerformanceLevel; // 0x10

    };

    struct FInsightsInsightsSetStorageRetentionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.InsightsInsightsSetStorageRetentionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t RetentionDays; // 0x10

    };

    struct FLocalizationGetLanguageListResponse : FPlayFabResultCommon //ScriptStruct PlayFab.LocalizationGetLanguageListResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString LanguageList; // 0x8

    };

    struct FLocalizationGetLanguageListRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.LocalizationGetLanguageListRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMatchmakerAuthUserResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MatchmakerAuthUserResponse
    {
    //Children Prop Count (Fields): 2
    public:

        bool Authorized; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FMatchmakerAuthUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MatchmakerAuthUserRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString AuthorizationTicket; // 0x8

    };

    struct FMatchmakerPlayerJoinedResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MatchmakerPlayerJoinedResponse
    {
    public:


    };

    struct FMatchmakerPlayerLeftResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MatchmakerPlayerLeftResponse
    {
    public:


    };

    struct FMatchmakerStartGameResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MatchmakerStartGameResponse
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString GameID; // 0x8
        struct FString ServerIPV4Address; // 0x18
        struct FString ServerIPV6Address; // 0x28
        int32_t ServerPort; // 0x38
        struct FString ServerPublicDNSName; // 0x40

    };

    struct FMatchmakerUserInfoResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MatchmakerUserInfoResponse
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x8
        bool IsDeveloper; // 0x18
        struct FString PlayFabId; // 0x20
        struct FString SteamId; // 0x30
        struct FString TitleDisplayName; // 0x40
        struct FString Username; // 0x50
        class UPlayFabJsonObject* VirtualCurrency; // 0x60
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x68

    };

    struct FMatchmakerPlayerJoinedRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MatchmakerPlayerJoinedRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString LobbyId; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FMatchmakerPlayerLeftRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MatchmakerPlayerLeftRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString LobbyId; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FMatchmakerStartGameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MatchmakerStartGameRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Build; // 0x8
        struct FString CustomCommandLineData; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString ExternalMatchmakerEventEndpoint; // 0x30
        struct FString GameMode; // 0x40
        enum class ERegion Region; // 0x50

    };

    struct FMatchmakerUserInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MatchmakerUserInfoRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t MinCatalogVersion; // 0x10
        struct FString PlayFabId; // 0x18

    };

    struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCancelAllMatchmakingTicketsForPlayerResult
    {
    public:


    };

    struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCancelAllMatchmakingTicketsForPlayerRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString QueueName; // 0x18

    };

    struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCancelAllServerBackfillTicketsForPlayerResult
    {
    public:


    };

    struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCancelAllServerBackfillTicketsForPlayerRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString QueueName; // 0x18

    };

    struct FMultiplayerCancelMatchmakingTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCancelMatchmakingTicketResult
    {
    public:


    };

    struct FMultiplayerCancelMatchmakingTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCancelMatchmakingTicketRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString QueueName; // 0x10
        struct FString TicketId; // 0x20

    };

    struct FMultiplayerCancelServerBackfillTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCancelServerBackfillTicketResult
    {
    public:


    };

    struct FMultiplayerCancelServerBackfillTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCancelServerBackfillTicketRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString QueueName; // 0x10
        struct FString TicketId; // 0x20

    };

    struct FMultiplayerBuildAliasDetailsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerBuildAliasDetailsResponse
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString AliasId; // 0x8
        struct FString AliasName; // 0x18
        struct TArray<class UPlayFabJsonObject*> BuildSelectionCriteria; // 0x28
        int32_t PageSize; // 0x38
        struct FString SkipToken; // 0x40

    };

    struct FMultiplayerCreateBuildAliasRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateBuildAliasRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AliasName; // 0x8
        struct TArray<class UPlayFabJsonObject*> BuildSelectionCriteria; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28

    };

    struct FMultiplayerCreateBuildWithCustomContainerResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithCustomContainerResponse
    {
    //Children Prop Count (Fields): 18
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildId; // 0x10
        struct FString BuildName; // 0x20
        enum class EContainerFlavor ContainerFlavor; // 0x30
        struct FString ContainerRunCommand; // 0x38
        struct FString CreationTime; // 0x48
        class UPlayFabJsonObject* CustomGameContainerImage; // 0x58
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x60
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x70
        class UPlayFabJsonObject* LinuxInstrumentationConfiguration; // 0x80
        class UPlayFabJsonObject* MetaData; // 0x88
        int32_t MultiplayerServerCountPerVm; // 0x90
        struct FString OsPlatform; // 0x98
        struct TArray<class UPlayFabJsonObject*> Ports; // 0xa8
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0xb8
        struct FString ServerType; // 0xc8
        bool UseStreamingForAssetDownloads; // 0xd8
        enum class EAzureVmSize VmSize; // 0xd9

    };

    struct FMultiplayerCreateBuildWithCustomContainerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithCustomContainerRequest
    {
    //Children Prop Count (Fields): 15
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildName; // 0x10
        enum class EContainerFlavor ContainerFlavor; // 0x20
        class UPlayFabJsonObject* ContainerImageReference; // 0x28
        struct FString ContainerRunCommand; // 0x30
        class UPlayFabJsonObject* CustomTags; // 0x40
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x48
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x58
        class UPlayFabJsonObject* LinuxInstrumentationConfiguration; // 0x68
        class UPlayFabJsonObject* MetaData; // 0x70
        int32_t MultiplayerServerCountPerVm; // 0x78
        struct TArray<class UPlayFabJsonObject*> Ports; // 0x80
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0x90
        bool UseStreamingForAssetDownloads; // 0xa0
        enum class EAzureVmSize VmSize; // 0xa1

    };

    struct FMultiplayerCreateBuildWithManagedContainerResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithManagedContainerResponse
    {
    //Children Prop Count (Fields): 18
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildId; // 0x10
        struct FString BuildName; // 0x20
        enum class EContainerFlavor ContainerFlavor; // 0x30
        struct FString CreationTime; // 0x38
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x48
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x58
        struct FString GameWorkingDirectory; // 0x68
        class UPlayFabJsonObject* InstrumentationConfiguration; // 0x78
        class UPlayFabJsonObject* MetaData; // 0x80
        int32_t MultiplayerServerCountPerVm; // 0x88
        struct FString OsPlatform; // 0x90
        struct TArray<class UPlayFabJsonObject*> Ports; // 0xa0
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0xb0
        struct FString ServerType; // 0xc0
        struct FString StartMultiplayerServerCommand; // 0xd0
        bool UseStreamingForAssetDownloads; // 0xe0
        enum class EAzureVmSize VmSize; // 0xe1

    };

    struct FMultiplayerCreateBuildWithManagedContainerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithManagedContainerRequest
    {
    //Children Prop Count (Fields): 15
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildName; // 0x10
        enum class EContainerFlavor ContainerFlavor; // 0x20
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x30
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x40
        struct FString GameWorkingDirectory; // 0x50
        class UPlayFabJsonObject* InstrumentationConfiguration; // 0x60
        class UPlayFabJsonObject* MetaData; // 0x68
        int32_t MultiplayerServerCountPerVm; // 0x70
        struct TArray<class UPlayFabJsonObject*> Ports; // 0x78
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0x88
        struct FString StartMultiplayerServerCommand; // 0x98
        bool UseStreamingForAssetDownloads; // 0xa8
        enum class EAzureVmSize VmSize; // 0xa9

    };

    struct FMultiplayerCreateBuildWithProcessBasedServerResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithProcessBasedServerResponse
    {
    //Children Prop Count (Fields): 18
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildId; // 0x10
        struct FString BuildName; // 0x20
        enum class EContainerFlavor ContainerFlavor; // 0x30
        struct FString CreationTime; // 0x38
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x48
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x58
        struct FString GameWorkingDirectory; // 0x68
        class UPlayFabJsonObject* InstrumentationConfiguration; // 0x78
        class UPlayFabJsonObject* MetaData; // 0x80
        int32_t MultiplayerServerCountPerVm; // 0x88
        struct FString OsPlatform; // 0x90
        struct TArray<class UPlayFabJsonObject*> Ports; // 0xa0
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0xb0
        struct FString ServerType; // 0xc0
        struct FString StartMultiplayerServerCommand; // 0xd0
        bool UseStreamingForAssetDownloads; // 0xe0
        enum class EAzureVmSize VmSize; // 0xe1

    };

    struct FMultiplayerCreateBuildWithProcessBasedServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateBuildWithProcessBasedServerRequest
    {
    //Children Prop Count (Fields): 15
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildName; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x28
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x38
        struct FString GameWorkingDirectory; // 0x48
        class UPlayFabJsonObject* InstrumentationConfiguration; // 0x58
        class UPlayFabJsonObject* MetaData; // 0x60
        int32_t MultiplayerServerCountPerVm; // 0x68
        struct FString OsPlatform; // 0x70
        struct TArray<class UPlayFabJsonObject*> Ports; // 0x80
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0x90
        struct FString StartMultiplayerServerCommand; // 0xa0
        bool UseStreamingForAssetDownloads; // 0xb0
        enum class EAzureVmSize VmSize; // 0xb1

    };

    struct FMultiplayerCreateMatchmakingTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateMatchmakingTicketResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TicketId; // 0x8

    };

    struct FMultiplayerCreateMatchmakingTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateMatchmakingTicketRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* Creator; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        int32_t GiveUpAfterSeconds; // 0x18
        struct TArray<class UPlayFabJsonObject*> MembersToMatchWith; // 0x20
        struct FString QueueName; // 0x30

    };

    struct FMultiplayerCreateRemoteUserResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateRemoteUserResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ExpirationTime; // 0x8
        struct FString Password; // 0x18
        struct FString Username; // 0x28

    };

    struct FMultiplayerCreateRemoteUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateRemoteUserRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString ExpirationTime; // 0x20
        struct FString Region; // 0x30
        struct FString Username; // 0x40
        struct FString VmId; // 0x50

    };

    struct FMultiplayerCreateServerBackfillTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerCreateServerBackfillTicketResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TicketId; // 0x8

    };

    struct FMultiplayerCreateServerBackfillTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateServerBackfillTicketRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t GiveUpAfterSeconds; // 0x10
        struct TArray<class UPlayFabJsonObject*> Members; // 0x18
        struct FString QueueName; // 0x28
        class UPlayFabJsonObject* ServerDetails; // 0x38

    };

    struct FMultiplayerCreateServerMatchmakingTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerCreateServerMatchmakingTicketRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t GiveUpAfterSeconds; // 0x10
        struct TArray<class UPlayFabJsonObject*> Members; // 0x18
        struct FString QueueName; // 0x28

    };

    struct FMultiplayerEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerEmptyResponse
    {
    public:


    };

    struct FMultiplayerEnableMultiplayerServersForTitleResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerEnableMultiplayerServersForTitleResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ETitleMultiplayerServerEnabledStatus Status; // 0x8

    };

    struct FMultiplayerGetAssetUploadUrlResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetAssetUploadUrlResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AssetUploadUrl; // 0x8
        struct FString Filename; // 0x18

    };

    struct FMultiplayerGetBuildResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetBuildResponse
    {
    //Children Prop Count (Fields): 20
    public:

        bool AreAssetsReadonly; // 0x8
        struct FString BuildId; // 0x10
        struct FString BuildName; // 0x20
        struct FString BuildStatus; // 0x30
        enum class EContainerFlavor ContainerFlavor; // 0x40
        struct FString ContainerRunCommand; // 0x48
        struct FString CreationTime; // 0x58
        class UPlayFabJsonObject* CustomGameContainerImage; // 0x68
        struct TArray<class UPlayFabJsonObject*> GameAssetReferences; // 0x70
        struct TArray<class UPlayFabJsonObject*> GameCertificateReferences; // 0x80
        class UPlayFabJsonObject* InstrumentationConfiguration; // 0x90
        class UPlayFabJsonObject* MetaData; // 0x98
        int32_t MultiplayerServerCountPerVm; // 0xa0
        struct FString OsPlatform; // 0xa8
        struct TArray<class UPlayFabJsonObject*> Ports; // 0xb8
        struct TArray<class UPlayFabJsonObject*> RegionConfigurations; // 0xc8
        struct FString ServerType; // 0xd8
        struct FString StartMultiplayerServerCommand; // 0xe8
        bool UseStreamingForAssetDownloads; // 0xf8
        enum class EAzureVmSize VmSize; // 0xf9

    };

    struct FMultiplayerGetContainerRegistryCredentialsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetContainerRegistryCredentialsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString DnsName; // 0x8
        struct FString Password; // 0x18
        struct FString Username; // 0x28

    };

    struct FMultiplayerGetMatchResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetMatchResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString MatchID; // 0x8
        struct TArray<class UPlayFabJsonObject*> Members; // 0x18
        struct FString RegionPreferences; // 0x28
        class UPlayFabJsonObject* ServerDetails; // 0x38

    };

    struct FMultiplayerGetMatchmakingTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetMatchmakingTicketResult
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString CancellationReasonString; // 0x8
        struct FString Created; // 0x18
        class UPlayFabJsonObject* Creator; // 0x28
        int32_t GiveUpAfterSeconds; // 0x30
        struct FString MatchID; // 0x38
        struct TArray<class UPlayFabJsonObject*> Members; // 0x48
        struct TArray<class UPlayFabJsonObject*> MembersToMatchWith; // 0x58
        struct FString QueueName; // 0x68
        struct FString Status; // 0x78
        struct FString TicketId; // 0x88

    };

    struct FMultiplayerGetMultiplayerServerDetailsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetMultiplayerServerDetailsResponse
    {
    //Children Prop Count (Fields): 10
    public:

        struct TArray<class UPlayFabJsonObject*> ConnectedPlayers; // 0x8
        struct FString FQDN; // 0x18
        struct FString IPV4Address; // 0x28
        struct FString LastStateTransitionTime; // 0x38
        struct TArray<class UPlayFabJsonObject*> Ports; // 0x48
        struct FString Region; // 0x58
        struct FString ServerId; // 0x68
        struct FString SessionId; // 0x78
        struct FString State; // 0x88
        struct FString VmId; // 0x98

    };

    struct FMultiplayerGetMultiplayerServerLogsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetMultiplayerServerLogsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString LogDownloadUrl; // 0x8

    };

    struct FMultiplayerGetQueueStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetQueueStatisticsResult
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t NumberOfPlayersMatching; // 0x8
        class UPlayFabJsonObject* TimeToMatchStatisticsInSeconds; // 0x10

    };

    struct FMultiplayerGetRemoteLoginEndpointResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetRemoteLoginEndpointResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString IPV4Address; // 0x8
        int32_t Port; // 0x18

    };

    struct FMultiplayerGetServerBackfillTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetServerBackfillTicketResult
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString CancellationReasonString; // 0x8
        struct FString Created; // 0x18
        int32_t GiveUpAfterSeconds; // 0x28
        struct FString MatchID; // 0x30
        struct TArray<class UPlayFabJsonObject*> Members; // 0x40
        struct FString QueueName; // 0x50
        class UPlayFabJsonObject* ServerDetails; // 0x60
        struct FString Status; // 0x68
        struct FString TicketId; // 0x78

    };

    struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetTitleEnabledForMultiplayerServersStatusResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ETitleMultiplayerServerEnabledStatus Status; // 0x8

    };

    struct FMultiplayerGetTitleMultiplayerServersQuotasResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerGetTitleMultiplayerServersQuotasResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Quotas; // 0x8

    };

    struct FMultiplayerJoinMatchmakingTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerJoinMatchmakingTicketResult
    {
    public:


    };

    struct FMultiplayerListMultiplayerServersResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListMultiplayerServersResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> MultiplayerServerSummaries; // 0x8
        int32_t PageSize; // 0x18
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListAssetSummariesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListAssetSummariesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> AssetSummaries; // 0x8
        int32_t PageSize; // 0x18
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListBuildAliasesForTitleResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListBuildAliasesForTitleResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BuildAliases; // 0x8

    };

    struct FMultiplayerListBuildSummariesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListBuildSummariesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> BuildSummaries; // 0x8
        int32_t PageSize; // 0x18
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListCertificateSummariesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListCertificateSummariesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> CertificateSummaries; // 0x8
        int32_t PageSize; // 0x18
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListContainerImagesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListContainerImagesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Images; // 0x8
        int32_t PageSize; // 0x18
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListContainerImageTagsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListContainerImageTagsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Tags; // 0x8

    };

    struct FMultiplayerListMatchmakingTicketsForPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListMatchmakingTicketsForPlayerResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TicketIds; // 0x8

    };

    struct FMultiplayerListPartyQosServersResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListPartyQosServersResponse
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t PageSize; // 0x8
        struct TArray<class UPlayFabJsonObject*> QosServers; // 0x10
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListQosServersForTitleResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListQosServersForTitleResponse
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t PageSize; // 0x8
        struct TArray<class UPlayFabJsonObject*> QosServers; // 0x10
        struct FString SkipToken; // 0x20

    };

    struct FMultiplayerListServerBackfillTicketsForPlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListServerBackfillTicketsForPlayerResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TicketIds; // 0x8

    };

    struct FMultiplayerListVirtualMachineSummariesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerListVirtualMachineSummariesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t PageSize; // 0x8
        struct FString SkipToken; // 0x10
        struct TArray<class UPlayFabJsonObject*> VirtualMachines; // 0x20

    };

    struct FMultiplayerRequestMultiplayerServerResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerRequestMultiplayerServerResponse
    {
    //Children Prop Count (Fields): 10
    public:

        struct TArray<class UPlayFabJsonObject*> ConnectedPlayers; // 0x8
        struct FString FQDN; // 0x18
        struct FString IPV4Address; // 0x28
        struct FString LastStateTransitionTime; // 0x38
        struct TArray<class UPlayFabJsonObject*> Ports; // 0x48
        struct FString Region; // 0x58
        struct FString ServerId; // 0x68
        struct FString SessionId; // 0x78
        struct FString State; // 0x88
        struct FString VmId; // 0x98

    };

    struct FMultiplayerRolloverContainerRegistryCredentialsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.MultiplayerRolloverContainerRegistryCredentialsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString DnsName; // 0x8
        struct FString Password; // 0x18
        struct FString Username; // 0x28

    };

    struct FMultiplayerDeleteAssetRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteAssetRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Filename; // 0x10

    };

    struct FMultiplayerDeleteBuildRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteBuildRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FMultiplayerDeleteBuildAliasRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteBuildAliasRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AliasId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FMultiplayerDeleteBuildRegionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteBuildRegionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Region; // 0x20

    };

    struct FMultiplayerDeleteCertificateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteCertificateRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Name; // 0x10

    };

    struct FMultiplayerDeleteContainerImageRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteContainerImageRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ImageName; // 0x10

    };

    struct FMultiplayerDeleteRemoteUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerDeleteRemoteUserRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Region; // 0x20
        struct FString Username; // 0x30
        struct FString VmId; // 0x40

    };

    struct FMultiplayerEnableMultiplayerServersForTitleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerEnableMultiplayerServersForTitleRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerGetAssetUploadUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetAssetUploadUrlRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Filename; // 0x10

    };

    struct FMultiplayerGetBuildRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetBuildRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FMultiplayerGetBuildAliasRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetBuildAliasRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AliasId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FMultiplayerGetContainerRegistryCredentialsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetContainerRegistryCredentialsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerGetMatchRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetMatchRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool EscapeObject; // 0x10
        struct FString MatchID; // 0x18
        struct FString QueueName; // 0x28
        bool ReturnMemberAttributes; // 0x38

    };

    struct FMultiplayerGetMatchmakingTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetMatchmakingTicketRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool EscapeObject; // 0x10
        struct FString QueueName; // 0x18
        struct FString TicketId; // 0x28

    };

    struct FMultiplayerGetMultiplayerServerDetailsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetMultiplayerServerDetailsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Region; // 0x20
        struct FString SessionId; // 0x30

    };

    struct FMultiplayerGetMultiplayerServerLogsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetMultiplayerServerLogsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ServerId; // 0x10

    };

    struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetMultiplayerSessionLogsBySessionIdRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString SessionId; // 0x10

    };

    struct FMultiplayerGetQueueStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetQueueStatisticsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString QueueName; // 0x10

    };

    struct FMultiplayerGetRemoteLoginEndpointRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetRemoteLoginEndpointRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Region; // 0x20
        struct FString VmId; // 0x30

    };

    struct FMultiplayerGetServerBackfillTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetServerBackfillTicketRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool EscapeObject; // 0x10
        struct FString QueueName; // 0x18
        struct FString TicketId; // 0x28

    };

    struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetTitleEnabledForMultiplayerServersStatusRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerGetTitleMultiplayerServersQuotasRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerGetTitleMultiplayerServersQuotasRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerJoinMatchmakingTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerJoinMatchmakingTicketRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Member; // 0x10
        struct FString QueueName; // 0x18
        struct FString TicketId; // 0x28

    };

    struct FMultiplayerListMultiplayerServersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListMultiplayerServersRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t PageSize; // 0x20
        struct FString Region; // 0x28
        struct FString SkipToken; // 0x38

    };

    struct FMultiplayerListAssetSummariesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListAssetSummariesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t PageSize; // 0x10
        struct FString SkipToken; // 0x18

    };

    struct FMultiplayerMultiplayerEmptyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerMultiplayerEmptyRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerListBuildSummariesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListBuildSummariesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t PageSize; // 0x10
        struct FString SkipToken; // 0x18

    };

    struct FMultiplayerListCertificateSummariesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListCertificateSummariesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t PageSize; // 0x10
        struct FString SkipToken; // 0x18

    };

    struct FMultiplayerListContainerImagesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListContainerImagesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t PageSize; // 0x10
        struct FString SkipToken; // 0x18

    };

    struct FMultiplayerListContainerImageTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListContainerImageTagsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ImageName; // 0x10

    };

    struct FMultiplayerListMatchmakingTicketsForPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListMatchmakingTicketsForPlayerRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString QueueName; // 0x18

    };

    struct FMultiplayerListPartyQosServersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListPartyQosServersRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerListQosServersForTitleRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListQosServersForTitleRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeAllRegions; // 0x10

    };

    struct FMultiplayerListServerBackfillTicketsForPlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListServerBackfillTicketsForPlayerRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct FString QueueName; // 0x18

    };

    struct FMultiplayerListVirtualMachineSummariesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerListVirtualMachineSummariesRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t PageSize; // 0x20
        struct FString Region; // 0x28
        struct FString SkipToken; // 0x38

    };

    struct FMultiplayerRequestMultiplayerServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerRequestMultiplayerServerRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* BuildAliasParams; // 0x8
        struct FString BuildId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString InitialPlayers; // 0x28
        struct FString PreferredRegions; // 0x38
        struct FString SessionCookie; // 0x48
        struct FString SessionId; // 0x58

    };

    struct FMultiplayerRolloverContainerRegistryCredentialsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerRolloverContainerRegistryCredentialsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FMultiplayerShutdownMultiplayerServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerShutdownMultiplayerServerRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Region; // 0x20
        struct FString SessionId; // 0x30

    };

    struct FMultiplayerUntagContainerImageRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerUntagContainerImageRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ImageName; // 0x10
        struct FString Tag; // 0x20

    };

    struct FMultiplayerUpdateBuildAliasRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerUpdateBuildAliasRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString AliasId; // 0x8
        struct FString AliasName; // 0x18
        struct TArray<class UPlayFabJsonObject*> BuildSelectionCriteria; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38

    };

    struct FMultiplayerUpdateBuildRegionRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerUpdateBuildRegionRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString BuildId; // 0x8
        class UPlayFabJsonObject* BuildRegion; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20

    };

    struct FMultiplayerUpdateBuildRegionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerUpdateBuildRegionsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString BuildId; // 0x8
        struct TArray<class UPlayFabJsonObject*> BuildRegions; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28

    };

    struct FMultiplayerUploadCertificateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.MultiplayerUploadCertificateRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* GameCertificate; // 0x10

    };

    struct FProfilesGetGlobalPolicyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesGetGlobalPolicyResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Permissions; // 0x8

    };

    struct FProfilesGetEntityProfileResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesGetEntityProfileResponse
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Profile; // 0x8

    };

    struct FProfilesGetEntityProfilesResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesGetEntityProfilesResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Profiles; // 0x8

    };

    struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString TitleId; // 0x8
        class UPlayFabJsonObject* TitlePlayerAccounts; // 0x18

    };

    struct FProfilesSetGlobalPolicyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesSetGlobalPolicyResponse
    {
    public:


    };

    struct FProfilesSetProfileLanguageResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesSetProfileLanguageResponse
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EOperationTypes OperationResult; // 0x8
        int32_t VersionNumber; // 0xc

    };

    struct FProfilesSetEntityProfilePolicyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ProfilesSetEntityProfilePolicyResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Permissions; // 0x8

    };

    struct FProfilesGetGlobalPolicyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesGetGlobalPolicyRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8

    };

    struct FProfilesGetEntityProfileRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesGetEntityProfileRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool DataAsObject; // 0x10
        class UPlayFabJsonObject* Entity; // 0x18

    };

    struct FProfilesGetEntityProfilesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesGetEntityProfilesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool DataAsObject; // 0x10
        struct TArray<class UPlayFabJsonObject*> Entities; // 0x18

    };

    struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString MasterPlayerAccountIds; // 0x10

    };

    struct FProfilesSetGlobalPolicyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesSetGlobalPolicyRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct TArray<class UPlayFabJsonObject*> Permissions; // 0x10

    };

    struct FProfilesSetProfileLanguageRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesSetProfileLanguageRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        int32_t ExpectedVersion; // 0x18
        struct FString Language; // 0x20

    };

    struct FProfilesSetEntityProfilePolicyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ProfilesSetEntityProfilePolicyRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Entity; // 0x10
        struct TArray<class UPlayFabJsonObject*> Statements; // 0x18

    };

    struct FServerModifyCharacterVirtualCurrencyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerModifyCharacterVirtualCurrencyResult
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Balance; // 0x8
        struct FString VirtualCurrency; // 0x10

    };

    struct FServerAddCharacterVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddCharacterVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Amount; // 0x8
        struct FString CharacterId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString PlayFabId; // 0x28
        struct FString VirtualCurrency; // 0x38

    };

    struct FServerEmptyResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ServerEmptyResponse
    {
    public:


    };

    struct FServerAddFriendRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddFriendRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString FriendEmail; // 0x8
        struct FString FriendPlayFabId; // 0x18
        struct FString FriendTitleDisplayName; // 0x28
        struct FString FriendUsername; // 0x38
        struct FString PlayFabId; // 0x48

    };

    struct FServerEmptyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerEmptyResult
    {
    public:


    };

    struct FServerAddGenericIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddGenericIDRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* GenericId; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerAddPlayerTagResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerAddPlayerTagResult
    {
    public:


    };

    struct FServerAddPlayerTagRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddPlayerTagRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString TagName; // 0x20

    };

    struct FServerAddSharedGroupMembersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerAddSharedGroupMembersResult
    {
    public:


    };

    struct FServerAddSharedGroupMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddSharedGroupMembersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabIds; // 0x8
        struct FString SharedGroupId; // 0x18

    };

    struct FServerModifyUserVirtualCurrencyResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerModifyUserVirtualCurrencyResult
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Balance; // 0x8
        int32_t BalanceChange; // 0xc
        struct FString PlayFabId; // 0x10
        struct FString VirtualCurrency; // 0x20

    };

    struct FServerAddUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAddUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString VirtualCurrency; // 0x28

    };

    struct FServerAuthenticateSessionTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerAuthenticateSessionTicketResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool IsSessionTicketExpired; // 0x8
        class UPlayFabJsonObject* UserInfo; // 0x10

    };

    struct FServerAuthenticateSessionTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAuthenticateSessionTicketRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SessionTicket; // 0x8

    };

    struct FServerAwardSteamAchievementResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerAwardSteamAchievementResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> AchievementResults; // 0x8

    };

    struct FServerAwardSteamAchievementRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerAwardSteamAchievementRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Achievements; // 0x8

    };

    struct FServerBanUsersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerBanUsersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FServerBanUsersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerBanUsersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UPlayFabJsonObject*> Bans; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18

    };

    struct FServerConsumeItemResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerConsumeItemResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ItemInstanceId; // 0x8
        int32_t RemainingUses; // 0x18

    };

    struct FServerConsumeItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerConsumeItemRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CharacterId; // 0x8
        int32_t ConsumeCount; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString ItemInstanceId; // 0x28
        struct FString PlayFabId; // 0x38

    };

    struct FServerCreateSharedGroupResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerCreateSharedGroupResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SharedGroupId; // 0x8

    };

    struct FServerCreateSharedGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerCreateSharedGroupRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SharedGroupId; // 0x8

    };

    struct FServerDeleteCharacterFromUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerDeleteCharacterFromUserResult
    {
    public:


    };

    struct FServerDeletePlayerResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerDeletePlayerResult
    {
    public:


    };

    struct FServerDeletePushNotificationTemplateResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerDeletePushNotificationTemplateResult
    {
    public:


    };

    struct FServerDeregisterGameResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ServerDeregisterGameResponse
    {
    public:


    };

    struct FServerEvaluateRandomResultTableResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerEvaluateRandomResultTableResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ResultItemId; // 0x8

    };

    struct FServerExecuteCloudScriptResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerExecuteCloudScriptResult
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t APIRequestsIssued; // 0x8
        class UPlayFabJsonObject* Error; // 0x10
        int32_t ExecutionTimeSeconds; // 0x18
        struct FString FunctionName; // 0x20
        class UPlayFabJsonObject* FunctionResult; // 0x30
        bool FunctionResultTooLarge; // 0x38
        int32_t HttpRequestsIssued; // 0x3c
        struct TArray<class UPlayFabJsonObject*> Logs; // 0x40
        bool LogsTooLarge; // 0x50
        int32_t MemoryConsumedBytes; // 0x54
        int32_t ProcessorTimeSeconds; // 0x58
        int32_t Revision; // 0x5c

    };

    struct FServerGetAllSegmentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetAllSegmentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Segments; // 0x8

    };

    struct FServerListUsersCharactersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerListUsersCharactersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Characters; // 0x8

    };

    struct FServerGetCatalogItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetCatalogItemsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Catalog; // 0x8

    };

    struct FServerGetCharacterDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetCharacterDataResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* Data; // 0x18
        int32_t DataVersion; // 0x20
        struct FString PlayFabId; // 0x28

    };

    struct FServerGetCharacterInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetCharacterInventoryResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CharacterId; // 0x8
        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x18
        struct FString PlayFabId; // 0x28
        class UPlayFabJsonObject* VirtualCurrency; // 0x38
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x40

    };

    struct FServerGetCharacterLeaderboardResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetCharacterLeaderboardResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FServerGetCharacterStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetCharacterStatisticsResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CharacterStatistics; // 0x18
        struct FString PlayFabId; // 0x20

    };

    struct FServerGetContentDownloadUrlResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetContentDownloadUrlResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString URL; // 0x8

    };

    struct FServerGetLeaderboardResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetLeaderboardResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8
        struct FString NextReset; // 0x18
        int32_t Version; // 0x28

    };

    struct FServerGetFriendsListResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetFriendsListResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Friends; // 0x8

    };

    struct FServerGetLeaderboardAroundCharacterResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetLeaderboardAroundCharacterResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FServerGetLeaderboardAroundUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetLeaderboardAroundUserResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8
        struct FString NextReset; // 0x18
        int32_t Version; // 0x28

    };

    struct FServerGetLeaderboardForUsersCharactersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetLeaderboardForUsersCharactersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Leaderboard; // 0x8

    };

    struct FServerGetPlayerCombinedInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerCombinedInfoResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* InfoResultPayload; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerGetPlayerProfileResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerProfileResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* PlayerProfile; // 0x8

    };

    struct FServerGetPlayerSegmentsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerSegmentsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Segments; // 0x8

    };

    struct FServerGetPlayersInSegmentResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayersInSegmentResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ContinuationToken; // 0x8
        struct TArray<class UPlayFabJsonObject*> PlayerProfiles; // 0x18
        int32_t ProfilesInSegment; // 0x28

    };

    struct FServerGetPlayerStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerStatisticsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x8
        struct TArray<class UPlayFabJsonObject*> Statistics; // 0x18

    };

    struct FServerGetPlayerStatisticVersionsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerStatisticVersionsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> StatisticVersions; // 0x8

    };

    struct FServerGetPlayerTagsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayerTagsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x8
        struct FString Tags; // 0x18

    };

    struct FServerGetPlayFabIDsFromFacebookIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromFacebookIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromFacebookInstantGamesIdsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromGenericIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromGenericIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromPSNAccountIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromPSNAccountIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromSteamIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromSteamIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPlayFabIDsFromXboxLiveIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromXboxLiveIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetPublisherDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetPublisherDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FServerGetRandomResultTablesResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetRandomResultTablesResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Tables; // 0x8

    };

    struct FServerGetServerCustomIDsFromPlayFabIDsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetServerCustomIDsFromPlayFabIDsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Data; // 0x8

    };

    struct FServerGetSharedGroupDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetSharedGroupDataResult
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* Data; // 0x8
        struct FString Members; // 0x10

    };

    struct FServerGetStoreItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetStoreItemsResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* MarketingData; // 0x18
        enum class EPfSourceType Source; // 0x20
        struct TArray<class UPlayFabJsonObject*> Store; // 0x28
        struct FString StoreId; // 0x38

    };

    struct FServerGetTimeResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetTimeResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Time; // 0x8

    };

    struct FServerGetTitleDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetTitleDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* Data; // 0x8

    };

    struct FServerGetTitleNewsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetTitleNewsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> News; // 0x8

    };

    struct FServerGetUserAccountInfoResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetUserAccountInfoResult
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayFabJsonObject* UserInfo; // 0x8

    };

    struct FServerGetUserBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetUserBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FServerGetUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetUserDataResult
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* Data; // 0x8
        int32_t DataVersion; // 0x10
        struct FString PlayFabId; // 0x18

    };

    struct FServerGetUserInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGetUserInventoryResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> Inventory; // 0x8
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* VirtualCurrency; // 0x28
        class UPlayFabJsonObject* VirtualCurrencyRechargeTimes; // 0x30

    };

    struct FServerGrantCharacterToUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGrantCharacterToUserResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CharacterId; // 0x8

    };

    struct FServerGrantItemsToCharacterResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGrantItemsToCharacterResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> ItemGrantResults; // 0x8

    };

    struct FServerGrantItemsToUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGrantItemsToUserResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> ItemGrantResults; // 0x8

    };

    struct FServerGrantItemsToUsersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerGrantItemsToUsersResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> ItemGrantResults; // 0x8

    };

    struct FServerLinkPSNAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerLinkPSNAccountResult
    {
    public:


    };

    struct FServerLinkServerCustomIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerLinkServerCustomIdResult
    {
    public:


    };

    struct FServerLinkXboxAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerLinkXboxAccountResult
    {
    public:


    };

    struct FServerServerLoginResult : FPlayFabLoginResultCommon //ScriptStruct PlayFab.ServerServerLoginResult
    {
    //Children Prop Count (Fields): 8
    public:

        class UPlayFabJsonObject* EntityToken; // 0x10
        class UPlayFabJsonObject* InfoResultPayload; // 0x18
        struct FString LastLoginTime; // 0x20
        bool NewlyCreated; // 0x30
        struct FString PlayFabId; // 0x38
        struct FString SessionTicket; // 0x48
        class UPlayFabJsonObject* SettingsForUser; // 0x58
        class UPlayFabJsonObject* TreatmentAssignment; // 0x60

    };

    struct FServerModifyItemUsesResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerModifyItemUsesResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ItemInstanceId; // 0x8
        int32_t RemainingUses; // 0x18

    };

    struct FServerMoveItemToCharacterFromCharacterResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerMoveItemToCharacterFromCharacterResult
    {
    public:


    };

    struct FServerMoveItemToCharacterFromUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerMoveItemToCharacterFromUserResult
    {
    public:


    };

    struct FServerMoveItemToUserFromCharacterResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerMoveItemToUserFromCharacterResult
    {
    public:


    };

    struct FServerNotifyMatchmakerPlayerLeftResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerNotifyMatchmakerPlayerLeftResult
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EPlayerConnectionState PlayerState; // 0x8

    };

    struct FServerRedeemCouponResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRedeemCouponResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> GrantedItems; // 0x8

    };

    struct FServerRedeemMatchmakerTicketResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRedeemMatchmakerTicketResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Error; // 0x8
        bool TicketIsValid; // 0x18
        class UPlayFabJsonObject* UserInfo; // 0x20

    };

    struct FServerRefreshGameServerInstanceHeartbeatResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRefreshGameServerInstanceHeartbeatResult
    {
    public:


    };

    struct FServerRegisterGameResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRegisterGameResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString LobbyId; // 0x8

    };

    struct FServerRemovePlayerTagResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRemovePlayerTagResult
    {
    public:


    };

    struct FServerRemoveSharedGroupMembersResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRemoveSharedGroupMembersResult
    {
    public:


    };

    struct FServerReportPlayerServerResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerReportPlayerServerResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t SubmissionsRemaining; // 0x8

    };

    struct FServerRevokeAllBansForUserResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRevokeAllBansForUserResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FServerRevokeBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRevokeBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FServerRevokeInventoryResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRevokeInventoryResult
    {
    public:


    };

    struct FServerRevokeInventoryItemsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerRevokeInventoryItemsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Errors; // 0x8

    };

    struct FServerSavePushNotificationTemplateResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSavePushNotificationTemplateResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PushNotificationTemplateId; // 0x8

    };

    struct FServerSendCustomAccountRecoveryEmailResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSendCustomAccountRecoveryEmailResult
    {
    public:


    };

    struct FServerSendEmailFromTemplateResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSendEmailFromTemplateResult
    {
    public:


    };

    struct FServerSendPushNotificationResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSendPushNotificationResult
    {
    public:


    };

    struct FServerSetGameServerInstanceDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceDataResult
    {
    public:


    };

    struct FServerSetGameServerInstanceStateResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceStateResult
    {
    public:


    };

    struct FServerSetGameServerInstanceTagsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceTagsResult
    {
    public:


    };

    struct FServerSetPlayerSecretResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetPlayerSecretResult
    {
    public:


    };

    struct FServerSetPublisherDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetPublisherDataResult
    {
    public:


    };

    struct FServerSetTitleDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerSetTitleDataResult
    {
    public:


    };

    struct FServerUnlinkPSNAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUnlinkPSNAccountResult
    {
    public:


    };

    struct FServerUnlinkServerCustomIdResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUnlinkServerCustomIdResult
    {
    public:


    };

    struct FServerUnlinkXboxAccountResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUnlinkXboxAccountResult
    {
    public:


    };

    struct FServerUnlockContainerItemResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUnlockContainerItemResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UPlayFabJsonObject*> GrantedItems; // 0x8
        struct FString UnlockedItemInstanceId; // 0x18
        struct FString UnlockedWithItemInstanceId; // 0x28
        class UPlayFabJsonObject* VirtualCurrency; // 0x38

    };

    struct FServerUpdateBansResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdateBansResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> BanData; // 0x8

    };

    struct FServerUpdateCharacterDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdateCharacterDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DataVersion; // 0x8

    };

    struct FServerUpdateCharacterStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdateCharacterStatisticsResult
    {
    public:


    };

    struct FServerUpdatePlayerStatisticsResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdatePlayerStatisticsResult
    {
    public:


    };

    struct FServerUpdateSharedGroupDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdateSharedGroupDataResult
    {
    public:


    };

    struct FServerUpdateUserDataResult : FPlayFabResultCommon //ScriptStruct PlayFab.ServerUpdateUserDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DataVersion; // 0x8

    };

    struct FServerWriteEventResponse : FPlayFabResultCommon //ScriptStruct PlayFab.ServerWriteEventResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString EventId; // 0x8

    };

    struct FServerDeleteCharacterFromUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerDeleteCharacterFromUserRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString PlayFabId; // 0x20
        bool SaveCharacterInventory; // 0x30

    };

    struct FServerDeletePlayerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerDeletePlayerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FServerDeletePushNotificationTemplateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerDeletePushNotificationTemplateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PushNotificationTemplateId; // 0x8

    };

    struct FServerDeleteSharedGroupRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerDeleteSharedGroupRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SharedGroupId; // 0x8

    };

    struct FServerDeregisterGameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerDeregisterGameRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString LobbyId; // 0x10

    };

    struct FServerEvaluateRandomResultTableRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerEvaluateRandomResultTableRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CatalogVersion; // 0x8
        struct FString TableId; // 0x18

    };

    struct FServerExecuteCloudScriptServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerExecuteCloudScriptServerRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString FunctionName; // 0x10
        class UPlayFabJsonObject* FunctionParameter; // 0x20
        bool GeneratePlayStreamEvent; // 0x28
        struct FString PlayFabId; // 0x30
        enum class ECloudScriptRevisionOption RevisionSelection; // 0x40
        int32_t SpecificRevision; // 0x44

    };

    struct FServerGetAllSegmentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetAllSegmentsRequest
    {
    public:


    };

    struct FServerListUsersCharactersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerListUsersCharactersRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FServerGetCatalogItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetCatalogItemsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString CatalogVersion; // 0x8

    };

    struct FServerGetCharacterDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetCharacterDataRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        int32_t IfChangedFromDataVersion; // 0x18
        struct FString Keys; // 0x20
        struct FString PlayFabId; // 0x30

    };

    struct FServerGetCharacterInventoryRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetCharacterInventoryRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString PlayFabId; // 0x30

    };

    struct FServerGetCharacterLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetCharacterLeaderboardRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterType; // 0x8
        int32_t MaxResultsCount; // 0x18
        int32_t StartPosition; // 0x1c
        struct FString StatisticName; // 0x20

    };

    struct FServerGetCharacterStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetCharacterStatisticsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CharacterId; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FServerGetContentDownloadUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetContentDownloadUrlRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString HttpMethod; // 0x8
        struct FString Key; // 0x18
        bool ThruCDN; // 0x28

    };

    struct FServerGetFriendLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetFriendLeaderboardRequest
    {
    //Children Prop Count (Fields): 11
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeFacebookFriends; // 0x10
        bool IncludeSteamFriends; // 0x11
        int32_t MaxResultsCount; // 0x14
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* ProfileConstraints; // 0x28
        int32_t StartPosition; // 0x30
        struct FString StatisticName; // 0x38
        bool UseSpecificVersion; // 0x48
        int32_t Version; // 0x4c
        struct FString XboxToken; // 0x50

    };

    struct FServerGetFriendsListRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetFriendsListRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool IncludeFacebookFriends; // 0x10
        bool IncludeSteamFriends; // 0x11
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* ProfileConstraints; // 0x28
        struct FString XboxToken; // 0x30

    };

    struct FServerGetLeaderboardRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetLeaderboardRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t MaxResultsCount; // 0x10
        class UPlayFabJsonObject* ProfileConstraints; // 0x18
        int32_t StartPosition; // 0x20
        struct FString StatisticName; // 0x28
        bool UseSpecificVersion; // 0x38
        int32_t Version; // 0x3c

    };

    struct FServerGetLeaderboardAroundCharacterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetLeaderboardAroundCharacterRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CharacterId; // 0x8
        struct FString CharacterType; // 0x18
        int32_t MaxResultsCount; // 0x28
        struct FString PlayFabId; // 0x30
        struct FString StatisticName; // 0x40

    };

    struct FServerGetLeaderboardAroundUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetLeaderboardAroundUserRequest
    {
    //Children Prop Count (Fields): 7
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        int32_t MaxResultsCount; // 0x10
        struct FString PlayFabId; // 0x18
        class UPlayFabJsonObject* ProfileConstraints; // 0x28
        struct FString StatisticName; // 0x30
        bool UseSpecificVersion; // 0x40
        int32_t Version; // 0x44

    };

    struct FServerGetLeaderboardForUsersCharactersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetLeaderboardForUsersCharactersRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t MaxResultsCount; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString StatisticName; // 0x20

    };

    struct FServerGetPlayerCombinedInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayerCombinedInfoRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* InfoRequestParameters; // 0x10
        struct FString PlayFabId; // 0x18

    };

    struct FServerGetPlayerProfileRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayerProfileRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        class UPlayFabJsonObject* ProfileConstraints; // 0x20

    };

    struct FServerGetPlayersSegmentsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayersSegmentsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerGetPlayersInSegmentRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayersInSegmentRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ContinuationToken; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        int32_t MaxBatchSize; // 0x20
        int32_t SecondsToLive; // 0x24
        struct FString SegmentId; // 0x28

    };

    struct FServerGetPlayerStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayerStatisticsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString StatisticNames; // 0x20
        struct TArray<class UPlayFabJsonObject*> StatisticNameVersions; // 0x30

    };

    struct FServerGetPlayerStatisticVersionsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayerStatisticVersionsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString StatisticName; // 0x10

    };

    struct FServerGetPlayerTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayerTagsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Namespace; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FServerGetPlayFabIDsFromFacebookIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromFacebookIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FacebookIDs; // 0x8

    };

    struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FacebookInstantGamesIds; // 0x8

    };

    struct FServerGetPlayFabIDsFromGenericIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromGenericIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> GenericIDs; // 0x8

    };

    struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString NintendoSwitchDeviceIds; // 0x8

    };

    struct FServerGetPlayFabIDsFromPSNAccountIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromPSNAccountIDsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t IssuerId; // 0x8
        struct FString PSNAccountIDs; // 0x10

    };

    struct FServerGetPlayFabIDsFromSteamIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromSteamIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SteamStringIDs; // 0x8

    };

    struct FServerGetPlayFabIDsFromXboxLiveIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPlayFabIDsFromXboxLiveIDsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Sandbox; // 0x8
        struct FString XboxLiveAccountIDs; // 0x18

    };

    struct FServerGetPublisherDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetPublisherDataRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Keys; // 0x8

    };

    struct FServerGetRandomResultTablesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetRandomResultTablesRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CatalogVersion; // 0x8
        struct FString TableIDs; // 0x18

    };

    struct FServerGetServerCustomIDsFromPlayFabIDsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetServerCustomIDsFromPlayFabIDsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabIds; // 0x8

    };

    struct FServerGetSharedGroupDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetSharedGroupDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        bool GetMembers; // 0x8
        struct FString Keys; // 0x10
        struct FString SharedGroupId; // 0x20

    };

    struct FServerGetStoreItemsServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetStoreItemsServerRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString PlayFabId; // 0x20
        struct FString StoreId; // 0x30

    };

    struct FServerGetTimeRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetTimeRequest
    {
    public:


    };

    struct FServerGetTitleDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetTitleDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Keys; // 0x8
        struct FString OverrideLabel; // 0x18

    };

    struct FServerGetTitleNewsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetTitleNewsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Count; // 0x8

    };

    struct FServerGetUserAccountInfoRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetUserAccountInfoRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FServerGetUserBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetUserBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FServerGetUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetUserDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t IfChangedFromDataVersion; // 0x8
        struct FString Keys; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FServerGetUserInventoryRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGetUserInventoryRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerGrantCharacterToUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGrantCharacterToUserRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterName; // 0x8
        struct FString CharacterType; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString PlayFabId; // 0x30

    };

    struct FServerGrantItemsToCharacterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGrantItemsToCharacterRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Annotation; // 0x8
        struct FString CatalogVersion; // 0x18
        struct FString CharacterId; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString ItemIds; // 0x40
        struct FString PlayFabId; // 0x50

    };

    struct FServerGrantItemsToUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGrantItemsToUserRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString Annotation; // 0x8
        struct FString CatalogVersion; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x28
        struct FString ItemIds; // 0x30
        struct FString PlayFabId; // 0x40

    };

    struct FServerGrantItemsToUsersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerGrantItemsToUsersRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CatalogVersion; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct TArray<class UPlayFabJsonObject*> ItemGrants; // 0x20

    };

    struct FServerLinkPSNAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLinkPSNAccountRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString AuthCode; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        bool ForceLink; // 0x20
        int32_t IssuerId; // 0x24
        struct FString PlayFabId; // 0x28
        struct FString RedirectUri; // 0x38

    };

    struct FServerLinkServerCustomIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLinkServerCustomIdRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString ServerCustomId; // 0x28

    };

    struct FServerLinkXboxAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLinkXboxAccountRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceLink; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString XboxToken; // 0x28

    };

    struct FServerLoginWithServerCustomIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLoginWithServerCustomIdRequest
    {
    //Children Prop Count (Fields): 5
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        class UPlayFabJsonObject* InfoRequestParameters; // 0x18
        struct FString PlayerSecret; // 0x20
        struct FString ServerCustomId; // 0x30

    };

    struct FServerLoginWithXboxRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLoginWithXboxRequest
    {
    //Children Prop Count (Fields): 4
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        class UPlayFabJsonObject* InfoRequestParameters; // 0x18
        struct FString XboxToken; // 0x20

    };

    struct FServerLoginWithXboxIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerLoginWithXboxIdRequest
    {
    //Children Prop Count (Fields): 5
    public:

        bool CreateAccount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        class UPlayFabJsonObject* InfoRequestParameters; // 0x18
        struct FString Sandbox; // 0x20
        struct FString XboxId; // 0x30

    };

    struct FServerModifyItemUsesRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerModifyItemUsesRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString ItemInstanceId; // 0x10
        struct FString PlayFabId; // 0x20
        int32_t UsesToAdd; // 0x30

    };

    struct FServerMoveItemToCharacterFromCharacterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerMoveItemToCharacterFromCharacterRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString GivingCharacterId; // 0x8
        struct FString ItemInstanceId; // 0x18
        struct FString PlayFabId; // 0x28
        struct FString ReceivingCharacterId; // 0x38

    };

    struct FServerMoveItemToCharacterFromUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerMoveItemToCharacterFromUserRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        struct FString ItemInstanceId; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FServerMoveItemToUserFromCharacterRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerMoveItemToUserFromCharacterRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        struct FString ItemInstanceId; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FServerNotifyMatchmakerPlayerLeftRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerNotifyMatchmakerPlayerLeftRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString LobbyId; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FServerRedeemCouponRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRedeemCouponRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString CouponCode; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString PlayFabId; // 0x40

    };

    struct FServerRedeemMatchmakerTicketRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRedeemMatchmakerTicketRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString LobbyId; // 0x10
        struct FString Ticket; // 0x20

    };

    struct FServerRefreshGameServerInstanceHeartbeatRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRefreshGameServerInstanceHeartbeatRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString LobbyId; // 0x8

    };

    struct FServerRegisterGameRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRegisterGameRequest
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString Build; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString GameMode; // 0x20
        struct FString LobbyId; // 0x30
        enum class ERegion Region; // 0x40
        struct FString ServerIPV4Address; // 0x48
        struct FString ServerIPV6Address; // 0x58
        struct FString ServerPort; // 0x68
        struct FString ServerPublicDNSName; // 0x78
        class UPlayFabJsonObject* Tags; // 0x88

    };

    struct FServerRemoveFriendRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRemoveFriendRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString FriendPlayFabId; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FServerRemoveGenericIDRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRemoveGenericIDRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* GenericId; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerRemovePlayerTagRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRemovePlayerTagRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString TagName; // 0x20

    };

    struct FServerRemoveSharedGroupMembersRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRemoveSharedGroupMembersRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabIds; // 0x8
        struct FString SharedGroupId; // 0x18

    };

    struct FServerReportPlayerServerRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerReportPlayerServerRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Comment; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString ReporteeId; // 0x20
        struct FString ReporterId; // 0x30

    };

    struct FServerRevokeAllBansForUserRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRevokeAllBansForUserRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PlayFabId; // 0x8

    };

    struct FServerRevokeBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRevokeBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString BanIds; // 0x8

    };

    struct FServerRevokeInventoryItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRevokeInventoryItemRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString CharacterId; // 0x8
        struct FString ItemInstanceId; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FServerRevokeInventoryItemsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerRevokeInventoryItemsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Items; // 0x8

    };

    struct FServerSavePushNotificationTemplateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSavePushNotificationTemplateRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString AndroidPayload; // 0x8
        struct FString ID; // 0x18
        struct FString IOSPayload; // 0x28
        class UPlayFabJsonObject* LocalizedPushNotificationTemplates; // 0x38
        struct FString Name; // 0x40

    };

    struct FServerSendCustomAccountRecoveryEmailRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSendCustomAccountRecoveryEmailRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString Email; // 0x10
        struct FString EmailTemplateId; // 0x20
        struct FString Username; // 0x30

    };

    struct FServerSendEmailFromTemplateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSendEmailFromTemplateRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString EmailTemplateId; // 0x10
        struct FString PlayFabId; // 0x20

    };

    struct FServerSendPushNotificationRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSendPushNotificationRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct TArray<class UPlayFabJsonObject*> AdvancedPlatformDelivery; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        struct FString Message; // 0x20
        class UPlayFabJsonObject* Package; // 0x30
        struct FString Recipient; // 0x38
        struct FString Subject; // 0x48
        struct FString TargetPlatforms; // 0x58

    };

    struct FServerSendPushNotificationFromTemplateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSendPushNotificationFromTemplateRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PushNotificationTemplateId; // 0x10
        struct FString Recipient; // 0x20

    };

    struct FServerSetFriendTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetFriendTagsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString FriendPlayFabId; // 0x8
        struct FString PlayFabId; // 0x18
        struct FString Tags; // 0x28

    };

    struct FServerSetGameServerInstanceDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString GameServerData; // 0x8
        struct FString LobbyId; // 0x18

    };

    struct FServerSetGameServerInstanceStateRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceStateRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString LobbyId; // 0x8
        enum class EGameInstanceState State; // 0x18

    };

    struct FServerSetGameServerInstanceTagsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetGameServerInstanceTagsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString LobbyId; // 0x8
        class UPlayFabJsonObject* Tags; // 0x18

    };

    struct FServerSetPlayerSecretRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetPlayerSecretRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayerSecret; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FServerSetPublisherDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetPublisherDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Key; // 0x8
        struct FString Value; // 0x18

    };

    struct FServerSetTitleDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSetTitleDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Key; // 0x8
        struct FString Value; // 0x18

    };

    struct FServerSubtractCharacterVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSubtractCharacterVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Amount; // 0x8
        struct FString CharacterId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString PlayFabId; // 0x28
        struct FString VirtualCurrency; // 0x38

    };

    struct FServerSubtractUserVirtualCurrencyRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerSubtractUserVirtualCurrencyRequest
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Amount; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString PlayFabId; // 0x18
        struct FString VirtualCurrency; // 0x28

    };

    struct FServerUnlinkPSNAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUnlinkPSNAccountRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerUnlinkServerCustomIdRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUnlinkServerCustomIdRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10
        struct FString ServerCustomId; // 0x20

    };

    struct FServerUnlinkXboxAccountRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUnlinkXboxAccountRequest
    {
    //Children Prop Count (Fields): 2
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        struct FString PlayFabId; // 0x10

    };

    struct FServerUnlockContainerInstanceRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUnlockContainerInstanceRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString ContainerItemInstanceId; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString KeyItemInstanceId; // 0x40
        struct FString PlayFabId; // 0x50

    };

    struct FServerUnlockContainerItemRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUnlockContainerItemRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString CatalogVersion; // 0x8
        struct FString CharacterId; // 0x18
        struct FString ContainerItemId; // 0x28
        class UPlayFabJsonObject* CustomTags; // 0x38
        struct FString PlayFabId; // 0x40

    };

    struct FServerUpdateAvatarUrlRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateAvatarUrlRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ImageUrl; // 0x8
        struct FString PlayFabId; // 0x18

    };

    struct FServerUpdateBansRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateBansRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPlayFabJsonObject*> Bans; // 0x8

    };

    struct FServerUpdateCharacterDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateCharacterDataRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        class UPlayFabJsonObject* Data; // 0x20
        struct FString KeysToRemove; // 0x28
        enum class EUserDataPermission Permission; // 0x38
        struct FString PlayFabId; // 0x40

    };

    struct FServerUpdateCharacterStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateCharacterStatisticsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CharacterStatistics; // 0x18
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString PlayFabId; // 0x28

    };

    struct FServerUpdatePlayerStatisticsRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdatePlayerStatisticsRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        bool ForceUpdate; // 0x10
        struct FString PlayFabId; // 0x18
        struct TArray<class UPlayFabJsonObject*> Statistics; // 0x28

    };

    struct FServerUpdateSharedGroupDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateSharedGroupDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        enum class EUserDataPermission Permission; // 0x28
        struct FString SharedGroupId; // 0x30

    };

    struct FServerUpdateUserDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateUserDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        enum class EUserDataPermission Permission; // 0x28
        struct FString PlayFabId; // 0x30

    };

    struct FServerUpdateUserInternalDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateUserInternalDataRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* CustomTags; // 0x8
        class UPlayFabJsonObject* Data; // 0x10
        struct FString KeysToRemove; // 0x18
        struct FString PlayFabId; // 0x28

    };

    struct FServerUpdateUserInventoryItemDataRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerUpdateUserInventoryItemDataRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString CharacterId; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x18
        class UPlayFabJsonObject* Data; // 0x20
        struct FString ItemInstanceId; // 0x28
        struct FString KeysToRemove; // 0x38
        struct FString PlayFabId; // 0x48

    };

    struct FServerWriteServerCharacterEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerWriteServerCharacterEventRequest
    {
    //Children Prop Count (Fields): 6
    public:

        class UPlayFabJsonObject* Body; // 0x8
        struct FString CharacterId; // 0x10
        class UPlayFabJsonObject* CustomTags; // 0x20
        struct FString EventName; // 0x28
        struct FString PlayFabId; // 0x38
        struct FString Timestamp; // 0x48

    };

    struct FServerWriteServerPlayerEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerWriteServerPlayerEventRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UPlayFabJsonObject* Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EventName; // 0x18
        struct FString PlayFabId; // 0x28
        struct FString Timestamp; // 0x38

    };

    struct FServerWriteTitleEventRequest : FPlayFabRequestCommon //ScriptStruct PlayFab.ServerWriteTitleEventRequest
    {
    //Children Prop Count (Fields): 4
    public:

        class UPlayFabJsonObject* Body; // 0x8
        class UPlayFabJsonObject* CustomTags; // 0x10
        struct FString EventName; // 0x18
        struct FString Timestamp; // 0x28

    };

    struct FSphericalPontoon //ScriptStruct Water.SphericalPontoon
    {
    //Children Prop Count (Fields): 16
    public:

        struct FName CenterSocket; // 0x0
        struct FVector RelativeLocation; // 0x8
        float Radius; // 0x14
        struct FVector LocalForce; // 0x18
        struct FVector CenterLocation; // 0x24
        struct FQuat SocketRotation; // 0x30
        struct FVector Offset; // 0x40
        float WaterHeight; // 0x50
        float WaterDepth; // 0x54
        float ImmersionDepth; // 0x58
        struct FVector WaterPlaneLocation; // 0x5c
        struct FVector WaterPlaneNormal; // 0x68
        struct FVector WaterSurfacePosition; // 0x74
        struct FVector WaterVelocity; // 0x80
        int32_t WaterBodyIndex; // 0x8c
        class AWaterBody* CurrentWaterBody; // 0x208

    };

    struct FYRuntimeInitializationContext //ScriptStruct YInitializationPlugin.YRuntimeInitializationContext
    {
    //Children Prop Count (Fields): 7
    public:

        class APlayerController* m_controller; // 0x0
        class APlayerState* m_playerState; // 0x8
        class APawn* m_pawn; // 0x10
        struct FString m_userId; // 0x18
        struct FString m_additionalInitializedDebugString; // 0x28
        bool m_isAdditionalIntialized; // 0x38
        enum class EYInitializationRequestSettingTypes m_requestSettingType; // 0x39

    };

    struct FActiveGameplayEffectHandle //ScriptStruct GameplayAbilities.ActiveGameplayEffectHandle
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Handle; // 0x0
        bool bPassedFiltersAndWasExecuted; // 0x4

    };

    struct FGameplayEffectSpecHandle //ScriptStruct GameplayAbilities.GameplayEffectSpecHandle
    {
    public:


    };

    struct FGameplayTagRequirements //ScriptStruct GameplayAbilities.GameplayTagRequirements
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayTagContainer RequireTags; // 0x0
        struct FGameplayTagContainer IgnoreTags; // 0x20

    };

    struct FGameplayTagContainer //ScriptStruct GameplayTags.GameplayTagContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FGameplayTag> GameplayTags; // 0x0
        struct TArray<struct FGameplayTag> ParentTags; // 0x10

    };

    struct FGameplayTag //ScriptStruct GameplayTags.GameplayTag
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName TagName; // 0x0

    };

    struct FGameplayTargetDataFilterHandle //ScriptStruct GameplayAbilities.GameplayTargetDataFilterHandle
    {
    public:


    };

    struct FGameplayEventData //ScriptStruct GameplayAbilities.GameplayEventData
    {
    //Children Prop Count (Fields): 10
    public:

        struct FGameplayTag EventTag; // 0x0
        class AActor* Instigator; // 0x8
        class AActor* Target; // 0x10
        class UObject* OptionalObject; // 0x18
        class UObject* OptionalObject2; // 0x20
        struct FGameplayEffectContextHandle ContextHandle; // 0x28
        struct FGameplayTagContainer InstigatorTags; // 0x40
        struct FGameplayTagContainer TargetTags; // 0x60
        float EventMagnitude; // 0x80
        struct FGameplayAbilityTargetDataHandle TargetData; // 0x88

    };

    struct FGameplayAbilityTargetDataHandle //ScriptStruct GameplayAbilities.GameplayAbilityTargetDataHandle
    {
    public:


    };

    struct FGameplayEffectContextHandle //ScriptStruct GameplayAbilities.GameplayEffectContextHandle
    {
    public:


    };

    struct FFastArraySerializerItem //ScriptStruct Engine.FastArraySerializerItem
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ReplicationID; // 0x0
        int32_t ReplicationKey; // 0x4
        int32_t MostRecentArrayReplicationKey; // 0x8

    };

    struct FActiveGameplayEffect : FFastArraySerializerItem //ScriptStruct GameplayAbilities.ActiveGameplayEffect
    {
    //Children Prop Count (Fields): 6
    public:

        struct FGameplayEffectSpec Spec; // 0x18
        struct FPredictionKey PredictionKey; // 0x2b0
        float StartServerWorldTime; // 0x2c0
        float CachedStartServerWorldTime; // 0x2c4
        float StartWorldTime; // 0x2c8
        bool bIsInhibited; // 0x2cc

    };

    struct FPredictionKey //ScriptStruct GameplayAbilities.PredictionKey
    {
    //Children Prop Count (Fields): 5
    public:

        class UPackageMap* PredictiveConnection; // 0x0
        int16_t Current; // 0x8
        int16_t Base; // 0xa
        bool bIsStale; // 0xc
        bool bIsServerInitiated; // 0xd

    };

    struct FGameplayEffectSpec //ScriptStruct GameplayAbilities.GameplayEffectSpec
    {
    //Children Prop Count (Fields): 18
    public:

        class UGameplayEffect* Def; // 0x0
        struct TArray<struct FGameplayEffectModifiedAttribute> ModifiedAttributes; // 0x8
        struct FGameplayEffectAttributeCaptureSpecContainer CapturedRelevantAttributes; // 0x18
        float Duration; // 0x50
        float Period; // 0x54
        float ChanceToApplyToTarget; // 0x58
        struct FTagContainerAggregator CapturedSourceTags; // 0x60
        struct FTagContainerAggregator CapturedTargetTags; // 0xe8
        struct FGameplayTagContainer DynamicGrantedTags; // 0x170
        struct FGameplayTagContainer DynamicAssetTags; // 0x190
        struct TArray<struct FModifierSpec> Modifiers; // 0x1b0
        int32_t StackCount; // 0x1c0
        char bCompletedSourceAttributeCapture; // 0x1c4
        char bCompletedTargetAttributeCapture; // 0x1c4
        char bDurationLocked; // 0x1c4
        struct TArray<struct FGameplayAbilitySpecDef> GrantedAbilitySpecs; // 0x1c8
        struct FGameplayEffectContextHandle EffectContext; // 0x278
        float Level; // 0x290

    };

    struct FGameplayAbilitySpecDef //ScriptStruct GameplayAbilities.GameplayAbilitySpecDef
    {
    //Children Prop Count (Fields): 6
    public:

        class UGameplayAbility* Ability; // 0x0
        struct FScalableFloat LevelScalableFloat; // 0x8
        int32_t InputID; // 0x30
        enum class EGameplayEffectGrantedAbilityRemovePolicy RemovalPolicy; // 0x34
        class UObject* SourceObject; // 0x38
        struct FGameplayAbilitySpecHandle AssignedHandle; // 0x90

    };

    struct FGameplayAbilitySpecHandle //ScriptStruct GameplayAbilities.GameplayAbilitySpecHandle
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Handle; // 0x0

    };

    struct FScalableFloat //ScriptStruct GameplayAbilities.ScalableFloat
    {
    //Children Prop Count (Fields): 3
    public:

        float Value; // 0x0
        struct FCurveTableRowHandle Curve; // 0x8
        struct FDataRegistryType RegistryType; // 0x18

    };

    struct FDataRegistryLookup //ScriptStruct DataRegistry.DataRegistryLookup
    {
    public:


    };

    struct FDataRegistryId //ScriptStruct DataRegistry.DataRegistryId
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataRegistryType RegistryType; // 0x0
        struct FName ItemName; // 0x8

    };

    struct FDataRegistryType //ScriptStruct DataRegistry.DataRegistryType
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FCurveTableRowHandle //ScriptStruct Engine.CurveTableRowHandle
    {
    //Children Prop Count (Fields): 2
    public:

        class UCurveTable* CurveTable; // 0x0
        struct FName RowName; // 0x8

    };

    struct FModifierSpec //ScriptStruct GameplayAbilities.ModifierSpec
    {
    //Children Prop Count (Fields): 1
    public:

        float EvaluatedMagnitude; // 0x0

    };

    struct FTagContainerAggregator //ScriptStruct GameplayAbilities.TagContainerAggregator
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGameplayTagContainer CapturedActorTags; // 0x0
        struct FGameplayTagContainer CapturedSpecTags; // 0x20
        struct FGameplayTagContainer ScopedTags; // 0x40

    };

    struct FGameplayEffectAttributeCaptureSpecContainer //ScriptStruct GameplayAbilities.GameplayEffectAttributeCaptureSpecContainer
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FGameplayEffectAttributeCaptureSpec> SourceAttributes; // 0x0
        struct TArray<struct FGameplayEffectAttributeCaptureSpec> TargetAttributes; // 0x10
        bool bHasNonSnapshottedAttributes; // 0x20

    };

    struct FGameplayEffectAttributeCaptureSpec //ScriptStruct GameplayAbilities.GameplayEffectAttributeCaptureSpec
    {
    //Children Prop Count (Fields): 1
    public:

        struct FGameplayEffectAttributeCaptureDefinition BackingDefinition; // 0x0

    };

    struct FGameplayEffectAttributeCaptureDefinition //ScriptStruct GameplayAbilities.GameplayEffectAttributeCaptureDefinition
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGameplayAttribute AttributeToCapture; // 0x0
        enum class EGameplayEffectAttributeCaptureSource AttributeSource; // 0x38
        bool bSnapshot; // 0x39

    };

    struct FGameplayAttribute //ScriptStruct GameplayAbilities.GameplayAttribute
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AttributeName; // 0x0
        struct TFieldPath<FProperty> Attribute; // 0x10
        class UStruct* AttributeOwner; // 0x30

    };

    struct FGameplayEffectModifiedAttribute //ScriptStruct GameplayAbilities.GameplayEffectModifiedAttribute
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayAttribute Attribute; // 0x0
        float TotalMagnitude; // 0x38

    };

    struct FGameplayEffectRemovalInfo //ScriptStruct GameplayAbilities.GameplayEffectRemovalInfo
    {
    //Children Prop Count (Fields): 3
    public:

        bool bPrematureRemoval; // 0x0
        int32_t StackCount; // 0x4
        struct FGameplayEffectContextHandle EffectContext; // 0x8

    };

    struct FGameplayResourceSet //ScriptStruct GameplayTasks.GameplayResourceSet
    {
    public:


    };

    struct FGameplayAbilityActivationInfo //ScriptStruct GameplayAbilities.GameplayAbilityActivationInfo
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EGameplayAbilityActivationMode ActivationMode; // 0x0
        char bCanBeEndedByOtherInstance; // 0x1
        struct FPredictionKey PredictionKeyWhenActivated; // 0x8

    };

    struct FGameplayEffectQuery //ScriptStruct GameplayAbilities.GameplayEffectQuery
    {
    //Children Prop Count (Fields): 7
    public:

        struct FDelegate CustomMatchDelegate_BP; // 0x10
        struct FGameplayTagQuery OwningTagQuery; // 0x20
        struct FGameplayTagQuery EffectTagQuery; // 0x68
        struct FGameplayTagQuery SourceTagQuery; // 0xb0
        struct FGameplayAttribute ModifyingAttribute; // 0xf8
        class UObject* EffectSource; // 0x130
        class UGameplayEffect* EffectDefinition; // 0x138

    };

    struct FGameplayTagQuery //ScriptStruct GameplayTags.GameplayTagQuery
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t TokenStreamVersion; // 0x0
        struct TArray<struct FGameplayTag> TagDictionary; // 0x8
        struct TArray<char> QueryTokenStream; // 0x18
        struct FString UserDescription; // 0x28
        struct FString AutoDescription; // 0x38

    };

    struct FGameplayCueParameters //ScriptStruct GameplayAbilities.GameplayCueParameters
    {
    //Children Prop Count (Fields): 17
    public:

        float NormalizedMagnitude; // 0x0
        float RawMagnitude; // 0x4
        struct FGameplayEffectContextHandle EffectContext; // 0x8
        struct FGameplayTag MatchedTagName; // 0x20
        struct FGameplayTag OriginalTag; // 0x28
        struct FGameplayTagContainer AggregatedSourceTags; // 0x30
        struct FGameplayTagContainer AggregatedTargetTags; // 0x50
        struct FVector_NetQuantize10 Location; // 0x70
        struct FVector_NetQuantizeNormal Normal; // 0x7c
        struct TWeakObjectPtr<struct AActor> Instigator; // 0x88
        struct TWeakObjectPtr<struct AActor> EffectCauser; // 0x90
        struct TWeakObjectPtr<struct UObject> SourceObject; // 0x98
        struct TWeakObjectPtr<struct UPhysicalMaterial> PhysicalMaterial; // 0xa0
        int32_t GameplayEffectLevel; // 0xa8
        int32_t AbilityLevel; // 0xac
        struct TWeakObjectPtr<struct USceneComponent> TargetAttachComponent; // 0xb0
        bool bReplicateLocationWhenUsingMinimalRepProxy; // 0xb8

    };

    struct FVector_NetQuantize10 : FVector //ScriptStruct Engine.Vector_NetQuantize10
    {
    public:


    };

    struct FGameplayEffectSpecForRPC //ScriptStruct GameplayAbilities.GameplayEffectSpecForRPC
    {
    //Children Prop Count (Fields): 7
    public:

        class UGameplayEffect* Def; // 0x0
        struct TArray<struct FGameplayEffectModifiedAttribute> ModifiedAttributes; // 0x8
        struct FGameplayEffectContextHandle EffectContext; // 0x18
        struct FGameplayTagContainer AggregatedSourceTags; // 0x30
        struct FGameplayTagContainer AggregatedTargetTags; // 0x50
        float Level; // 0x70
        float AbilityLevel; // 0x74

    };

    struct FServerAbilityRPCBatch //ScriptStruct GameplayAbilities.ServerAbilityRPCBatch
    {
    //Children Prop Count (Fields): 6
    public:

        struct FGameplayAbilitySpecHandle AbilitySpecHandle; // 0x0
        struct FPredictionKey PredictionKey; // 0x8
        struct FGameplayAbilityTargetDataHandle TargetData; // 0x18
        bool InputPressed; // 0x40
        bool Ended; // 0x41
        bool Started; // 0x42

    };

    struct FFastArraySerializer //ScriptStruct Engine.FastArraySerializer
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t ArrayReplicationKey; // 0x54
        enum class EFastArraySerializerDeltaFlags DeltaFlags; // 0x100

    };

    struct FReplicatedPredictionKeyMap : FFastArraySerializer //ScriptStruct GameplayAbilities.ReplicatedPredictionKeyMap
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FReplicatedPredictionKeyItem> PredictionKeys; // 0x108

    };

    struct FReplicatedPredictionKeyItem : FFastArraySerializerItem //ScriptStruct GameplayAbilities.ReplicatedPredictionKeyItem
    {
    //Children Prop Count (Fields): 1
    public:

        struct FPredictionKey PredictionKey; // 0x10

    };

    struct FMinimalReplicationTagCountMap //ScriptStruct GameplayAbilities.MinimalReplicationTagCountMap
    {
    //Children Prop Count (Fields): 1
    public:

        class UAbilitySystemComponent* Owner; // 0x50

    };

    struct FActiveGameplayCueContainer : FFastArraySerializer //ScriptStruct GameplayAbilities.ActiveGameplayCueContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FActiveGameplayCue> GameplayCues; // 0x108
        class UAbilitySystemComponent* Owner; // 0x120

    };

    struct FActiveGameplayCue : FFastArraySerializerItem //ScriptStruct GameplayAbilities.ActiveGameplayCue
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGameplayTag GameplayCueTag; // 0xc
        struct FPredictionKey PredictionKey; // 0x18
        struct FGameplayCueParameters Parameters; // 0x28
        bool bPredictivelyRemoved; // 0xe8

    };

    struct FActiveGameplayEffectsContainer : FFastArraySerializer //ScriptStruct GameplayAbilities.ActiveGameplayEffectsContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FActiveGameplayEffect> GameplayEffects_Internal; // 0x130
        struct TArray<class UGameplayEffect*> ApplicationImmunityQueryEffects; // 0x450

    };

    struct FGameplayAbilityLocalAnimMontage //ScriptStruct GameplayAbilities.GameplayAbilityLocalAnimMontage
    {
    //Children Prop Count (Fields): 4
    public:

        class UAnimMontage* AnimMontage; // 0x0
        bool PlayBit; // 0x8
        struct FPredictionKey PredictionKey; // 0x10
        class UGameplayAbility* AnimatingAbility; // 0x20

    };

    struct FGameplayAbilityRepAnimMontage //ScriptStruct GameplayAbilities.GameplayAbilityRepAnimMontage
    {
    //Children Prop Count (Fields): 12
    public:

        class UAnimMontage* AnimMontage; // 0x0
        float PlayRate; // 0x8
        float Position; // 0xc
        float BlendTime; // 0x10
        char NextSectionID; // 0x14
        char bRepPosition; // 0x15
        char IsStopped; // 0x15
        char ForcePlayBit; // 0x15
        char SkipPositionCorrection; // 0x15
        char bSkipPlayRate; // 0x15
        struct FPredictionKey PredictionKey; // 0x18
        char SectionIdToPlay; // 0x28

    };

    struct FGameplayAbilitySpecContainer : FFastArraySerializer //ScriptStruct GameplayAbilities.GameplayAbilitySpecContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FGameplayAbilitySpec> Items; // 0x108
        class UAbilitySystemComponent* Owner; // 0x118

    };

    struct FGameplayAbilitySpec : FFastArraySerializerItem //ScriptStruct GameplayAbilities.GameplayAbilitySpec
    {
    //Children Prop Count (Fields): 15
    public:

        struct FGameplayAbilitySpecHandle Handle; // 0xc
        class UGameplayAbility* Ability; // 0x10
        int32_t Level; // 0x18
        int32_t InputID; // 0x1c
        class UObject* SourceObject; // 0x20
        char ActiveCount; // 0x28
        char InputPressed; // 0x29
        char RemoveAfterActivation; // 0x29
        char PendingRemove; // 0x29
        char bActivateOnce; // 0x29
        struct FGameplayAbilityActivationInfo ActivationInfo; // 0x30
        struct FGameplayTagContainer DynamicAbilityTags; // 0x48
        struct TArray<class UGameplayAbility*> NonReplicatedInstances; // 0x68
        struct TArray<class UGameplayAbility*> ReplicatedInstances; // 0x78
        struct FActiveGameplayEffectHandle GameplayEffectHandle; // 0x88

    };

    struct FAttributeDefaults //ScriptStruct GameplayAbilities.AttributeDefaults
    {
    //Children Prop Count (Fields): 2
    public:

        class UAttributeSet* Attributes; // 0x0
        class UDataTable* DefaultStartingTable; // 0x8

    };

    struct FGeometry //ScriptStruct SlateCore.Geometry
    {
    public:


    };

    struct FSlateBrush //ScriptStruct SlateCore.SlateBrush
    {
    //Children Prop Count (Fields): 12
    public:

        struct FVector2D ImageSize; // 0x8
        struct FMargin Margin; // 0x10
        struct FSlateColor TintColor; // 0x20
        class UObject* ResourceObject; // 0x48
        struct FName ResourceName; // 0x50
        struct FBox2D UVRegion; // 0x58
        enum class ESlateBrushDrawType DrawAs; // 0x6c
        enum class ESlateBrushTileType Tiling; // 0x6d
        enum class ESlateBrushMirrorType Mirroring; // 0x6e
        enum class ESlateBrushImageType ImageType; // 0x6f
        char bIsDynamicallyLoaded; // 0x80
        char bHasUObject; // 0x80

    };

    struct FSlateColor //ScriptStruct SlateCore.SlateColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLinearColor SpecifiedColor; // 0x0
        enum class ESlateColorStylingMode ColorUseRule; // 0x10

    };

    struct FMargin //ScriptStruct SlateCore.Margin
    {
    //Children Prop Count (Fields): 4
    public:

        float Left; // 0x0
        float Top; // 0x4
        float Right; // 0x8
        float Bottom; // 0xc

    };

    struct FEventReply //ScriptStruct UMG.EventReply
    {
    public:


    };

    struct FInputEvent //ScriptStruct SlateCore.InputEvent
    {
    public:


    };

    struct FPointerEvent : FInputEvent //ScriptStruct SlateCore.PointerEvent
    {
    public:


    };

    struct FWidgetTransform //ScriptStruct UMG.WidgetTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector2D Translation; // 0x0
        struct FVector2D Scale; // 0x8
        struct FVector2D Shear; // 0x10
        float Angle; // 0x18

    };

    struct FPaintContext //ScriptStruct UMG.PaintContext
    {
    public:


    };

    struct FCharacterEvent : FInputEvent //ScriptStruct SlateCore.CharacterEvent
    {
    public:


    };

    struct FKeyEvent : FInputEvent //ScriptStruct SlateCore.KeyEvent
    {
    public:


    };

    struct FNavigationEvent : FInputEvent //ScriptStruct SlateCore.NavigationEvent
    {
    public:


    };

    struct FAnalogInputEvent : FKeyEvent //ScriptStruct SlateCore.AnalogInputEvent
    {
    public:


    };

    struct FSlateFontInfo //ScriptStruct SlateCore.SlateFontInfo
    {
    //Children Prop Count (Fields): 6
    public:

        class UObject* FontObject; // 0x0
        class UObject* FontMaterial; // 0x8
        struct FFontOutlineSettings OutlineSettings; // 0x10
        struct FName TypefaceFontName; // 0x40
        int32_t Size; // 0x48
        int32_t LetterSpacing; // 0x4c

    };

    struct FFontOutlineSettings //ScriptStruct SlateCore.FontOutlineSettings
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t OutlineSize; // 0x0
        bool bSeparateFillAlpha; // 0x4
        bool bApplyOutlineToDropShadows; // 0x5
        class UObject* OutlineMaterial; // 0x8
        struct FLinearColor OutlineColor; // 0x10

    };

    struct FSlateWidgetStyle //ScriptStruct SlateCore.SlateWidgetStyle
    {
    public:


    };

    struct FTableRowStyle : FSlateWidgetStyle //ScriptStruct SlateCore.TableRowStyle
    {
    //Children Prop Count (Fields): 16
    public:

        struct FSlateBrush SelectorFocusedBrush; // 0x8
        struct FSlateBrush ActiveHoveredBrush; // 0x90
        struct FSlateBrush ActiveBrush; // 0x118
        struct FSlateBrush InactiveHoveredBrush; // 0x1a0
        struct FSlateBrush InactiveBrush; // 0x228
        struct FSlateBrush EvenRowBackgroundHoveredBrush; // 0x2b0
        struct FSlateBrush EvenRowBackgroundBrush; // 0x338
        struct FSlateBrush OddRowBackgroundHoveredBrush; // 0x3c0
        struct FSlateBrush OddRowBackgroundBrush; // 0x448
        struct FSlateColor TextColor; // 0x4d0
        struct FSlateColor SelectedTextColor; // 0x4f8
        struct FSlateBrush DropIndicator_Above; // 0x520
        struct FSlateBrush DropIndicator_Onto; // 0x5a8
        struct FSlateBrush DropIndicator_Below; // 0x630
        struct FSlateBrush ActiveHighlightedBrush; // 0x6b8
        struct FSlateBrush InactiveHighlightedBrush; // 0x740

    };

    struct FComboBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ComboBoxStyle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FComboButtonStyle ComboButtonStyle; // 0x8
        struct FSlateSound PressedSlateSound; // 0x3c0
        struct FSlateSound SelectionChangeSlateSound; // 0x3d8

    };

    struct FSlateSound //ScriptStruct SlateCore.SlateSound
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* ResourceObject; // 0x0

    };

    struct FComboButtonStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ComboButtonStyle
    {
    //Children Prop Count (Fields): 6
    public:

        struct FButtonStyle ButtonStyle; // 0x8
        struct FSlateBrush DownArrowImage; // 0x280
        struct FVector2D ShadowOffset; // 0x308
        struct FLinearColor ShadowColorAndOpacity; // 0x310
        struct FSlateBrush MenuBorderBrush; // 0x320
        struct FMargin MenuBorderPadding; // 0x3a8

    };

    struct FButtonStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ButtonStyle
    {
    //Children Prop Count (Fields): 8
    public:

        struct FSlateBrush Normal; // 0x8
        struct FSlateBrush Hovered; // 0x90
        struct FSlateBrush Pressed; // 0x118
        struct FSlateBrush Disabled; // 0x1a0
        struct FMargin NormalPadding; // 0x228
        struct FMargin PressedPadding; // 0x238
        struct FSlateSound PressedSlateSound; // 0x248
        struct FSlateSound HoveredSlateSound; // 0x260

    };

    struct FShapedTextOptions //ScriptStruct UMG.ShapedTextOptions
    {
    //Children Prop Count (Fields): 4
    public:

        char bOverride_TextShapingMethod; // 0x0
        char bOverride_TextFlowDirection; // 0x0
        enum class ETextShapingMethod TextShapingMethod; // 0x1
        enum class ETextFlowDirection TextFlowDirection; // 0x2

    };

    struct FVirtualKeyboardOptions //ScriptStruct Slate.VirtualKeyboardOptions
    {
    //Children Prop Count (Fields): 1
    public:

        bool bEnableAutocorrect; // 0x0

    };

    struct FEditableTextStyle : FSlateWidgetStyle //ScriptStruct SlateCore.EditableTextStyle
    {
    //Children Prop Count (Fields): 5
    public:

        struct FSlateFontInfo Font; // 0x8
        struct FSlateColor ColorAndOpacity; // 0x60
        struct FSlateBrush BackgroundImageSelected; // 0x88
        struct FSlateBrush BackgroundImageComposing; // 0x110
        struct FSlateBrush CaretImage; // 0x198

    };

    struct FEditableTextBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.EditableTextBoxStyle
    {
    //Children Prop Count (Fields): 12
    public:

        struct FSlateBrush BackgroundImageNormal; // 0x8
        struct FSlateBrush BackgroundImageHovered; // 0x90
        struct FSlateBrush BackgroundImageFocused; // 0x118
        struct FSlateBrush BackgroundImageReadOnly; // 0x1a0
        struct FMargin Padding; // 0x228
        struct FSlateFontInfo Font; // 0x238
        struct FSlateColor ForegroundColor; // 0x290
        struct FSlateColor BackgroundColor; // 0x2b8
        struct FSlateColor ReadOnlyForegroundColor; // 0x2e0
        struct FMargin HScrollBarPadding; // 0x308
        struct FMargin VScrollBarPadding; // 0x318
        struct FScrollBarStyle ScrollBarStyle; // 0x328

    };

    struct FScrollBarStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ScrollBarStyle
    {
    //Children Prop Count (Fields): 9
    public:

        struct FSlateBrush HorizontalBackgroundImage; // 0x8
        struct FSlateBrush VerticalBackgroundImage; // 0x90
        struct FSlateBrush VerticalTopSlotImage; // 0x118
        struct FSlateBrush HorizontalTopSlotImage; // 0x1a0
        struct FSlateBrush VerticalBottomSlotImage; // 0x228
        struct FSlateBrush HorizontalBottomSlotImage; // 0x2b0
        struct FSlateBrush NormalThumbImage; // 0x338
        struct FSlateBrush HoveredThumbImage; // 0x3c0
        struct FSlateBrush DraggedThumbImage; // 0x448

    };

    struct FInputChord //ScriptStruct Slate.InputChord
    {
    //Children Prop Count (Fields): 5
    public:

        struct FKey Key; // 0x0
        char bShift; // 0x18
        char bCtrl; // 0x18
        char bAlt; // 0x18
        char bCmd; // 0x18

    };

    struct FTextBlockStyle : FSlateWidgetStyle //ScriptStruct SlateCore.TextBlockStyle
    {
    //Children Prop Count (Fields): 9
    public:

        struct FSlateFontInfo Font; // 0x8
        struct FSlateColor ColorAndOpacity; // 0x60
        struct FVector2D ShadowOffset; // 0x88
        struct FLinearColor ShadowColorAndOpacity; // 0x90
        struct FSlateColor SelectedBackgroundColor; // 0xa0
        struct FLinearColor HighlightColor; // 0xc8
        struct FSlateBrush HighlightShape; // 0xd8
        struct FSlateBrush StrikeBrush; // 0x160
        struct FSlateBrush UnderlineBrush; // 0x1e8

    };

    struct FSpinBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.SpinBoxStyle
    {
    //Children Prop Count (Fields): 7
    public:

        struct FSlateBrush BackgroundBrush; // 0x8
        struct FSlateBrush HoveredBackgroundBrush; // 0x90
        struct FSlateBrush ActiveFillBrush; // 0x118
        struct FSlateBrush InactiveFillBrush; // 0x1a0
        struct FSlateBrush ArrowsImage; // 0x228
        struct FSlateColor ForegroundColor; // 0x2b0
        struct FMargin TextPadding; // 0x2d8

    };

    struct FAnchors //ScriptStruct Slate.Anchors
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector2D Minimum; // 0x0
        struct FVector2D Maximum; // 0x8

    };

    struct FFocusEvent //ScriptStruct SlateCore.FocusEvent
    {
    public:


    };

    struct FMotionEvent : FInputEvent //ScriptStruct SlateCore.MotionEvent
    {
    public:


    };

    struct FAnimationEventBinding //ScriptStruct UMG.AnimationEventBinding
    {
    //Children Prop Count (Fields): 4
    public:

        class UWidgetAnimation* Animation; // 0x0
        struct FDelegate Delegate; // 0x8
        enum class EWidgetAnimationEvent AnimationEvent; // 0x18
        struct FName UserTag; // 0x1c

    };

    struct FNamedSlotBinding //ScriptStruct UMG.NamedSlotBinding
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        class UWidget* Content; // 0x8

    };

    struct FDataTableRowHandle //ScriptStruct Engine.DataTableRowHandle
    {
    //Children Prop Count (Fields): 2
    public:

        class UDataTable* DataTable; // 0x0
        struct FName RowName; // 0x8

    };

    struct FAppleImageUtilsImageConversionResult //ScriptStruct AppleImageUtils.AppleImageUtilsImageConversionResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Error; // 0x0
        struct TArray<char> ImageData; // 0x10

    };

    struct FTableRowBase //ScriptStruct Engine.TableRowBase
    {
    public:


    };

    struct FYDataTableRowBase : FTableRowBase //ScriptStruct Prospect.YDataTableRowBase
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName m_rowName; // 0x8

    };

    struct FYHealthDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YHealthDataTableRow
    {
    //Children Prop Count (Fields): 6
    public:

        float m_maxHealth; // 0x10
        float m_regenerationRate; // 0x14
        float m_regenerationDelay; // 0x18
        float m_degenerationRate; // 0x1c
        float m_damageThresholdToRestartHealthRegenerationDelay; // 0x20
        int32_t m_segments; // 0x24

    };

    struct FYInventoryItem //ScriptStruct Prospect.YInventoryItem
    {
    //Children Prop Count (Fields): 12
    public:

        struct FString m_customItemID; // 0x0
        struct FDataTableRowHandle m_item; // 0x10
        int32_t m_amount; // 0x20
        int32_t m_durability; // 0x24
        float m_weight; // 0x28
        struct FYStoredModData m_mods; // 0x30
        struct TArray<struct FDataTableRowHandle> m_vanityEntries; // 0x40
        struct FYProspectorBadgeData m_prospectorBadgeData; // 0x50
        enum class EYInsuranceType m_insurance; // 0x88
        struct FString m_insuranceOwnerPlayfabId; // 0x90
        struct FString m_insuredAttachmentId; // 0xa0
        struct FYItemOriginData m_origin; // 0xb0

    };

    struct FYItemOriginData //ScriptStruct Prospect.YItemOriginData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYItemOriginType m_type; // 0x0
        struct FString m_playFabId; // 0x8
        struct FString m_guid; // 0x18

    };

    struct FYProspectorBadgeData //ScriptStruct Prospect.YProspectorBadgeData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString ownerID; // 0x0
        struct FString killedBy; // 0x10
        struct FString killedHow; // 0x20
        int32_t rank; // 0x30

    };

    struct FYStoredModData //ScriptStruct Prospect.YStoredModData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYModEntry> m_allMods; // 0x0

    };

    struct FYModEntry //ScriptStruct Prospect.YModEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        struct FString m_insuredAttachmentId; // 0x10
        enum class EYInsuranceType m_insurance; // 0x20
        struct FString m_insuranceOwnerPlayfabId; // 0x28

    };

    struct FYReplicatedLedgeClimbingData //ScriptStruct Prospect.YReplicatedLedgeClimbingData
    {
    //Children Prop Count (Fields): 7
    public:

        uint32_t m_moveData; // 0x0
        float m_climbingSpeed; // 0x4
        float m_climbingTimer; // 0x8
        struct FVector_NetQuantize m_climbStartLocation; // 0xc
        struct FVector_NetQuantize m_climbEndLocation; // 0x18
        struct FVector_NetQuantize m_climbAnimationStartLocation; // 0x24
        struct FVector_NetQuantize m_climbAnimationEndLocation; // 0x30

    };

    struct FYAbilityStateInfo //ScriptStruct Prospect.YAbilityStateInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_abilityRowHandle; // 0x0
        enum class EYAbilityState m_state; // 0x10
        class UYCharacterAbilityComponent* m_abilityComponent; // 0x18

    };

    struct FYMovementModeDataChanged //ScriptStruct Prospect.YMovementModeDataChanged
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EMovementMode m_newMovementMode; // 0x0
        enum class EMovementMode m_oldMovementMode; // 0x1
        float m_timeSinceMovementModeChanged; // 0x4

    };

    struct FYClaimableVictimCompensation //ScriptStruct Prospect.YClaimableVictimCompensation
    {
    //Children Prop Count (Fields): 5
    public:

        struct FDateTime m_timestamp; // 0x0
        struct FString m_killerId; // 0x8
        struct FString m_guid; // 0x18
        int32_t m_softCurrency; // 0x28
        struct TArray<struct FYInventoryItem> m_items; // 0x30

    };

    struct FYLeaveGameEvent //ScriptStruct Prospect.YLeaveGameEvent
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName m_reason; // 0x0

    };

    struct FForceFeedbackParameters //ScriptStruct Engine.ForceFeedbackParameters
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Tag; // 0x0
        bool bLooping; // 0x8
        bool bIgnoreTimeDilation; // 0x9
        bool bPlayWhilePaused; // 0xa

    };

    struct FViewTargetTransitionParams //ScriptStruct Engine.ViewTargetTransitionParams
    {
    //Children Prop Count (Fields): 4
    public:

        float BlendTime; // 0x0
        enum class EViewTargetBlendFunction BlendFunction; // 0x4
        float BlendExp; // 0x8
        char bLockOutgoing; // 0xc

    };

    struct FUpdateLevelStreamingLevelStatus //ScriptStruct Engine.UpdateLevelStreamingLevelStatus
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName PackageName; // 0x0
        int32_t LODIndex; // 0x8
        char bNewShouldBeLoaded; // 0xc
        char bNewShouldBeVisible; // 0xc
        char bNewShouldBlockOnLoad; // 0xc

    };

    struct FUpdateLevelVisibilityLevelInfo //ScriptStruct Engine.UpdateLevelVisibilityLevelInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName PackageName; // 0x0
        struct FName Filename; // 0x8
        char bIsVisible; // 0x10

    };

    struct FActiveForceFeedbackEffect //ScriptStruct Engine.ActiveForceFeedbackEffect
    {
    //Children Prop Count (Fields): 1
    public:

        class UForceFeedbackEffect* ForceFeedbackEffect; // 0x0

    };

    struct FYMessage //ScriptStruct BackendModels.YMessage
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString from; // 0x0
        struct FString Msg; // 0x10
        enum class EYChannelType ChannelType; // 0x20

    };

    struct FYPlayerInventory //ScriptStruct Prospect.YPlayerInventory
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_permutationIndex; // 0x0
        int32_t m_inventoryComponentId; // 0x4
        struct TArray<struct FYInventoryItem> m_replicatedItems; // 0x8

    };

    struct FYOutpostFriendInfo //ScriptStruct Prospect.YOutpostFriendInfo
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString m_userId; // 0x0
        struct FYPlatformEntry m_platformEntry; // 0x10
        struct FString m_playerName; // 0x28
        enum class EYFriendOnlineStatus m_onlineStatus; // 0x38
        enum class EYUserState m_memberState; // 0x39
        enum class EYFriendState m_friendState; // 0x3a
        int32_t m_squadSize; // 0x3c
        bool m_isInLocalPlayerSquad; // 0x40
        struct FDataTableRowHandle m_socialProfileRow; // 0x48
        struct FYUserMatchmakingSettings m_matchmakingSettings; // 0x58

    };

    struct FYUserMatchmakingSettings //ScriptStruct BackendModels.YUserMatchmakingSettings
    {
    //Children Prop Count (Fields): 4
    public:

        bool isReadyForMatch; // 0x0
        struct FString selectedMapName; // 0x8
        bool isSecretLeader; // 0x18
        struct FYPurchaseInsuranceRequest purchaseInsuranceRequest; // 0x20

    };

    struct FYPurchaseInsuranceRequest //ScriptStruct BackendModels.YPurchaseInsuranceRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_tokens; // 0x0
        struct TArray<struct FYInsuredItem> m_items; // 0x8

    };

    struct FYInsuredItem //ScriptStruct BackendModels.YInsuredItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_instanceId; // 0x0
        enum class EYInsuranceType m_insurance; // 0x10

    };

    struct FYPlatformEntry //ScriptStruct BackendModels.YPlatformEntry
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYPlatformTypes Type; // 0x0
        struct FString ID; // 0x8

    };

    struct FYCompleteQuestState //ScriptStruct BackendModels.YCompleteQuestState
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYQuestState questState; // 0x0

    };

    struct FYQuestState //ScriptStruct BackendModels.YQuestState
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString questId; // 0x0
        bool Completed; // 0x10
        int32_t Count; // 0x14
        enum class EYMetaMissionType Type; // 0x18
        struct FYTimestamp updated; // 0x20
        struct FString backendId; // 0x28
        int32_t remainingUnits; // 0x38

    };

    struct FYTimestamp //ScriptStruct BackendModels.YTimestamp
    {
    //Children Prop Count (Fields): 1
    public:

        int64_t Seconds; // 0x0

    };

    struct FYAISpawnRequest //ScriptStruct Prospect.YAISpawnRequest
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYSpawnRequestStatus m_status; // 0x0
        class AYAICharacter* m_character; // 0x8
        class AYAISquad* m_squad; // 0x10
        struct FVector m_location; // 0x18
        struct FRotator m_rotation; // 0x24
        struct FYSquadAIType m_aiType; // 0x30

    };

    struct FYSquadAIType //ScriptStruct Prospect.YSquadAIType
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYAICharacterDefinition m_aiCharacter; // 0x0
        struct FGameplayTagContainer m_gameplayTags; // 0x48

    };

    struct FYAICharacterDefinition //ScriptStruct Prospect.YAICharacterDefinition
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYEnemyType m_type; // 0x0
        struct FDataTableRowHandle m_variation; // 0x8
        struct TArray<struct FDataTableRowHandle> m_perks; // 0x18
        struct FGameplayTagContainer m_gameplayTags; // 0x28

    };

    struct FYPlayerCosmeticReplicatedData //ScriptStruct Prospect.YPlayerCosmeticReplicatedData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYActiveWeaponCharacterInitializationData m_initData; // 0x0
        int32_t m_selectedWeaponSlot; // 0x40
        bool m_isActive; // 0x44

    };

    struct FYActiveWeaponCharacterInitializationData //ScriptStruct Prospect.YActiveWeaponCharacterInitializationData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_customItemID; // 0x0
        struct FDataTableRowHandle m_rowHandle; // 0x10
        struct FYStoredModData m_mods; // 0x20
        struct TArray<struct FDataTableRowHandle> m_vanityEntries; // 0x30

    };

    struct FYProspectorLevelData //ScriptStruct Prospect.YProspectorLevelData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_level; // 0x0
        int32_t m_currentXP; // 0x4
        int32_t m_xpLeftForNextLevel; // 0x8
        int32_t m_xpRequiredForNextLevel; // 0xc

    };

    struct FYFactionProgress //ScriptStruct BackendModels.YFactionProgress
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName factionId; // 0x0
        int32_t reputation; // 0x8
        int32_t Level; // 0xc
        int32_t standingRank; // 0x10
        int32_t Points; // 0x14

    };

    struct FYDealtDamageData //ScriptStruct Prospect.YDealtDamageData
    {
    //Children Prop Count (Fields): 49
    public:

        struct FVector m_fromDirection; // 0x0
        struct FVector m_hitLocation; // 0xc
        struct FYDamageOverTimeData m_dotData; // 0x18
        struct FYDamageOriginInfo m_damageOriginInfo; // 0x28
        class UYDamageComponent* m_componentToDamage; // 0x50
        class AActor* m_originalDamageCauser; // 0x58
        class AActor* m_damageCauser; // 0x60
        class APlayerState* m_damageCauserPlayerState; // 0x68
        class AActor* m_damageInstigator; // 0x70
        struct FYDamageHelper m_damage; // 0x78
        float m_shieldDamage; // 0x84
        float m_healthDamage; // 0x88
        float m_vehicleDamage; // 0x8c
        float m_overkillDamage; // 0x90
        float m_stabilityDamage; // 0x94
        float m_stabilityDamageForDeathRagdoll; // 0x98
        float m_impulseDamage; // 0x9c
        float m_damageMitigation; // 0xa0
        enum class EYDamageApplication m_damageApplication; // 0xa4
        bool m_isFriendlyFireAllowed; // 0xa5
        struct FGameplayTagContainer m_objectTypesAllowedToDamage; // 0xa8
        bool m_preventBeingLethalAndPreventEnteringDBNO; // 0xc8
        bool m_hitDBNOPlayer; // 0xc9
        bool m_isDamageDot; // 0xca
        bool m_isWeakspotDamage; // 0xcb
        float m_damageAreaMultiplier; // 0xcc
        float m_penetration; // 0xd0
        bool m_isFromRadialDamage; // 0xd4
        bool m_shieldReducedToZero; // 0xd5
        bool m_diedOfThisDamage; // 0xd6
        bool m_teleportedBecauseOfThisDamage; // 0xd7
        bool m_causedDBNO; // 0xd8
        bool m_allowDBNO; // 0xd9
        bool m_produceHitFeedback; // 0xda
        bool m_isHealDamage; // 0xdb
        bool m_canDamageSelf; // 0xdc
        bool m_shouldInterrupInteraction; // 0xdd
        bool m_childActorInitiated; // 0xde
        bool m_affectEnemyHitreaction; // 0xdf
        bool m_ignoreShield; // 0xe0
        bool m_isPropagatedData; // 0xe1
        bool m_excludeFromBIData; // 0xe2
        enum class ENetRole m_roleToReplicate; // 0xe3
        struct FGenericTeamId m_damageTeamID; // 0xe4
        char m_boneIndexHit; // 0xe5
        struct FName m_boneNameHit; // 0xe8
        enum class EPhysicalSurface m_surfaceTypeHit; // 0xf0
        struct TArray<enum class EYTeam> m_teamsToIgnore; // 0xf8
        struct FGuid m_shotGuid; // 0x108

    };

    struct FAIRequestID //ScriptStruct AIModule.AIRequestID
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t RequestID; // 0x0

    };

    struct FAIStimulus //ScriptStruct AIModule.AIStimulus
    {
    //Children Prop Count (Fields): 7
    public:

        float Age; // 0x0
        float ExpirationAge; // 0x4
        float Strength; // 0x8
        struct FVector StimulusLocation; // 0xc
        struct FVector ReceiverLocation; // 0x18
        struct FName Tag; // 0x24
        char bSuccessfullySensed; // 0x38

    };

    struct FActorPerceptionUpdateInfo //ScriptStruct AIModule.ActorPerceptionUpdateInfo
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t TargetId; // 0x0
        struct TWeakObjectPtr<struct AActor> Target; // 0x4
        struct FAIStimulus Stimulus; // 0xc

    };

    struct FGenericTeamId //ScriptStruct AIModule.GenericTeamId
    {
    //Children Prop Count (Fields): 1
    public:

        char TeamID; // 0x0

    };

    struct FYDamageHelper //ScriptStruct Prospect.YDamageHelper
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_isLoggingEnabled; // 0x0
        float m_baseDamage; // 0x4
        float m_multiplierRawAccumulated; // 0x8

    };

    struct FYDamageOriginInfo //ScriptStruct Prospect.YDamageOriginInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_damageOriginTableRowHandle; // 0x0
        struct FDataTableRowHandle m_damageInfoApplyRowHandle; // 0x10
        enum class EYGameplayContextType m_damageContext; // 0x20

    };

    struct FYDamageOverTimeData //ScriptStruct Prospect.YDamageOverTimeData
    {
    public:


    };

    struct FYVOLine //ScriptStruct Prospect.YVOLine
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_subtitle; // 0x0
        struct TSoftObjectPtr<USoundWave> m_sound; // 0x20
        struct TSoftObjectPtr<USoundCue> m_soundCue; // 0x48

    };

    struct FYAnnouncementPlaybackOptions //ScriptStruct Prospect.YAnnouncementPlaybackOptions
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYAnnouncementType m_announcementType; // 0x0
        struct FVector m_locationInWorld; // 0x4
        class AYPlayerState* m_speakerPlayerState; // 0x10
        bool m_resolveVORowByContext; // 0x18
        bool m_shouldHideAnnouncementWidget; // 0x19

    };

    struct FYAudioDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YAudioDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        class USoundBase* m_prototypeSound; // 0x10

    };

    struct FYVOAudioDatatableRow : FYAudioDataTableRow //ScriptStruct Prospect.YVOAudioDatatableRow
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString m_uniqueName; // 0x18
        struct FDataTableRowHandle m_category; // 0x28
        enum class EYVoRowType m_rowType; // 0x38
        struct FString m_notes; // 0x40
        bool m_requiresSubtitles; // 0x50
        struct FYVOVariationsContainer m_voVariationContainer; // 0x58
        struct FDataTableRowHandle m_speaker; // 0x68
        float m_cooldownDuration; // 0x78
        bool m_allowedToQueueSound; // 0x7c
        bool m_debugDisable; // 0x7d
        struct FDataTableRowHandle m_chainedVo; // 0x80

    };

    struct FYVOVariationsContainer //ScriptStruct Prospect.YVOVariationsContainer
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYVOLine> m_voVariations; // 0x0

    };

    struct FYAnnouncementPlayEntryData //ScriptStruct Prospect.YAnnouncementPlayEntryData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        float m_timestampAnnounceRequested; // 0x10
        struct FYAnnouncementPlaybackOptions m_playbackOptions; // 0x18

    };

    struct FRootMotionSourceGroup //ScriptStruct Engine.RootMotionSourceGroup
    {
    //Children Prop Count (Fields): 6
    public:

        char bHasAdditiveSources; // 0x28
        char bHasOverrideSources; // 0x28
        char bHasOverrideSourcesWithIgnoreZAccumulate; // 0x28
        char bIsAdditiveVelocityApplied; // 0x28
        struct FRootMotionSourceSettings LastAccumulatedSettings; // 0x29
        struct FVector_NetQuantize10 LastPreAdditiveVelocity; // 0x2c

    };

    struct FRootMotionSourceSettings //ScriptStruct Engine.RootMotionSourceSettings
    {
    //Children Prop Count (Fields): 1
    public:

        char Flags; // 0x0

    };

    struct FCharacterNetworkSerializationPackedBits //ScriptStruct Engine.CharacterNetworkSerializationPackedBits
    {
    public:


    };

    struct FCharacterMoveResponsePackedBits : FCharacterNetworkSerializationPackedBits //ScriptStruct Engine.CharacterMoveResponsePackedBits
    {
    public:


    };

    struct FYAutonomousMoveData //ScriptStruct Engine.YAutonomousMoveData
    {
    //Children Prop Count (Fields): 17
    public:

        struct FRotator m_pawnRotation; // 0x0
        struct FVector m_impulse; // 0xc
        char m_replicatePawnRotation; // 0x18
        char m_wantBoost; // 0x18
        char m_wantClientAuthPosition; // 0x18
        char m_wantToApplyImpulse; // 0x18
        char m_assignClientLocationDirectly; // 0x18
        char m_savedWantsClimb; // 0x18
        struct FVector_NetQuantize m_savedClimbEndLocation; // 0x1c
        struct FVector_NetQuantize m_savedClimbStartLocation; // 0x28
        struct FVector_NetQuantize m_savedClimbAnimationStartLocation; // 0x34
        struct FVector_NetQuantize m_savedClimbAnimationEndLocation; // 0x40
        float m_savedClimbTimer; // 0x4c
        float m_savedClimbingSpeed; // 0x50
        uint32_t m_savedClimbingData; // 0x54
        float m_savedLeanAngle; // 0x58
        char m_savedLeanTarget; // 0x5c

    };

    struct FCharacterServerMovePackedBits : FCharacterNetworkSerializationPackedBits //ScriptStruct Engine.CharacterServerMovePackedBits
    {
    public:


    };

    struct FRepRootMotionMontage //ScriptStruct Engine.RepRootMotionMontage
    {
    //Children Prop Count (Fields): 12
    public:

        bool bIsActive; // 0x0
        class UAnimMontage* AnimMontage; // 0x8
        float Position; // 0x10
        struct FVector_NetQuantize100 Location; // 0x14
        struct FRotator Rotation; // 0x20
        class UPrimitiveComponent* MovementBase; // 0x30
        struct FName MovementBaseBoneName; // 0x38
        bool bRelativePosition; // 0x40
        bool bRelativeRotation; // 0x41
        struct FRootMotionSourceGroup AuthoritativeRootMotion; // 0x48
        struct FVector_NetQuantize10 Acceleration; // 0x80
        struct FVector_NetQuantize10 LinearVelocity; // 0x8c

    };

    struct FSimulatedRootMotionReplicatedMove //ScriptStruct Engine.SimulatedRootMotionReplicatedMove
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        struct FRepRootMotionMontage RootMotion; // 0x8

    };

    struct FRootMotionMovementParams //ScriptStruct Engine.RootMotionMovementParams
    {
    //Children Prop Count (Fields): 3
    public:

        bool bHasRootMotion; // 0x0
        float BlendWeight; // 0x4
        struct FTransform RootMotionTransform; // 0x10

    };

    struct FBasedMovementInfo //ScriptStruct Engine.BasedMovementInfo
    {
    //Children Prop Count (Fields): 7
    public:

        class UPrimitiveComponent* MovementBase; // 0x0
        struct FName BoneName; // 0x8
        struct FVector_NetQuantize100 Location; // 0x10
        struct FRotator Rotation; // 0x1c
        bool bServerHasBaseComponent; // 0x28
        bool bRelativeRotation; // 0x29
        bool bServerHasVelocity; // 0x2a

    };

    struct FYActiveCustomizationData //ScriptStruct Prospect.YActiveCustomizationData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName m_archetypeID; // 0x0
        int32_t m_slotIndex; // 0x8
        enum class EYCustomizationBodyType m_bodyType; // 0xc
        struct TArray<struct FYCharacterCustomizationBodyPart> m_bodyParts; // 0x10
        bool m_initialized; // 0x20

    };

    struct FYCharacterCustomizationBodyPart //ScriptStruct Prospect.YCharacterCustomizationBodyPart
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_materialVariation; // 0x10
        int32_t m_specifiedRandomizedMesh; // 0x14

    };

    struct FYShowBodyTypeCategoryUpdateData //ScriptStruct Prospect.YShowBodyTypeCategoryUpdateData
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYCustomizationCategory m_requestedCategory; // 0x0

    };

    struct FYItemDataTableRowBase : FYDataTableRowBase //ScriptStruct Prospect.YItemDataTableRowBase
    {
    //Children Prop Count (Fields): 53
    public:

        struct TMap<enum class EYItemRarityType, struct FYLevelItemEntry> m_rarityTypes; // 0x10
        enum class EYItemRarityType m_rarity; // 0x61
        struct FGameplayTagContainer m_itemTags; // 0x68
        struct TArray<struct FYItemMeshVisualization> m_itemMeshes; // 0x88
        struct FYItemMeshVisualizationOverride m_itemVisOverride; // 0x98
        class AYPickupActor* m_pickupClassOverride; // 0xb8
        struct FDataTableRowHandle m_scannableRowHandle; // 0xc0
        struct TSoftObjectPtr<UTexture2D> m_largeIcon; // 0xd0
        struct TSoftObjectPtr<UTexture2D> m_hudIcon; // 0xf8
        struct FText m_name; // 0x120
        int32_t m_maxAmountPerStack; // 0x140
        int32_t m_startAmount; // 0x144
        int32_t m_durabilityMax; // 0x148
        float m_durabilityBrokenPriceModifier; // 0x14c
        int32_t m_repairCostMaxDurability; // 0x150
        int32_t m_repairCostBase; // 0x154
        int32_t m_repairCostModifierBroken; // 0x158
        struct FYMetaItemUIData m_metaUIItem; // 0x160
        enum class EYMiscellaneousType misc_type; // 0x1c0
        enum class EYDeviceClass device_class; // 0x1c1
        enum class EYDeviceCategory device_category; // 0x1c2
        enum class EYAmmoType ammo_type; // 0x1c3
        bool starter; // 0x1c4
        struct TArray<enum class EYModificationSlotType> modification_slots; // 0x1c8
        enum class EYVanityType vanity_type; // 0x1d8
        struct TArray<struct FDataTableRowHandle> compatible_item_IDs; // 0x1e0
        struct TArray<enum class EYItemType> compatible_item_type; // 0x1f0
        struct TArray<enum class EYDeviceClass> compatible_device_class; // 0x200
        struct TArray<enum class EYDeviceCategory> compatible_device_category; // 0x210
        struct TArray<enum class EYAmmoType> compatible_ammo_type; // 0x220
        float itemWeight; // 0x230
        bool m_isDefaultEntry; // 0x234
        enum class EYDefaultItemSlot Slot; // 0x235
        struct FDataTableRowHandle default_vanity; // 0x238
        struct FDataTableRowHandle default_secondary_vanity; // 0x248
        bool m_shouldOverrideInteractionTime; // 0x258
        float m_overrideInteractionTime; // 0x25c
        class UYWidget_PickupPlate_Base* m_pickupWidgetOverride; // 0x260
        struct TSoftObjectPtr<UTexture2D> m_blueprintIcon; // 0x268
        struct TArray<struct FYItemCraftingDataPerShop> m_itemShopsCraftingData; // 0x290
        int32_t m_amountPerPurchase; // 0x2a0
        int32_t m_scrappingFactionProgressionIncrement; // 0x2a4
        int32_t m_scrappingReturnDefault; // 0x2a8
        bool m_isBlueprint; // 0x2ac
        struct TMap<enum class EYItemRarityType, int32_t> m_overrideScrappingReturnsPerRarity; // 0x2b0
        struct TMap<enum class EYItemRarityType, int32_t> m_overrideScrappingReputationPerRarity; // 0x300
        struct FYProgressionUnlockCollectionData m_unlockData; // 0x350
        float m_collisionSpherePickUpOverride; // 0x388
        struct FYItemMeshVisualization m_pickUpMeshVisualizationOverride; // 0x390
        bool m_useCustomMeshRelativeTranslationOverride; // 0x3e0
        struct FVector m_meshRelativeTranslation; // 0x3e4
        struct FRotator m_meshRelativeRotation; // 0x3f0
        struct FVector m_pickupMeshScale; // 0x3fc

    };

    struct FYItemMeshVisualization //ScriptStruct Prospect.YItemMeshVisualization
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UObject> m_mesh; // 0x0
        struct TSoftObjectPtr<UMaterialInterface> m_materialOverride; // 0x28

    };

    struct FYProgressionUnlockCollectionData //ScriptStruct Prospect.YProgressionUnlockCollectionData
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_shouldBeDisplayedAsEndOfChainReward; // 0x0
        struct TArray<struct FYProgressionUnlockData> m_factionUnlockData; // 0x8
        struct FDataTableRowHandle m_contractLockPurchase; // 0x18
        struct FDataTableRowHandle m_contractLockCrafting; // 0x28

    };

    struct FYProgressionUnlockData //ScriptStruct Prospect.YProgressionUnlockData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        enum class EYItemRarityType m_rarity; // 0x10
        int32_t m_level; // 0x14

    };

    struct FYItemCraftingDataPerShop //ScriptStruct Prospect.YItemCraftingDataPerShop
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_shop; // 0x0
        struct TMap<enum class EYItemRarityType, struct FYItemRecipe> m_craftingPricesPerRarity; // 0x10

    };

    struct FYItemRecipe //ScriptStruct Prospect.YItemRecipe
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FYCostEntryRow> m_itemRecipeIngredients; // 0x0
        int32_t m_upgradeTimeMinutes; // 0x10
        int32_t m_upgradeTimeSeconds; // 0x14
        struct FYCostEntryRow m_skipCraftingMaxCost; // 0x18
        struct FYCostEntryRow m_skipOptionalCraftingMaxCost; // 0x30

    };

    struct FYCostEntryRow //ScriptStruct Prospect.YCostEntryRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_costType; // 0x0
        int32_t m_costAmount; // 0x10

    };

    struct FYMetaItemUIData //ScriptStruct Prospect.YMetaItemUIData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText display_name; // 0x0
        struct FText Description; // 0x20
        struct FText flavor_text; // 0x40

    };

    struct FYItemMeshVisualizationOverride //ScriptStruct Prospect.YItemMeshVisualizationOverride
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRotator m_bPstartingRotation; // 0x0
        float m_bpScale; // 0xc
        struct FVector m_meshTranslation; // 0x10

    };

    struct FYLevelItemEntry //ScriptStruct Prospect.YLevelItemEntry
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_modSlotsUnlocked; // 0x0
        struct FYItemRecipe m_recipeToUpgradeItemToThisRarity; // 0x8

    };

    struct FYVanityItemRowBase : FYItemDataTableRowBase //ScriptStruct Prospect.YVanityItemRowBase
    {
    //Children Prop Count (Fields): 11
    public:

        struct TSoftObjectPtr<UMaterialInterface> m_parameterOverrideMaterial; // 0x408
        struct TArray<struct FYVanityMaterialEntry> m_materials; // 0x430
        enum class EYVanityType m_vanityType; // 0x440
        bool m_requireOwnedItemStatus; // 0x441
        bool m_isReadyToBeReleased; // 0x442
        bool m_hiddenForCustomization; // 0x443
        struct TArray<struct FDataTableRowHandle> m_exclusiveItems; // 0x448
        struct TArray<struct FDataTableRowHandle> m_excludedItems; // 0x458
        int32_t m_sortPriority; // 0x468
        int32_t m_shortBackendId; // 0x46c
        struct FYStoreItemData m_storeData; // 0x470

    };

    struct FYStoreItemData //ScriptStruct Prospect.YStoreItemData
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t m_priceSoftCurrency; // 0x0
        int32_t m_priceHardCurrency; // 0x4
        int32_t m_priceRealMoney; // 0x8
        struct FText m_display_name; // 0x10
        struct FText m_description; // 0x30
        struct FText m_flavor; // 0x50
        struct TSoftObjectPtr<UTexture2D> m_image; // 0x70

    };

    struct FYVanityMaterialEntry //ScriptStruct Prospect.YVanityMaterialEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UMaterialInterface> m_material; // 0x0
        int32_t m_index; // 0x28

    };

    struct FYCharacterCustomizationRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YCharacterCustomizationRowBase
    {
    //Children Prop Count (Fields): 16
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_skelMesh1stP; // 0x508
        struct TArray<struct FYRandomizationMesEntry> m_randomizedMeshes; // 0x530
        class UAnimMontage* m_animationToPlayWhenActivated; // 0x540
        class UAnimSequence* m_animationSequence; // 0x548
        struct TSoftObjectPtr<USkeletalMesh> m_skelMesh3rdP; // 0x550
        struct TArray<struct FYCharacterCustomizationPieceCollection> m_materialCollections; // 0x578
        struct FName m_socketOverrideAttachName; // 0x588
        int32_t m_materialIndexOverride; // 0x590
        enum class EYCustomizationBodyType m_bodyType; // 0x594
        enum class EYCustomizationCategory m_customizationCategoryType; // 0x595
        bool m_shouldMerge; // 0x596
        bool m_shouldShowIngame; // 0x597
        bool m_shouldUpload; // 0x598
        bool m_ignoreForAutomationTests; // 0x599
        bool m_applyRefPoseOverride; // 0x59a
        float m_duration; // 0x59c

    };

    struct FYCharacterCustomizationPieceCollection //ScriptStruct Prospect.YCharacterCustomizationPieceCollection
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYCharacterCustomizationColorType m_colorType; // 0x0
        struct TSoftObjectPtr<UTexture2D> m_icon; // 0x8
        struct FDataTableRowHandle m_materialDataTableReference; // 0x30
        struct TArray<struct FYCharacterCustomizationMaterialPieceEntry> m_materials; // 0x40

    };

    struct FYCharacterCustomizationMaterialPieceEntry //ScriptStruct Prospect.YCharacterCustomizationMaterialPieceEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UMaterialInterface> m_material; // 0x0
        int32_t m_index; // 0x28

    };

    struct FYRandomizationMesEntry //ScriptStruct Prospect.YRandomizationMesEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_mesh; // 0x0
        enum class EYCustomizationBodyType m_desiredBodyType; // 0x28

    };

    struct FYCharacterCustomizationActorActiveVisualizationEntry //ScriptStruct Prospect.YCharacterCustomizationActorActiveVisualizationEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_materialIndex; // 0x10
        struct TArray<class USkeletalMeshComponent*> m_activeSkeletalMeshComponents; // 0x18
        struct FTransform m_categoryRelativeTransform; // 0x30
        enum class EYCustomizationCategory m_category; // 0x61

    };

    struct FYBaseAnalyticsEvent //ScriptStruct Prospect.YBaseAnalyticsEvent
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString Event; // 0x8
        struct FString title_id; // 0x18
        struct FString room_id; // 0x28
        bool is_valid; // 0x38
        struct FString squad_id; // 0x40
        struct FString Timestamp; // 0x50
        struct FString map_name; // 0x60
        struct FString Platform; // 0x70
        struct FString user_id; // 0x80
        struct FString match_phase_type; // 0x90
        int32_t match_phase_time; // 0xa0

    };

    struct FYPlayerKilledEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerKilledEvent
    {
    //Children Prop Count (Fields): 27
    public:

        int32_t location_x; // 0xa8
        int32_t location_y; // 0xac
        int32_t location_z; // 0xb0
        int32_t location_x_killer; // 0xb4
        int32_t location_y_killer; // 0xb8
        int32_t location_z_killer; // 0xbc
        int32_t enemy_damage; // 0xc0
        struct FString enemy_weapon; // 0xc8
        struct FString enemy_weapon_id; // 0xd8
        int32_t enemy_damage_last_hit; // 0xe8
        struct FString enemy_weapon_last_hit; // 0xf0
        struct FString enemy_weapon_id_last_hit; // 0x100
        int32_t time_since_match_start; // 0x110
        int32_t time_since_user_joined; // 0x114
        struct FString enemy_type; // 0x118
        struct FString enemy_name; // 0x128
        struct FString enemy_id; // 0x138
        struct FString last_hit_id; // 0x148
        struct FString last_hit_name; // 0x158
        struct FString enemy_type_last_hit; // 0x168
        int32_t AI_activity; // 0x178
        int32_t time_started_to_get_killed_by_player; // 0x17c
        int32_t health_on_started_to_get_killed_by_player; // 0x180
        int32_t last_time_damaged_by_a_player; // 0x184
        struct FString last_hit_damage_context; // 0x188
        int32_t stamina_on_started_to_get_killed_by_player; // 0x198
        int32_t stamina_on_death; // 0x19c

    };

    struct FYKilledEventContext //ScriptStruct Prospect.YKilledEventContext
    {
    //Children Prop Count (Fields): 2
    public:

        class AYPlayerState* m_killerPlayerState; // 0x0
        class AYPlayerState* m_victimPlayerState; // 0x8

    };

    struct FYActiveContractsUIData //ScriptStruct Prospect.YActiveContractsUIData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYActiveContractUIData> activeContracts; // 0x0

    };

    struct FYActiveContractUIData //ScriptStruct Prospect.YActiveContractUIData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        enum class EYContractStatus contractStatus; // 0x10

    };

    struct FYContractsProgress //ScriptStruct Prospect.YContractsProgress
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYContractProgress> activeContractsProgressClamp; // 0x0

    };

    struct FYContractProgress //ScriptStruct Prospect.YContractProgress
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        struct TArray<int32_t> objectivesProgress; // 0x10

    };

    struct FYHoursAndMinutes //ScriptStruct Prospect.YHoursAndMinutes
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t hours24; // 0x0
        int32_t Minutes; // 0x4

    };

    struct FYFortunaPassPlayerData //ScriptStruct Prospect.YFortunaPassPlayerData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYCompletedActions completedActions; // 0x0
        struct FYFortunaPassClaimedRewards claimedRewards; // 0x18
        bool isPremiumUnlocked; // 0x28
        int32_t seasonXp; // 0x2c

    };

    struct FYFortunaPassClaimedRewards //ScriptStruct Prospect.YFortunaPassClaimedRewards
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> rewardsIds; // 0x0

    };

    struct FYCompletedActions //ScriptStruct Prospect.YCompletedActions
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYCompletedAction> actions; // 0x0
        struct FYTimestamp lastDailyCapResetTimeUtc; // 0x10

    };

    struct FYCompletedAction //ScriptStruct Prospect.YCompletedAction
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ActionId; // 0x0
        int32_t NumOfTimesActionCompleted; // 0x10

    };

    struct FYProgressChange //ScriptStruct Prospect.YProgressChange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        int32_t deltaProgress; // 0x10

    };

    struct FYItemContainerData //ScriptStruct Prospect.YItemContainerData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_itemId; // 0x0
        int32_t m_inventoryId; // 0x10
        int32_t m_materialVariation; // 0x14
        enum class EYContainerType m_containerType; // 0x18

    };

    struct FYShopItem //ScriptStruct Prospect.YShopItem
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_blueprintHandle; // 0x0
        enum class EYItemRarityType m_itemRarity; // 0x10
        struct FString m_shopItemBelongsTo; // 0x18

    };

    struct FYDragStateData //ScriptStruct Prospect.YDragStateData
    {
    //Children Prop Count (Fields): 2
    public:

        class UDragDropOperation* m_operation; // 0x0
        bool m_state; // 0x8

    };

    struct FYActiveArmorData //ScriptStruct Prospect.YActiveArmorData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_id; // 0x0
        struct FDataTableRowHandle m_rowHandle; // 0x10
        int32_t m_durability; // 0x20
        struct TArray<struct FGuid> m_perksApplied; // 0x28
        struct TArray<struct FGuid> m_attributesApplied; // 0x38

    };

    struct FYFallingDamageInfo //ScriptStruct Prospect.YFallingDamageInfo
    {
    //Children Prop Count (Fields): 7
    public:

        float m_distanceFalling; // 0x0
        float m_unmodifiedDamage; // 0x4
        float m_damage; // 0x8
        float m_healthBefore; // 0xc
        float m_healthAfter; // 0x10
        struct FVector m_fallingStartLocation; // 0x14
        struct FVector m_fallingImpactLocation; // 0x20

    };

    struct FYLandingEventInfo //ScriptStruct Prospect.YLandingEventInfo
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYLandingType m_landingType; // 0x0
        float m_fallingDistance; // 0x4

    };

    struct FYSocialActorPlacedData //ScriptStruct Prospect.YSocialActorPlacedData
    {
    //Children Prop Count (Fields): 2
    public:

        class UYPlayerSocialComponent* m_socialComponent; // 0x0
        struct FName m_contextName; // 0x8

    };

    struct FYCraftedBlueprintInfo //ScriptStruct BackendModels.YCraftedBlueprintInfo
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName blueprintName; // 0x0
        struct FString shopItemBelongsTo; // 0x8
        struct FString itemBackendId; // 0x18
        struct FString baseItemId; // 0x28
        int32_t purchaseAmount; // 0x38

    };

    struct FYTeleportData //ScriptStruct Prospect.YTeleportData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector m_oldLocation; // 0x0
        struct FVector m_newLocation; // 0xc
        class AActor* m_relevantActor; // 0x18

    };

    struct FYPlayerSpawnLocationInfo //ScriptStruct Prospect.YPlayerSpawnLocationInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector_NetQuantize m_location; // 0x0
        struct FRotator m_rotation; // 0xc
        class AActor* m_playerStart; // 0x18

    };

    struct FYCondensedDamageData //ScriptStruct Prospect.YCondensedDamageData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYDamageCauserInfo m_damageCauserInfo; // 0x0
        struct TArray<struct FYDamageInfoDetail> m_details; // 0x30

    };

    struct FYDamageInfoDetail //ScriptStruct Prospect.YDamageInfoDetail
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYDamageOriginInfo m_damageOriginInfo; // 0x0
        int32_t m_hitsTotal; // 0x28
        int32_t m_hitsCritical; // 0x2c
        float m_amountDamage; // 0x30

    };

    struct FYDamageCauserInfo //ScriptStruct Prospect.YDamageCauserInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName m_damageCauserId; // 0x0
        struct FDataTableRowHandle m_damageInfoCauserRowHandle; // 0x8
        bool m_isPlayer; // 0x18
        struct TArray<struct FString> m_armorBaseItemIds; // 0x20

    };

    struct FYDamageEvent //ScriptStruct Prospect.YDamageEvent
    {
    //Children Prop Count (Fields): 9
    public:

        int32_t m_hitsCritical; // 0x0
        int32_t m_hitsTotal; // 0x4
        float m_amountDamage; // 0x8
        float m_timestamp; // 0xc
        float m_distance; // 0x10
        class AActor* m_damageCauser; // 0x18
        class AActor* m_damagedActor; // 0x20
        struct FYDamageOriginInfo m_damageOriginInfo; // 0x28
        struct FYDamageCauserInfo m_damageCauserInfo; // 0x50

    };

    struct FYGameplayAttributeModifier : FYDataTableRowBase //ScriptStruct Prospect.YGameplayAttributeModifier
    {
    //Children Prop Count (Fields): 14
    public:

        enum class EYGameplayAttribute m_attribute; // 0x10
        enum class EYGPAModifierType m_modifierType; // 0x11
        float m_modifierValue; // 0x14
        float m_minAttributeValue; // 0x18
        float m_duration; // 0x1c
        float m_lerpTime; // 0x20
        float m_timestampActivated; // 0x24
        float m_lerpStartModifierValue; // 0x28
        float m_lerpEndModifierValue; // 0x2c
        float m_runtimeAttributeValue; // 0x30
        struct FString m_context; // 0x38
        class APawn* m_instigator; // 0x48
        enum class EYGameplayContextType m_overridenContextType; // 0x50
        enum class EYGameplayContextType m_specifiedContextType; // 0x51

    };

    struct FYKeybindingData //ScriptStruct Prospect.YKeybindingData
    {
    //Children Prop Count (Fields): 10
    public:

        struct FName BindingName; // 0x0
        struct FName OriginalBindingName; // 0x8
        struct FText BindingText; // 0x10
        struct FInputChord PrimaryKey; // 0x30
        struct FInputChord SecondaryKey; // 0x50
        struct FInputChord GamepadKey; // 0x70
        float Scale; // 0x90
        bool IsDefault; // 0x94
        bool IsAxis; // 0x95
        enum class EYInputBindingCategory InputBindingCategory; // 0x96

    };

    struct FYHitscanTraceEntry //ScriptStruct Prospect.YHitscanTraceEntry
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector_NetQuantize m_towardsLocation; // 0x0
        struct FVector_NetQuantize m_startLocation; // 0xc
        struct FVector_NetQuantize m_impactLocation; // 0x18
        struct FVector_NetQuantizeNormal m_impactNormal; // 0x24
        class USceneComponent* m_hitComponent; // 0x30
        class AActor* m_hitActor; // 0x38
        char m_surfaceType; // 0x40
        int16_t m_boneIndexHit; // 0x42

    };

    struct FYHitSphereTraceEntry //ScriptStruct Prospect.YHitSphereTraceEntry
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector_NetQuantize m_hitLocation; // 0x0
        struct FVector_NetQuantizeNormal m_direction; // 0xc
        struct FVector_NetQuantizeNormal m_impactNormal; // 0x18
        class USceneComponent* m_hitComponent; // 0x28
        class AActor* m_hitActor; // 0x30
        char m_surfaceType; // 0x38

    };

    struct FYPlayerInteraction //ScriptStruct Prospect.YPlayerInteraction
    {
    //Children Prop Count (Fields): 10
    public:

        class AActor* m_interactiveActor; // 0x0
        class UYObjectInteractionComponent* m_objectInteractionComponent; // 0x8
        bool m_canBeActive; // 0x10
        bool m_isActive; // 0x11
        bool m_isBlockedDueExclusivePickUp; // 0x12
        bool m_isBlockedDueToWeightLimit; // 0x13
        bool m_isPickupEmpty; // 0x14
        bool m_isCompleted; // 0x15
        float m_currentInteractionStartTimestamp; // 0x18
        struct FVector m_traceImpactLocation; // 0x1c

    };

    struct FYInteractionUpdateData //ScriptStruct Prospect.YInteractionUpdateData
    {
    //Children Prop Count (Fields): 3
    public:

        class UYPlayerInteractionComponent* m_playerInteractionComponent; // 0x0
        struct FYPlayerInteraction m_interactionData; // 0x8
        enum class EYInteractionUpdateType m_interactionUpdateType; // 0x30

    };

    struct FYInteractionReleaseEntry //ScriptStruct Prospect.YInteractionReleaseEntry
    {
    //Children Prop Count (Fields): 3
    public:

        float m_minInterpValue; // 0x0
        float m_maxinterpValue; // 0x4
        struct FText m_text; // 0x8

    };

    struct FYPerk : FYDataTableRowBase //ScriptStruct Prospect.YPerk
    {
    //Children Prop Count (Fields): 17
    public:

        struct FText m_displayName; // 0x10
        struct TArray<class UTexture2D*> m_hudIcons; // 0x30
        enum class EYPerkTrigger m_trigger; // 0x40
        struct FYAttributeTriggerData m_attributeTriggerData; // 0x44
        struct FYWeaponSwitchTriggerData m_weaponSwitchTriggerData; // 0x4c
        class AActor* m_instigator; // 0x50
        enum class EYPerkTarget m_target; // 0x58
        enum class EYGameplayContextType m_contextType; // 0x59
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifiers; // 0x60
        bool m_refreshAttributes; // 0x70
        bool m_resetAttributeDurationOnReTrigger; // 0x71
        struct TArray<struct FSoftClassProperty> m_perkActionsSoftRef; // 0x78
        float m_perkDuration; // 0x88
        struct FYDamageDealingTriggerData m_damageTriggeringData; // 0x90
        struct FGuid m_guid; // 0xb0
        bool m_isActive; // 0xc0
        struct TArray<class UYPerkAction*> m_perkActionInstances; // 0xc8

    };

    struct FYDamageDealingTriggerData //ScriptStruct Prospect.YDamageDealingTriggerData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYWeaponSlotType m_slotTriggerType; // 0x0
        struct TArray<struct FDataTableRowHandle> m_dataTableRowHandles; // 0x8
        float m_damageModification; // 0x18

    };

    struct FYWeaponSwitchTriggerData //ScriptStruct Prospect.YWeaponSwitchTriggerData
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYWeaponSlotType m_weaponSlotType; // 0x0

    };

    struct FYAttributeTriggerData //ScriptStruct Prospect.YAttributeTriggerData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYGameplayAttribute m_attribute; // 0x0
        enum class EYPerkBool m_bool; // 0x1
        float m_value; // 0x4

    };

    struct FYUserRawStatsData //ScriptStruct Prospect.YUserRawStatsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_productUserId; // 0x0
        struct TArray<struct FYRawStatEntry> m_statEntries; // 0x10

    };

    struct FYRawStatEntry //ScriptStruct Prospect.YRawStatEntry
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString m_statName; // 0x0
        float m_statValue; // 0x10
        float m_oldStatValue; // 0x14
        enum class EYMatchmakeGameModeType m_gameMode; // 0x18
        enum class EYActivityType m_activityType; // 0x19
        struct FYEOSStatData m_dtStatData; // 0x20
        bool m_isCustomStat; // 0x58
        bool m_hasUpdated; // 0x59

    };

    struct FYEOSStatData : FYDataTableRowBase //ScriptStruct Prospect.YEOSStatData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_translateStatName; // 0x10
        enum class EYStatValueDisplayMethod m_displayMethod; // 0x30
        enum class EYStatValueComparison m_comparisonMethod; // 0x31

    };

    struct FYFeatureToggles : FYDataTableRowBase //ScriptStruct Prospect.YFeatureToggles
    {
    //Children Prop Count (Fields): 124
    public:

        bool m_useFullTimeAsyncLoadingThread; // 0x10
        bool m_playerReplicatingClientSpawnDependency; // 0x11
        bool m_voiceChatEnabled; // 0x12
        bool m_autoRequeueingEnabled; // 0x13
        bool m_useIdleDetection; // 0x14
        bool m_enableColorBlindOptions; // 0x15
        bool m_automaticImportPlatformFriends; // 0x16
        bool m_eosStatsEnabled; // 0x17
        bool m_canCraftWeapons; // 0x18
        bool m_isModFunctionalityEnabled; // 0x19
        bool m_enableBugReporter; // 0x1a
        bool m_isProneEnabled; // 0x1b
        bool m_isLeaningEnabled; // 0x1c
        bool m_isAccountLinkingEnabled; // 0x1d
        bool m_isFriendsImportEnabled; // 0x1e
        bool m_showMatchMapsSelector; // 0x1f
        bool m_newMeleeSystemEnabled; // 0x20
        bool m_enableEffortsComponent; // 0x21
        bool m_squadsEnabled; // 0x22
        bool m_socialEnabled; // 0x23
        bool m_sessionServerShutdownEnabled; // 0x24
        bool m_multiplayerStationEnabled; // 0x25
        bool m_replicationGraphEnabled; // 0x26
        bool m_multiRegionEnabled; // 0x27
        bool m_lootCollisionTraceEnabled; // 0x28
        bool m_splitSoloAndSquadMatches; // 0x29
        bool m_isOnboardingEnabled; // 0x2a
        bool m_isPremiumShopEnabled; // 0x2b
        bool m_areRealMoneyPurchasesEnabled; // 0x2c
        bool m_isFortunaPassEnabled; // 0x2d
        bool m_isTutorialEnabled; // 0x2e
        bool m_isCharacterSelectionEnabled; // 0x2f
        bool m_showSeasonDateInfoOnRetentionPopup; // 0x30
        bool m_enableBIEventsServer; // 0x31
        float m_BIEventsServerRatio; // 0x34
        float m_BIEventsUserSamplingRatio; // 0x38
        bool m_enableBIEventsClient; // 0x3c
        bool m_playfabCouponsEnabled; // 0x3d
        bool m_safeTeleportWhenStuck; // 0x3e
        bool m_safeTeleportFallingThroughWorld; // 0x3f
        bool m_basicInsuranceEnabled; // 0x40
        bool m_premiumInsuranceEnabled; // 0x41
        bool m_isStillOnBattleServerCheckEnabled; // 0x42
        bool m_relevantPlayerControllerCachingEnabled; // 0x43
        bool m_interruptionManagerTravelEnabled; // 0x44
        bool m_enableBulletPooling; // 0x45
        bool m_isTOCDataMigrationEnabled; // 0x46
        bool m_isInventoryLimitEnabled; // 0x47
        bool m_checkClientVersionUpToDate; // 0x48
        bool m_cheatFeatureToggle_01; // 0x49
        bool m_cheatFeatureToggle_02; // 0x4a
        bool m_cheatFeatureToggle_03; // 0x4b
        bool m_cheatFeatureToggle_04; // 0x4c
        bool m_cheatFeatureToggle_05; // 0x4d
        bool m_cheatFeatureToggle_06; // 0x4e
        bool m_cheatFeatureToggle_07; // 0x4f
        bool m_cheatFeatureToggle_08; // 0x50
        bool m_cheatFeatureToggle_09; // 0x51
        bool m_cheatFeatureToggle_11; // 0x52
        bool m_cheatFeatureToggle_12; // 0x53
        bool m_cheatFeatureToggle_13; // 0x54
        bool m_cheatFeatureToggle_14; // 0x55
        bool m_cheatFeatureToggle_15; // 0x56
        bool m_cheatFeatureToggle_16; // 0x57
        bool m_cheatFeatureToggle_17; // 0x58
        bool m_cheatFeatureToggle_18; // 0x59
        bool m_cheatFeatureToggle_19; // 0x5a
        bool m_cheatFeatureToggle_20; // 0x5b
        bool m_cheatFeatureToggle_21; // 0x5c
        bool m_cheatFeatureToggle_22; // 0x5d
        bool m_cheatFeatureToggle_23; // 0x5e
        bool m_cheatFeatureToggle_24; // 0x5f
        bool m_cheatFeatureToggle_25; // 0x60
        bool m_cheatFeatureToggle_26; // 0x61
        bool m_cheatFeatureToggle_27; // 0x62
        int32_t m_cheatConfig_27; // 0x64
        bool m_cheatFeatureToggle_28; // 0x68
        bool m_cheatFeatureToggle_29; // 0x69
        bool m_cheatFeatureToggle_30; // 0x6a
        bool m_cheatFeatureToggle_31; // 0x6b
        int32_t m_cheatConfig_31; // 0x6c
        bool m_cheatFeatureToggle_33; // 0x70
        bool m_cheatFeatureToggle_34; // 0x71
        bool m_cheatFeatureToggle_35; // 0x72
        bool m_cheatFeatureToggle_36; // 0x73
        bool m_cheatFeatureToggle_37; // 0x74
        bool m_cheatFeatureToggle_38; // 0x75
        bool m_cheatFeatureToggle_39; // 0x76
        bool m_cheatFeatureToggle_40; // 0x77
        bool m_cheatFeatureToggle_41; // 0x78
        bool m_cheatFeatureToggle_42; // 0x79
        bool m_cheatFeatureToggle_43; // 0x7a
        bool m_cheatFeatureToggle_44; // 0x7b
        bool m_cheatFeatureToggle_45; // 0x7c
        bool m_cheatFeatureToggle_46; // 0x7d
        bool m_cheatFeatureToggle_47; // 0x7e
        bool m_cheatFeatureToggle_48; // 0x7f
        bool m_cheatFeatureToggle_49; // 0x80
        bool m_cheatFeatureToggle_50; // 0x81
        bool m_cheatFeatureToggle_51; // 0x82
        bool m_cheatFeatureToggle_52; // 0x83
        bool m_isBattlEyeKickingActive; // 0x84
        bool m_isBattlEyeActive; // 0x85
        bool m_isBattlEyeKickReasonChecksActive; // 0x86
        bool m_levelStreamingFailsafeEnabled; // 0x87
        bool m_useCustomOcclusionAudioAsyncLimitation; // 0x88
        bool m_useCustomOcclusionAudioSyncLimitation; // 0x89
        bool m_isStationUsingNewMatchmaking; // 0x8a
        bool m_isMatchUsingNewMatchmaking; // 0x8b
        bool m_isUsingSingleNvrBracket; // 0x8c
        bool m_sampleBIEvents; // 0x8d
        bool m_shutDownInstancesOfExistingConnections; // 0x8e
        bool m_vivoxRejoinOnDisconnect; // 0x8f
        bool m_cheatProtectionSession; // 0x90
        bool m_isMergingMeshComponentsDefaultStation; // 0x91
        bool m_isMergingMeshComponentsDefaultMatch; // 0x92
        bool m_autoFetchTitleData; // 0x93
        struct TMap<struct FString, float> m_fetchingIntervals; // 0x98
        bool m_cheatingVictimCompensationEnabled; // 0xe8
        bool m_cheatingVictimCompensationIgnoreItemsByWeightEnabled; // 0xe9
        bool m_kickingStorageQueueEnabled; // 0xea
        bool m_playFabIdServerValidation; // 0xeb
        bool m_playFabNickNameServerValidation; // 0xec
        bool m_battlEyeEndPointEnabled; // 0xed

    };

    struct FYSocialProfileEntry //ScriptStruct BackendModels.YSocialProfileEntry
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString internalUserId; // 0x0
        struct FString epicId; // 0x10
        struct FString Username; // 0x20
        struct FYSocialPresenceEntry presence; // 0x30
        struct FString productUserId; // 0x68
        struct FString PlayFabId; // 0x78

    };

    struct FYSocialPresenceEntry //ScriptStruct BackendModels.YSocialPresenceEntry
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYSocialGameStateType State; // 0x0
        struct FString squadId; // 0x8
        int32_t squadSize; // 0x18
        struct FString socialRowId; // 0x20
        int32_t prospectorLevelXP; // 0x30

    };

    struct FYPlayerFactionProgressionUIData //ScriptStruct Prospect.YPlayerFactionProgressionUIData
    {
    //Children Prop Count (Fields): 7
    public:

        enum class EYFaction m_factionId; // 0x0
        int32_t m_factionLevel; // 0x4
        int32_t m_completeFactionReputation; // 0x8
        int32_t m_currentXpOfCurrentLevel; // 0xc
        int32_t m_maxXpRequiredForCurrentLevel; // 0x10
        float m_relativeProgressBetweenCurrentLevelAndNextLevel; // 0x14
        struct FString m_nextLevelXp; // 0x18

    };

    struct FYPlayerFactionLevelUpData //ScriptStruct Prospect.YPlayerFactionLevelUpData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FYUnlockedShopItem> unlockedShopItems; // 0x0
        struct TArray<struct FDataTableRowHandle> unlockedContracts; // 0x10
        enum class EYFaction factionId; // 0x20
        int32_t NewLevel; // 0x24

    };

    struct FYUnlockedShopItem //ScriptStruct Prospect.YUnlockedShopItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_blueprintHandle; // 0x0
        enum class EYItemRarityType m_itemRarity; // 0x10

    };

    struct FYPlayerStateChangeData //ScriptStruct Prospect.YPlayerStateChangeData
    {
    //Children Prop Count (Fields): 4
    public:

        class AActor* m_relevantActor; // 0x0
        struct FYPlayerRuntimeScoreStateData m_newData; // 0x8
        struct FYPlayerRuntimeScoreStateData m_oldData; // 0x14
        enum class EYPlayerGameDataStateType m_relevantState; // 0x20

    };

    struct FYPlayerRuntimeScoreStateData //ScriptStruct Prospect.YPlayerRuntimeScoreStateData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYPlayerGameDataStateType m_state; // 0x0
        int32_t m_score; // 0x4
        bool m_isActive; // 0x8

    };

    struct FProgressUIData //ScriptStruct Prospect.ProgressUIData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_description; // 0x0
        class UTexture2D* m_icon; // 0x20
        struct FLinearColor m_progressColorTheme; // 0x28

    };

    struct FYPlayerContractsInitData //ScriptStruct Prospect.YPlayerContractsInitData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FYBoardsContractsInitData playerBoardsContractsIncludingActiveOnes; // 0x10

    };

    struct FYBoardsContractsInitData //ScriptStruct Prospect.YBoardsContractsInitData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYBoardContractsInitData> playerContractsBoards; // 0x0
        struct FYTimestamp lastBoardRefreshTimeUtc; // 0x10

    };

    struct FYBoardContractsInitData //ScriptStruct Prospect.YBoardContractsInitData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYFaction boardFaction; // 0x0
        struct TArray<struct FYBoardContractInitData> playerBoardContractsIncludingActiveOnes; // 0x8

    };

    struct FYBoardContractInitData //ScriptStruct Prospect.YBoardContractInitData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        bool contractIsLockedDueToLowFactionReputation; // 0x10

    };

    struct FYActiveContractsInitData //ScriptStruct Prospect.YActiveContractsInitData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYActiveContractInitData> activeContracts; // 0x10

    };

    struct FYActiveContractInitData //ScriptStruct Prospect.YActiveContractInitData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString contractId; // 0x10
        struct TArray<int32_t> contractCurrentProgressBackend; // 0x20

    };

    struct FYGetCompletedContractsResult //ScriptStruct BackendModels.YGetCompletedContractsResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> contractsIds; // 0x0

    };

    struct FYClaimedContractBackendData //ScriptStruct Prospect.YClaimedContractBackendData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString userIdReceivedFromBackend; // 0x0
        struct FString claimedContractId; // 0x10
        struct FString newContractIdOnBoard; // 0x20

    };

    struct FYUserCurrenciesItems //ScriptStruct BackendModels.YUserCurrenciesItems
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYCurrencyItem> currencies; // 0x10

    };

    struct FYCurrencyItem //ScriptStruct BackendModels.YCurrencyItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString currencyName; // 0x0
        int32_t Amount; // 0x10

    };

    struct FYUpdatedFactionProgression //ScriptStruct BackendModels.YUpdatedFactionProgression
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_userId; // 0x0
        struct FString m_faction; // 0x10
        int32_t m_factionProgression; // 0x20

    };

    struct FYCustomItemInfo //ScriptStruct BackendModels.YCustomItemInfo
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString ItemId; // 0x0
        struct FString baseItemId; // 0x10
        int32_t primaryVanityId; // 0x20
        int32_t secondaryVanityId; // 0x24
        int32_t Amount; // 0x28
        int32_t durability; // 0x2c
        struct FYModItems modData; // 0x30
        struct FString insurance; // 0x40
        struct FString insuranceOwnerPlayfabId; // 0x50
        struct FString insuredAttachmentId; // 0x60
        struct FYItemOriginBackend Origin; // 0x70

    };

    struct FYItemOriginBackend //ScriptStruct BackendModels.YItemOriginBackend
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString T; // 0x0
        struct FString P; // 0x10
        struct FString G; // 0x20

    };

    struct FYModItems //ScriptStruct BackendModels.YModItems
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<int32_t> M; // 0x0

    };

    struct FYInstanceUpdateAmount //ScriptStruct BackendModels.YInstanceUpdateAmount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        int32_t Amount; // 0x10

    };

    struct FYPlayerReward //ScriptStruct BackendModels.YPlayerReward
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString RewardId; // 0x0
        int32_t Amount; // 0x10
        enum class EYPlayerRewardSource Source; // 0x14

    };

    struct FYSeasonProgressionUpdateData //ScriptStruct Prospect.YSeasonProgressionUpdateData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYSeasonProgressionCompletedActions completedActions; // 0x0
        int32_t seasonXp; // 0x18

    };

    struct FYSeasonProgressionCompletedActions //ScriptStruct Prospect.YSeasonProgressionCompletedActions
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYCompletedAction> actions; // 0x0
        struct FYTimestamp lastDailyCapResetTimeUtc; // 0x10

    };

    struct FYSeasonWipeData //ScriptStruct Prospect.YSeasonWipeData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYTimestamp infoHighlightLastTimeChanged; // 0x0

    };

    struct FYShopOffer //ScriptStruct BackendModels.YShopOffer
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString shopOfferRowId; // 0x0
        enum class EYPurchaseOfferState purchaseState; // 0x10

    };

    struct FYAzureFunctionResult //ScriptStruct YAzureFunctionsUtils.YAzureFunctionResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_jsonData; // 0x0
        struct FString m_errorMessage; // 0x10
        struct FString m_origin; // 0x20
        struct FString m_sentJsonData; // 0x30
        bool m_success; // 0x40

    };

    struct FYPlayfabRedeemCouponResult //ScriptStruct YAzureFunctionsUtils.YPlayfabRedeemCouponResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10
        struct TArray<struct FYCustomItemInfo> GrantedItems; // 0x18

    };

    struct FYPlayfabStoreItemEntry //ScriptStruct YAzureFunctionsUtils.YPlayfabStoreItemEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ItemId; // 0x0
        struct FString StoreId; // 0x10
        struct FString Catalog; // 0x20
        struct FYPlayFabStoreItemCustomData customData; // 0x30
        struct TMap<struct FString, int32_t> virtualCurrencyPrices; // 0x50

    };

    struct FYPlayFabStoreItemCustomData //ScriptStruct YAzureFunctionsUtils.YPlayFabStoreItemCustomData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> Tags; // 0x0
        struct FString expData; // 0x10

    };

    struct FYStoreRotationData //ScriptStruct BackendModels.YStoreRotationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString StoreId; // 0x0
        struct FDateTime expirationData; // 0x10

    };

    struct FYPlayfabStoreItemsResult //ScriptStruct YAzureFunctionsUtils.YPlayfabStoreItemsResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString StoreId; // 0x0
        struct FString CatalogVersion; // 0x10
        struct TArray<struct FYPlayfabStoreItemEntry> storeItems; // 0x20

    };

    struct FYFriendAction //ScriptStruct BackendModels.YFriendAction
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString internalUserId; // 0x0
        enum class EYFriendState stateToChangeTo; // 0x10

    };

    struct FYPlayfabUserAccountInfo //ScriptStruct YAzureFunctionsUtils.YPlayfabUserAccountInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString userDisplayName; // 0x10

    };

    struct FYFriendActionResponse //ScriptStruct BackendModels.YFriendActionResponse
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString errorMessage; // 0x0
        struct FString OperationId; // 0x10
        struct FString targetUserId; // 0x20
        enum class EYFriendActionResult Result; // 0x30

    };

    struct FYGetPlayerStatisticsResult //ScriptStruct YAzureFunctionsUtils.YGetPlayerStatisticsResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10
        struct TArray<struct FYPlayfabPlayerStatistic> Statistics; // 0x18

    };

    struct FYPlayfabPlayerStatistic //ScriptStruct YAzureFunctionsUtils.YPlayfabPlayerStatistic
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        int32_t Value; // 0x10

    };

    struct FYHighlightStateData //ScriptStruct Prospect.YHighlightStateData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FYInventoryItem m_item; // 0x0
        enum class EYItemType m_type; // 0xd8
        struct FDataTableRowHandle m_rowHandle; // 0xe0
        struct FString m_context; // 0xf0
        struct FGuid m_guid; // 0x100
        struct FDelegate m_delegate; // 0x110

    };

    struct FYInsurancePayoutPackage //ScriptStruct Prospect.YInsurancePayoutPackage
    {
    //Children Prop Count (Fields): 7
    public:

        bool m_processingSeenByUser; // 0x0
        bool m_seenByUser; // 0x1
        int32_t m_softCurrency; // 0x4
        struct TArray<struct FYInventoryItem> m_items; // 0x8
        bool m_atLeastOneVoidedByOthers; // 0x18
        bool m_atLeastOneVoidedBySquad; // 0x19
        struct FDateTime m_unlockTimeUtc; // 0x20

    };

    struct FYItemSortingLayer : FYDataTableRowBase //ScriptStruct Prospect.YItemSortingLayer
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_sortingMethodDisplayName; // 0x10
        struct TArray<enum class EYSortingMethod> m_sortingMethods; // 0x30

    };

    struct FYEomInventoryData //ScriptStruct Prospect.YEomInventoryData
    {
    //Children Prop Count (Fields): 7
    public:

        struct TArray<struct FYInventoryItem> m_gainedItems; // 0x0
        struct TArray<struct FYInventoryItem> m_lostItems; // 0x10
        struct TArray<enum class EYPlayerSetType> m_lostPlayerSetEntries; // 0x20
        struct TArray<struct FYInventoryItem> m_lostPlayerSetItems; // 0x30
        struct FYPlayerInventory m_lostBagItems; // 0x40
        struct FYPlayerInventory m_lostSafePocketItems; // 0x58
        bool m_bPlayerSurvived; // 0x70

    };

    struct FYCraftingInProgressData //ScriptStruct Prospect.YCraftingInProgressData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ItemId; // 0x0
        int32_t timePassed; // 0x10

    };

    struct FYLevelMapRuntimeData //ScriptStruct Prospect.YLevelMapRuntimeData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector2D m_mapBoundsCenter; // 0x0
        struct FVector2D m_levelSize; // 0x8
        struct FVector2D m_mapTextureSize; // 0x10
        bool m_initializedLevelData; // 0x18
        float m_zoom; // 0x1c
        int32_t m_handle; // 0x20

    };

    struct FYMiscSettings : FYDataTableRowBase //ScriptStruct Prospect.YMiscSettings
    {
    //Children Prop Count (Fields): 54
    public:

        bool m_cheatSettingToggle_01; // 0x10
        bool m_cheatSettingToggle_02; // 0x11
        bool m_cheatSettingToggle_03; // 0x12
        bool m_cheatSettingToggle_04; // 0x13
        float m_cheatSetting_00; // 0x14
        float m_cheatSetting_01; // 0x18
        int32_t m_cheatSetting_02; // 0x1c
        int32_t m_cheatSetting_03; // 0x20
        float m_cheatSettingBackend_01; // 0x24
        float m_cheatSettingBackend_02; // 0x28
        int32_t m_cheatSettingBackend_03; // 0x2c
        struct FYMiscSettingSubSection m_cheatSettingBackend_04; // 0x30
        struct FYMiscSettingsCombined m_cheatSettings_03; // 0x4c
        struct FYMiscSettingsCombined m_cheatSetting_04; // 0x58
        struct FYMiscSettingsCombined m_cheatSetting_05; // 0x64
        struct FYMiscSettingsCombined m_cheatSetting_06; // 0x70
        struct FYMiscSettingsCombined m_cheatSetting_07; // 0x7c
        struct FYMiscSettingsCombined m_cheatSetting_08; // 0x88
        struct FYMiscSettingsCombined m_cheatSetting_09; // 0x94
        struct FYMiscSettingsCombined m_cheatSetting_12; // 0xa0
        struct FYMiscSettingsCombined m_cheatSetting_13; // 0xac
        struct FYMiscSettingsCombined m_cheatSetting_14; // 0xb8
        struct FYMiscSettingsCombined m_cheatSetting_15; // 0xc4
        struct FYMiscSettingsCombined m_cheatSetting_16; // 0xd0
        struct FYMiscSettingsCombined m_cheatSetting_17; // 0xdc
        struct FYMiscSettingsCombined m_cheatSetting_18; // 0xe8
        struct FYMiscSettingsCombined m_cheatSetting_19; // 0xf4
        struct FYMiscSettingsCombined m_cheatSetting_20; // 0x100
        struct FYMiscSettingsCombined m_cheatSetting_21; // 0x10c
        struct FYMiscSettingsCombined m_cheatSetting_22; // 0x118
        struct FYMiscSettingsCombined m_cheatSetting_23; // 0x124
        struct FYMiscSettingsCombined m_cheatSetting_24; // 0x130
        struct FYMiscSettingsCombined m_cheatSetting_25; // 0x13c
        struct FYMiscSettingsCombined m_cheatSetting_26; // 0x148
        struct FYMiscSettingsCombined m_cheatSetting_27; // 0x154
        struct FYMiscSettingsCombined m_cheatSetting_28; // 0x160
        struct FYMiscSettingsCombined m_cheatSetting_29; // 0x16c
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_17; // 0x178
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_18; // 0x188
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_19; // 0x198
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_20; // 0x1a8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_21; // 0x1b8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_22; // 0x1c8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_27; // 0x1d8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_28; // 0x1e8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_29; // 0x1f8
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_30; // 0x208
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_31; // 0x218
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_32; // 0x228
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_33; // 0x238
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_34; // 0x248
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_35; // 0x258
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_38; // 0x268
        struct TArray<struct FYTieredMiscSettings> m_cheatSettings_39; // 0x278

    };

    struct FYTieredMiscSettings //ScriptStruct Prospect.YTieredMiscSettings
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_miscSetting_01; // 0x0
        struct FYMiscSettingsCombined m_miscSetting_02; // 0x4

    };

    struct FYMiscSettingsCombined //ScriptStruct Prospect.YMiscSettingsCombined
    {
    //Children Prop Count (Fields): 3
    public:

        float m_miscSetting_01; // 0x0
        int32_t m_miscSetting_02; // 0x4
        int32_t m_miscSetting_03; // 0x8

    };

    struct FYMiscSettingSubSection //ScriptStruct Prospect.YMiscSettingSubSection
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t m_miscSetting_01; // 0x0
        int32_t m_miscSetting_02; // 0x4
        float m_miscSetting_03; // 0x8
        int32_t m_miscSetting_04; // 0xc
        int32_t m_miscSetting_05; // 0x10
        int32_t m_miscSetting_06; // 0x14
        bool m_miscSetting_07; // 0x18

    };

    struct FYDataTablePropertyData //ScriptStruct Prospect.YDataTablePropertyData
    {
    //Children Prop Count (Fields): 136
    public:

        class UDataTable* m_weaponDatatable; // 0x0
        class UDataTable* m_meleeWeaponDatatable; // 0x8
        class UDataTable* m_abilityDataTable; // 0x10
        class UDataTable* m_modDataTable; // 0x18
        class UDataTable* m_sceneDataTable; // 0x20
        class UDataTable* m_materialsDataTable; // 0x28
        class UDataTable* m_keycardsDataTable; // 0x30
        class UDataTable* m_weaponShopsDataTable; // 0x38
        class UDataTable* m_currenciesDataTable; // 0x40
        class UDataTable* m_ammunitionDataTable; // 0x48
        class UDataTable* m_scrapingDataTable; // 0x50
        class UDataTable* m_experienceDataTable; // 0x58
        class UDataTable* m_genericIdDataTable; // 0x60
        class UDataTable* m_inventoryItemSortingLayersDataTable; // 0x68
        class UDataTable* m_loreItemsDataTable; // 0x70
        class UDataTable* m_performanceTuningDataTable; // 0x78
        class UDataTable* m_collectiblesTypesDataTable; // 0x80
        class UDataTable* m_questItemsTypesDataTable; // 0x88
        class UDataTable* m_shieldItemsDataTable; // 0x90
        class UDataTable* m_helmetsDataTable; // 0x98
        class UDataTable* m_aiArmorDataTable; // 0xa0
        class UDataTable* m_bagDataTable; // 0xa8
        class UDataTable* m_prospectorBadgeDataTable; // 0xb0
        class UDataTable* m_meleeVanityDataTable; // 0xb8
        class UDataTable* m_characterCustomizationExplicitDataTable; // 0xc0
        class UDataTable* m_characterCustomizationArchetypeDataTable; // 0xc8
        class UDataTable* m_keybindingIconsDatatable; // 0xd0
        class UDataTable* m_retentionBonusDatatable; // 0xd8
        class UDataTable* m_notificationsDatatable; // 0xe0
        class UDataTable* m_codexDatatable; // 0xe8
        class UDataTable* m_codexSubDatatable; // 0xf0
        class UDataTable* m_gameplayTagMappingDataTable; // 0xf8
        class UDataAsset* m_interruptionManagementSettingsDataAsset; // 0x100
        class UDataTable* m_analyticsSamplingDataTable; // 0x108
        class UDataTable* m_prospectorRankDataTable; // 0x110
        class UDataTable* m_rankedSeasonDataTable; // 0x118
        class UDataTable* m_eosStatsDataTable; // 0x120
        class UDataTable* m_statsCombinationDataTable; // 0x128
        class UDataTable* m_metaDefaultItemsDataTable; // 0x130
        class UDataTable* m_gameSessionDataTable; // 0x138
        class UDataTable* m_impactDataTable; // 0x140
        class UDataTable* m_itemStatsSettingsDataTable; // 0x148
        class UDataTable* m_killImpactEffectsDataTable; // 0x150
        class UDataTable* m_shieldBreakImpactEffectsDataTable; // 0x158
        class UDataTable* m_fxDataTable; // 0x160
        class UDataTable* m_characterCustomizationCategoryDataTable; // 0x168
        class UDataTable* m_characterCustomizationDefaultSettingsDataTable; // 0x170
        class UDataTable* m_perksDataTable; // 0x178
        class UDataTable* m_transportDataTable; // 0x180
        class UDataTable* m_lootItemsDataTable; // 0x188
        class UDataTable* m_scopeTuningDataTable; // 0x190
        class UDataTable* m_notificationDataTable; // 0x198
        class UDataTable* m_matchmakingDataTable; // 0x1a0
        class UDataTable* m_factionsDataTable; // 0x1a8
        class UDataTable* m_contractsDataTable; // 0x1b0
        class UDataTable* m_shopOffersDataTable; // 0x1b8
        class UDataTable* m_playFabStoresDataTable; // 0x1c0
        class UDataTable* m_seasonsDataTable; // 0x1c8
        struct TArray<class UDataTable*> m_levelsDataTables; // 0x1d0
        class UDataTable* m_fortunaPassActionsDataTable; // 0x1e0
        class UDataTable* m_cameraItemDataTable; // 0x1e8
        class UDataTable* m_ammoTypesDataTable; // 0x1f0
        class UDataTable* m_playerQuarterUpgradesDataTable; // 0x1f8
        class UDataTable* m_techTreeNodesDataTable; // 0x200
        class UDataTable* m_techTreeCategoriesDataTable; // 0x208
        class UDataTable* m_passiveGeneratorsCrateRewards0DataTable; // 0x210
        class UDataTable* m_passiveGeneratorsCrateRewards1DataTable; // 0x218
        class UDataTable* m_passiveGeneratorsCrateRewards2DataTable; // 0x220
        class UDataTable* m_passiveGeneratorsCrateRewards3DataTable; // 0x228
        class UDataTable* m_passiveGeneratorsCrateRewards4DataTable; // 0x230
        class UDataTable* m_passiveGeneratorsCrateRewards5DataTable; // 0x238
        class UDataTable* m_passiveGeneratorsCrateRewards6DataTable; // 0x240
        class UDataTable* m_passiveGeneratorsCrateRewards7DataTable; // 0x248
        class UDataTable* m_passiveGeneratorsCrateRewards8DataTable; // 0x250
        class UDataTable* m_passiveGeneratorsCrateRewards9DataTable; // 0x258
        class UDataTable* m_passiveGeneratorsCrateRewards10DataTable; // 0x260
        class UDataTable* m_passiveGeneratorsCrateRewardsDataTable; // 0x268
        class UDataTable* m_passiveGeneratorsDataTable; // 0x270
        class UDataTable* m_activityDataTable; // 0x278
        class UDataTable* m_gameModesUIDataTable; // 0x280
        class UDataTable* m_inboxMessagesDataTable; // 0x288
        class UDataTable* m_grantsDataTable; // 0x290
        class UDataTable* m_entitlementsDataTable; // 0x298
        class UDataTable* m_weaponVanityDataTable; // 0x2a0
        struct TArray<class UDataTable*> m_missionDataTables; // 0x2a8
        class UDataTable* m_onboardingDataTable; // 0x2b8
        class UDataTable* m_blockFeatureDueToOnboardingDataTable; // 0x2c0
        class UDataTable* m_vehicleDataTable; // 0x2c8
        class UDataTable* m_rebindableInputActionsDataTable; // 0x2d0
        class UDataTable* m_materialDataTable; // 0x2d8
        class UDataTable* m_materialGameDataTable; // 0x2e0
        class UDataTable* m_metaSettingsDataTable; // 0x2e8
        class UDataTable* m_modSettingsDataTable; // 0x2f0
        class UDataTable* m_promotionsDataTable; // 0x2f8
        class UDataTable* m_globalVanityDefaultsDataTable; // 0x300
        class UDataTable* m_bannerDataTable; // 0x308
        class UDataTable* m_deathEmoteDataTable; // 0x310
        class UDataTable* m_normalEmotesDataTable; // 0x318
        class UDataTable* m_defaultConfigurationDataTable; // 0x320
        class UDataTable* m_popupWidgetsDataTable; // 0x328
        class UDataTable* m_mapsInfosDataTable; // 0x330
        class UDataTable* m_vehicleVanityDataTable; // 0x338
        class UDataTable* m_droppodDataTable; // 0x340
        class UDataTable* m_defaultFeatureTogglesTable; // 0x348
        class UDataTable* m_miscSettingsDataTable; // 0x350
        class UDataTable* m_chatSettingsDataTable; // 0x358
        class UDataTable* m_developerCreditsDataTable; // 0x360
        class UDataTable* m_awarenessNotificationDataTable; // 0x368
        class UDataTable* m_playerAwarenessTuningDataTable; // 0x370
        class UDataTable* m_upgradeDataTable; // 0x378
        class UDataTable* m_npcDataTable; // 0x380
        class UDataTable* m_npcCharacterArchetypeDatable; // 0x388
        class UDataTable* m_npcCharacterArchetypeDatatableSets; // 0x390
        class UDataTable* m_npcCharacterArchetypeDatatableItems; // 0x398
        class UDataTable* m_socialProfilesDataTable; // 0x3a0
        class UDataTable* m_prospectorLevelProgressionDataTable; // 0x3a8
        class UDataTable* m_prospectorLevelRewardDataTable; // 0x3b0
        class UDataTable* m_sprayVanityDataTable; // 0x3b8
        class UDataTable* m_weaponCharmVanityDataTable; // 0x3c0
        class UDataTable* m_petDataTable; // 0x3c8
        class UDataTable* m_aiTuning; // 0x3d0
        class UDataTable* m_aiSenseTriggerDataTable; // 0x3d8
        class UDataTable* m_statKeysDataTable; // 0x3e0
        class UDataTable* m_playerTuningDataTable; // 0x3e8
        class UDataTable* m_lootTuningDataTable; // 0x3f0
        class UDataTable* m_rarityDataTable; // 0x3f8
        class UDataTable* m_characterCustomizationItemsDataTable; // 0x400
        class UDataTable* m_explicitCustomizationDataTable; // 0x408
        class UDataTable* m_characterCustomizationSetDataTable; // 0x410
        class UDataTable* m_effortDataTable; // 0x418
        class UDataTable* m_insuranceDataTable; // 0x420
        class UDataTable* m_bundlesDataTable; // 0x428
        class UDataTable* m_bundlesPlatformDataTable; // 0x430
        class UDataTable* m_veteranPacksDataTable; // 0x438
        float m_weaponAssetLoadingTimestamp; // 0x460
        struct TArray<class UObject*> m_weaponAssetsLoaded; // 0x468

    };

    struct FYPickupItem //ScriptStruct Prospect.YPickupItem
    {
    //Children Prop Count (Fields): 9
    public:

        struct FText m_name; // 0x0
        int32_t m_amount; // 0x20
        struct FYInventoryItem m_inventoryItem; // 0x28
        struct TArray<struct FDataTableRowHandle> m_itemUpgrades; // 0x100
        class ACharacter* m_instigatedBy; // 0x110
        class UObject* m_instigatorObject; // 0x118
        bool m_canBeSharedWithTeam; // 0x120
        bool m_isPickUpByPlayerDrop; // 0x121
        class UYWidget_PickupPlate_Base* m_pickupWidgetOverride; // 0x128

    };

    struct FURL //ScriptStruct Engine.URL
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString Protocol; // 0x0
        struct FString Host; // 0x10
        int32_t Port; // 0x20
        int32_t Valid; // 0x24
        struct FString Map; // 0x28
        struct FString RedirectURL; // 0x38
        struct TArray<struct FString> Op; // 0x48
        struct FString Portal; // 0x58

    };

    struct FWorldContext //ScriptStruct Engine.WorldContext
    {
    //Children Prop Count (Fields): 10
    public:

        struct FURL LastURL; // 0xd0
        struct FURL LastRemoteURL; // 0x138
        class UPendingNetGame* PendingNetGame; // 0x1a0
        struct TArray<struct FFullyLoadedPackagesInfo> PackagesToFullyLoad; // 0x1a8
        struct TArray<class ULevel*> LoadedLevelsForPendingMapChange; // 0x1c8
        struct TArray<class UObjectReferencer*> ObjectReferencers; // 0x1f0
        struct TArray<struct FLevelStreamingStatus> PendingLevelStreamingStatusUpdates; // 0x200
        class UGameViewportClient* GameViewport; // 0x210
        class UGameInstance* OwningGameInstance; // 0x218
        struct TArray<struct FNamedNetDriver> ActiveNetDrivers; // 0x220

    };

    struct FNamedNetDriver //ScriptStruct Engine.NamedNetDriver
    {
    //Children Prop Count (Fields): 1
    public:

        class UNetDriver* NetDriver; // 0x0

    };

    struct FLevelStreamingStatus //ScriptStruct Engine.LevelStreamingStatus
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName PackageName; // 0x0
        char bShouldBeLoaded; // 0x8
        char bShouldBeVisible; // 0x8
        uint32_t LODIndex; // 0xc

    };

    struct FFullyLoadedPackagesInfo //ScriptStruct Engine.FullyLoadedPackagesInfo
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EFullyLoadPackageType FullyLoadType; // 0x0
        struct FString Tag; // 0x8
        struct TArray<struct FName> PackagesToLoad; // 0x18
        struct TArray<class UObject*> LoadedObjects; // 0x28

    };

    struct FDebugTextInfo //ScriptStruct Engine.DebugTextInfo
    {
    //Children Prop Count (Fields): 13
    public:

        class AActor* SrcActor; // 0x0
        struct FVector SrcActorOffset; // 0x8
        struct FVector SrcActorDesiredOffset; // 0x14
        struct FString DebugText; // 0x20
        float TimeRemaining; // 0x30
        float Duration; // 0x34
        struct FColor TextColor; // 0x38
        char bAbsoluteLocation; // 0x3c
        char bKeepAttachedToActor; // 0x3c
        char bDrawShadow; // 0x3c
        struct FVector OrigActorLocation; // 0x40
        class UFont* Font; // 0x50
        float FontScale; // 0x58

    };

    struct FYMissionReplicatedStateData //ScriptStruct Prospect.YMissionReplicatedStateData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_currentStepIndex; // 0x0
        int32_t m_previousStepIndex; // 0x4
        struct FString m_missionId; // 0x8
        enum class EYMissionResultType m_resultType; // 0x18

    };

    struct FYMissionProgressionUpdated //ScriptStruct BackendModels.YMissionProgressionUpdated
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_userId; // 0x0
        struct FString m_currentMissionID; // 0x10
        int32_t m_progress; // 0x20
        struct TArray<struct FYCustomItemInfo> m_rewards; // 0x28
        struct TArray<struct FYCurrencyItem> m_updatedCurrencies; // 0x38

    };

    struct FYMissionRuntimeData //ScriptStruct Prospect.YMissionRuntimeData
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t m_stepIndex; // 0x0
        struct FText m_missionName; // 0x8
        struct FText m_missionStepDescription; // 0x28
        struct FText m_missionStepNpcText; // 0x48
        bool m_useVoiceOver; // 0x68
        struct FDataTableRowHandle m_missionStartVoiceOver; // 0x70
        struct TArray<struct FDataTableRowHandle> m_featureToUnlock; // 0x80

    };

    struct FYPlayerQuarterStatus //ScriptStruct BackendModels.YPlayerQuarterStatus
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Level; // 0x0
        struct FYTimestamp upgradeStartedTime; // 0x8

    };

    struct FYTechTreeNodeStatus //ScriptStruct BackendModels.YTechTreeNodeStatus
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString nodeId; // 0x0
        int32_t Level; // 0x10
        struct FYTimestamp upgradeStartedTime; // 0x18

    };

    struct FYPlayerMatchBIStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerMatchBIStats
    {
    //Children Prop Count (Fields): 23
    public:

        int32_t shots; // 0xa8
        int32_t hits; // 0xac
        int32_t kills; // 0xb0
        int32_t damage_done_to_AI; // 0xb4
        int32_t damage_received_by_AI; // 0xb8
        int32_t damage_received_by_players; // 0xbc
        int32_t shield_damage_received_by_AI; // 0xc0
        int32_t shield_damage_received_by_players; // 0xc4
        int32_t damage_done_to_players; // 0xc8
        int32_t damage_received_by_storm; // 0xcc
        int32_t fall_damage; // 0xd0
        int32_t AI_kills; // 0xd4
        int32_t match_time_death; // 0xd8
        int32_t match_time_escape; // 0xdc
        int32_t time_since_user_joined; // 0xe0
        bool match_left; // 0xe4
        int32_t spawn_location_x; // 0xe8
        int32_t spawn_location_y; // 0xec
        struct FString escape_ship_id; // 0xf0
        float current_bag_weight; // 0x100
        float max_bag_weight; // 0x104
        float max_safe_weight; // 0x108
        float current_safe_weight; // 0x10c

    };

    struct FMatchStatsMapWrapper //ScriptStruct Prospect.MatchStatsMapWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, int32_t> MatchStatsMap; // 0x0

    };

    struct FYPlayerReportSubmitData //ScriptStruct Prospect.YPlayerReportSubmitData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FText m_title; // 0x0
        struct FText m_description; // 0x20
        struct FText m_email; // 0x40
        struct FText m_name; // 0x60
        struct FString m_playerNameReported; // 0x80
        struct FString m_reportedPlayerId; // 0x90
        enum class EYCustomerServiceRequestType m_reportingType; // 0xa0
        enum class EYReportPlayerType m_playerReportType; // 0xa1
        struct FString m_reportContext; // 0xa8

    };

    struct FYPlayerReportResponseData //ScriptStruct Prospect.YPlayerReportResponseData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_response; // 0x0
        enum class EYPlayerSupportResult m_result; // 0x10

    };

    struct FYPlayerSupportReportRequestData //ScriptStruct Prospect.YPlayerSupportReportRequestData
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString m_context; // 0x0
        struct FString m_playerName; // 0x10
        struct FString m_playerUid; // 0x20
        enum class EYReportType m_reportType; // 0x30
        enum class EYCustomerServiceRequestType m_customerServiceRequestType; // 0x31
        struct FString m_title; // 0x38
        struct FString m_description; // 0x48

    };

    struct FYRetentionProgress //ScriptStruct Prospect.YRetentionProgress
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t daysClaimed; // 0x0
        struct FYTimestamp lastClaimTime; // 0x8
        bool claimedAll; // 0x10

    };

    struct FYPlayerMutelistEntry //ScriptStruct Prospect.YPlayerMutelistEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_mutedPlayerId; // 0x0
        bool m_chatMuted; // 0x10
        bool m_voicechatMuted; // 0x11

    };

    struct FYTwitchDropPackage //ScriptStruct Prospect.YTwitchDropPackage
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString PackageId; // 0x0
        struct TArray<struct FYInventoryItem> rewardItems; // 0x10
        struct FYTimestamp UnlockTimeUtc; // 0x20

    };

    struct FYDamageNumberData //ScriptStruct Prospect.YDamageNumberData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector m_location; // 0x0
        struct FSlateColor m_color; // 0x10
        struct FText m_message; // 0x38
        struct FVector2D m_scale; // 0x58
        float m_duration; // 0x60
        class UTexture2D* m_icon; // 0x68

    };

    struct FYNotificationDescription //ScriptStruct Prospect.YNotificationDescription
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString notificationRowName; // 0x0
        struct FString notificationId; // 0x10
        bool showOnLogin; // 0x20
        bool isAccountLevelNotification; // 0x21
        struct TMap<struct FString, struct FString> textParameters; // 0x28
        struct TMap<struct FString, struct FString> localizedParameters; // 0x78

    };

    struct FYHUDInfoEntry //ScriptStruct Prospect.YHUDInfoEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct TWeakObjectPtr<struct UObject> Object; // 0x0
        enum class EYHUDInfoPriorityCategory Category; // 0x8
        enum class EYHUDInfoMessageState messageState; // 0x9
        struct FText Text; // 0x10
        int32_t Priority; // 0x30

    };

    struct FYShopBlueprintData //ScriptStruct Prospect.YShopBlueprintData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FDataTableRowHandle m_bpShopRowHandle; // 0x0
        enum class EYItemRarityType m_itemRarity; // 0x10
        int32_t m_factionLevelRequirement; // 0x14
        struct FString m_shopItemBelongsTo; // 0x18
        int32_t m_requiredFactionLevel; // 0x28

    };

    struct FEscMenuButtonData //ScriptStruct Prospect.EscMenuButtonData
    {
    //Children Prop Count (Fields): 4
    public:

        class UYNavigationCommand* m_commandClass; // 0x0
        class UYNavigationCommand* m_command; // 0x8
        struct FText m_buttonLabel; // 0x10
        class USlateWidgetStyleAsset* m_buttonStyle; // 0x30

    };

    struct FYGameTipRow : FYDataTableRowBase //ScriptStruct Prospect.YGameTipRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_tipText; // 0x10
        float m_sustainDuration; // 0x30

    };

    struct FYItemModsInfo //ScriptStruct Prospect.YItemModsInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_weaponRowHandle; // 0x0
        struct TArray<enum class EYModificationSlotType> m_availableModSlots; // 0x10
        struct TMap<enum class EYModificationSlotType, struct FDataTableRowHandle> m_modInventoryItems; // 0x20

    };

    struct FYUIWeaponAmmoData //ScriptStruct Prospect.YUIWeaponAmmoData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_weaponMagazineSize; // 0x0
        int32_t m_totalAmmoCompatibleWithWeaponInBag; // 0x4

    };

    struct FYUIInventoryData //ScriptStruct Prospect.YUIInventoryData
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t m_componentId; // 0x0
        struct FYPlayerInventory m_bagInventoryItems; // 0x8
        struct FYPlayerInventory m_safeContainerInventoryItems; // 0x20
        struct FYPlayerInventory m_stashInventoryItems; // 0x38
        struct FYInventoryItem m_bagItem; // 0x50
        struct TMap<enum class EYPlayerSetType, struct FYInventoryItem> m_individualInventoryItems; // 0x128
        struct TArray<struct FString> m_removedItemIds; // 0x178

    };

    struct FYFactionsDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YFactionsDataTableRow
    {
    //Children Prop Count (Fields): 15
    public:

        struct FText m_name; // 0x10
        struct FText m_description; // 0x30
        struct FText m_detailedDescription; // 0x50
        bool m_showFactionLevelInShop; // 0x70
        struct FText m_factionLeaderName; // 0x78
        struct FText m_factionLeaderTitle; // 0x98
        struct FText m_factionHeadline; // 0xb8
        struct FText m_factionProgressionRewardDescriptions; // 0xd8
        struct TSoftObjectPtr<UTexture2D> m_icon; // 0xf8
        struct TSoftObjectPtr<UTexture2D> m_iconSmall; // 0x120
        class UMaterialInterface* m_vendorIcon; // 0x148
        class UMaterialInterface* m_backgroundMaterial; // 0x150
        struct TSoftObjectPtr<UTexture2D> m_alternativeBackgroundImage; // 0x158
        struct TSoftObjectPtr<UTexture2D> m_alternativeVendorIcon; // 0x180
        struct TArray<struct FYFactionLevel> m_levelsData; // 0x1a8

    };

    struct FYFactionLevel //ScriptStruct Prospect.YFactionLevel
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_level; // 0x0
        int32_t m_reputation; // 0x4

    };

    struct FYUpdateVanityData //ScriptStruct Prospect.YUpdateVanityData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_materialIndex; // 0x10

    };

    struct FYCharacterCustomizationArchetypeRow : FYVanityItemRowBase //ScriptStruct Prospect.YCharacterCustomizationArchetypeRow
    {
    //Children Prop Count (Fields): 6
    public:

        struct FText m_description; // 0x508
        enum class EYCustomizationBodyType m_bodyType; // 0x528
        struct TArray<struct FDataTableRowHandle> m_headItems; // 0x530
        struct TArray<struct FDataTableRowHandle> m_baseSuitItems; // 0x540
        struct TMap<enum class EYCustomizationCategory, struct FDataTableRowHandle> m_defaultItems; // 0x550
        struct TMap<enum class EYCustomizationCategory, struct FYCharacterArchetypeDefaultItemEntry> m_startingItems; // 0x5a0

    };

    struct FYCharacterArchetypeDefaultItemEntry //ScriptStruct Prospect.YCharacterArchetypeDefaultItemEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_materialIndex; // 0x10

    };

    struct FYCurrency //ScriptStruct BackendModels.YCurrency
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t hardCurrency; // 0x0

    };

    struct FYSeasonRewardLevel //ScriptStruct Prospect.YSeasonRewardLevel
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_unlockXP; // 0x0
        struct TArray<struct FDataTableRowHandle> m_basicRewards; // 0x8
        struct TArray<struct FDataTableRowHandle> m_paidRewards; // 0x18

    };

    struct FYPlayerSeasonGrants //ScriptStruct BackendModels.YPlayerSeasonGrants
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString seasonRowId; // 0x0
        struct TArray<struct FYPlayerSeasonGrant> grants; // 0x10

    };

    struct FYPlayerSeasonGrant //ScriptStruct BackendModels.YPlayerSeasonGrant
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Level; // 0x0
        struct FString grantRowId; // 0x8
        struct FString grantId; // 0x18
        struct FString seasonRowId; // 0x28

    };

    struct FYPlayerSeasonsData //ScriptStruct BackendModels.YPlayerSeasonsData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName seasonRowId; // 0x0
        struct FString startDateTime; // 0x8
        struct FString endDateTime; // 0x18
        int32_t xp; // 0x28
        int32_t Level; // 0x2c
        bool hasPaidPass; // 0x30

    };

    struct FYSeasonRow : FYDataTableRowBase //ScriptStruct Prospect.YSeasonRow
    {
    //Children Prop Count (Fields): 15
    public:

        struct FString m_startDateTimeUtc; // 0x10
        struct FString m_endDateTimeUtc; // 0x20
        struct TSoftObjectPtr<UDataTable> m_levelsDataTable; // 0x30
        int32_t m_premiumPassCost; // 0x58
        int32_t m_premiumPassWithSkipLevelsCost; // 0x5c
        int32_t m_premiumPassSkipLevelsAmount; // 0x60
        int32_t m_seasonNumber; // 0x64
        int32_t m_statisticsVersionMapping; // 0x68
        struct TMap<struct FString, int32_t> m_statisticVersionToRetrieveFromBackend; // 0x70
        struct FText m_displayName; // 0xc0
        struct FText m_description; // 0xe0
        struct TSoftObjectPtr<UTexture2D> m_itemLogoAssociation; // 0x100
        struct TSoftObjectPtr<UTexture2D> m_logo; // 0x128
        struct TSoftObjectPtr<UTexture2D> m_image; // 0x150
        struct TSoftObjectPtr<UTexture2D> m_imageLarge; // 0x178

    };

    struct FYShopPromotion //ScriptStruct BackendModels.YShopPromotion
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString ID; // 0x0
        struct FString shopPromotionRowId; // 0x10
        enum class EYPromotionType promotionType; // 0x20
        struct FString startDateTime; // 0x28
        int32_t layoutIdx; // 0x38
        struct TArray<struct FString> shopOfferRowIds; // 0x40

    };

    struct FYSocialNotification //ScriptStruct Prospect.YSocialNotification
    {
    //Children Prop Count (Fields): 6
    public:

        struct FYSocialProfileEntry m_associatedPlayerEntry; // 0x0
        struct FString m_id; // 0x88
        struct FText m_overridenMessage; // 0x98
        enum class EYNotifcationType m_type; // 0xb8
        enum class EYNotificationMessageType m_messageType; // 0xb9
        bool m_isPermanent; // 0xba

    };

    struct FYPlayerItemUIData //ScriptStruct Prospect.YPlayerItemUIData
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYPlayerSetTypeSimplified m_inventoryPositionType; // 0x0
        struct FString m_baseItemId; // 0x8
        struct FString m_itemBackendId; // 0x18
        enum class EYItemRarityType m_itemRarity; // 0x28

    };

    struct FYContractRow : FYDataTableRowBase //ScriptStruct Prospect.YContractRow
    {
    //Children Prop Count (Fields): 19
    public:

        bool m_isEnabled; // 0x10
        struct FText m_name; // 0x18
        struct TSoftObjectPtr<UTexture2D> m_backgroundImage; // 0x38
        struct TSoftObjectPtr<UTexture2D> m_contractTypeIcon; // 0x60
        struct FText m_contractDescription; // 0x88
        struct FText m_contractShortDescription; // 0xa8
        struct FDataTableRowHandle m_factionRowHandle; // 0xc8
        int32_t m_contractCompletedFactionReputationIncrease; // 0xd8
        struct TArray<struct FYContractObjective> m_objectives; // 0xe0
        enum class EYObjectivesProgressProcessing m_objectivesProgressProcessing; // 0xf0
        struct TArray<struct FYContractFailCondition> m_failConditions; // 0xf8
        int32_t m_contractCost; // 0x108
        enum class EYContractDifficulty m_contractDifficulty; // 0x10c
        struct TArray<struct FYContractReward> m_rewards; // 0x110
        struct FYContractProgressionUnlockData m_unlockData; // 0x120
        bool m_isMainContract; // 0x138
        struct FText m_contractChainTitle; // 0x140
        struct FText m_contractChainDescription; // 0x160
        struct TSoftObjectPtr<UTexture2D> m_contractChainImage; // 0x180

    };

    struct FYContractProgressionUnlockData //ScriptStruct Prospect.YContractProgressionUnlockData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_level; // 0x0
        struct TArray<struct FDataTableRowHandle> m_contracts; // 0x8

    };

    struct FYContractReward //ScriptStruct Prospect.YContractReward
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_rewardRowHandle; // 0x0
        int32_t m_amount; // 0x10
        bool m_isEndOfMissionChainReward; // 0x14
        bool m_isShopOrCraftingUnlock; // 0x15

    };

    struct FYContractFailCondition //ScriptStruct Prospect.YContractFailCondition
    {
    //Children Prop Count (Fields): 1
    public:

        struct FText m_failConditionName; // 0x0

    };

    struct FYContractObjective //ScriptStruct Prospect.YContractObjective
    {
    //Children Prop Count (Fields): 9
    public:

        class UTexture2D* m_objectiveIconOverride; // 0x0
        enum class EYContractObjectiveType m_objectiveType; // 0x8
        int32_t m_objectiveMaxProgress; // 0xc
        struct FText m_objectiveDescription; // 0x10
        struct FDataTableRowHandle m_deadDropLocation; // 0x30
        struct FDataTableRowHandle m_deadDropItemRowHandle; // 0x40
        struct FYActionKillConditions m_actionKillConditions; // 0x50
        struct FDataTableRowHandle m_itemToOwnRowHandle; // 0x98
        struct FYActionBaseConditions m_objectiveConditions; // 0xa8

    };

    struct FYActionBaseConditions //ScriptStruct Prospect.YActionBaseConditions
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDataTableRowHandle> m_locationConditions; // 0x0

    };

    struct FYActionKillConditions //ScriptStruct Prospect.YActionKillConditions
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYKillTypeAction m_killTarget; // 0x0
        struct TArray<enum class EYDeviceCategory> m_allowedWeaponCategories; // 0x8
        struct TArray<struct FDataTableRowHandle> m_allowedSpecificWeapons; // 0x18
        enum class EYEnemyType m_specificAIEnemyTypeToKill; // 0x28
        struct FString m_mapName; // 0x30
        bool m_onlyDuringStorm; // 0x40

    };

    struct FYRequestShowNewCustomizationData //ScriptStruct Prospect.YRequestShowNewCustomizationData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDataTableRowHandle m_requestedRowHandle; // 0x0

    };

    struct FYRequestShowTemporaryNewSelectionData //ScriptStruct Prospect.YRequestShowTemporaryNewSelectionData
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_shouldShow; // 0x0
        struct FDataTableRowHandle m_requestedRowHandle; // 0x8
        int32_t m_materialIndex; // 0x18
        enum class EYCharacterItemColumnType m_updateType; // 0x1c

    };

    struct FYActiveGlobalRuntimeVanityData //ScriptStruct Prospect.YActiveGlobalRuntimeVanityData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYGlobalVanityItem> m_activeUsableVanity; // 0x0
        struct FYGlobalVanityItem m_droppodHandle; // 0x10

    };

    struct FYGlobalVanityItem //ScriptStruct Prospect.YGlobalVanityItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_variation; // 0x10

    };

    struct FYRuntimeVehicleData //ScriptStruct Prospect.YRuntimeVehicleData
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* m_relevantAcquisitionActor; // 0x0
        class AActor* m_cachedRelatedActor; // 0x8
        enum class EYVehicleStateType m_state; // 0x10

    };

    struct FYStoredInventoryWeaponData //ScriptStruct Prospect.YStoredInventoryWeaponData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYStoredRuntimeWeaponInformation m_runtimeInformation; // 0x0
        struct FYStoredModData m_storedMods; // 0x120
        struct TArray<struct FDataTableRowHandle> m_vanityEntries; // 0x130

    };

    struct FYStoredRuntimeWeaponInformation //ScriptStruct Prospect.YStoredRuntimeWeaponInformation
    {
    //Children Prop Count (Fields): 11
    public:

        struct FYInventoryItem inventoryItem; // 0x0
        struct FString m_customItemID; // 0xd8
        enum class EYItemRarityType m_rarityType; // 0xe8
        struct FDataTableRowHandle m_rowHandle; // 0xf0
        int32_t m_ammoInClip; // 0x100
        int32_t m_maxAmmo; // 0x104
        float m_lastTimeFiresShot; // 0x108
        struct FName m_ammoTypeID; // 0x10c
        int32_t m_weaponTransportHandle; // 0x114
        enum class EYWeaponSlotType m_slotType; // 0x118
        int32_t m_zoomLevel; // 0x11c

    };

    struct FYAmmoUpdateInfo //ScriptStruct Prospect.YAmmoUpdateInfo
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t m_ammoLeftInCurrentClip; // 0x0
        float m_ammoPercent; // 0x4
        int32_t m_maxAmmo; // 0x8
        bool m_isAmmoChangeAnIncrement; // 0xc
        int32_t m_ammoLeftOutsideOfCurrentClip; // 0x10
        bool m_haveInfiniteClip; // 0x14
        struct FName m_ammoTypeID; // 0x18
        class UYWeaponPlayerControllerRuntimeComponent* m_runtimeWeaponComponent; // 0x20

    };

    struct FYImpactInitializationData //ScriptStruct Prospect.YImpactInitializationData
    {
    //Children Prop Count (Fields): 31
    public:

        struct FVector m_startLocation; // 0x0
        struct FVector m_originDamageLineTraceCheckOverride; // 0xc
        struct FVector m_direction; // 0x18
        struct FVector m_impactLocation; // 0x24
        struct FVector m_impactNormal; // 0x30
        class AActor* m_owner; // 0x40
        class AActor* m_instigator; // 0x48
        float m_damageReduction; // 0x50
        class UYDamageComponent* m_componentToDamage; // 0x58
        class USceneComponent* m_componentHit; // 0x60
        struct FDataTableRowHandle m_impactDataTableRow; // 0x68
        struct FDataTableRowHandle m_fxDataTableRow; // 0x78
        struct FDataTableRowHandle m_dataTableRowHandleContext; // 0x88
        int32_t m_transportHandle; // 0x98
        enum class EPhysicalSurface m_surfaceType; // 0x9c
        bool m_isWeakspot; // 0x9d
        bool m_isKillShot; // 0x9e
        bool m_isShieldReducedToZero; // 0x9f
        float m_damageAreaMultiplier; // 0xa0
        bool m_isFriendlyFireAllowed; // 0xa4
        bool m_replicate; // 0xa5
        bool m_replicateSkipAutonomous; // 0xa6
        bool m_skipDamageDealing; // 0xa7
        bool m_isTargeting; // 0xa8
        bool m_requiresValidWeaponImpactDataTableRow; // 0xa9
        struct FYDamageOriginInfo m_damageOriginInfo; // 0xb0
        char m_boneIndexHit; // 0xd8
        struct FName m_boneNameHit; // 0xdc
        struct FVector m_visualOriginTrailLocation; // 0xe4
        struct FGuid m_shotGuid; // 0xf0
        float m_lifetime; // 0x100

    };

    struct FYMutingState //ScriptStruct BackendModels.YMutingState
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_isMuted; // 0x0
        float m_durationMuted; // 0x4
        float m_timeStartedMuted; // 0x8
        int32_t m_amountOfTimeMuted; // 0x18
        enum class EYMuteReason m_reason; // 0x1c

    };

    struct FS_ReplayInfo //ScriptStruct Prospect.S_ReplayInfo
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ReplayName; // 0x0
        struct FString FriendlyName; // 0x10
        struct FDateTime Timestamp; // 0x20
        int32_t LengthInMS; // 0x28
        bool bIsValid; // 0x2c

    };

    struct FDebugDisplayProperty //ScriptStruct Engine.DebugDisplayProperty
    {
    //Children Prop Count (Fields): 2
    public:

        class UObject* Obj; // 0x0
        class UObject* WithinClass; // 0x8

    };

    struct FChaosPhysicsCollisionInfo //ScriptStruct ChaosSolverEngine.ChaosPhysicsCollisionInfo
    {
    //Children Prop Count (Fields): 11
    public:

        class UPrimitiveComponent* Component; // 0x0
        class UPrimitiveComponent* OtherComponent; // 0x8
        struct FVector Location; // 0x10
        struct FVector Normal; // 0x1c
        struct FVector AccumulatedImpulse; // 0x28
        struct FVector Velocity; // 0x34
        struct FVector OtherVelocity; // 0x40
        struct FVector AngularVelocity; // 0x4c
        struct FVector OtherAngularVelocity; // 0x58
        float Mass; // 0x64
        float OtherMass; // 0x68

    };

    struct FChaosCollisionEventData //ScriptStruct GeometryCollectionEngine.ChaosCollisionEventData
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Location; // 0x0
        struct FVector Normal; // 0xc
        struct FVector Velocity1; // 0x18
        struct FVector Velocity2; // 0x24
        float Mass1; // 0x30
        float Mass2; // 0x34
        struct FVector Impulse; // 0x38

    };

    struct FChaosBreakingEventData //ScriptStruct GeometryCollectionEngine.ChaosBreakingEventData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Location; // 0x0
        struct FVector Velocity; // 0xc
        float Mass; // 0x18

    };

    struct FChaosTrailingEventData //ScriptStruct GeometryCollectionEngine.ChaosTrailingEventData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Location; // 0x0
        struct FVector Velocity; // 0xc
        struct FVector AngularVelocity; // 0x18
        float Mass; // 0x24
        int32_t ParticleIndex; // 0x28

    };

    struct FChaosBreakEvent //ScriptStruct ChaosSolverEngine.ChaosBreakEvent
    {
    //Children Prop Count (Fields): 5
    public:

        class UPrimitiveComponent* Component; // 0x0
        struct FVector Location; // 0x8
        struct FVector Velocity; // 0x14
        struct FVector AngularVelocity; // 0x20
        float Mass; // 0x2c

    };

    struct FWalkableSlopeOverride //ScriptStruct Engine.WalkableSlopeOverride
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EWalkableSlopeBehavior WalkableSlopeBehavior; // 0x0
        float WalkableSlopeAngle; // 0x4

    };

    struct FBodyInstanceCore //ScriptStruct PhysicsCore.BodyInstanceCore
    {
    //Children Prop Count (Fields): 7
    public:

        char bSimulatePhysics; // 0x10
        char bOverrideMass; // 0x10
        char bEnableGravity; // 0x10
        char bAutoWeld; // 0x10
        char bStartAwake; // 0x10
        char bGenerateWakeEvents; // 0x10
        char bUpdateMassWhenScaleChanges; // 0x10

    };

    struct FBodyInstance : FBodyInstanceCore //ScriptStruct Engine.BodyInstance
    {
    //Children Prop Count (Fields): 37
    public:

        enum class ECollisionChannel ObjectType; // 0x1e
        enum class ECollisionEnabled CollisionEnabled; // 0x20
        enum class ESleepFamily SleepFamily; // 0x59
        enum class EDOFMode DOFMode; // 0x5a
        char bUseCCD; // 0x5b
        char bIgnoreAnalyticCollisions; // 0x5b
        char bNotifyRigidBodyCollision; // 0x5b
        char bLockTranslation; // 0x5b
        char bLockRotation; // 0x5b
        char bLockXTranslation; // 0x5b
        char bLockYTranslation; // 0x5b
        char bLockZTranslation; // 0x5c
        char bLockXRotation; // 0x5c
        char bLockYRotation; // 0x5c
        char bLockZRotation; // 0x5c
        char bOverrideMaxAngularVelocity; // 0x5c
        char bOverrideMaxDepenetrationVelocity; // 0x5c
        char bOverrideWalkableSlopeOnInstance; // 0x5d
        char bInterpolateWhenSubStepping; // 0x5d
        struct FName CollisionProfileName; // 0x6c
        char PositionSolverIterationCount; // 0x74
        char VelocitySolverIterationCount; // 0x75
        struct FCollisionResponse CollisionResponses; // 0x78
        float MaxDepenetrationVelocity; // 0xa8
        float MassInKgOverride; // 0xac
        float LinearDamping; // 0xb8
        float AngularDamping; // 0xbc
        struct FVector CustomDOFPlaneNormal; // 0xc0
        struct FVector COMNudge; // 0xcc
        float MassScale; // 0xd8
        struct FVector InertiaTensorScale; // 0xdc
        struct FWalkableSlopeOverride WalkableSlopeOverride; // 0xf8
        class UPhysicalMaterial* PhysMaterialOverride; // 0x108
        float MaxAngularVelocity; // 0x110
        float CustomSleepThresholdMultiplier; // 0x114
        float StabilizationThresholdMultiplier; // 0x118
        float PhysicsBlendWeight; // 0x11c

    };

    struct FCollisionResponse //ScriptStruct Engine.CollisionResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FCollisionResponseContainer ResponseToChannels; // 0x0
        struct TArray<struct FResponseChannel> ResponseArray; // 0x20

    };

    struct FResponseChannel //ScriptStruct Engine.ResponseChannel
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Channel; // 0x0
        enum class ECollisionResponse response; // 0x8

    };

    struct FCollisionResponseContainer //ScriptStruct Engine.CollisionResponseContainer
    {
    //Children Prop Count (Fields): 32
    public:

        enum class ECollisionResponse WorldStatic; // 0x0
        enum class ECollisionResponse WorldDynamic; // 0x1
        enum class ECollisionResponse Pawn; // 0x2
        enum class ECollisionResponse Visibility; // 0x3
        enum class ECollisionResponse Camera; // 0x4
        enum class ECollisionResponse PhysicsBody; // 0x5
        enum class ECollisionResponse Vehicle; // 0x6
        enum class ECollisionResponse Destructible; // 0x7
        enum class ECollisionResponse EngineTraceChannel1; // 0x8
        enum class ECollisionResponse EngineTraceChannel2; // 0x9
        enum class ECollisionResponse EngineTraceChannel3; // 0xa
        enum class ECollisionResponse EngineTraceChannel4; // 0xb
        enum class ECollisionResponse EngineTraceChannel5; // 0xc
        enum class ECollisionResponse EngineTraceChannel6; // 0xd
        enum class ECollisionResponse GameTraceChannel1; // 0xe
        enum class ECollisionResponse GameTraceChannel2; // 0xf
        enum class ECollisionResponse GameTraceChannel3; // 0x10
        enum class ECollisionResponse GameTraceChannel4; // 0x11
        enum class ECollisionResponse GameTraceChannel5; // 0x12
        enum class ECollisionResponse GameTraceChannel6; // 0x13
        enum class ECollisionResponse GameTraceChannel7; // 0x14
        enum class ECollisionResponse GameTraceChannel8; // 0x15
        enum class ECollisionResponse GameTraceChannel9; // 0x16
        enum class ECollisionResponse GameTraceChannel10; // 0x17
        enum class ECollisionResponse GameTraceChannel11; // 0x18
        enum class ECollisionResponse GameTraceChannel12; // 0x19
        enum class ECollisionResponse GameTraceChannel13; // 0x1a
        enum class ECollisionResponse GameTraceChannel14; // 0x1b
        enum class ECollisionResponse GameTraceChannel15; // 0x1c
        enum class ECollisionResponse GameTraceChannel16; // 0x1d
        enum class ECollisionResponse GameTraceChannel17; // 0x1e
        enum class ECollisionResponse GameTraceChannel18; // 0x1f

    };

    struct FCustomPrimitiveData //ScriptStruct Engine.CustomPrimitiveData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<float> Data; // 0x0

    };

    struct FLightingChannels //ScriptStruct Engine.LightingChannels
    {
    //Children Prop Count (Fields): 3
    public:

        char bChannel0; // 0x0
        char bChannel1; // 0x0
        char bChannel2; // 0x0

    };

    struct FGeometryCollectionRepData //ScriptStruct GeometryCollectionEngine.GeometryCollectionRepData
    {
    public:


    };

    struct FGeomComponentCacheParameters //ScriptStruct GeometryCollectionEngine.GeomComponentCacheParameters
    {
    //Children Prop Count (Fields): 20
    public:

        enum class EGeometryCollectionCacheType CacheMode; // 0x0
        class UGeometryCollectionCache* TargetCache; // 0x8
        float ReverseCacheBeginTime; // 0x10
        bool SaveCollisionData; // 0x14
        bool DoGenerateCollisionData; // 0x15
        int32_t CollisionDataSizeMax; // 0x18
        bool DoCollisionDataSpatialHash; // 0x1c
        float CollisionDataSpatialHashRadius; // 0x20
        int32_t MaxCollisionPerCell; // 0x24
        bool SaveBreakingData; // 0x28
        bool DoGenerateBreakingData; // 0x29
        int32_t BreakingDataSizeMax; // 0x2c
        bool DoBreakingDataSpatialHash; // 0x30
        float BreakingDataSpatialHashRadius; // 0x34
        int32_t MaxBreakingPerCell; // 0x38
        bool SaveTrailingData; // 0x3c
        bool DoGenerateTrailingData; // 0x3d
        int32_t TrailingDataSizeMax; // 0x40
        float TrailingMinSpeedThreshold; // 0x44
        float TrailingMinVolumeThreshold; // 0x48

    };

    struct FNamedInterfaceDef //ScriptStruct OnlineSubsystem.NamedInterfaceDef
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InterfaceName; // 0x0
        struct FString InterfaceClassName; // 0x8

    };

    struct FNamedInterface //ScriptStruct OnlineSubsystem.NamedInterface
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InterfaceName; // 0x0
        class UObject* InterfaceObject; // 0x8

    };

    struct FInAppPurchaseProductRequest //ScriptStruct OnlineSubsystem.InAppPurchaseProductRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ProductIdentifier; // 0x0
        bool bIsConsumable; // 0x10

    };

    struct FLoadingScreenDescription //ScriptStruct LoadingScreen.LoadingScreenDescription
    {
    //Children Prop Count (Fields): 16
    public:

        float MinimumLoadingScreenDisplayTime; // 0x0
        bool bAutoCompleteWhenLoadingCompletes; // 0x4
        bool bMoviesAreSkippable; // 0x5
        bool bIndividualMovieSkippable; // 0x6
        bool bWaitForManualStop; // 0x7
        enum class EMoviePlaybackType PlaybackType; // 0x8
        struct TArray<struct FString> MoviePaths; // 0x10
        struct TArray<struct FString> FirstLoginMoviePaths; // 0x20
        struct TArray<bool> ForceShowMovies; // 0x30
        bool bShowUIOverlay; // 0x40
        struct FText LoadingText; // 0x48
        struct TArray<struct FSoftObjectPath> Images; // 0x68
        enum class EStretch ImageStretch; // 0x78
        struct FLinearColor BackgroundColor; // 0x7c
        struct FLinearColor TipBackgroundColor; // 0x8c
        bool m_keepVisibleUntilNotified; // 0x9c

    };

    struct FYBackendInitializationData //ScriptStruct Backend.YBackendInitializationData
    {
    //Children Prop Count (Fields): 14
    public:

        struct FString m_token; // 0x0
        struct FString m_jwt; // 0x10
        struct FString m_commandLine; // 0x20
        struct FString m_host; // 0x30
        struct FString m_region; // 0x40
        struct FString m_port; // 0x50
        struct FString m_loginAuth; // 0x60
        struct FString m_loginName; // 0x70
        struct FString m_networkAdress; // 0x80
        struct FString m_loginPassword; // 0x90
        bool m_isDevelopment; // 0xa0
        int32_t m_instanceType; // 0xa4
        struct FString m_playFabId; // 0xa8
        struct FString m_userId; // 0xb8

    };

    struct FYEmptyResponseData //ScriptStruct Backend.YEmptyResponseData
    {
    public:


    };

    struct FYTestResponseData //ScriptStruct Backend.YTestResponseData
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t IntegerField; // 0x0
        float FloatField; // 0x4
        bool BooleanField; // 0x8
        struct FString StringField; // 0x10
        struct TArray<struct FString> StringArray; // 0x20
        struct TArray<uint32_t> SGD; // 0x30
        struct FTestDataStruct DataStruct; // 0x40
        struct TArray<struct FTestStructForArray> ArrayOfStructs; // 0x58

    };

    struct FTestStructForArray //ScriptStruct Backend.TestStructForArray
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTestDataStruct InternalDataStruct; // 0x0
        struct FString InternalStringField; // 0x18
        struct TArray<struct FString> InternalStringArray; // 0x28

    };

    struct FTestDataStruct //ScriptStruct Backend.TestDataStruct
    {
    //Children Prop Count (Fields): 3
    public:

        uint16_t UInt16Field; // 0x0
        int64_t Int64Field; // 0x8
        int8_t Int8Field; // 0x10

    };

    struct FYTestRequestData //ScriptStruct Backend.YTestRequestData
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t IntegerField; // 0x0
        float FloatField; // 0x4
        bool BooleanField; // 0x8
        struct FString StringField; // 0x10
        struct TArray<struct FString> StringArray; // 0x20
        struct TArray<uint32_t> SGD; // 0x30
        struct FTestDataStruct DataStruct; // 0x40
        struct TArray<struct FTestStructForArray> ArrayOfStructs; // 0x58

    };

    struct FYLoginEntry //ScriptStruct YOnlineSubsystemUtilsPlugin.YLoginEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_id; // 0x0
        struct FString m_login; // 0x10
        struct FString m_password; // 0x20

    };

    struct FInAppPurchaseReceiptInfo //ScriptStruct OnlineSubsystemUtils.InAppPurchaseReceiptInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ItemName; // 0x0
        struct FString ItemId; // 0x10
        struct FString ValidationInfo; // 0x20

    };

    struct FInAppPurchaseProductInfo2 //ScriptStruct OnlineSubsystemUtils.InAppPurchaseProductInfo2
    {
    //Children Prop Count (Fields): 12
    public:

        struct FString Identifier; // 0x0
        struct FString TransactionIdentifier; // 0x10
        struct FString DisplayName; // 0x20
        struct FString DisplayDescription; // 0x30
        struct FString DisplayPrice; // 0x40
        float RawPrice; // 0x50
        struct FString CurrencyCode; // 0x58
        struct FString CurrencySymbol; // 0x68
        struct FString DecimalSeparator; // 0x78
        struct FString GroupingSeparator; // 0x88
        struct FString ReceiptData; // 0x98
        struct TMap<struct FString, struct FString> DynamicFields; // 0xa8

    };

    struct FInAppPurchaseProductRequest2 //ScriptStruct OnlineSubsystemUtils.InAppPurchaseProductRequest2
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ProductIdentifier; // 0x0
        bool bIsConsumable; // 0x10

    };

    struct FPlayerReservation //ScriptStruct OnlineSubsystemUtils.PlayerReservation
    {
    //Children Prop Count (Fields): 5
    public:

        struct FUniqueNetIdRepl UniqueId; // 0x0
        struct FString ValidationStr; // 0x28
        struct FString Platform; // 0x38
        bool bAllowCrossplay; // 0x48
        float elapsedTime; // 0x4c

    };

    struct FPIELoginSettingsInternal //ScriptStruct OnlineSubsystemUtils.PIELoginSettingsInternal
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ID; // 0x0
        struct FString Token; // 0x10
        struct FString Type; // 0x20
        enum class EYLoginAuthType m_overridenAuthType; // 0x30
        struct TArray<char> TokenBytes; // 0x38

    };

    struct FPartyBeaconCrossplayPlatformMapping //ScriptStruct OnlineSubsystemUtils.PartyBeaconCrossplayPlatformMapping
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlatformName; // 0x0
        struct FString PlatformType; // 0x10

    };

    struct FPartyReservation //ScriptStruct OnlineSubsystemUtils.PartyReservation
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t TeamNum; // 0x0
        struct FUniqueNetIdRepl PartyLeader; // 0x8
        struct TArray<struct FPlayerReservation> PartyMembers; // 0x30
        struct TArray<struct FPlayerReservation> RemovedPartyMembers; // 0x40

    };

    struct FSpectatorReservation //ScriptStruct OnlineSubsystemUtils.SpectatorReservation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FUniqueNetIdRepl SpectatorId; // 0x0
        struct FPlayerReservation Spectator; // 0x28

    };

    struct FDaeSHA256 //ScriptStruct DaedalicAmazonAWSPlugin.DaeSHA256
    {
    public:


    };

    struct FYPendingRequest //ScriptStruct YSocialCompatibilityPlugin.YPendingRequest
    {
    public:


    };

    struct FYAttachment //ScriptStruct BackendModels.YAttachment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ID; // 0x0
        enum class EYAttachmentType attachmentType; // 0x10
        struct FString attachmentTypeId; // 0x18

    };

    struct FYBackendInsuranceInvoice //ScriptStruct BackendModels.YBackendInsuranceInvoice
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYCurrencyItem> costs; // 0x0
        struct TArray<struct FString> itemInstanceIds; // 0x10

    };

    struct FYBackendInsuredAttachments //ScriptStruct BackendModels.YBackendInsuredAttachments
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYBackendInsuredAttachment> attachments; // 0x0

    };

    struct FYBackendInsuredAttachment //ScriptStruct BackendModels.YBackendInsuredAttachment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString baseItemInstanceId; // 0x0
        struct FString attachmentId; // 0x10
        int32_t modShortId; // 0x20

    };

    struct FYBackendClaimInsurancePayoutPackageResult //ScriptStruct BackendModels.YBackendClaimInsurancePayoutPackageResult
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Index; // 0x0
        struct FYBackendInsurancePayoutPackage Package; // 0x8

    };

    struct FYBackendInsurancePayoutPackage //ScriptStruct BackendModels.YBackendInsurancePayoutPackage
    {
    //Children Prop Count (Fields): 7
    public:

        bool processingSeenByUser; // 0x0
        bool seenByUser; // 0x1
        int32_t softCurrency; // 0x4
        struct TArray<struct FYCustomItemInfo> Items; // 0x8
        bool atLeastOneVoidedByOthers; // 0x18
        bool atLeastOneVoidedBySquad; // 0x19
        struct FYTimestamp UnlockTimeUtc; // 0x20

    };

    struct FYBackendInsuranceClaims //ScriptStruct BackendModels.YBackendInsuranceClaims
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYBackendInsurancePayoutPackage> packages; // 0x0

    };

    struct FYBackendInvalidateInsuranceResult //ScriptStruct BackendModels.YBackendInvalidateInsuranceResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGameServerRequest //ScriptStruct BackendModels.YGameServerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString secret; // 0x0

    };

    struct FYBackendInvalidateInsuranceRequest : FYGameServerRequest //ScriptStruct BackendModels.YBackendInvalidateInsuranceRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x10
        struct TArray<struct FYCustomItemInfo> Items; // 0x20
        struct TArray<struct FYAttachmentInsuranceInfo> attachments; // 0x30

    };

    struct FYAttachmentInsuranceInfo //ScriptStruct BackendModels.YAttachmentInsuranceInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString insuredAttachmentId; // 0x0
        enum class EYInsuranceType insurance; // 0x10
        struct FString insuranceOwnerPlayfabId; // 0x18

    };

    struct FYSetActiveCharacterVanityResponse //ScriptStruct BackendModels.YSetActiveCharacterVanityResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYCharacterVanity returnVanity; // 0x0

    };

    struct FYCharacterVanity //ScriptStruct BackendModels.YCharacterVanity
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString UserId; // 0x0
        struct FYVanityMaterialItem head_item; // 0x10
        struct FYVanityMaterialItem boots_item; // 0x28
        struct FYVanityMaterialItem chest_item; // 0x40
        struct FYVanityMaterialItem glove_item; // 0x58
        struct FYVanityMaterialItem base_suit_item; // 0x70
        struct FYVanityMaterialItem melee_weapon_item; // 0x88
        int32_t body_type; // 0xa0
        struct FString archetype_id; // 0xa8
        int32_t slot_index; // 0xb8

    };

    struct FYVanityMaterialItem //ScriptStruct BackendModels.YVanityMaterialItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        int32_t MaterialIndex; // 0x10

    };

    struct FYDebugGrantAllVanityItemsRequest //ScriptStruct BackendModels.YDebugGrantAllVanityItemsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString vanityType; // 0x10

    };

    struct FYSetActiveCharacterVanityServerRequest : FYGameServerRequest //ScriptStruct BackendModels.YSetActiveCharacterVanityServerRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x10
        struct FYCharacterVanity desiredVanity; // 0x20

    };

    struct FYSetActiveCharacterVanityRequest //ScriptStruct BackendModels.YSetActiveCharacterVanityRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYCharacterVanity desiredVanity; // 0x0

    };

    struct FYSetActiveCharacterArchetypeResponse //ScriptStruct BackendModels.YSetActiveCharacterArchetypeResponse
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct FYCharacterVanity returnVanity; // 0x8

    };

    struct FYSetActiveCharacterArchetypeRequest //ScriptStruct BackendModels.YSetActiveCharacterArchetypeRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString archetypeId; // 0x0

    };

    struct FYGetCharacterVanityResponse //ScriptStruct BackendModels.YGetCharacterVanityResponse
    {
    //Children Prop Count (Fields): 3
    public:

        bool success; // 0x0
        struct FYCharacterVanity returnVanity; // 0x8
        struct TArray<struct FYCharacterVanity> notActiveCharacterVanity; // 0xc8

    };

    struct FYGetCharacterVanityServerRequest : FYGameServerRequest //ScriptStruct BackendModels.YGetCharacterVanityServerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x10

    };

    struct FYGetCharacterVanityRequest //ScriptStruct BackendModels.YGetCharacterVanityRequest
    {
    public:


    };

    struct FYRefreshVictimCompensationPackageResponse //ScriptStruct BackendModels.YRefreshVictimCompensationPackageResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10

    };

    struct FYRefreshVictimCompensationPackageRequest //ScriptStruct BackendModels.YRefreshVictimCompensationPackageRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYClaimVictimCompensationResponse //ScriptStruct BackendModels.YClaimVictimCompensationResponse
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10
        struct FString Error; // 0x18
        struct FYBackendClaimableVictimCompensation claimedPackage; // 0x28

    };

    struct FYBackendClaimableVictimCompensation //ScriptStruct BackendModels.YBackendClaimableVictimCompensation
    {
    //Children Prop Count (Fields): 5
    public:

        struct FDateTime Timestamp; // 0x0
        struct FString killerId; // 0x8
        struct FString Guid; // 0x18
        int32_t softCurrency; // 0x28
        struct TArray<struct FYCustomItemInfo> Items; // 0x30

    };

    struct FYClaimVictimCompensationRequest //ScriptStruct BackendModels.YClaimVictimCompensationRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Guid; // 0x0

    };

    struct FYBackendClaimableVictimCompensationWrapper //ScriptStruct BackendModels.YBackendClaimableVictimCompensationWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYBackendClaimableVictimCompensation> packages; // 0x0

    };

    struct FYUpdateKillsForPlayerRequest : FYGameServerRequest //ScriptStruct BackendModels.YUpdateKillsForPlayerRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString killerId; // 0x10
        struct TArray<struct FYPlayerKillInfo> playerKills; // 0x20

    };

    struct FYPlayerKillInfo //ScriptStruct BackendModels.YPlayerKillInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString victimId; // 0x0
        struct FYTimestamp killTime; // 0x10

    };

    struct FYDebugModifyUserSkills //ScriptStruct BackendModels.YDebugModifyUserSkills
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t skill; // 0x10
        int32_t deviation; // 0x14

    };

    struct FYDebugResetAllFactionsProgressionResponse //ScriptStruct BackendModels.YDebugResetAllFactionsProgressionResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYDebugResetAllFactionsProgressionRequest //ScriptStruct BackendModels.YDebugResetAllFactionsProgressionRequest
    {
    public:


    };

    struct FYDebugAddFactionProgressResponse //ScriptStruct BackendModels.YDebugAddFactionProgressResponse
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString factionId; // 0x20
        int32_t reputation; // 0x30

    };

    struct FYDebugAddFactionProgressRequest //ScriptStruct BackendModels.YDebugAddFactionProgressRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString factionId; // 0x0
        int32_t reputationIncrement; // 0x10

    };

    struct FYDebugResetFactionProgressResponse //ScriptStruct BackendModels.YDebugResetFactionProgressResponse
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString factionId; // 0x20
        int32_t reputation; // 0x30

    };

    struct FYDebugResetFactionProgressRequest //ScriptStruct BackendModels.YDebugResetFactionProgressRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString factionId; // 0x0

    };

    struct FYDebugSendInboxMessage //ScriptStruct BackendModels.YDebugSendInboxMessage
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString messageRowId; // 0x0
        enum class EYAttachmentType attachmentType; // 0x10
        struct FString attachmentTypeRowId; // 0x18

    };

    struct FYClearInventory //ScriptStruct BackendModels.YClearInventory
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYInviteToSquadByNameResponse //ScriptStruct BackendModels.YInviteToSquadByNameResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYSquadInviteResult Result; // 0x0

    };

    struct FYInviteToSquadByName //ScriptStruct BackendModels.YInviteToSquadByName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString targetName; // 0x0

    };

    struct FYResetSession //ScriptStruct BackendModels.YResetSession
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ServerId; // 0x0

    };

    struct FYShowCraftingMaterials //ScriptStruct BackendModels.YShowCraftingMaterials
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYRemoveAllCraftingMaterials //ScriptStruct BackendModels.YRemoveAllCraftingMaterials
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYSetCraftingMaterialAmount //ScriptStruct BackendModels.YSetCraftingMaterialAmount
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString materialName; // 0x10
        int32_t Amount; // 0x20

    };

    struct FYResetAllRooms //ScriptStruct BackendModels.YResetAllRooms
    {
    public:


    };

    struct FYRooms //ScriptStruct BackendModels.YRooms
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYRoomInfo> waitingRooms; // 0x0
        struct TArray<struct FYRoomInfo> playingRooms; // 0x10

    };

    struct FYRoomInfo //ScriptStruct BackendModels.YRoomInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString roomId; // 0x0
        struct FString ServerId; // 0x10
        struct TArray<struct FString> Players; // 0x20
        struct FString Region; // 0x30

    };

    struct FYListRooms //ScriptStruct BackendModels.YListRooms
    {
    public:


    };

    struct FYQueueuingPlayers //ScriptStruct BackendModels.YQueueuingPlayers
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYQueueDetails> queues; // 0x0
        struct FString exchangeActive; // 0x10

    };

    struct FYQueueDetails //ScriptStruct BackendModels.YQueueDetails
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString GameMode; // 0x0
        bool isRanked; // 0x10
        struct FString Region; // 0x18
        struct TArray<struct FString> Players; // 0x28

    };

    struct FYListQueues //ScriptStruct BackendModels.YListQueues
    {
    public:


    };

    struct FYForceStartResponse //ScriptStruct BackendModels.YForceStartResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYForceStartResult Error; // 0x0

    };

    struct FYForceStartMatch //ScriptStruct BackendModels.YForceStartMatch
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString GameMode; // 0x0
        bool isRanked; // 0x10
        struct FString Region; // 0x18

    };

    struct FYInventoryItems //ScriptStruct BackendModels.YInventoryItems
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYCheatResult Status; // 0x0
        struct TArray<struct FYCustomItemInfo> Items; // 0x8

    };

    struct FYShowItems //ScriptStruct BackendModels.YShowItems
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYCheatResponse //ScriptStruct BackendModels.YCheatResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYCheatResult Status; // 0x0

    };

    struct FYDebugResetPlayerResult //ScriptStruct BackendModels.YDebugResetPlayerResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10

    };

    struct FYDebugResetPlayerRequest //ScriptStruct BackendModels.YDebugResetPlayerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugResetAllGeneratorsResult //ScriptStruct BackendModels.YDebugResetAllGeneratorsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        enum class EYCheatResult Status; // 0x10

    };

    struct FYDebugResetAllGenerators //ScriptStruct BackendModels.YDebugResetAllGenerators
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugResetGeneratorResult //ScriptStruct BackendModels.YDebugResetGeneratorResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString generatorId; // 0x10
        enum class EYCheatResult Status; // 0x20

    };

    struct FYDebugResetGenerator //ScriptStruct BackendModels.YDebugResetGenerator
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString generatorId; // 0x10

    };

    struct FYDebugResetTechTreeResult //ScriptStruct BackendModels.YDebugResetTechTreeResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        enum class EYCheatResult Status; // 0x10

    };

    struct FYDebugResetTechTree //ScriptStruct BackendModels.YDebugResetTechTree
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugSetTechTreeNodeLevelResult //ScriptStruct BackendModels.YDebugSetTechTreeNodeLevelResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYDebugSetTechTreeNodeEntry> nodesThatChanged; // 0x10
        enum class EYCheatResult Status; // 0x20

    };

    struct FYDebugSetTechTreeNodeEntry //ScriptStruct BackendModels.YDebugSetTechTreeNodeEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString nodeId; // 0x0
        int32_t Level; // 0x10

    };

    struct FYDebugSetTechTreeNodeLevel //ScriptStruct BackendModels.YDebugSetTechTreeNodeLevel
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYDebugSetTechTreeNodeEntry> nodesToChange; // 0x10

    };

    struct FYDebugSetPlayerQuartersLevelResult //ScriptStruct BackendModels.YDebugSetPlayerQuartersLevelResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t Level; // 0x10
        enum class EYCheatResult Status; // 0x14

    };

    struct FYDebugSetPlayerQuartersLevel //ScriptStruct BackendModels.YDebugSetPlayerQuartersLevel
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t Level; // 0x10

    };

    struct FYDebugSetBagLimit //ScriptStruct BackendModels.YDebugSetBagLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t bagLimit; // 0x10

    };

    struct FYDebugSetStashLimit //ScriptStruct BackendModels.YDebugSetStashLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t stashLimit; // 0x10

    };

    struct FYRemoveAllCustomItems //ScriptStruct BackendModels.YRemoveAllCustomItems
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYRemoveCustomItem //ScriptStruct BackendModels.YRemoveCustomItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString ItemId; // 0x10

    };

    struct FYDebugAddCustomItem //ScriptStruct BackendModels.YDebugAddCustomItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString baseItemId; // 0x10

    };

    struct FYLiveEventModifiersConfiguration //ScriptStruct BackendModels.YLiveEventModifiersConfiguration
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYLiveEventModifier> liveEventModifiers; // 0x0

    };

    struct FYLiveEventModifier //ScriptStruct BackendModels.YLiveEventModifier
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        struct FString Value; // 0x10

    };

    struct FYLiveEventModifiersConfigurationRequest //ScriptStruct BackendModels.YLiveEventModifiersConfigurationRequest
    {
    public:


    };

    struct FYTournamentDataUpdatedPushMessage //ScriptStruct BackendModels.YTournamentDataUpdatedPushMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool isAllowed; // 0x10

    };

    struct FYTournamentDataRemoveUser //ScriptStruct BackendModels.YTournamentDataRemoveUser
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYTournamentDataAddUser //ScriptStruct BackendModels.YTournamentDataAddUser
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYTournamentDataResponse //ScriptStruct BackendModels.YTournamentDataResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool isAllowed; // 0x10

    };

    struct FYTournamentDataRequest //ScriptStruct BackendModels.YTournamentDataRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYConfigurationKickUser //ScriptStruct BackendModels.YConfigurationKickUser
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGameModeConfig //ScriptStruct BackendModels.YGameModeConfig
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYMatchmakeGameModeType m_gameModeType; // 0x0
        bool m_isRanked; // 0x1
        bool m_isEnabled; // 0x2
        bool m_isAlwaysVisible; // 0x3
        bool m_isTournamentMode; // 0x4

    };

    struct FYClientConfiguratonUpdated //ScriptStruct BackendModels.YClientConfiguratonUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYClientConfiguration config; // 0x0

    };

    struct FYClientConfiguration //ScriptStruct BackendModels.YClientConfiguration
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString surveyLink; // 0x0
        struct TArray<struct FYConfigEntry> dataTablesData; // 0x10
        struct FString matchmakingExchange; // 0x20

    };

    struct FYConfigEntry //ScriptStruct BackendModels.YConfigEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FString jsonData; // 0x10

    };

    struct FYGameModeConfigurationUpdated //ScriptStruct BackendModels.YGameModeConfigurationUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYGameModeConfigEntry updatedData; // 0x0

    };

    struct FYGameModeConfigEntry //ScriptStruct BackendModels.YGameModeConfigEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Name; // 0x0
        int32_t ranked; // 0x10
        struct FString jsonData; // 0x18
        struct FYMapRotationData mapRotationData; // 0x28

    };

    struct FYMapRotationData //ScriptStruct BackendModels.YMapRotationData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYMapData> maps; // 0x0

    };

    struct FYMapData //ScriptStruct BackendModels.YMapData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        int32_t weight; // 0x10

    };

    struct FYConfigurationUpdated //ScriptStruct BackendModels.YConfigurationUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYUpdateCategory Category; // 0x0
        struct FYConfigEntry Data; // 0x8

    };

    struct FYConfiguration //ScriptStruct BackendModels.YConfiguration
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYGameModeConfigEntry> GameModes; // 0x0

    };

    struct FYGetClientConfiguration //ScriptStruct BackendModels.YGetClientConfiguration
    {
    public:


    };

    struct FYGetConfiguration //ScriptStruct BackendModels.YGetConfiguration
    {
    public:


    };

    struct FYUpdatePlayerActiveContractsResult //ScriptStruct BackendModels.YUpdatePlayerActiveContractsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYUpdatePlayerActiveContractsRequest : FYGameServerRequest //ScriptStruct BackendModels.YUpdatePlayerActiveContractsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x10
        struct TArray<struct FYContractProgressData> contractsProgress; // 0x20

    };

    struct FYContractProgressData //ScriptStruct BackendModels.YContractProgressData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        struct TArray<int32_t> newProgress; // 0x10

    };

    struct FYGetPlayerContractsResult //ScriptStruct BackendModels.YGetPlayerContractsResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYActiveContractPlayerData> activeContracts; // 0x20
        struct FYFactionsContractsData factionsContracts; // 0x30
        int32_t refreshHours24UtcFromBackend; // 0x48

    };

    struct FYFactionsContractsData //ScriptStruct BackendModels.YFactionsContractsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYFactionContractsData> boards; // 0x0
        struct FYTimestamp lastBoardRefreshTimeUtc; // 0x10

    };

    struct FYFactionContractsData //ScriptStruct BackendModels.YFactionContractsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString factionId; // 0x0
        struct TArray<struct FYFactionContractData> contracts; // 0x10

    };

    struct FYFactionContractData //ScriptStruct BackendModels.YFactionContractData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString contractId; // 0x0

    };

    struct FYActiveContractPlayerData //ScriptStruct BackendModels.YActiveContractPlayerData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        struct TArray<int32_t> progress; // 0x10

    };

    struct FYGetActiveContractsResult //ScriptStruct BackendModels.YGetActiveContractsResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYActiveContractPlayerData> contracts; // 0x20

    };

    struct FYGetActiveContractsRequest : FYGameServerRequest //ScriptStruct BackendModels.YGetActiveContractsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x10

    };

    struct FYClaimCompletedActiveContractRewardsResult //ScriptStruct BackendModels.YClaimCompletedActiveContractRewardsResult
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString claimedContractId; // 0x20
        struct FString newContractIdOnBoard; // 0x30
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x40
        struct TArray<struct FYCustomItemInfo> ItemsGranted; // 0x50
        struct TArray<struct FYCustomItemInfo> itemsUpdatedOrRemoved; // 0x60
        struct FYPlayerFactionProgressData playerFactionProgressData; // 0x70
        struct TArray<struct FYActiveContractPlayerData> contractsActivated; // 0x88
        enum class EYClaimContractRewardsStatus Status; // 0x98
        int32_t updatedSeasonXp; // 0x9c

    };

    struct FYPlayerFactionProgressData //ScriptStruct BackendModels.YPlayerFactionProgressData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString factionId; // 0x0
        int32_t currentProgression; // 0x10

    };

    struct FYClaimCompletedActiveContractRewardsRequest //ScriptStruct BackendModels.YClaimCompletedActiveContractRewardsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        struct TArray<struct FString> contractsToUnlock; // 0x10

    };

    struct FYCancelActiveContractResult //ScriptStruct BackendModels.YCancelActiveContractResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString contractId; // 0x20

    };

    struct FYCancelActiveContractRequest //ScriptStruct BackendModels.YCancelActiveContractRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString contractId; // 0x0

    };

    struct FYPlayerContractsInfoUpdated //ScriptStruct BackendModels.YPlayerContractsInfoUpdated
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYFactionContractsData> factionsContracts; // 0x10
        struct FYTimestamp lastBoardRefreshTimeUtc; // 0x20

    };

    struct FYActiveContractsInfoUpdated //ScriptStruct BackendModels.YActiveContractsInfoUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYActiveContractPlayerData> activeContracts; // 0x10

    };

    struct FYActivateContractResult //ScriptStruct BackendModels.YActivateContractResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x20
        struct FYActiveContractPlayerData activatedContract; // 0x30
        enum class EYActivateContractRequestStatus Status; // 0x50

    };

    struct FYActivateContractRequest //ScriptStruct BackendModels.YActivateContractRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString contractId; // 0x0

    };

    struct FYActiveContractAndCorrespondingFaction //ScriptStruct BackendModels.YActiveContractAndCorrespondingFaction
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString contractId; // 0x0
        struct FString factionId; // 0x10

    };

    struct FYDebugForceRefreshContractsBoardsResult //ScriptStruct BackendModels.YDebugForceRefreshContractsBoardsResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYActiveContractPlayerData> activeContracts; // 0x20
        struct FYFactionsContractsData factionsContracts; // 0x30

    };

    struct FYDebugForceRefreshContractsBoardsRequest //ScriptStruct BackendModels.YDebugForceRefreshContractsBoardsRequest
    {
    public:


    };

    struct FYDebugClearSpecificCompletedContractResult //ScriptStruct BackendModels.YDebugClearSpecificCompletedContractResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYDebugClearSpecificCompletedContractRequest //ScriptStruct BackendModels.YDebugClearSpecificCompletedContractRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString contractId; // 0x10

    };

    struct FYDebugClearAllCompletedContractsResult //ScriptStruct BackendModels.YDebugClearAllCompletedContractsResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYDebugClearAllCompletedContractsRequest //ScriptStruct BackendModels.YDebugClearAllCompletedContractsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugRemoveAllActiveContractsResult //ScriptStruct BackendModels.YDebugRemoveAllActiveContractsResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FString> cancelledContractsIds; // 0x20

    };

    struct FYDebugRemoveAllActiveContractsRequest //ScriptStruct BackendModels.YDebugRemoveAllActiveContractsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugGivePlayerContractRewardsResult //ScriptStruct BackendModels.YDebugGivePlayerContractRewardsResult
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString contractId; // 0x20
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x30
        struct TArray<struct FYCustomItemInfo> itemsGrantedOrUpdated; // 0x40
        struct FYPlayerFactionProgressData playerFactionProgressData; // 0x50

    };

    struct FYDebugGivePlayerContractRewardsRequest //ScriptStruct BackendModels.YDebugGivePlayerContractRewardsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString contractId; // 0x10

    };

    struct FYDebugSetActiveContractProgressResult //ScriptStruct BackendModels.YDebugSetActiveContractProgressResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString contractId; // 0x20
        int32_t newProgress; // 0x30
        struct TArray<struct FYCustomItemInfo> updatedItems; // 0x38

    };

    struct FYDebugSetActiveContractProgressRequest //ScriptStruct BackendModels.YDebugSetActiveContractProgressRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString contractId; // 0x10
        int32_t objectiveIndex; // 0x20
        int32_t newProgress; // 0x24

    };

    struct FYDebugActivateContractResult //ScriptStruct BackendModels.YDebugActivateContractResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x20
        struct FYActiveContractPlayerData activatedContract; // 0x30
        enum class EYActivateContractRequestStatus Status; // 0x50

    };

    struct FYDebugActivateContractRequest //ScriptStruct BackendModels.YDebugActivateContractRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString contractId; // 0x10

    };

    struct FYItemCurrentlyBeingCrafted //ScriptStruct BackendModels.YItemCurrentlyBeingCrafted
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ItemId; // 0x0
        struct FYTimestamp utcTimestampWhenCraftingStarted; // 0x10

    };

    struct FYRepairItemResult //ScriptStruct BackendModels.YRepairItemResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x20
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x30

    };

    struct FYRepairItemRequest //ScriptStruct BackendModels.YRepairItemRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString instanceId; // 0x0

    };

    struct FYSellItemsClientResult //ScriptStruct BackendModels.YSellItemsClientResult
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        struct TArray<struct FString> scrappedItemIds; // 0x20
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x30
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x40
        struct FYPlayerFactionProgressData playerFactionProgressionData; // 0x50

    };

    struct FYSellItemsClientRequest //ScriptStruct BackendModels.YSellItemsClientRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FString> ids; // 0x0
        struct FString factionId; // 0x10
        struct FYSellInventoryUpdate inventoryUpdateData; // 0x20

    };

    struct FYSellInventoryUpdate //ScriptStruct BackendModels.YSellInventoryUpdate
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FString> itemsToRemove; // 0x0
        struct TArray<struct FYCustomItemInfo> itemsToAdd; // 0x10
        struct TArray<struct FYCustomItemInfo> itemsToUpdateAmount; // 0x20

    };

    struct FYSkipItemCraftingClientResult //ScriptStruct BackendModels.YSkipItemCraftingClientResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FYCraftedItemData craftedItemData; // 0x20
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x40

    };

    struct FYCraftedItemData //ScriptStruct BackendModels.YCraftedItemData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYCustomItemInfo> itemsGrantedOrUpdated; // 0x0
        struct FString blueprintName; // 0x10

    };

    struct FYSkipItemCraftingClientRequest //ScriptStruct BackendModels.YSkipItemCraftingClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool useOptionalCosts; // 0x0

    };

    struct FYStopItemCraftingClientResult //ScriptStruct BackendModels.YStopItemCraftingClientResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FYCraftedItemData craftedItemData; // 0x20

    };

    struct FYStopItemCraftingClientRequest //ScriptStruct BackendModels.YStopItemCraftingClientRequest
    {
    public:


    };

    struct FYStartItemCraftingClientResult //ScriptStruct BackendModels.YStartItemCraftingClientResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x20
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x30
        struct TArray<struct FString> deletedItemsIds; // 0x40

    };

    struct FYStartItemCraftingClientRequest //ScriptStruct BackendModels.YStartItemCraftingClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString baseItemId; // 0x0

    };

    struct FYPurchaseWeaponShopItemResult //ScriptStruct BackendModels.YPurchaseWeaponShopItemResult
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x20
        struct TArray<struct FYCustomItemInfo> itemsGrantedOrUpdated; // 0x30
        int32_t itemRarity; // 0x40
        int32_t purchaseAmount; // 0x44
        struct FString blueprintName; // 0x48
        struct FString shopItemBelongsTo; // 0x58

    };

    struct FYPurchaseWeaponShopItemRequest //ScriptStruct BackendModels.YPurchaseWeaponShopItemRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString blueprintName; // 0x0
        int32_t blueprintRarity; // 0x10
        int32_t purchaseAmount; // 0x14
        struct FString baseItemId; // 0x18
        struct FString shopItemBelongsTo; // 0x28

    };

    struct FYDebugRevokeEntitlement //ScriptStruct BackendModels.YDebugRevokeEntitlement
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString entitlementName; // 0x0

    };

    struct FYDebugClearEntitlements //ScriptStruct BackendModels.YDebugClearEntitlements
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString epicAccountId; // 0x0

    };

    struct FYEntitlements //ScriptStruct BackendModels.YEntitlements
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> entitlements; // 0x0

    };

    struct FYFetchEntitlements //ScriptStruct BackendModels.YFetchEntitlements
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString epicAccountId; // 0x0
        struct FString epicAccessToken; // 0x10

    };

    struct FYGetUsersDataResponse //ScriptStruct BackendModels.YGetUsersDataResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYUserData> usersData; // 0x0
        enum class EYResponse Result; // 0x10

    };

    struct FYUserData //ScriptStruct BackendModels.YUserData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString epicId; // 0x0
        struct FString UserId; // 0x10
        struct FString Username; // 0x20

    };

    struct FYGetUsersDataByNamesRequest //ScriptStruct BackendModels.YGetUsersDataByNamesRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userNames; // 0x0

    };

    struct FYGetUsersDataByUserIdsRequest //ScriptStruct BackendModels.YGetUsersDataByUserIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYGetUsersDataByEpicIdsRequest //ScriptStruct BackendModels.YGetUsersDataByEpicIdsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> epicIds; // 0x0

    };

    struct FYGetFactionsProgressionResult //ScriptStruct BackendModels.YGetFactionsProgressionResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPlayerFactionProgressData> factions; // 0x0

    };

    struct FYGetFactionsProgressionRequest //ScriptStruct BackendModels.YGetFactionsProgressionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYSetFortunaPassDailyResetTimeResult //ScriptStruct BackendModels.YSetFortunaPassDailyResetTimeResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYSetFortunaPassDailyResetTimeRequest //ScriptStruct BackendModels.YSetFortunaPassDailyResetTimeRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYTimestamp minutesToReset; // 0x0

    };

    struct FYRequestFortunaPassSkipToLevelRequest //ScriptStruct BackendModels.YRequestFortunaPassSkipToLevelRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Level; // 0x0

    };

    struct FYRequestFortunaPassSkipToLevelResult //ScriptStruct BackendModels.YRequestFortunaPassSkipToLevelResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        enum class EYFortunaPassToastReponseType errorType; // 0x20
        int32_t updatedAurumBalance; // 0x24

    };

    struct FYDebugSetFortunaPassPremiumUnlockRequest //ScriptStruct BackendModels.YDebugSetFortunaPassPremiumUnlockRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool newState; // 0x0

    };

    struct FYRequestUnlockFortunaPassPremiumTrackResult //ScriptStruct BackendModels.YRequestUnlockFortunaPassPremiumTrackResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        enum class EYFortunaPassToastReponseType errorType; // 0x20
        int32_t updatedAurumBalance; // 0x24

    };

    struct FYRequestUnlockFortunaPassPremiumTrackRequest //ScriptStruct BackendModels.YRequestUnlockFortunaPassPremiumTrackRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool withSkipLevels; // 0x0

    };

    struct FYFortunaPassClaimRewardsRequest //ScriptStruct BackendModels.YFortunaPassClaimRewardsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSet<struct FName> rewardsIds; // 0x0

    };

    struct FYFortunaPassClaimRewardsResult //ScriptStruct BackendModels.YFortunaPassClaimRewardsResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        enum class EYFortunaPassToastReponseType errorType; // 0x20
        struct TArray<struct FYCustomItemInfo> GrantedItems; // 0x28
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x38

    };

    struct FYResetFortunaPassActionsCapPlayerResult //ScriptStruct BackendModels.YResetFortunaPassActionsCapPlayerResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYResetFortunaPassActionsCapPlayerRequest //ScriptStruct BackendModels.YResetFortunaPassActionsCapPlayerRequest
    {
    public:


    };

    struct FYStoreUpdatedPlayerActionsDediResult //ScriptStruct BackendModels.YStoreUpdatedPlayerActionsDediResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        int32_t totalSeasonXp; // 0x20
        struct FYCompletedActionsUserData updatedActions; // 0x28

    };

    struct FYCompletedActionsUserData //ScriptStruct BackendModels.YCompletedActionsUserData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<struct FString, struct FYCompletedActionUserData> actions; // 0x0
        struct FYTimestamp lastDailyCapResetTimeUtc; // 0x50

    };

    struct FYCompletedActionUserData //ScriptStruct BackendModels.YCompletedActionUserData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ActionId; // 0x0
        int32_t NumOfTimesActionCompleted; // 0x10

    };

    struct FYStoreUpdatedPlayerActionsDediRequest : FYGameServerRequest //ScriptStruct BackendModels.YStoreUpdatedPlayerActionsDediRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x10
        struct FYCompletedActionsUserData progressedOrNewActions; // 0x20
        int32_t gainedSeasonXp; // 0x78

    };

    struct FYPassiveGeneratorCrateResultsReceived //ScriptStruct BackendModels.YPassiveGeneratorCrateResultsReceived
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYPassiveGenerator Source; // 0x0
        struct TArray<struct FYCurrencyItem> currencies; // 0x18
        struct TArray<struct FYCustomItemInfo> customItems; // 0x28

    };

    struct FYPassiveGenerator //ScriptStruct BackendModels.YPassiveGenerator
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString generatorId; // 0x0
        struct FYTimestamp lastClaimTime; // 0x10

    };

    struct FYPassiveGeneratorsUpdated //ScriptStruct BackendModels.YPassiveGeneratorsUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYPassiveGenerator> updatedGenerators; // 0x10

    };

    struct FYClaimGeneratorIncomeClientResult //ScriptStruct BackendModels.YClaimGeneratorIncomeClientResult
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString generatorId; // 0x20
        struct TArray<struct FYCurrencyItem> changedCurrenciesBalances; // 0x30
        struct TArray<struct FYCustomItemInfo> GrantedItems; // 0x40
        struct FYTimestamp lastClaimTime; // 0x50

    };

    struct FYClaimGeneratorIncomeClientRequest //ScriptStruct BackendModels.YClaimGeneratorIncomeClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString generatorId; // 0x0

    };

    struct FYGlobalVanityUpdateResultData //ScriptStruct BackendModels.YGlobalVanityUpdateResultData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYUpdateGlobalVanityResult returnResult; // 0x0
        struct FYGlobalVanityData globalVanity; // 0x8

    };

    struct FYGlobalVanityData //ScriptStruct BackendModels.YGlobalVanityData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYVanityMaterialItem> bannerItems; // 0x10
        struct FYVanityMaterialItem deathEmote_item; // 0x20
        struct TArray<struct FYVanityMaterialItem> normalEmoteItems; // 0x38
        struct FYVanityMaterialItem droppod_item; // 0x48
        struct TArray<struct FYVanityMaterialItem> sprayItems; // 0x60
        struct FYVanityMaterialItem pet_item; // 0x70
        int32_t slot_index; // 0x88

    };

    struct FYDebugUpdateGlobalVanityData //ScriptStruct BackendModels.YDebugUpdateGlobalVanityData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString ID; // 0x10
        int32_t variation; // 0x20

    };

    struct FYUpdateGlobalVanity //ScriptStruct BackendModels.YUpdateGlobalVanity
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString ID; // 0x10
        int32_t variation; // 0x20
        int32_t Slot; // 0x24

    };

    struct FYGetPlayerGlobalVanity //ScriptStruct BackendModels.YGetPlayerGlobalVanity
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugSetActiveGlobalVanityResponse //ScriptStruct BackendModels.YDebugSetActiveGlobalVanityResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYActiveGlobalVanity activeVanity; // 0x0
        struct TArray<struct FYCustomItemInfo> updatedVanityItems; // 0x20

    };

    struct FYActiveGlobalVanity //ScriptStruct BackendModels.YActiveGlobalVanity
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> activeGlobalVanityIds; // 0x0
        struct FString droppodId; // 0x10

    };

    struct FYSetActiveGlobalVanityResponse //ScriptStruct BackendModels.YSetActiveGlobalVanityResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYActiveGlobalVanity activeVanity; // 0x0

    };

    struct FYSetActiveGlobalVanityServerRequest : FYGameServerRequest //ScriptStruct BackendModels.YSetActiveGlobalVanityServerRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x10
        struct FYActiveGlobalVanity activeVanity; // 0x20

    };

    struct FYSetActiveGlobalVanityRequest //ScriptStruct BackendModels.YSetActiveGlobalVanityRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYActiveGlobalVanity activeVanity; // 0x0

    };

    struct FYGetActiveGlobalVanityResponse //ScriptStruct BackendModels.YGetActiveGlobalVanityResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYActiveGlobalVanity activeVanity; // 0x0

    };

    struct FYGetActiveGlobalVanityServerRequest : FYGameServerRequest //ScriptStruct BackendModels.YGetActiveGlobalVanityServerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x10

    };

    struct FYGetActiveGlobalVanityRequest //ScriptStruct BackendModels.YGetActiveGlobalVanityRequest
    {
    public:


    };

    struct FYGetGlobalVanity //ScriptStruct BackendModels.YGetGlobalVanity
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYClaimGrantsResponse //ScriptStruct BackendModels.YClaimGrantsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYClaimGrantsResponseInfo> claimGrantsResponseInfos; // 0x0

    };

    struct FYClaimGrantsResponseInfo //ScriptStruct BackendModels.YClaimGrantsResponseInfo
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYClaimGrantResult claimGrantResult; // 0x0
        struct FYGrant grant; // 0x8

    };

    struct FYGrant //ScriptStruct BackendModels.YGrant
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ID; // 0x0
        struct FString grantRowId; // 0x10
        enum class EYClaimGrantState claimState; // 0x20

    };

    struct FYClaimGrants //ScriptStruct BackendModels.YClaimGrants
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> grantIds; // 0x0

    };

    struct FYGrantsData //ScriptStruct BackendModels.YGrantsData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYGrant> grants; // 0x0

    };

    struct FYGetGrantsData //ScriptStruct BackendModels.YGetGrantsData
    {
    public:


    };

    struct FYGrantRow : FTableRowBase //ScriptStruct BackendModels.YGrantRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYGrantEntry> m_grants; // 0x8
        bool m_autoClaim; // 0x18

    };

    struct FYGrantEntry //ScriptStruct BackendModels.YGrantEntry
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYGrantType m_grantType; // 0x0
        struct FDataTableRowHandle m_grantTypeRowHandle; // 0x8
        int32_t m_amount; // 0x18

    };

    struct FYUpdateReadStateResponse //ScriptStruct BackendModels.YUpdateReadStateResponse
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYUpdateReadStateResult returnResult; // 0x0
        struct FString messageId; // 0x8
        bool hasRead; // 0x18

    };

    struct FYUpdateReadState //ScriptStruct BackendModels.YUpdateReadState
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString messageId; // 0x0
        bool hasRead; // 0x10

    };

    struct FYInboxMessageRemoved //ScriptStruct BackendModels.YInboxMessageRemoved
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ID; // 0x0

    };

    struct FYInboxMessagesDataUpdated //ScriptStruct BackendModels.YInboxMessagesDataUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYInboxMessage> inboxMessages; // 0x0

    };

    struct FYInboxMessage //ScriptStruct BackendModels.YInboxMessage
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ID; // 0x0
        struct FString inboxMessageRowId; // 0x10
        struct TArray<struct FYAttachment> attachments; // 0x20
        struct FYTimestamp receivedDate; // 0x30
        bool hasRead; // 0x38

    };

    struct FYGetInboxMessagesData //ScriptStruct BackendModels.YGetInboxMessagesData
    {
    public:


    };

    struct FYEntitlementRow : FTableRowBase //ScriptStruct BackendModels.YEntitlementRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_entitlementName; // 0x8
        struct FDataTableRowHandle m_messageId; // 0x18
        struct TArray<struct FDataTableRowHandle> m_grants; // 0x28

    };

    struct FYInboxMessageRow : FTableRowBase //ScriptStruct BackendModels.YInboxMessageRow
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYInboxMessageType m_messageType; // 0x8
        bool m_autoOpen; // 0x9
        struct TSoftObjectPtr<UTexture2D> m_bannerImage; // 0x10
        struct FText m_sender; // 0x38
        struct FText m_subject; // 0x58
        struct FText m_message; // 0x78

    };

    struct FYRequestCheatUpgradeNode //ScriptStruct BackendModels.YRequestCheatUpgradeNode
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString nodeId; // 0x0

    };

    struct FYInsuredAttachment //ScriptStruct BackendModels.YInsuredAttachment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_baseItemInstanceId; // 0x0
        struct FString m_attachmentId; // 0x10
        int32_t m_modShortId; // 0x20

    };

    struct FYModifyCustomItemResult //ScriptStruct BackendModels.YModifyCustomItemResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10
        struct TArray<struct FYCustomItemInfo> itemsUpdated; // 0x18
        struct TArray<struct FString> itemsRemoved; // 0x28

    };

    struct FYModifyCustomItem //ScriptStruct BackendModels.YModifyCustomItem
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FYCustomItemInfo itemToUpdate; // 0x10
        struct FString modIdUsed; // 0xb0

    };

    struct FYUpdateCustomItemsResult //ScriptStruct BackendModels.YUpdateCustomItemsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct FString UserId; // 0x8

    };

    struct FYUpdateCustomItemsRequest //ScriptStruct BackendModels.YUpdateCustomItemsRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYCustomItemInfo> itemsToUpdate; // 0x10

    };

    struct FYSetUpdated //ScriptStruct BackendModels.YSetUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FYPlayerSetItemsEntry newSet; // 0x10

    };

    struct FYPlayerSetItemsEntry //ScriptStruct BackendModels.YPlayerSetItemsEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYPlayerSet SetData; // 0x0
        struct TArray<struct FYCustomItemInfo> Items; // 0x70

    };

    struct FYPlayerSet //ScriptStruct BackendModels.YPlayerSet
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString shield; // 0x0
        struct FString helmet; // 0x10
        struct FString weaponOne; // 0x20
        struct FString weaponTwo; // 0x30
        struct FString bag; // 0x40
        struct FString bagItemsAsJsonStr; // 0x50
        struct FString safeItemsAsJsonStr; // 0x60

    };

    struct FYUpdateMatchInventoryRequest : FYGameServerRequest //ScriptStruct BackendModels.YUpdateMatchInventoryRequest
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString UserId; // 0x10
        enum class EYCompleteInventoryUpdateReason Reason; // 0x20
        struct FYPlayerSet newSet; // 0x28
        struct TArray<struct FYCustomItemInfo> itemsToAdd; // 0x98
        struct TArray<struct FYCustomItemInfo> itemsToUpdateAmount; // 0xa8
        struct TArray<struct FString> itemsToRemove; // 0xb8
        struct TArray<struct FString> itemsToProcessInsurance; // 0xc8
        struct TArray<struct FString> attachmentsInsuredByOwner; // 0xd8
        struct TArray<struct FYAttachmentInsuranceInfo> attachmentsInsuredByOthers; // 0xe8
        struct FString killerUserId; // 0xf8
        struct FYTimestamp deathTime; // 0x108

    };

    struct FYUpdateInventoryResultBase //ScriptStruct BackendModels.YUpdateInventoryResultBase
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString UserId; // 0x8
        struct FString Error; // 0x18
        struct FYPlayerSet newSet; // 0x28
        struct TArray<struct FYCustomItemInfo> itemsAdded; // 0x98
        struct TArray<struct FString> itemsUpdated; // 0xa8
        struct TArray<struct FString> itemsRemoved; // 0xb8

    };

    struct FYUpdateMatchInventoryResult : FYUpdateInventoryResultBase //ScriptStruct BackendModels.YUpdateMatchInventoryResult
    {
    public:


    };

    struct FYUpdateStationInventoryResult : FYUpdateInventoryResultBase //ScriptStruct BackendModels.YUpdateStationInventoryResult
    {
    public:


    };

    struct FYUpdateStationInventoryRequest //ScriptStruct BackendModels.YUpdateStationInventoryRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYPlayerSet newSet; // 0x0
        struct TArray<struct FYCustomItemInfo> itemsToAdd; // 0x70
        struct TArray<struct FYCustomItemInfo> itemsToUpdateAmount; // 0x80
        struct TArray<struct FString> itemsToRemove; // 0x90

    };

    struct FYRemoveInventoryItemRequest //ScriptStruct BackendModels.YRemoveInventoryItemRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FString> itemIdsToRemove; // 0x10

    };

    struct FYGetPlayerSetsResult //ScriptStruct BackendModels.YGetPlayerSetsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct TArray<struct FYPlayerSetItemsEntry> entries; // 0x8

    };

    struct FYGetPlayersSets //ScriptStruct BackendModels.YGetPlayersSets
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYGetUsersCurrenciesResult //ScriptStruct BackendModels.YGetUsersCurrenciesResult
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYGetUsersCurrenciesResult Result; // 0x0
        struct TArray<struct FYUserCurrenciesItems> currencyItems; // 0x8

    };

    struct FYGetUsersCurrencies //ScriptStruct BackendModels.YGetUsersCurrencies
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYGetUserCharacterVisualizationData //ScriptStruct BackendModels.YGetUserCharacterVisualizationData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> UserId; // 0x0

    };

    struct FYInventoryUpdated //ScriptStruct BackendModels.YInventoryUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYInventory Inventory; // 0x0

    };

    struct FYInventory //ScriptStruct BackendModels.YInventory
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FYUserCurrenciesItems Currency; // 0x10
        struct TArray<struct FYCustomItemInfo> Items; // 0x30
        struct TArray<struct FYVanityBackendItemInfo> vanity; // 0x40
        struct TArray<struct FYLoreBackendItemInfo> loreItems; // 0x50

    };

    struct FYLoreBackendItemInfo //ScriptStruct BackendModels.YLoreBackendItemInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString loreItemId; // 0x0
        int32_t Amount; // 0x10

    };

    struct FYVanityBackendItemInfo //ScriptStruct BackendModels.YVanityBackendItemInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString vanity_id; // 0x0
        int32_t Amount; // 0x10

    };

    struct FYVanityClearCustomItem //ScriptStruct BackendModels.YVanityClearCustomItem
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString custom_id; // 0x10
        int32_t slotId; // 0x20

    };

    struct FYVanityUpdateAmountResultData //ScriptStruct BackendModels.YVanityUpdateAmountResultData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYVanityUpdateResult returnResult; // 0x0
        struct FYVanityAmountUpdatedData vanityAmountUpdated; // 0x8

    };

    struct FYVanityAmountUpdatedData //ScriptStruct BackendModels.YVanityAmountUpdatedData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYVanityBackendItemInfo> updatedVanityItems; // 0x0

    };

    struct FYVanitySetCustomItemResultData //ScriptStruct BackendModels.YVanitySetCustomItemResultData
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYVanityUpdateResult return_result; // 0x0
        struct FString UserId; // 0x8
        struct TArray<struct FYCustomItemInfo> updated_items; // 0x18
        struct TArray<struct FYVanityBackendItemInfo> updated_vanity_items; // 0x28

    };

    struct FYVanitySetCustomItemData //ScriptStruct BackendModels.YVanitySetCustomItemData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString custom_id; // 0x10
        struct FString vanity_id; // 0x20
        int32_t slotId; // 0x30

    };

    struct FYCharacterVanityUpdateArchetype //ScriptStruct BackendModels.YCharacterVanityUpdateArchetype
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString archetype_id; // 0x10

    };

    struct FYCharacterCustomizationSetCharacterSlot //ScriptStruct BackendModels.YCharacterCustomizationSetCharacterSlot
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t requested_slot; // 0x10

    };

    struct FYCharacterVanityResetAppearance //ScriptStruct BackendModels.YCharacterVanityResetAppearance
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYCharacterVanityUpdateBodyPart //ScriptStruct BackendModels.YCharacterVanityUpdateBodyPart
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString ID; // 0x10
        int32_t material_index; // 0x20
        struct FString archetypeId; // 0x28

    };

    struct FYLoreItemsAdded //ScriptStruct BackendModels.YLoreItemsAdded
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYLoreBackendItemInfo> loreItems; // 0x0

    };

    struct FYItemsRemoved //ScriptStruct BackendModels.YItemsRemoved
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FString> removedItems; // 0x10

    };

    struct FYBagLimitUpdated //ScriptStruct BackendModels.YBagLimitUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t bagLimit; // 0x10

    };

    struct FYStashLimitUpdated //ScriptStruct BackendModels.YStashLimitUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t stashLimit; // 0x10

    };

    struct FYItemsUpdated //ScriptStruct BackendModels.YItemsUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYCustomItemInfo> updatedItems; // 0x0
        struct FString UserId; // 0x10

    };

    struct FYCurrenciesUpdated //ScriptStruct BackendModels.YCurrenciesUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYCurrencyItem> updatedCurrencies; // 0x10

    };

    struct FYGetAllPlayfabUserDataResult //ScriptStruct BackendModels.YGetAllPlayfabUserDataResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool success; // 0x10

    };

    struct FYGetAllPlayfabUserData //ScriptStruct BackendModels.YGetAllPlayfabUserData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYPlayerQuartersLevelResultData //ScriptStruct BackendModels.YPlayerQuartersLevelResultData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t Level; // 0x10
        struct FYTimestamp upgradeStartedTime; // 0x18

    };

    struct FYGetPlayerQuartersLevel //ScriptStruct BackendModels.YGetPlayerQuartersLevel
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGetPlayerInventoriesResult //ScriptStruct BackendModels.YGetPlayerInventoriesResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct TArray<struct FYInventory> entries; // 0x8

    };

    struct FYGetPlayerInventoriesLimitsResult //ScriptStruct BackendModels.YGetPlayerInventoriesLimitsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct TArray<struct FYPlayerInventoryLimitResultData> entries; // 0x8

    };

    struct FYPlayerInventoryLimitResultData //ScriptStruct BackendModels.YPlayerInventoryLimitResultData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        int32_t inventoryStashLimit; // 0x10
        int32_t inventoryBagLimit; // 0x14
        int32_t inventorySafeLimit; // 0x18

    };

    struct FYItemMetaData //ScriptStruct BackendModels.YItemMetaData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t A; // 0x0
        int32_t D; // 0x4
        struct FString I; // 0x8
        struct FString IO; // 0x18

    };

    struct FYInventoryInfoUserEntry //ScriptStruct BackendModels.YInventoryInfoUserEntry
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t inventoryStashLimit; // 0x0
        int32_t inventoryBagLimit; // 0x4

    };

    struct FYDebugOnPlayerLoginTOCMigrationRequest //ScriptStruct BackendModels.YDebugOnPlayerLoginTOCMigrationRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString epicId; // 0x0

    };

    struct FYOnPlayerLoginTOCMigrationResponse //ScriptStruct BackendModels.YOnPlayerLoginTOCMigrationResponse
    {
    public:


    };

    struct FYOnPlayerLoginTOCMigrationRequest //ScriptStruct BackendModels.YOnPlayerLoginTOCMigrationRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString epicId; // 0x0

    };

    struct FYGetPlayerInventories //ScriptStruct BackendModels.YGetPlayerInventories
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYGetPlayerInventoryLimit //ScriptStruct BackendModels.YGetPlayerInventoryLimit
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGetInventory //ScriptStruct BackendModels.YGetInventory
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYItemAmountToUpdateData //ScriptStruct BackendModels.YItemAmountToUpdateData
    {
    public:


    };

    struct FYMetaDefaultItemDataTableRow : FTableRowBase //ScriptStruct BackendModels.YMetaDefaultItemDataTableRow
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYDefaultItemSlot Slot; // 0x8
        struct FDataTableRowHandle default_vanity; // 0x10
        struct FDataTableRowHandle default_secondary_vanity; // 0x20

    };

    struct FYItemStatOldValNewVal //ScriptStruct BackendModels.YItemStatOldValNewVal
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_itemStatType; // 0x0
        int32_t m_currentVal; // 0x4
        int32_t m_newVal; // 0x8

    };

    struct FYVanityData //ScriptStruct BackendModels.YVanityData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t P; // 0x0
        int32_t S; // 0x4

    };

    struct FYDebugGrantItemResponse //ScriptStruct BackendModels.YDebugGrantItemResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> updatedItems; // 0x20

    };

    struct FYDebugGrantItemRequest //ScriptStruct BackendModels.YDebugGrantItemRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString ItemId; // 0x10

    };

    struct FYDebugGrantVanityResponse //ScriptStruct BackendModels.YDebugGrantVanityResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> updatedVanityItems; // 0x20

    };

    struct FYDebugGrantVanityRequest //ScriptStruct BackendModels.YDebugGrantVanityRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString vanityId; // 0x10

    };

    struct FYDebugRemoveAllItemsFromPlayerResponse //ScriptStruct BackendModels.YDebugRemoveAllItemsFromPlayerResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> returnedItems; // 0x20

    };

    struct FYDebugRemoveAllItemsFromPlayerRequest //ScriptStruct BackendModels.YDebugRemoveAllItemsFromPlayerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugRemoveAllMaterialsFromPlayerResponse //ScriptStruct BackendModels.YDebugRemoveAllMaterialsFromPlayerResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> returnedMaterials; // 0x20

    };

    struct FYDebugRemoveAllMaterialsFromPlayerRequest //ScriptStruct BackendModels.YDebugRemoveAllMaterialsFromPlayerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugSetAllCraftingMaterialsAmountResponse //ScriptStruct BackendModels.YDebugSetAllCraftingMaterialsAmountResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> changedMaterials; // 0x20

    };

    struct FYDebugSetAllCraftingMaterialsAmount //ScriptStruct BackendModels.YDebugSetAllCraftingMaterialsAmount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t materialAmount; // 0x10

    };

    struct FYDebugSetCraftingMaterialAmountResponse //ScriptStruct BackendModels.YDebugSetCraftingMaterialAmountResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct TArray<struct FYCustomItemInfo> changedMaterial; // 0x20

    };

    struct FYDebugSetCraftingMaterialAmount //ScriptStruct BackendModels.YDebugSetCraftingMaterialAmount
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString materialName; // 0x10
        int32_t materialAmount; // 0x20

    };

    struct FYDebugVanityUpdateAmount //ScriptStruct BackendModels.YDebugVanityUpdateAmount
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString vanity_id; // 0x10
        int32_t Amount; // 0x20

    };

    struct FYDebugGiveCurrenciesResult //ScriptStruct BackendModels.YDebugGiveCurrenciesResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYCurrencyItem> updatedCurrencies; // 0x10

    };

    struct FYDebugGiveCurrenciesRequest //ScriptStruct BackendModels.YDebugGiveCurrenciesRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString userPlatform; // 0x10
        struct TArray<struct FYCurrencyItem> currencies; // 0x20

    };

    struct FYRequestIsPlayerAssignedToSessionResult //ScriptStruct BackendModels.YRequestIsPlayerAssignedToSessionResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        struct FString UserId; // 0x8

    };

    struct FYRequestIsPlayerAssignedToSessionRequest //ScriptStruct BackendModels.YRequestIsPlayerAssignedToSessionRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x0
        struct FString UserId; // 0x10

    };

    struct FYMatchmakingListDebugUserInfoResult //ScriptStruct BackendModels.YMatchmakingListDebugUserInfoResult
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString UserId; // 0x0
        int32_t userNVR; // 0x10
        struct TArray<struct FYUserStatisticsEntry> Statistics; // 0x18
        bool isBeginner; // 0x28
        struct TArray<struct FYMatchmakingDebugSessionUserInfo> matchmakingSessionsUserInfo; // 0x30
        int32_t dataTableDeathCooldownMinutes; // 0x40
        bool dataTableBeginnerFlagEnabled; // 0x44
        bool featureToggleSplitSoloAndSquadMatchesEnabled; // 0x45

    };

    struct FYMatchmakingDebugSessionUserInfo //ScriptStruct BackendModels.YMatchmakingDebugSessionUserInfo
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString SessionId; // 0x0
        struct FString mapName; // 0x10
        int32_t playersCount; // 0x20
        bool allowsJoinDueToStorm; // 0x24
        bool activeDeathCooldown; // 0x25
        bool isBeginnerSession; // 0x26
        int64_t transitionTime; // 0x28
        struct FString Region; // 0x30
        enum class EYMatchServerSocialAdmissionType socialAdmissionType; // 0x40
        int32_t nvr; // 0x44

    };

    struct FYUserStatisticsEntry //ScriptStruct BackendModels.YUserStatisticsEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        int32_t Value; // 0x10

    };

    struct FYEmptyRequest //ScriptStruct BackendModels.YEmptyRequest
    {
    public:


    };

    struct FYResetSessionsAndCreateNewRequestResult //ScriptStruct BackendModels.YResetSessionsAndCreateNewRequestResult
    {
    //Children Prop Count (Fields): 1
    public:

        bool success; // 0x0

    };

    struct FYResetSessionsAndCreateNewRequestRequest //ScriptStruct BackendModels.YResetSessionsAndCreateNewRequestRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString desiredRegion; // 0x0
        int32_t shutdownType; // 0x10
        int32_t newStationServers; // 0x14
        int32_t newMatchServers; // 0x18

    };

    struct FYRequestMaintenanceModeStateResult //ScriptStruct BackendModels.YRequestMaintenanceModeStateResult
    {
    //Children Prop Count (Fields): 1
    public:

        bool Enabled; // 0x0

    };

    struct FYRequestIsPlayerStillOnBattleServerResult //ScriptStruct BackendModels.YRequestIsPlayerStillOnBattleServerResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool isStillOnBattleServer; // 0x0
        struct FString infoStillOnBattleServer; // 0x8

    };

    struct FYRequestServerMapResult //ScriptStruct BackendModels.YRequestServerMapResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYGameInfo GameInfo; // 0x0

    };

    struct FYGameInfo //ScriptStruct BackendModels.YGameInfo
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString roomId; // 0x0
        struct FString matchMap; // 0x10
        struct FString GameMode; // 0x20
        bool hasSquads; // 0x30
        bool beginnerServer; // 0x31
        bool allowBIEvents; // 0x32
        bool isRanked; // 0x33
        bool useReplicationGraph; // 0x34

    };

    struct FYRequestServerMapRequest : FYGameServerRequest //ScriptStruct BackendModels.YRequestServerMapRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SessionId; // 0x10

    };

    struct FYServerUpdateConnectedPlayerResult //ScriptStruct BackendModels.YServerUpdateConnectedPlayerResult
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYUserStateChangeType userState; // 0x0
        bool transactionSuccess; // 0x1

    };

    struct FYServerUpdateConnectedPlayer : FYGameServerRequest //ScriptStruct BackendModels.YServerUpdateConnectedPlayer
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x10
        struct FString SessionId; // 0x20
        enum class EYUserStateChangeType userState; // 0x30

    };

    struct FYRefreshSessionMatchmakingNVRRequest //ScriptStruct BackendModels.YRefreshSessionMatchmakingNVRRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x0
        struct TArray<struct FString> userIds; // 0x10

    };

    struct FYRequestServerSessionStateResult //ScriptStruct BackendModels.YRequestServerSessionStateResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYMatchConnectionData connectionData; // 0x0
        int32_t retryCounter; // 0x48
        bool canGoToSession; // 0x4c
        bool shouldCancel; // 0x4d

    };

    struct FYMatchConnectionData //ScriptStruct BackendModels.YMatchConnectionData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString addr; // 0x0
        struct FString SessionId; // 0x10
        struct FString ServerId; // 0x20
        struct FString Region; // 0x30
        bool connectSinglePlayer; // 0x40
        bool isMatch; // 0x41

    };

    struct FYRequestServerSessionStateRequest //ScriptStruct BackendModels.YRequestServerSessionStateRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x0
        int32_t amountRequests; // 0x10

    };

    struct FYEnterMatchmakingResult //ScriptStruct BackendModels.YEnterMatchmakingResult
    {
    //Children Prop Count (Fields): 6
    public:

        bool success; // 0x0
        enum class EYMatchmakingBlocker blocker; // 0x1
        bool singleplayerStation; // 0x2
        int32_t numAttempts; // 0x4
        struct FString SessionId; // 0x8
        struct FString errorMessage; // 0x18

    };

    struct FYEnterMatchAzureFunction //ScriptStruct BackendModels.YEnterMatchAzureFunction
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString optimalRegion; // 0x0
        bool isMatch; // 0x10
        struct FString mapName; // 0x18
        struct FString squad_id; // 0x28
        struct FYPurchaseInsuranceRequest purchaseInsuranceRequest; // 0x38
        bool bypassMaintenanceMode; // 0x50

    };

    struct FYDebugEnterMatchAzureFunction : FYEnterMatchAzureFunction //ScriptStruct BackendModels.YDebugEnterMatchAzureFunction
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYMatchmakingDebugOption debugOption; // 0x58

    };

    struct FYGetQueueStatisticsResult //ScriptStruct BackendModels.YGetQueueStatisticsResult
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_usersSearching; // 0x0
        float m_averageSearchTime; // 0x4

    };

    struct FYGetQueueStatistics //ScriptStruct BackendModels.YGetQueueStatistics
    {
    public:


    };

    struct FYEnterMatchResult //ScriptStruct BackendModels.YEnterMatchResult
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_succeeded; // 0x0
        struct FString m_matchTicket; // 0x8
        struct FString m_ip; // 0x18
        struct FString m_region; // 0x28
        int32_t m_port; // 0x38

    };

    struct FYEnterMatch //ScriptStruct BackendModels.YEnterMatch
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString m_matchTicket; // 0x0

    };

    struct FYPollMatchmakingStateResult //ScriptStruct BackendModels.YPollMatchmakingStateResult
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYPlayfabMatchmakingState m_state; // 0x0
        struct FString m_matchmakingTicket; // 0x8
        struct FString m_matchTicket; // 0x18

    };

    struct FYPollMatchmakingState //ScriptStruct BackendModels.YPollMatchmakingState
    {
    public:


    };

    struct FYClientAvgQueueTime //ScriptStruct BackendModels.YClientAvgQueueTime
    {
    public:


    };

    struct FYCancelMatchmakingAllDebug //ScriptStruct BackendModels.YCancelMatchmakingAllDebug
    {
    public:


    };

    struct FYCurrentQueueInfo //ScriptStruct BackendModels.YCurrentQueueInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString GameMode; // 0x0
        struct FString Region; // 0x10
        int32_t numPlayers; // 0x20
        int32_t roomSize; // 0x24

    };

    struct FYQueueDisbanded //ScriptStruct BackendModels.YQueueDisbanded
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString GameMode; // 0x0
        struct FString Region; // 0x10

    };

    struct FYPlayerMatched //ScriptStruct BackendModels.YPlayerMatched
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString matchTicketId; // 0x0

    };

    struct FYMatchmakingResponse //ScriptStruct BackendModels.YMatchmakingResponse
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYMatchmakingResult Error; // 0x0
        struct FString GameMode; // 0x8
        struct FString Region; // 0x18
        bool isRanked; // 0x28
        int32_t estimatedTimeSeconds; // 0x2c

    };

    struct FYRegionEndpoints //ScriptStruct BackendModels.YRegionEndpoints
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYMatchmakingRegionEndpointEntry> entries; // 0x0

    };

    struct FYMatchmakingRegionEndpointEntry //ScriptStruct BackendModels.YMatchmakingRegionEndpointEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Region; // 0x0
        struct FString endpoint; // 0x10

    };

    struct FYMaintenanceModeState //ScriptStruct BackendModels.YMaintenanceModeState
    {
    //Children Prop Count (Fields): 1
    public:

        bool bypassMaintenanceMode; // 0x0

    };

    struct FYRequestRegionEndpoints //ScriptStruct BackendModels.YRequestRegionEndpoints
    {
    public:


    };

    struct FYNotifyUpdatedProfanitylist //ScriptStruct BackendModels.YNotifyUpdatedProfanitylist
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> profanityList; // 0x0
        struct TArray<struct FString> regexProfanityList; // 0x10

    };

    struct FYGetProfanityList //ScriptStruct BackendModels.YGetProfanityList
    {
    public:


    };

    struct FYMutedNotification //ScriptStruct BackendModels.YMutedNotification
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t durationSeconds; // 0x0
        enum class EYMuteReason Reason; // 0x4

    };

    struct FYMuteResult //ScriptStruct BackendModels.YMuteResult
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYMuteResult Result; // 0x0

    };

    struct FYMute //ScriptStruct BackendModels.YMute
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t durationSeconds; // 0x10
        enum class EYMuteReason Reason; // 0x14

    };

    struct FYAnnouncement //ScriptStruct BackendModels.YAnnouncement
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Msg; // 0x0
        enum class EYChannelType ChannelType; // 0x10

    };

    struct FYSquadMessage //ScriptStruct BackendModels.YSquadMessage
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString from; // 0x0
        struct FString Msg; // 0x10
        struct FString squadId; // 0x20

    };

    struct FYSendAnnouncement //ScriptStruct BackendModels.YSendAnnouncement
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Msg; // 0x0

    };

    struct FYBroadcast //ScriptStruct BackendModels.YBroadcast
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString from; // 0x0
        struct FString Msg; // 0x10

    };

    struct FYWhisper //ScriptStruct BackendModels.YWhisper
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString from; // 0x0
        struct FString Msg; // 0x10
        struct FString to; // 0x20

    };

    struct FYDebugResetActionsDailyCapXPResult //ScriptStruct BackendModels.YDebugResetActionsDailyCapXPResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYDebugResetActionsDailyCapXPRequest //ScriptStruct BackendModels.YDebugResetActionsDailyCapXPRequest
    {
    public:


    };

    struct FYDebugSetActionNumOfTimesExecutedResult //ScriptStruct BackendModels.YDebugSetActionNumOfTimesExecutedResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString setActionId; // 0x20

    };

    struct FYDebugSetActionNumOfTimesExecutedRequest //ScriptStruct BackendModels.YDebugSetActionNumOfTimesExecutedRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ActionId; // 0x0
        int32_t progress; // 0x10

    };

    struct FYDebugResetActionNumOfTimesExecutedResult //ScriptStruct BackendModels.YDebugResetActionNumOfTimesExecutedResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString resetActionId; // 0x20

    };

    struct FYDebugResetActionNumOfTimesExecutedRequest //ScriptStruct BackendModels.YDebugResetActionNumOfTimesExecutedRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ActionId; // 0x0

    };

    struct FYPlayFabPlayerProfile //ScriptStruct BackendModels.YPlayFabPlayerProfile
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AvatarUrl; // 0x0
        struct FString DisplayName; // 0x10
        struct FString PlayerId; // 0x20

    };

    struct FYPlayfabExecuteCloudscriptMessage //ScriptStruct BackendModels.YPlayfabExecuteCloudscriptMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_functionName; // 0x0
        struct FString m_jsonData; // 0x10

    };

    struct FYPlayfabExecuteEventMessage //ScriptStruct BackendModels.YPlayfabExecuteEventMessage
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_userId; // 0x0
        struct FString m_service; // 0x10
        struct FString m_eventName; // 0x20
        struct TMap<struct FString, int32_t> m_keyToJsons; // 0x30

    };

    struct FYQueryFactionProgressionRequest //ScriptStruct BackendModels.YQueryFactionProgressionRequest
    {
    public:


    };

    struct FYRerollDailyIncompleteChallengeResponse //ScriptStruct BackendModels.YRerollDailyIncompleteChallengeResponse
    {
    //Children Prop Count (Fields): 5
    public:

        bool rerollWasSuccessful; // 0x0
        struct FYQuestState removedChallengeData; // 0x8
        struct FYQuestState newChallengeData; // 0x48
        int32_t playerNumOfRerollTokens; // 0x88
        struct FString UserId; // 0x90

    };

    struct FYRerollDailyIncompleteChallengeClient //ScriptStruct BackendModels.YRerollDailyIncompleteChallengeClient
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString challengeName; // 0x0

    };

    struct FYDebugSetCompositeProgress //ScriptStruct BackendModels.YDebugSetCompositeProgress
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString parentQuestId; // 0x0
        struct FString compositeName; // 0x10
        int32_t Count; // 0x20
        bool Completed; // 0x24

    };

    struct FYDebugStartMission //ScriptStruct BackendModels.YDebugStartMission
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString missionArcId; // 0x0
        struct FString missionId; // 0x10

    };

    struct FYDebugGiveRerollTokensResponse //ScriptStruct BackendModels.YDebugGiveRerollTokensResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t playerNumOfRerollTokens; // 0x10

    };

    struct FYDebugGiveRerollTokens //ScriptStruct BackendModels.YDebugGiveRerollTokens
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t numOfTokensToGiveToThePlayer; // 0x0

    };

    struct FYDebugResetAllChallengesProgress //ScriptStruct BackendModels.YDebugResetAllChallengesProgress
    {
    public:


    };

    struct FYDebugClearAllMissions //ScriptStruct BackendModels.YDebugClearAllMissions
    {
    public:


    };

    struct FYDebugRerollDailyChallenges //ScriptStruct BackendModels.YDebugRerollDailyChallenges
    {
    public:


    };

    struct FYDebugRerollWeeklyChallenges //ScriptStruct BackendModels.YDebugRerollWeeklyChallenges
    {
    public:


    };

    struct FYResetMission //ScriptStruct BackendModels.YResetMission
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString missionArcId; // 0x0
        struct FString missionId; // 0x10

    };

    struct FYSetMissionAcknowledged //ScriptStruct BackendModels.YSetMissionAcknowledged
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString missionArcId; // 0x0
        struct FString missionId; // 0x10

    };

    struct FYSetMissionActive //ScriptStruct BackendModels.YSetMissionActive
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString missionArcId; // 0x10
        struct FString missionId; // 0x20
        bool newState; // 0x30

    };

    struct FYSetMissionsCompleted //ScriptStruct BackendModels.YSetMissionsCompleted
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYMissionUpdateDataEntry> entries; // 0x10

    };

    struct FYMissionUpdateDataEntry //ScriptStruct BackendModels.YMissionUpdateDataEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYMissionState missionState; // 0x0
        struct TArray<struct FYCompositeQuestProgress> compositeProgress; // 0x28

    };

    struct FYCompositeQuestProgress //ScriptStruct BackendModels.YCompositeQuestProgress
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString parentQuestId; // 0x0
        struct FString compositeName; // 0x10
        int32_t Count; // 0x20
        bool Completed; // 0x24

    };

    struct FYMissionState //ScriptStruct BackendModels.YMissionState
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString missionId; // 0x0
        struct FString missionArcId; // 0x10
        int32_t Count; // 0x20
        bool Completed; // 0x24
        bool IsActive; // 0x25
        bool acknowledged; // 0x26
        bool receivedReward; // 0x27

    };

    struct FYSetMissionsCount //ScriptStruct BackendModels.YSetMissionsCount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYMissionUpdateDataEntry> entries; // 0x10

    };

    struct FYGetMissionsResponse //ScriptStruct BackendModels.YGetMissionsResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYMissionUpdateDataEntry> missions; // 0x10

    };

    struct FYMissionCompletedResult //ScriptStruct BackendModels.YMissionCompletedResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString currentMissionID; // 0x10
        struct TArray<struct FYCustomItemInfo> rewards; // 0x20
        struct TArray<struct FYCurrencyItem> updatedCurrencies; // 0x30
        int32_t progress; // 0x40

    };

    struct FYRequestMissionCompleted //ScriptStruct BackendModels.YRequestMissionCompleted
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString currentMissionID; // 0x0

    };

    struct FYRequestActiveMissionResult //ScriptStruct BackendModels.YRequestActiveMissionResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString currentMissionID; // 0x10
        int32_t progress; // 0x20

    };

    struct FYDebugSetActiveOnboardingMissionRequest //ScriptStruct BackendModels.YDebugSetActiveOnboardingMissionRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString currentMissionID; // 0x10
        int32_t progress; // 0x20
        bool showPopup; // 0x24

    };

    struct FYRequestActiveMission //ScriptStruct BackendModels.YRequestActiveMission
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYMissionUpdateResult //ScriptStruct BackendModels.YMissionUpdateResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FString currentMissionID; // 0x20
        struct TArray<struct FYCustomItemInfo> rewards; // 0x30
        int32_t progress; // 0x40

    };

    struct FYRequestMissionUpdate //ScriptStruct BackendModels.YRequestMissionUpdate
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString currentMissionID; // 0x10
        struct FString currentStepName; // 0x20
        int32_t progress; // 0x30
        struct FString currentRoomId; // 0x38

    };

    struct FYDebugResetOnboaringProgress //ScriptStruct BackendModels.YDebugResetOnboaringProgress
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYPlayerInfoUserDataEntry //ScriptStruct BackendModels.YPlayerInfoUserDataEntry
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t inventoryStashLimit; // 0x0
        int32_t inventoryBagLimit; // 0x4
        int32_t inventorySafeLimit; // 0x8

    };

    struct FYMissionProgressionInfo //ScriptStruct BackendModels.YMissionProgressionInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString currentMissionID; // 0x0
        int32_t progress; // 0x10

    };

    struct FYGetMissions //ScriptStruct BackendModels.YGetMissions
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYQuestsUpdatedMessage //ScriptStruct BackendModels.YQuestsUpdatedMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYQuestState> quests; // 0x10

    };

    struct FYSetQuestCompleted //ScriptStruct BackendModels.YSetQuestCompleted
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYQuestUpdateDataEntry> entries; // 0x10

    };

    struct FYQuestUpdateDataEntry //ScriptStruct BackendModels.YQuestUpdateDataEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString questId; // 0x0
        struct FString backendId; // 0x10
        int32_t Count; // 0x20

    };

    struct FYSetQuestsCount //ScriptStruct BackendModels.YSetQuestsCount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYQuestUpdateDataEntry> entries; // 0x10

    };

    struct FYGetQuestsResponse //ScriptStruct BackendModels.YGetQuestsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYQuestState> quests; // 0x10
        int32_t playerNumOfRerollTokens; // 0x20

    };

    struct FYGetDailyChallengesResponse //ScriptStruct BackendModels.YGetDailyChallengesResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYQuestState> quests; // 0x10
        int32_t playerNumOfRerollTokens; // 0x20

    };

    struct FYGetDailyChallengesClient //ScriptStruct BackendModels.YGetDailyChallengesClient
    {
    public:


    };

    struct FYGetQuestsClient //ScriptStruct BackendModels.YGetQuestsClient
    {
    public:


    };

    struct FYGetQuestsBS //ScriptStruct BackendModels.YGetQuestsBS
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYRewardsSent //ScriptStruct BackendModels.YRewardsSent
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYRewardResult Status; // 0x0

    };

    struct FYDebugGiveProspectorLevelXP //ScriptStruct BackendModels.YDebugGiveProspectorLevelXP
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t xpIncrement; // 0x0

    };

    struct FYRewardProgression //ScriptStruct BackendModels.YRewardProgression
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYPlayerReward> factionProgressionRewards; // 0x10
        int32_t seasonXp; // 0x20
        int32_t prospectorLevelXP; // 0x24

    };

    struct FYRewardInventory //ScriptStruct BackendModels.YRewardInventory
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYPlayerReward> Materials; // 0x10
        struct TArray<struct FYPlayerReward> currencies; // 0x20
        enum class EYPlayerRewardSource Source; // 0x30

    };

    struct FYDebugMatchHasEnded //ScriptStruct BackendModels.YDebugMatchHasEnded
    {
    public:


    };

    struct FYPreviousMatchHasEnded //ScriptStruct BackendModels.YPreviousMatchHasEnded
    {
    public:


    };

    struct FYConnect //ScriptStruct BackendModels.YConnect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString addr; // 0x0
        struct FString roomId; // 0x10

    };

    struct FYMatchHasEnded //ScriptStruct BackendModels.YMatchHasEnded
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> users; // 0x0

    };

    struct FYPlayerLeftMatch //ScriptStruct BackendModels.YPlayerLeftMatch
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYPlayerFinishedMatch //ScriptStruct BackendModels.YPlayerFinishedMatch
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGameOver //ScriptStruct BackendModels.YGameOver
    {
    public:


    };

    struct FYSquadModeInfo //ScriptStruct BackendModels.YSquadModeInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYRoomSquad> squads; // 0x0
        struct TArray<struct FYRoomPlayer> users; // 0x10

    };

    struct FYRoomPlayer //ScriptStruct BackendModels.YRoomPlayer
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Name; // 0x10

    };

    struct FYRoomSquad //ScriptStruct BackendModels.YRoomSquad
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString squadId; // 0x0
        struct TArray<struct FString> users; // 0x10

    };

    struct FYSingleModeInfo //ScriptStruct BackendModels.YSingleModeInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYRoomPlayer> users; // 0x0

    };

    struct FYGetRoomInfo //ScriptStruct BackendModels.YGetRoomInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString roomId; // 0x0

    };

    struct FYMapLoaded //ScriptStruct BackendModels.YMapLoaded
    {
    public:


    };

    struct FYServerCommand //ScriptStruct BackendModels.YServerCommand
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYServerCommand Command; // 0x0

    };

    struct FYServerReady //ScriptStruct BackendModels.YServerReady
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString networkAddress; // 0x0

    };

    struct FYPlayerSeasonGrantsChanged //ScriptStruct BackendModels.YPlayerSeasonGrantsChanged
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString seasonRowId; // 0x0
        struct TArray<struct FYPlayerSeasonGrant> grants; // 0x10

    };

    struct FYPlayerActiveSeasonChanged //ScriptStruct BackendModels.YPlayerActiveSeasonChanged
    {
    public:


    };

    struct FYGetPlayerSeasonGrants //ScriptStruct BackendModels.YGetPlayerSeasonGrants
    {
    public:


    };

    struct FYGetPlayerActiveSeason //ScriptStruct BackendModels.YGetPlayerActiveSeason
    {
    public:


    };

    struct FYUserStateChange //ScriptStruct BackendModels.YUserStateChange
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYUserStateChangeType m_stateChange; // 0x0
        struct FString m_userId; // 0x8
        struct FString m_controllerName; // 0x18
        enum class EYUserStateChangeType m_playfabAckedState; // 0x28

    };

    struct FYStoresRotationDataResponse //ScriptStruct BackendModels.YStoresRotationDataResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYStoreRotationDataResponse dailyStoreData; // 0x0
        struct FYStoreRotationDataResponse weeklyStoreData; // 0x20
        struct FString Error; // 0x40

    };

    struct FYStoreRotationDataResponse //ScriptStruct BackendModels.YStoreRotationDataResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString StoreId; // 0x0
        struct FString expirationData; // 0x10

    };

    struct FYShopRelevantDataUpdated //ScriptStruct BackendModels.YShopRelevantDataUpdated
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYCurrency Currency; // 0x0
        struct TArray<struct FYShopPromotion> shopPromotions; // 0x8
        struct TArray<struct FYShopOffer> shopOffers; // 0x18

    };

    struct FYDebugSimulateDateTimeShop //ScriptStruct BackendModels.YDebugSimulateDateTimeShop
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString DateTime; // 0x0

    };

    struct FYDebugForceRotate //ScriptStruct BackendModels.YDebugForceRotate
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYPromotionType rotationType; // 0x0

    };

    struct FYDebugPurchaseOffer //ScriptStruct BackendModels.YDebugPurchaseOffer
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString shopOfferId; // 0x0
        int32_t quantity; // 0x10

    };

    struct FYDebugAddCurrency //ScriptStruct BackendModels.YDebugAddCurrency
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Value; // 0x0

    };

    struct FYPurchaseShopOfferResponse //ScriptStruct BackendModels.YPurchaseShopOfferResponse
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYPurchaseOfferResult returnResult; // 0x0
        struct FYShopOffer shopOffer; // 0x8
        struct FString TransactionId; // 0x20

    };

    struct FYPurchaseShopOffer //ScriptStruct BackendModels.YPurchaseShopOffer
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString shopOfferId; // 0x0
        int32_t quantity; // 0x10

    };

    struct FYGetActiveOffers //ScriptStruct BackendModels.YGetActiveOffers
    {
    public:


    };

    struct FYActiveOffers //ScriptStruct BackendModels.YActiveOffers
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYShopOffer> shopOffers; // 0x0

    };

    struct FYGetActivePromotions //ScriptStruct BackendModels.YGetActivePromotions
    {
    public:


    };

    struct FYActivePromotions //ScriptStruct BackendModels.YActivePromotions
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYShopPromotion> shopPromotions; // 0x0

    };

    struct FYGetCurrencyResult //ScriptStruct BackendModels.YGetCurrencyResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYCurrency Currency; // 0x0
        enum class EYGetCurrencyResult Result; // 0x4

    };

    struct FYGetCurrency //ScriptStruct BackendModels.YGetCurrency
    {
    public:


    };

    struct FYShopOfferRow : FTableRowBase //ScriptStruct BackendModels.YShopOfferRow
    {
    //Children Prop Count (Fields): 14
    public:

        struct FString m_epicOfferId; // 0x8
        struct FText m_name; // 0x18
        struct FText m_description; // 0x38
        struct FText m_flavor; // 0x58
        struct FText m_offerCategory; // 0x78
        struct TSoftObjectPtr<UTexture2D> m_banner; // 0x98
        enum class EYCurrencyType m_currencyType; // 0xc0
        int32_t m_price; // 0xc4
        enum class EYOfferRarity m_offerRarity; // 0xc8
        bool m_isOneTimePurchase; // 0xc9
        bool m_isSeasonLevel; // 0xca
        struct FDataTableRowHandle m_grantRowId; // 0xd0
        struct FDataTableRowHandle m_entitlementRowId; // 0xe0
        struct TArray<struct FString> m_requiredOfferIds; // 0xf0

    };

    struct FYShopPromotionRow : FTableRowBase //ScriptStruct BackendModels.YShopPromotionRow
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYPromotionType m_promotionType; // 0x8
        struct FString m_startDateTime; // 0x10
        int64_t m_utcStartDateTime; // 0x20
        int32_t m_layoutIdx; // 0x28
        struct TArray<struct FDataTableRowHandle> m_shopOffers; // 0x30

    };

    struct FYGetSignalRConnectionResult //ScriptStruct BackendModels.YGetSignalRConnectionResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString URL; // 0x0
        struct FString AccessToken; // 0x10

    };

    struct FYGetSignalRConnection //ScriptStruct BackendModels.YGetSignalRConnection
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYPendingFriendRequestsResponse //ScriptStruct BackendModels.YPendingFriendRequestsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYSimplePlayerProfile> invites; // 0x0

    };

    struct FYSimplePlayerProfile //ScriptStruct BackendModels.YSimplePlayerProfile
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x0
        struct FString DisplayName; // 0x10

    };

    struct FYBaseSocialNotificationResponse //ScriptStruct BackendModels.YBaseSocialNotificationResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PlayFabId; // 0x0
        struct FString DisplayName; // 0x10

    };

    struct FYBaseSocialResponse //ScriptStruct BackendModels.YBaseSocialResponse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYBaseSocialRequest //ScriptStruct BackendModels.YBaseSocialRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString targetPlayFabId; // 0x0
        struct FString screen; // 0x10

    };

    struct FYDebugAddRandomFriendsResult //ScriptStruct BackendModels.YDebugAddRandomFriendsResult
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYSocialRequestResult Result; // 0x0

    };

    struct FYDebugAddRandomFriends //ScriptStruct BackendModels.YDebugAddRandomFriends
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t Amount; // 0x10

    };

    struct FYExecuteFriendStateChangeUserName //ScriptStruct BackendModels.YExecuteFriendStateChangeUserName
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString internalUserId; // 0x0
        struct FString Username; // 0x10
        enum class EYFriendState stateToChangeTo; // 0x20

    };

    struct FYDebugExecuteSocialPresence //ScriptStruct BackendModels.YDebugExecuteSocialPresence
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        enum class EYSocialGameStateType State; // 0x10

    };

    struct FYExecuteSocialPresenceStateResult //ScriptStruct BackendModels.YExecuteSocialPresenceStateResult
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYSocialRequestResult Result; // 0x0
        struct FString UserId; // 0x8

    };

    struct FYExecuteSocialPresenceState //ScriptStruct BackendModels.YExecuteSocialPresenceState
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        enum class EYSocialGameStateType State; // 0x10

    };

    struct FYDebugSocialNotification //ScriptStruct BackendModels.YDebugSocialNotification
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t Type; // 0x10

    };

    struct FYSocialPresenceUpdated //ScriptStruct BackendModels.YSocialPresenceUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FYSocialPresenceEntry entry; // 0x10

    };

    struct FYSocialProfileUpdated //ScriptStruct BackendModels.YSocialProfileUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYPlayerProfile entry; // 0x0

    };

    struct FYPlayerProfile //ScriptStruct BackendModels.YPlayerProfile
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString internalUserId; // 0x0
        struct FString rowId; // 0x10
        int32_t prospectorLevelXP; // 0x20

    };

    struct FYUpdatePlayerPresenceStateRequest //ScriptStruct BackendModels.YUpdatePlayerPresenceStateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool inMatch; // 0x0

    };

    struct FYOnPlayerPresenceStateChangedEvent //ScriptStruct BackendModels.YOnPlayerPresenceStateChangedEvent
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        enum class EYSocialGameStateType presenceState; // 0x10

    };

    struct FYSocialFriendStateUpdated //ScriptStruct BackendModels.YSocialFriendStateUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString internalUserId; // 0x0
        struct FYFriendEntry friendEntry; // 0x10

    };

    struct FYFriendEntry //ScriptStruct BackendModels.YFriendEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString internalUserId; // 0x0
        enum class EYFriendState State; // 0x10
        struct FYSocialPresenceEntry presence; // 0x18

    };

    struct FYSocialNotificationUpdate //ScriptStruct BackendModels.YSocialNotificationUpdate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t Type; // 0x10
        struct FYSocialProfileEntry entry; // 0x18

    };

    struct FYDebugActionTowardsUserName //ScriptStruct BackendModels.YDebugActionTowardsUserName
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ownerInternalUserId; // 0x0
        struct FString friendActionUserName; // 0x10
        int32_t actionRequest; // 0x20

    };

    struct FYSearchSocialProfilesResult //ScriptStruct BackendModels.YSearchSocialProfilesResult
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYSocialRequestResult Result; // 0x0
        struct TArray<struct FYSocialProfileEntry> entries; // 0x8
        int32_t searchRequest; // 0x18
        bool includePresence; // 0x1c

    };

    struct FYSearchSocialProfiles //ScriptStruct BackendModels.YSearchSocialProfiles
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Username; // 0x0
        int32_t searchRequest; // 0x10
        bool includePresence; // 0x14

    };

    struct FYGetSocialProfilesResult //ScriptStruct BackendModels.YGetSocialProfilesResult
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYSocialRequestResult Result; // 0x0
        struct TArray<struct FYSocialProfileEntry> entries; // 0x8
        bool includePresence; // 0x18
        int32_t requestHandle; // 0x1c

    };

    struct FYAcceptFriendRequestResult //ScriptStruct BackendModels.YAcceptFriendRequestResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYPlayFabFriendWithState friendInfo; // 0x0
        struct FString OperationId; // 0x30
        enum class EYFriendActionResult Result; // 0x40

    };

    struct FYPlayFabFriendWithState //ScriptStruct BackendModels.YPlayFabFriendWithState
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYPlayFabFriend PlayerInfo; // 0x0
        enum class EYSocialGameStateType PlayerOnlineState; // 0x28

    };

    struct FYPlayFabFriend //ScriptStruct BackendModels.YPlayFabFriend
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString FriendPlayFabId; // 0x0
        enum class EYFriendState State; // 0x10
        struct FString TitleDisplayName; // 0x18

    };

    struct FYGetSocialProfiles //ScriptStruct BackendModels.YGetSocialProfiles
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FYPlatformEntry> entries; // 0x0
        bool includePresence; // 0x10
        struct FString contextString; // 0x18
        int32_t requestHandle; // 0x28

    };

    struct FYFriendListUpdated //ScriptStruct BackendModels.YFriendListUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString internalUserId; // 0x0
        struct TArray<struct FYFriendEntry> updatedFriends; // 0x10

    };

    struct FYExecuteFriendStateChangeReturnData //ScriptStruct BackendModels.YExecuteFriendStateChangeReturnData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYGetFriendListResult Result; // 0x0
        struct FString internalUserId; // 0x8
        struct TArray<struct FYFriendEntry> updatedFriends; // 0x18

    };

    struct FYExecuteFriendStateChange //ScriptStruct BackendModels.YExecuteFriendStateChange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString internalUserId; // 0x0
        struct TArray<struct FYFriendAction> friendExecutionStates; // 0x10

    };

    struct FYGetFriendListReturnData //ScriptStruct BackendModels.YGetFriendListReturnData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString internalUserId; // 0x0
        struct FYUserFriendList friendList; // 0x10

    };

    struct FYUserFriendList //ScriptStruct BackendModels.YUserFriendList
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYFriendEntry> entries; // 0x0
        struct FString ownerFriendInternalUserId; // 0x10

    };

    struct FYFriendActionUserName //ScriptStruct BackendModels.YFriendActionUserName
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString desiredUserName; // 0x0
        struct FYFriendAction friendAction; // 0x10

    };

    struct FYAddFriendMessage //ScriptStruct BackendModels.YAddFriendMessage
    {
    //Children Prop Count (Fields): 2
    public:

        bool sendNotification; // 0x0
        struct FYPlayFabFriendWithState PlayFabFriendWithState; // 0x8

    };

    struct FYGetUserFriendList //ScriptStruct BackendModels.YGetUserFriendList
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString internalUserId; // 0x0

    };

    struct FYSquadMemberReadyUpNotification //ScriptStruct BackendModels.YSquadMemberReadyUpNotification
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FYUserMatchmakingSettings matchmakingSettings; // 0x10

    };

    struct FYSquadMatchmakingReadyResponse //ScriptStruct BackendModels.YSquadMatchmakingReadyResponse
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYSquadActionResult Result; // 0x0
        bool isSquadReadyForMatch; // 0x1

    };

    struct FYSquadMatchmakingReady //ScriptStruct BackendModels.YSquadMatchmakingReady
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString squadId; // 0x0
        struct FYUserMatchmakingSettings matchmakingSettings; // 0x10

    };

    struct FYSquadMemberSelectedMap //ScriptStruct BackendModels.YSquadMemberSelectedMap
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString squadId; // 0x0
        struct FString selectedMapName; // 0x10

    };

    struct FYSquadInviteExpired //ScriptStruct BackendModels.YSquadInviteExpired
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        struct FString TargetId; // 0x10

    };

    struct FYSquadDisbanded //ScriptStruct BackendModels.YSquadDisbanded
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ID; // 0x0

    };

    struct FYSquadSecretLeaderResponse //ScriptStruct BackendModels.YSquadSecretLeaderResponse
    {
    //Children Prop Count (Fields): 1
    public:

        bool isSecretLeader; // 0x0

    };

    struct FYLeaveSquadResponse //ScriptStruct BackendModels.YLeaveSquadResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYSquadActionResult Result; // 0x0

    };

    struct FYLeaveSquad //ScriptStruct BackendModels.YLeaveSquad
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ID; // 0x0

    };

    struct FYSquadInviteDeclined //ScriptStruct BackendModels.YSquadInviteDeclined
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TargetId; // 0x0

    };

    struct FYDeclineSquadInviteResponse //ScriptStruct BackendModels.YDeclineSquadInviteResponse
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYSquadActionResult Result; // 0x0
        struct FString inviteId; // 0x8

    };

    struct FYDeclineSquadInvite //ScriptStruct BackendModels.YDeclineSquadInvite
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ID; // 0x0

    };

    struct FYSquadInviteResponse //ScriptStruct BackendModels.YSquadInviteResponse
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYSquadActionResult Result; // 0x0
        struct FString inviteId; // 0x8
        struct FYPlayFabSquad squad; // 0x18

    };

    struct FYPlayFabSquad //ScriptStruct BackendModels.YPlayFabSquad
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString squadId; // 0x0
        struct TArray<struct FYPlayFabSquadMember> Members; // 0x10

    };

    struct FYPlayFabSquadMember //ScriptStruct BackendModels.YPlayFabSquadMember
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYPlayFabPlayerProfile Profile; // 0x0
        enum class EYUserState onlineState; // 0x30
        struct FYUserMatchmakingSettings matchmakingSettings; // 0x38

    };

    struct FYAcceptSquadInvite //ScriptStruct BackendModels.YAcceptSquadInvite
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString ID; // 0x0
        struct FString requesterPlayerId; // 0x10
        struct FString squadId; // 0x20

    };

    struct FYSquadUpdated //ScriptStruct BackendModels.YSquadUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYSquad squad; // 0x0

    };

    struct FYSquad //ScriptStruct BackendModels.YSquad
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        struct TArray<struct FYSquadMemberBE> Members; // 0x10

    };

    struct FYSquadMemberBE //ScriptStruct BackendModels.YSquadMemberBE
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ID; // 0x0
        enum class EYUserState State; // 0x10

    };

    struct FYRequestUserStateUpdateBroadcastToFriends //ScriptStruct BackendModels.YRequestUserStateUpdateBroadcastToFriends
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> Friends; // 0x0

    };

    struct FYUserInfosUpdated //ScriptStruct BackendModels.YUserInfosUpdated
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYClientUserInfo> clientUserInfos; // 0x0

    };

    struct FYClientUserInfo //ScriptStruct BackendModels.YClientUserInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        enum class EYUserState State; // 0x10
        int32_t squadSize; // 0x14

    };

    struct FYRequestUserInfos //ScriptStruct BackendModels.YRequestUserInfos
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYPlayFabBaseSquadRequest //ScriptStruct BackendModels.YPlayFabBaseSquadRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString squadId; // 0x0

    };

    struct FYPlayFabAcceptSquadInvite //ScriptStruct BackendModels.YPlayFabAcceptSquadInvite
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYPlayFabSquad squadInfo; // 0x0
        enum class EYSquadActionResult Result; // 0x20

    };

    struct FYSendSquadInviteResponse //ScriptStruct BackendModels.YSendSquadInviteResponse
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYSquadActionResult Result; // 0x0
        struct FYPlayFabSquad squadInfo; // 0x8

    };

    struct FYRequestCurrentSquadInfo //ScriptStruct BackendModels.YRequestCurrentSquadInfo
    {
    public:


    };

    struct FYPendingSquadInvites //ScriptStruct BackendModels.YPendingSquadInvites
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYSquadInvite> invites; // 0x0

    };

    struct FYSquadInvite //ScriptStruct BackendModels.YSquadInvite
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ID; // 0x0
        struct FString fromId; // 0x10
        struct FString requesterDisplayName; // 0x20
        struct FString TargetId; // 0x30
        struct FString squadId; // 0x40

    };

    struct FYRequestPendingSquadInvites //ScriptStruct BackendModels.YRequestPendingSquadInvites
    {
    public:


    };

    struct FYSquadInviteRemoved //ScriptStruct BackendModels.YSquadInviteRemoved
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString squadId; // 0x0

    };

    struct FYSquadInviteAdded //ScriptStruct BackendModels.YSquadInviteAdded
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYSquadInvite invite; // 0x0

    };

    struct FYInviteToSquadResponse //ScriptStruct BackendModels.YInviteToSquadResponse
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYSquadActionResult Result; // 0x0
        struct FYSquadInvite invite; // 0x8

    };

    struct FYPlayerDisconnectNotification //ScriptStruct BackendModels.YPlayerDisconnectNotification
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYInviteToSquad //ScriptStruct BackendModels.YInviteToSquad
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString fromId; // 0x0
        struct FString TargetId; // 0x10

    };

    struct FYListPersistentMatchesResult //ScriptStruct BackendModels.YListPersistentMatchesResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPersistentMatch> Results; // 0x0

    };

    struct FYPersistentMatch //ScriptStruct BackendModels.YPersistentMatch
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString ServerId; // 0x0
        struct FString SessionId; // 0x10
        struct FString State; // 0x20
        bool isMatch; // 0x30
        struct FString mapName; // 0x38
        struct FString Region; // 0x48
        int64_t transitionTime; // 0x58
        struct TArray<struct FString> userIds; // 0x60
        struct TArray<struct FString> userNames; // 0x70

    };

    struct FYListPersistentSessionRequestsResult //ScriptStruct BackendModels.YListPersistentSessionRequestsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        int32_t numServersShutdown; // 0x4

    };

    struct FYDebugMatchmakingSetUserNVRRequest //ScriptStruct BackendModels.YDebugMatchmakingSetUserNVRRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t nvr; // 0x0

    };

    struct FYDebugMatchmakingSetSessionNVRRequest //ScriptStruct BackendModels.YDebugMatchmakingSetSessionNVRRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x0
        int32_t nvr; // 0x10

    };

    struct FYListPersistentSessionRequests //ScriptStruct BackendModels.YListPersistentSessionRequests
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString desiredRegion; // 0x0

    };

    struct FYListPersistentMatches //ScriptStruct BackendModels.YListPersistentMatches
    {
    public:


    };

    struct FYPersistentSessionResetResult //ScriptStruct BackendModels.YPersistentSessionResetResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool success; // 0x0
        int32_t numServersShutdown; // 0x4

    };

    struct FYPersistentSessionResetRequest //ScriptStruct BackendModels.YPersistentSessionResetRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString desiredRegion; // 0x0

    };

    struct FYPersistentMatchReset //ScriptStruct BackendModels.YPersistentMatchReset
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYDebugRequestShardStationChange //ScriptStruct BackendModels.YDebugRequestShardStationChange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        int32_t shardIndex; // 0x10

    };

    struct FYRequestUserChangeStation //ScriptStruct BackendModels.YRequestUserChangeStation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Context; // 0x0
        struct FYMatchConnectionData connectData; // 0x10

    };

    struct FYRequestLeaveStationInfo //ScriptStruct BackendModels.YRequestLeaveStationInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        bool isMatch; // 0x10

    };

    struct FYServerReportResult //ScriptStruct BackendModels.YServerReportResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYServerReport serverData; // 0x0

    };

    struct FYServerReport //ScriptStruct BackendModels.YServerReport
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYStationInfoProto> infos; // 0x0

    };

    struct FYStationInfoProto //ScriptStruct BackendModels.YStationInfoProto
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString stationInfo; // 0x0
        int32_t numUsers; // 0x10
        struct FString battleServerInfo; // 0x18
        struct TArray<struct FString> userIds; // 0x28
        int32_t shardIndex; // 0x38

    };

    struct FYGetServerStateReport //ScriptStruct BackendModels.YGetServerStateReport
    {
    public:


    };

    struct FYStationLoginUserEntry //ScriptStruct BackendModels.YStationLoginUserEntry
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYStationPingEntry> entries; // 0x0

    };

    struct FYStationPingEntry //ScriptStruct BackendModels.YStationPingEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Region; // 0x0
        struct FString endpoint; // 0x10

    };

    struct FYRequestStationConnectResult //ScriptStruct BackendModels.YRequestStationConnectResult
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYClientStationRequestResult Result; // 0x0
        struct FYMatchConnectionData connectData; // 0x8

    };

    struct FYRequestStationConnect //ScriptStruct BackendModels.YRequestStationConnect
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        bool isDevelopment; // 0x10
        struct TArray<struct FYStationUserPings> userPings; // 0x18
        bool isMatch; // 0x28

    };

    struct FYStationUserPings //ScriptStruct BackendModels.YStationUserPings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Region; // 0x0
        int32_t Ping; // 0x10

    };

    struct FYStationServerCommandResult //ScriptStruct BackendModels.YStationServerCommandResult
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYStationCommandResultType Result; // 0x0
        struct FString Context; // 0x8

    };

    struct FYStationReadyResult //ScriptStruct BackendModels.YStationReadyResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString serverAddress; // 0x0

    };

    struct FYServerUsersConnected //ScriptStruct BackendModels.YServerUsersConnected
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> userIds; // 0x0

    };

    struct FYStationServerPlayerLeft //ScriptStruct BackendModels.YStationServerPlayerLeft
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYServerShutdown //ScriptStruct BackendModels.YServerShutdown
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Region; // 0x0

    };

    struct FYStationServerReady //ScriptStruct BackendModels.YStationServerReady
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString serverAddress; // 0x0

    };

    struct FYStationMapLoaded //ScriptStruct BackendModels.YStationMapLoaded
    {
    public:


    };

    struct FYReportEndOfMatchCheatStatisticsResponse //ScriptStruct BackendModels.YReportEndOfMatchCheatStatisticsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        int32_t ErrorCode; // 0x20

    };

    struct FYReportEndOfMatchCheatStatisticsRequest : FYGameServerRequest //ScriptStruct BackendModels.YReportEndOfMatchCheatStatisticsRequest
    {
    //Children Prop Count (Fields): 40
    public:

        struct FString UserId; // 0x10
        int32_t m_cheatDetected_01; // 0x20
        int32_t m_cheatDetected_02; // 0x24
        int32_t m_cheatDetected_03; // 0x28
        int32_t m_cheatDetected_04; // 0x2c
        int32_t m_cheatDetected_05; // 0x30
        int32_t m_cheatDetected_06; // 0x34
        int32_t m_cheatDetected_07; // 0x38
        int32_t m_cheatDetected_08; // 0x3c
        int32_t m_cheatDetected_09; // 0x40
        int32_t m_cheatDetected_11; // 0x44
        bool m_cheatDetected_12; // 0x48
        int32_t m_cheatDetected_13; // 0x4c
        int32_t m_cheatDetected_14; // 0x50
        bool m_cheatDetected_15; // 0x54
        int32_t m_cheatDetected_16; // 0x58
        int32_t m_cheatDetected_17; // 0x5c
        int32_t m_cheatDetected_18; // 0x60
        int32_t m_cheatDetected_19; // 0x64
        int32_t m_cheatDetected_20; // 0x68
        int32_t m_cheatDetected_21; // 0x6c
        int32_t m_cheatDetected_22; // 0x70
        int32_t m_cheatDetected_23; // 0x74
        int32_t m_cheatDetected_24; // 0x78
        int32_t m_cheatDetected_25; // 0x7c
        int32_t m_cheatDetected_26; // 0x80
        int32_t m_cheatDetected_27; // 0x84
        int32_t m_cheatDetected_28; // 0x88
        int32_t m_cheatDetected_29; // 0x8c
        int32_t m_cheatDetected_30; // 0x90
        int32_t m_cheatDetected_31; // 0x94
        int32_t m_cheatDetected_32; // 0x98
        int32_t m_cheatDetected_33; // 0x9c
        int32_t m_cheatDetected_34; // 0xa0
        int32_t m_cheatDetected_35; // 0xa4
        int32_t m_cheatDetected_36; // 0xa8
        int32_t m_cheatDetected_37; // 0xac
        int32_t m_cheatDetected_38; // 0xb0
        int32_t m_cheatDetected_39; // 0xb4
        int32_t m_cheatDetected_40; // 0xb8

    };

    struct FYReportEndOfMatchStatisticsRequest : FYGameServerRequest //ScriptStruct BackendModels.YReportEndOfMatchStatisticsRequest
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString UserId; // 0x10
        enum class EYMatchOutcome Outcome; // 0x20
        int32_t killsPlayers; // 0x24
        int32_t killsCreatures; // 0x28
        int32_t damagePlayers; // 0x2c
        int32_t damageCreatures; // 0x30
        int32_t matchDurationMinutes; // 0x34

    };

    struct FYModifyPlayerSkillsResult //ScriptStruct BackendModels.YModifyPlayerSkillsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool succeeded; // 0x0
        struct TArray<struct FYPlayerSkillData> entries; // 0x8

    };

    struct FYPlayerSkillData //ScriptStruct BackendModels.YPlayerSkillData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t skill; // 0x10
        int32_t deviation; // 0x14

    };

    struct FYModifyPlayerSkills //ScriptStruct BackendModels.YModifyPlayerSkills
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYModifySkillEntry> entries; // 0x0

    };

    struct FYModifySkillEntry //ScriptStruct BackendModels.YModifySkillEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t skill; // 0x10
        int32_t deviation; // 0x14

    };

    struct FYGetPlayerSkillsResult //ScriptStruct BackendModels.YGetPlayerSkillsResult
    {
    //Children Prop Count (Fields): 2
    public:

        bool succeeded; // 0x0
        struct TArray<struct FYPlayerSkillData> Data; // 0x8

    };

    struct FYGetPlayerSkills //ScriptStruct BackendModels.YGetPlayerSkills
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> uniqueIds; // 0x0

    };

    struct FYGetBatchedRankedSeasonsResponse //ScriptStruct BackendModels.YGetBatchedRankedSeasonsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYRankSeasonsData hofData; // 0x0
        struct FYPlayersRankedSeasonData topNPlayersActiveRankedSeason; // 0x10
        struct FYPlayerRankedSeasonData localPlayerRankedSeasonData; // 0x20

    };

    struct FYPlayerRankedSeasonData //ScriptStruct BackendModels.YPlayerRankedSeasonData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYPlayerRankedGamemodeData> playerRankedGamemodesData; // 0x10

    };

    struct FYPlayerRankedGamemodeData //ScriptStruct BackendModels.YPlayerRankedGamemodeData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString GameMode; // 0x0
        int32_t rank; // 0x10
        int32_t highestRank; // 0x14

    };

    struct FYPlayersRankedSeasonData //ScriptStruct BackendModels.YPlayersRankedSeasonData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPlayerRankedSeasonGamemodeData> playersRankedSeasonArray; // 0x0

    };

    struct FYPlayerRankedSeasonGamemodeData //ScriptStruct BackendModels.YPlayerRankedSeasonGamemodeData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString UserId; // 0x0
        struct FString GameMode; // 0x10
        int32_t rank; // 0x20
        int32_t highestRank; // 0x24

    };

    struct FYRankSeasonsData //ScriptStruct BackendModels.YRankSeasonsData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYRankSeasonData> rankSeasons; // 0x0

    };

    struct FYRankSeasonData //ScriptStruct BackendModels.YRankSeasonData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString seasonId; // 0x0
        struct TArray<struct FYPlayerRankedSeasonGamemodeData> playersRankedSeasonData; // 0x10

    };

    struct FYGetBatchedRankedSeasonsRequest //ScriptStruct BackendModels.YGetBatchedRankedSeasonsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t numTopPlayers; // 0x0

    };

    struct FYClientSkillUpdated //ScriptStruct BackendModels.YClientSkillUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t skill; // 0x0
        int32_t deviation; // 0x4

    };

    struct FYPastSeasonSummary //ScriptStruct BackendModels.YPastSeasonSummary
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString seasonId; // 0x0
        struct FYPlayersRankedSeasonData Summary; // 0x10

    };

    struct FYPlayerRankUpdatedForGameMode //ScriptStruct BackendModels.YPlayerRankUpdatedForGameMode
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString GameMode; // 0x0
        int32_t oldRank; // 0x10
        int32_t newRank; // 0x14
        int32_t highestRank; // 0x18

    };

    struct FYDebugCheckPastSeasonRewardsResponse //ScriptStruct BackendModels.YDebugCheckPastSeasonRewardsResponse
    {
    public:


    };

    struct FYDebugCheckPastSeasonRewards //ScriptStruct BackendModels.YDebugCheckPastSeasonRewards
    {
    public:


    };

    struct FYDebugGiveSeasonRewardsResponse //ScriptStruct BackendModels.YDebugGiveSeasonRewardsResponse
    {
    public:


    };

    struct FYDebugGiveSeasonRewards //ScriptStruct BackendModels.YDebugGiveSeasonRewards
    {
    public:


    };

    struct FYDebugResetPlayerAllGamemodesRankRequest //ScriptStruct BackendModels.YDebugResetPlayerAllGamemodesRankRequest
    {
    public:


    };

    struct FYDebugResetPlayerGamemodeRankRequest //ScriptStruct BackendModels.YDebugResetPlayerGamemodeRankRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString GameMode; // 0x0

    };

    struct FYDebugSetPlayerGamemodeRankRequest //ScriptStruct BackendModels.YDebugSetPlayerGamemodeRankRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t rank; // 0x0
        struct FString GameMode; // 0x8

    };

    struct FYDebugGivePlayerGamemodeRankRequest //ScriptStruct BackendModels.YDebugGivePlayerGamemodeRankRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t rankIncrement; // 0x0
        struct FString GameMode; // 0x8

    };

    struct FYGetCompetitorsDataRequest //ScriptStruct BackendModels.YGetCompetitorsDataRequest
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t playersAbove; // 0x0
        int32_t playersBelow; // 0x4

    };

    struct FYGetTopNPlayersNSeasonsRequest //ScriptStruct BackendModels.YGetTopNPlayersNSeasonsRequest
    {
    public:


    };

    struct FYGetTopNPlayersActiveRankedSeasonRequest //ScriptStruct BackendModels.YGetTopNPlayersActiveRankedSeasonRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t numTopPlayers; // 0x0

    };

    struct FYGivePlayerSeasonGamemodeRankResponse //ScriptStruct BackendModels.YGivePlayerSeasonGamemodeRankResponse
    {
    //Children Prop Count (Fields): 1
    public:

        bool success; // 0x0

    };

    struct FYGivePlayerSeasonGamemodeRankRequest //ScriptStruct BackendModels.YGivePlayerSeasonGamemodeRankRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString GameMode; // 0x10
        int32_t rankIncrement; // 0x20

    };

    struct FYGetPlayersActiveRankedSeasonBattleServerRequest //ScriptStruct BackendModels.YGetPlayersActiveRankedSeasonBattleServerRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> otherPlayersIds; // 0x0
        struct FString playerOwnId; // 0x10

    };

    struct FYGetPlayersActiveRankedSeasonClientRequest //ScriptStruct BackendModels.YGetPlayersActiveRankedSeasonClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> otherPlayersIds; // 0x0

    };

    struct FYPlayersRankedSeasonsData //ScriptStruct BackendModels.YPlayersRankedSeasonsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> seasonIds; // 0x0
        struct TArray<struct FYPlayersRankedSeasonData> playersRankedSeasonsArray; // 0x10

    };

    struct FYRequestUserUnlockedTechTreeNodes //ScriptStruct BackendModels.YRequestUserUnlockedTechTreeNodes
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYPlayerQuartersLevelUpdated //ScriptStruct BackendModels.YPlayerQuartersLevelUpdated
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        int32_t Level; // 0x10
        struct FYTimestamp upgradeStartedTime; // 0x18

    };

    struct FYTechTreeNodesUpdated //ScriptStruct BackendModels.YTechTreeNodesUpdated
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYTechTreeNodeStatus> updatedNodes; // 0x10

    };

    struct FYGetPassiveGenerators //ScriptStruct BackendModels.YGetPassiveGenerators
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYGetTechTreeNodes //ScriptStruct BackendModels.YGetTechTreeNodes
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x0

    };

    struct FYSkipTechTreeNodeUpgradeClientResult //ScriptStruct BackendModels.YSkipTechTreeNodeUpgradeClientResult
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        struct FYTechTreeNodeStatus upgradedNode; // 0x20
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x40
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x50
        struct TArray<struct FString> deletedItems; // 0x60

    };

    struct FYSkipTechTreeNodeUpgradeClientRequest //ScriptStruct BackendModels.YSkipTechTreeNodeUpgradeClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool useOptionalCosts; // 0x0

    };

    struct FYTechTreeNodeUpgradePurchaseClientResult //ScriptStruct BackendModels.YTechTreeNodeUpgradePurchaseClientResult
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        struct FYTechTreeNodeStatus upgradedNode; // 0x20
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x40
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x50
        struct TArray<struct FString> deletedItems; // 0x60

    };

    struct FYTechTreeNodeUpgradePurchaseClientRequest //ScriptStruct BackendModels.YTechTreeNodeUpgradePurchaseClientRequest
    {
    public:


    };

    struct FYStartTechTreeNodeUpgradeClientResult //ScriptStruct BackendModels.YStartTechTreeNodeUpgradeClientResult
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        struct FYTechTreeNodeStatus upgradedNode; // 0x20
        int32_t remainingTimeInSeconds; // 0x40
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x48
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x58
        struct TArray<struct FString> deletedItems; // 0x68

    };

    struct FYStartTechTreeNodeUpgradeClientRequest //ScriptStruct BackendModels.YStartTechTreeNodeUpgradeClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName nodeId; // 0x0

    };

    struct FYGetTechTreeNodeDataServerResponse //ScriptStruct BackendModels.YGetTechTreeNodeDataServerResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYTechTreeNodeStatus> nodesData; // 0x10
        int32_t remainingTimeInSeconds; // 0x20

    };

    struct FYGetTechTreeNodeDataClientResponse //ScriptStruct BackendModels.YGetTechTreeNodeDataClientResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYTechTreeNodeStatus> nodesData; // 0x10
        int32_t remainingTimeInSeconds; // 0x20

    };

    struct FYGetTechTreeNodeDataServerRequest : FYGameServerRequest //ScriptStruct BackendModels.YGetTechTreeNodeDataServerRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString UserId; // 0x10

    };

    struct FYGetTechTreeNodeDataClientRequest //ScriptStruct BackendModels.YGetTechTreeNodeDataClientRequest
    {
    public:


    };

    struct FYSkipPlayerQuarterUpgradeClientResult //ScriptStruct BackendModels.YSkipPlayerQuarterUpgradeClientResult
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        int32_t NewLevel; // 0x20
        struct FYTimestamp upgradeStartedTime; // 0x28
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x30
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x40
        struct TArray<struct FString> deletedItems; // 0x50

    };

    struct FYSkipPlayerQuarterUpgradeClientRequest //ScriptStruct BackendModels.YSkipPlayerQuarterUpgradeClientRequest
    {
    //Children Prop Count (Fields): 1
    public:

        bool useOptionalCosts; // 0x0

    };

    struct FYPlayerQuarterUpgradePurchaseClientResult //ScriptStruct BackendModels.YPlayerQuarterUpgradePurchaseClientResult
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        int32_t NewLevel; // 0x20
        struct FYTimestamp upgradeStartedTime; // 0x28
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x30
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x40
        struct TArray<struct FString> deletedItems; // 0x50

    };

    struct FYPlayerQuarterUpgradePurchaseClientRequest //ScriptStruct BackendModels.YPlayerQuarterUpgradePurchaseClientRequest
    {
    public:


    };

    struct FYStartPlayerQuarterUpgradeClientResult //ScriptStruct BackendModels.YStartPlayerQuarterUpgradeClientResult
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Error; // 0x0
        struct FString UserId; // 0x10
        int32_t NewLevel; // 0x20
        struct FYTimestamp upgradeStartedTime; // 0x28
        struct TArray<struct FYCurrencyItem> changedCurrencies; // 0x30
        struct TArray<struct FYCustomItemInfo> changedItems; // 0x40
        struct TArray<struct FString> deletedItems; // 0x50

    };

    struct FYStartPlayerQuarterUpgradeClientRequest //ScriptStruct BackendModels.YStartPlayerQuarterUpgradeClientRequest
    {
    public:


    };

    struct FYTechTreeNodesStatuses //ScriptStruct BackendModels.YTechTreeNodesStatuses
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYTechTreeNodeStatus> nodes; // 0x10

    };

    struct FYTwitchDropsClaimPackageResult //ScriptStruct BackendModels.YTwitchDropsClaimPackageResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct TArray<struct FYCustomItemInfo> GrantedItems; // 0x10
        enum class EYTwitchDropToastReponseType responseType; // 0x20

    };

    struct FYTwitchDropsClaimPackageRequest //ScriptStruct BackendModels.YTwitchDropsClaimPackageRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString PackageId; // 0x0

    };

    struct FYTwitchDropDataResult //ScriptStruct BackendModels.YTwitchDropDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYTwitchDropPackageResult> packages; // 0x0

    };

    struct FYTwitchDropPackageResult //ScriptStruct BackendModels.YTwitchDropPackageResult
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString PackageId; // 0x0
        struct TArray<struct FYTwitchDropRewardResult> rewards; // 0x10
        struct FString DropId; // 0x20
        struct FYTimestamp UnlockTimeUtc; // 0x30

    };

    struct FYTwitchDropRewardResult //ScriptStruct BackendModels.YTwitchDropRewardResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString ItemPlayfabId; // 0x0

    };

    struct FYSessionUserData //ScriptStruct BackendModels.YSessionUserData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString activeSessionId; // 0x0
        uint64_t utcLastTimeChanged; // 0x10
        int32_t matchState; // 0x18

    };

    struct FYVivoxSettingsData //ScriptStruct BackendModels.YVivoxSettingsData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString vivoxServer; // 0x0
        struct FString vivoxDomain; // 0x10
        struct FString vivoxIssuer; // 0x20

    };

    struct FYVivoxJoinData //ScriptStruct BackendModels.YVivoxJoinData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYVivoxJoinTokenRequest Request; // 0x0
        struct FString Token; // 0x38

    };

    struct FYVivoxJoinTokenRequest //ScriptStruct BackendModels.YVivoxJoinTokenRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Username; // 0x0
        struct FString Channel; // 0x10
        enum class EYChannelType ChannelType; // 0x20
        bool hasText; // 0x21
        bool hasAudio; // 0x22
        struct FString channelId; // 0x28

    };

    struct FYVivoxGetServerSettings //ScriptStruct BackendModels.YVivoxGetServerSettings
    {
    public:


    };

    struct FYVivoxLoginData //ScriptStruct BackendModels.YVivoxLoginData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYVivoxLoginTokenRequest Request; // 0x0
        struct FString Token; // 0x10

    };

    struct FYVivoxLoginTokenRequest //ScriptStruct BackendModels.YVivoxLoginTokenRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Username; // 0x0

    };

    struct FYPendingPlayfabMessage //ScriptStruct YPlayfabServices.YPendingPlayfabMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYPlayfabMessage m_message; // 0x0
        bool m_isServer; // 0x40

    };

    struct FYPlayfabAuthenticationContext //ScriptStruct OnlineSubsystemPlayfab.YPlayfabAuthenticationContext
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString m_entityId; // 0x0
        struct FString m_entityType; // 0x10
        struct FString m_entityToken; // 0x20
        int32_t m_secondsForTokenExpire; // 0x30
        struct FString m_playFabId; // 0x38
        struct FString m_platform; // 0x48
        bool m_isConnected; // 0x68

    };

    struct FYPlayfabLoginData //ScriptStruct YPlayfab.YPlayfabLoginData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString m_userId; // 0x0
        struct FString m_titleId; // 0x10
        struct FString m_secretKey; // 0x20
        struct FString m_username; // 0x30
        struct FString m_email; // 0x40
        struct FString m_password; // 0x50
        int32_t m_localUserNum; // 0x60
        enum class EYPlayfabLoginType m_loginType; // 0x64
        bool m_inEditorServer; // 0x65

    };

    struct FNegotiationResponse //ScriptStruct SignalR.NegotiationResponse
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t NegotiateVersion; // 0x0
        struct FString ConnectionId; // 0x8
        struct FString ConnectionToken; // 0x18
        struct FString URL; // 0x28
        struct FString AccessToken; // 0x38
        struct FString Error; // 0x48
        struct TArray<struct FNegotiationTransport> AvailableTransports; // 0x58

    };

    struct FNegotiationTransport //ScriptStruct SignalR.NegotiationTransport
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Transport; // 0x0
        struct TArray<struct FString> TransferFormats; // 0x10

    };

    struct FYPendingDelegateExecution //ScriptStruct YAzureFunctionsUtils.YPendingDelegateExecution
    {
    public:


    };

    struct FYPlayfabPurchaseItemResult //ScriptStruct YAzureFunctionsUtils.YPlayfabPurchaseItemResult
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString UserId; // 0x0
        struct FString realMoneyOrderId; // 0x10
        bool success; // 0x20
        struct TArray<struct FString> grantedBundles; // 0x28
        struct TArray<struct FYCustomItemInfo> GrantedItems; // 0x38

    };

    struct FYPlayfabTitleDataRetrival //ScriptStruct YAzureFunctionsUtils.YPlayfabTitleDataRetrival
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, struct FString> m_keyToData; // 0x0

    };

    struct FYClientVersionUpdateNotification //ScriptStruct YAzureFunctionsUtils.YClientVersionUpdateNotification
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t clientVersion; // 0x0

    };

    struct FYTitleDataUpdateNotification //ScriptStruct YAzureFunctionsUtils.YTitleDataUpdateNotification
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> Keys; // 0x0

    };

    struct FYSetUserDataResult //ScriptStruct YAzureFunctionsUtils.YSetUserDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        bool m_success; // 0x0

    };

    struct FYSetUserDataRequest //ScriptStruct YAzureFunctionsUtils.YSetUserDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct TMap<struct FString, struct FString> m_keysValues; // 0x0
        struct FString m_playFabId; // 0x50
        bool m_readOnly; // 0x60

    };

    struct FYGetUserDataResult //ScriptStruct YAzureFunctionsUtils.YGetUserDataResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, struct FString> m_keyPair; // 0x0

    };

    struct FYGetUserDataRequest //ScriptStruct YAzureFunctionsUtils.YGetUserDataRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FString> m_keys; // 0x0
        struct FString m_playFabId; // 0x10
        bool m_readOnly; // 0x20

    };

    struct FYPendingSteamLoginContext //ScriptStruct OnlineSubsystemPlayfab.YPendingSteamLoginContext
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString DisplayName; // 0x0
        struct FString SteamId; // 0x10
        struct FString SteamSessionTicket; // 0x20

    };

    struct FYUpdateUserTitleDisplayNameCustomResponse //ScriptStruct OnlineSubsystemPlayfab.YUpdateUserTitleDisplayNameCustomResponse
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString NewDisplayName; // 0x0
        int32_t ErrorCode; // 0x10
        struct FString errorMessage; // 0x18

    };

    struct FYUpdateUserTitleDisplayNameCustomRequest //ScriptStruct OnlineSubsystemPlayfab.YUpdateUserTitleDisplayNameCustomRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString RequestedDisplayName; // 0x0

    };

    struct FYRequestHandleSteamCB1MigrateRequest //ScriptStruct OnlineSubsystemPlayfab.YRequestHandleSteamCB1MigrateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SteamId; // 0x0

    };

    struct FYRequestHandleEGSGenericIdAndMigrateRequest //ScriptStruct OnlineSubsystemPlayfab.YRequestHandleEGSGenericIdAndMigrateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString epicId; // 0x0

    };

    struct FYPlayfabCommonSettings //ScriptStruct OnlineSubsystemPlayfab.YPlayfabCommonSettings
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_localApiServerTimeout; // 0x0
        int32_t m_normalAzureFunctionTimeout; // 0x4

    };

    struct FYPlayfabEnviromentData //ScriptStruct OnlineSubsystemPlayfab.YPlayfabEnviromentData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_titleId; // 0x0
        struct FString m_developmentSecret; // 0x10

    };

    struct FSessionInfo //ScriptStruct YGSDK.SessionInfo
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString BuildId; // 0x0
        struct FString SessionId; // 0x10
        struct FString ServerId; // 0x20
        struct FString Region; // 0x30
        struct TArray<struct FString> InitialPlayers; // 0x40
        struct FYGSDKGameConnectionInfo m_connectionInfo; // 0x50

    };

    struct FYGSDKGameConnectionInfo //ScriptStruct YGSDK.YGSDKGameConnectionInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_publicAdress; // 0x0
        struct TArray<struct FYGSDKConnectionPort> m_ports; // 0x10

    };

    struct FYGSDKConnectionPort //ScriptStruct YGSDK.YGSDKConnectionPort
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_portName; // 0x0
        int32_t m_listeningPort; // 0x10
        int32_t m_connectionPort; // 0x14

    };

    struct FHorizonTweenEventActorParameters //ScriptStruct HorizonTween.HorizonTweenEventActorParameters
    {
    //Children Prop Count (Fields): 12
    public:

        struct FHorizonTweenEventParameters MoveFromToParam; // 0x0
        struct FHorizonTweenEventActorMoveFromToParameters MoveFromToParamImpl; // 0x38
        bool bMoveFromTo; // 0x188
        struct FHorizonTweenEventParameters RotatorFromToParam; // 0x190
        struct FHorizonTweenEventActorRotatorFromToParameters RotatorFromToParamImpl; // 0x1c8
        bool bRotateFromTo; // 0x328
        struct FHorizonTweenEventParameters ScaleFromToParam; // 0x330
        struct FHorizonTweenEventActorScaleFromToParameters ScaleFromToParamImpl; // 0x368
        bool bScaleFromTo; // 0x4b8
        struct FHorizonTweenEventParameters ColorFromToParam; // 0x4c0
        struct FHorizonTweenEventActorColorFromToParameters ColorFromToParamImpl; // 0x4f8
        bool bColorFromTo; // 0x738

    };

    struct FHorizonTweenEventImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventImplementParameters
    {
    //Children Prop Count (Fields): 1
    public:

        bool bUseCustomCurve; // 0x0

    };

    struct FHorizonTweenEventTweenListImplementParameters : FHorizonTweenEventImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventTweenListImplementParameters
    {
    //Children Prop Count (Fields): 1
    public:

        bool bLoopTweenList; // 0x1

    };

    struct FHorizonTweenEventLinearColorParameters : FHorizonTweenEventTweenListImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventLinearColorParameters
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FLinearColor> TweenStartList; // 0x8
        struct TArray<struct FLinearColor> TweenEndList; // 0x18
        bool bSRGB; // 0x28
        struct FHorizonTweenEventCustomColorCurve CustomTweenCurve; // 0x30

    };

    struct FHorizonTweenEventCustomColorCurve //ScriptStruct HorizonTween.HorizonTweenEventCustomColorCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRuntimeCurveLinearColor CustomTweenCurve; // 0x0

    };

    struct FRuntimeCurveLinearColor //ScriptStruct Engine.RuntimeCurveLinearColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRichCurve ColorCurves; // 0x0
        class UCurveLinearColor* ExternalCurve; // 0x200

    };

    struct FIndexedCurve //ScriptStruct Engine.IndexedCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FKeyHandleMap KeyHandlesToIndices; // 0x8

    };

    struct FKeyHandleMap //ScriptStruct Engine.KeyHandleMap
    {
    public:


    };

    struct FRealCurve : FIndexedCurve //ScriptStruct Engine.RealCurve
    {
    //Children Prop Count (Fields): 3
    public:

        float DefaultValue; // 0x68
        enum class ERichCurveExtrapolation PreInfinityExtrap; // 0x6c
        enum class ERichCurveExtrapolation PostInfinityExtrap; // 0x6d

    };

    struct FRichCurve : FRealCurve //ScriptStruct Engine.RichCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRichCurveKey> Keys; // 0x70

    };

    struct FRichCurveKey //ScriptStruct Engine.RichCurveKey
    {
    //Children Prop Count (Fields): 9
    public:

        enum class ERichCurveInterpMode InterpMode; // 0x0
        enum class ERichCurveTangentMode TangentMode; // 0x1
        enum class ERichCurveTangentWeightMode TangentWeightMode; // 0x2
        float Time; // 0x4
        float Value; // 0x8
        float ArriveTangent; // 0xc
        float ArriveTangentWeight; // 0x10
        float LeaveTangent; // 0x14
        float LeaveTangentWeight; // 0x18

    };

    struct FHorizonTweenEventActorColorFromToParameters : FHorizonTweenEventLinearColorParameters //ScriptStruct HorizonTween.HorizonTweenEventActorColorFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct AActor> TweenTargetWeakPtr; // 0x238

    };

    struct FHorizonTweenEventParameters //ScriptStruct HorizonTween.HorizonTweenEventParameters
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName TweenEventName; // 0x0
        enum class EHorizonTweenLerpMode LerpMode; // 0x8
        struct TArray<float> LerpModeExtraParameterList; // 0x10
        enum class EHorizonTweenPlayMode PlayMode; // 0x20
        int32_t NumOfLoop; // 0x24
        float Duration; // 0x28
        float DelayInit; // 0x2c
        float DelayLoop; // 0x30
        bool bPauseOnTweenLoop; // 0x34

    };

    struct FHorizonTweenEventVectorParameters : FHorizonTweenEventTweenListImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventVectorParameters
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FVector> TweenStartList; // 0x8
        struct TArray<struct FVector> TweenEndList; // 0x18
        enum class EHorizonTweenVectorConstraints ConstraintType; // 0x28
        struct FHorizonTweenEventTransformParam TransformParam; // 0x2c
        struct FHorizonTweenEventCustomCurve CustomTweenCurve; // 0xc0

    };

    struct FHorizonTweenEventCustomCurve //ScriptStruct HorizonTween.HorizonTweenEventCustomCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRuntimeFloatCurve CustomTweenCurve; // 0x0

    };

    struct FRuntimeFloatCurve //ScriptStruct Engine.RuntimeFloatCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRichCurve EditorCurveData; // 0x0
        class UCurveFloat* ExternalCurve; // 0x80

    };

    struct FHorizonTweenEventTransformParam //ScriptStruct HorizonTween.HorizonTweenEventTransformParam
    {
    //Children Prop Count (Fields): 6
    public:

        bool bSweep; // 0x0
        bool bTeleport; // 0x1
        bool bCollideAndFinishEvent; // 0x2
        bool bCollideAndFinishEventTweenToEnd; // 0x3
        enum class EHorizonTweenCoordinateSpace CoordinateSpaceType; // 0x4
        struct FHitResult SweepHitResult; // 0x8

    };

    struct FHorizonTweenEventActorScaleFromToParameters : FHorizonTweenEventVectorParameters //ScriptStruct HorizonTween.HorizonTweenEventActorScaleFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct AActor> TweenTargetWeakPtr; // 0x148

    };

    struct FHorizonTweenEventRotatorParameters : FHorizonTweenEventTweenListImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventRotatorParameters
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FRotator> TweenStartList; // 0x8
        struct TArray<struct FRotator> TweenEndList; // 0x18
        enum class EHorizonTweenRotatorConstraints ConstraintType; // 0x28
        struct FHorizonTweenEventTransformParam TransformParam; // 0x2c
        struct FHorizonTweenEventCustomCurve CustomTweenCurve; // 0xc0
        bool bUseShortestPath; // 0x148

    };

    struct FHorizonTweenEventActorRotatorFromToParameters : FHorizonTweenEventRotatorParameters //ScriptStruct HorizonTween.HorizonTweenEventActorRotatorFromToParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct AActor> TweenTargetWeakPtr; // 0x150
        bool bShortestPath; // 0x158

    };

    struct FHorizonTweenEventActorMoveFromToParameters : FHorizonTweenEventVectorParameters //ScriptStruct HorizonTween.HorizonTweenEventActorMoveFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct AActor> TweenTargetWeakPtr; // 0x148

    };

    struct FHorizonTweenEventSplinePathParameters : FHorizonTweenEventImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventSplinePathParameters
    {
    //Children Prop Count (Fields): 10
    public:

        class USplineComponent* SplineComponent; // 0x8
        bool bUseConstantVelocity; // 0x10
        bool bTweenLocation; // 0x11
        bool bTweenRotation; // 0x12
        bool bTweenScale; // 0x13
        enum class EHorizonTweenVectorConstraints LocationConstraintType; // 0x14
        enum class EHorizonTweenRotatorConstraints RotatorConstraintType; // 0x15
        enum class EHorizonTweenVectorConstraints ScaleConstraintType; // 0x16
        struct FHorizonTweenEventTransformParam TransformParam; // 0x18
        struct FHorizonTweenEventCustomCurve CustomTweenCurve; // 0xa8

    };

    struct FHorizonTweenEventActorMoveSplinePathParameters : FHorizonTweenEventSplinePathParameters //ScriptStruct HorizonTween.HorizonTweenEventActorMoveSplinePathParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct AActor> TweenTargetWeakPtr; // 0x130

    };

    struct FHorizonTweenEventFloatParameters : FHorizonTweenEventTweenListImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventFloatParameters
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<float> TweenStartList; // 0x8
        struct TArray<float> TweenEndList; // 0x18
        struct FHorizonTweenEventCustomCurve CustomTweenCurve; // 0x28

    };

    struct FHorizonTweenEventWidgetVector2DParameters : FHorizonTweenEventTweenListImplementParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetVector2DParameters
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FVector2D> TweenStartList; // 0x8
        struct TArray<struct FVector2D> TweenEndList; // 0x18
        enum class EHorizonTweenVector2DConstraints ConstraintType; // 0x28
        enum class EHorizonTweenCoordinateSpace CoordinateSpaceType; // 0x29
        struct FHorizonTweenEventCustomCurve CustomTweenCurve; // 0x30

    };

    struct FHorizonTweenEventSceneComponentParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentParameters
    {
    //Children Prop Count (Fields): 12
    public:

        struct FHorizonTweenEventParameters MoveFromToParam; // 0x0
        struct FHorizonTweenEventSceneComponentMoveFromToParameters MoveFromToParamImpl; // 0x38
        bool bMoveFromTo; // 0x188
        struct FHorizonTweenEventParameters RotatorFromToParam; // 0x190
        struct FHorizonTweenEventSceneComponentRotatorFromToParameters RotatorFromToParamImpl; // 0x1c8
        bool bRotateFromTo; // 0x328
        struct FHorizonTweenEventParameters ScaleFromToParam; // 0x330
        struct FHorizonTweenEventSceneComponentScaleFromToParameters ScaleFromToParamImpl; // 0x368
        bool bScaleFromTo; // 0x4b8
        struct FHorizonTweenEventParameters ColorFromToParam; // 0x4c0
        struct FHorizonTweenEventSceneComponentColorFromToParameters ColorFromToParamImpl; // 0x4f8
        bool bColorFromTo; // 0x738

    };

    struct FHorizonTweenEventSceneComponentColorFromToParameters : FHorizonTweenEventLinearColorParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentColorFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct USceneComponent> TweenTargetWeakPtr; // 0x238

    };

    struct FHorizonTweenEventSceneComponentScaleFromToParameters : FHorizonTweenEventVectorParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentScaleFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct USceneComponent> TweenTargetWeakPtr; // 0x148

    };

    struct FHorizonTweenEventSceneComponentRotatorFromToParameters : FHorizonTweenEventRotatorParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentRotatorFromToParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct USceneComponent> TweenTargetWeakPtr; // 0x150
        bool bShortestPath; // 0x158

    };

    struct FHorizonTweenEventSceneComponentMoveFromToParameters : FHorizonTweenEventVectorParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentMoveFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct USceneComponent> TweenTargetWeakPtr; // 0x148

    };

    struct FHorizonTweenEventSceneComponentMoveSplinePathParameters : FHorizonTweenEventSplinePathParameters //ScriptStruct HorizonTween.HorizonTweenEventSceneComponentMoveSplinePathParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct USceneComponent> TweenTargetWeakPtr; // 0x130

    };

    struct FHorizonTweenEventSlateWidgetMoveSplinePathParameters : FHorizonTweenEventSplinePathParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetMoveSplinePathParameters
    {
    //Children Prop Count (Fields): 1
    public:

        bool bTweenSheer; // 0x138

    };

    struct FHorizonTweenEventSlateWidgetColorFromToParameters : FHorizonTweenEventLinearColorParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetColorFromToParameters
    {
    public:


    };

    struct FHorizonTweenEventSlateWidgetSheerFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetSheerFromToParameters
    {
    public:


    };

    struct FHorizonTweenEventSlateWidgetScaleFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetScaleFromToParameters
    {
    public:


    };

    struct FHorizonTweenEventSlateWidgetRotatorFromToParameters : FHorizonTweenEventFloatParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetRotatorFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        bool bShortestPath; // 0xb8

    };

    struct FHorizonTweenEventSlateWidgetMoveFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventSlateWidgetMoveFromToParameters
    {
    public:


    };

    struct FHorizonTweenEventWidgetParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetParameters
    {
    //Children Prop Count (Fields): 15
    public:

        struct FHorizonTweenEventParameters MoveFromToParam; // 0x0
        struct FHorizonTweenEventWidgetMoveFromToParameters MoveFromToParamImpl; // 0x38
        bool bMoveFromTo; // 0xf8
        struct FHorizonTweenEventParameters RotatorFromToParam; // 0x100
        struct FHorizonTweenEventWidgetRotatorFromToParameters RotatorFromToParamImpl; // 0x138
        bool bRotateFromTo; // 0x1f8
        struct FHorizonTweenEventParameters ScaleFromToParam; // 0x200
        struct FHorizonTweenEventWidgetScaleFromToParameters ScaleFromToParamImpl; // 0x238
        bool bScaleFromTo; // 0x2f8
        struct FHorizonTweenEventParameters SheerFromToParam; // 0x300
        struct FHorizonTweenEventWidgetSheerFromToParameters SheerFromToParamImpl; // 0x338
        bool bSheerFromTo; // 0x3f8
        struct FHorizonTweenEventParameters ColorFromToParam; // 0x400
        struct FHorizonTweenEventWidgetColorFromToParameters ColorFromToParamImpl; // 0x438
        bool bColorFromTo; // 0x678

    };

    struct FHorizonTweenEventWidgetColorFromToParameters : FHorizonTweenEventLinearColorParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetColorFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0x238

    };

    struct FHorizonTweenEventWidgetSheerFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetSheerFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0xb8

    };

    struct FHorizonTweenEventWidgetScaleFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetScaleFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0xb8

    };

    struct FHorizonTweenEventWidgetRotatorFromToParameters : FHorizonTweenEventFloatParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetRotatorFromToParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0xb0
        bool bShortestPath; // 0xb8

    };

    struct FHorizonTweenEventWidgetMoveFromToParameters : FHorizonTweenEventWidgetVector2DParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetMoveFromToParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0xb8

    };

    struct FHorizonTweenEventWidgetMoveSplinePathParameters : FHorizonTweenEventSplinePathParameters //ScriptStruct HorizonTween.HorizonTweenEventWidgetMoveSplinePathParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct UWidget> TweenTargetWeakPtr; // 0x130
        bool bTweenSheer; // 0x138

    };

    struct FNiagaraCompileHash //ScriptStruct NiagaraCore.NiagaraCompileHash
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> DataHash; // 0x0

    };

    struct FMovieSceneEvalTemplateBase //ScriptStruct MovieScene.MovieSceneEvalTemplateBase
    {
    public:


    };

    struct FMovieSceneEvalTemplate : FMovieSceneEvalTemplateBase //ScriptStruct MovieScene.MovieSceneEvalTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EMovieSceneCompletionMode CompletionMode; // 0x10
        struct TWeakObjectPtr<struct UMovieSceneSection> SourceSectionPtr; // 0x14

    };

    struct FMovieSceneNiagaraParameterSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct Niagara.MovieSceneNiagaraParameterSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FNiagaraVariable Parameter; // 0x20

    };

    struct FNiagaraVariableBase //ScriptStruct Niagara.NiagaraVariableBase
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        struct FNiagaraTypeDefinitionHandle TypeDefHandle; // 0x8

    };

    struct FNiagaraTypeDefinitionHandle //ScriptStruct Niagara.NiagaraTypeDefinitionHandle
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t RegisteredTypeIndex; // 0x0

    };

    struct FNiagaraVariable : FNiagaraVariableBase //ScriptStruct Niagara.NiagaraVariable
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> VarData; // 0x10

    };

    struct FMovieSceneNiagaraBoolParameterSectionTemplate : FMovieSceneNiagaraParameterSectionTemplate //ScriptStruct Niagara.MovieSceneNiagaraBoolParameterSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneBoolChannel BoolChannel; // 0x40

    };

    struct FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneChannel
    {
    public:


    };

    struct FMovieSceneBoolChannel : FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneBoolChannel
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FFrameNumber> Times; // 0x8
        bool DefaultValue; // 0x18
        bool bHasDefaultValue; // 0x19
        struct TArray<bool> Values; // 0x20

    };

    struct FMovieSceneNiagaraColorParameterSectionTemplate : FMovieSceneNiagaraParameterSectionTemplate //ScriptStruct Niagara.MovieSceneNiagaraColorParameterSectionTemplate
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMovieSceneFloatChannel RedChannel; // 0x40
        struct FMovieSceneFloatChannel GreenChannel; // 0xe0
        struct FMovieSceneFloatChannel BlueChannel; // 0x180
        struct FMovieSceneFloatChannel AlphaChannel; // 0x220

    };

    struct FMovieSceneFloatChannel : FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneFloatChannel
    {
    //Children Prop Count (Fields): 8
    public:

        enum class ERichCurveExtrapolation PreInfinityExtrap; // 0x8
        enum class ERichCurveExtrapolation PostInfinityExtrap; // 0x9
        struct TArray<struct FFrameNumber> Times; // 0x10
        struct TArray<struct FMovieSceneFloatValue> Values; // 0x20
        float DefaultValue; // 0x30
        bool bHasDefaultValue; // 0x34
        struct FMovieSceneKeyHandleMap KeyHandles; // 0x38
        struct FFrameRate TickResolution; // 0x98

    };

    struct FKeyHandleLookupTable //ScriptStruct Engine.KeyHandleLookupTable
    {
    public:


    };

    struct FMovieSceneKeyHandleMap : FKeyHandleLookupTable //ScriptStruct MovieScene.MovieSceneKeyHandleMap
    {
    public:


    };

    struct FMovieSceneFloatValue //ScriptStruct MovieScene.MovieSceneFloatValue
    {
    //Children Prop Count (Fields): 5
    public:

        float Value; // 0x0
        struct FMovieSceneTangentData Tangent; // 0x4
        enum class ERichCurveInterpMode InterpMode; // 0x18
        enum class ERichCurveTangentMode TangentMode; // 0x19
        char PaddingByte; // 0x1a

    };

    struct FMovieSceneTangentData //ScriptStruct MovieScene.MovieSceneTangentData
    {
    //Children Prop Count (Fields): 5
    public:

        float ArriveTangent; // 0x0
        float LeaveTangent; // 0x4
        float ArriveTangentWeight; // 0x8
        float LeaveTangentWeight; // 0xc
        enum class ERichCurveTangentWeightMode TangentWeightMode; // 0x10

    };

    struct FMovieSceneNiagaraFloatParameterSectionTemplate : FMovieSceneNiagaraParameterSectionTemplate //ScriptStruct Niagara.MovieSceneNiagaraFloatParameterSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneFloatChannel FloatChannel; // 0x40

    };

    struct FMovieSceneNiagaraIntegerParameterSectionTemplate : FMovieSceneNiagaraParameterSectionTemplate //ScriptStruct Niagara.MovieSceneNiagaraIntegerParameterSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneIntegerChannel IntegerChannel; // 0x40

    };

    struct FMovieSceneIntegerChannel : FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneIntegerChannel
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FFrameNumber> Times; // 0x8
        int32_t DefaultValue; // 0x18
        bool bHasDefaultValue; // 0x1c
        struct TArray<int32_t> Values; // 0x20

    };

    struct FMovieSceneTrackImplementation : FMovieSceneEvalTemplateBase //ScriptStruct MovieScene.MovieSceneTrackImplementation
    {
    public:


    };

    struct FMovieSceneNiagaraSystemTrackImplementation : FMovieSceneTrackImplementation //ScriptStruct Niagara.MovieSceneNiagaraSystemTrackImplementation
    {
    //Children Prop Count (Fields): 6
    public:

        struct FFrameNumber SpawnSectionStartFrame; // 0x10
        struct FFrameNumber SpawnSectionEndFrame; // 0x14
        enum class ENiagaraSystemSpawnSectionStartBehavior SpawnSectionStartBehavior; // 0x18
        enum class ENiagaraSystemSpawnSectionEvaluateBehavior SpawnSectionEvaluateBehavior; // 0x1c
        enum class ENiagaraSystemSpawnSectionEndBehavior SpawnSectionEndBehavior; // 0x20
        enum class ENiagaraAgeUpdateMode AgeUpdateMode; // 0x24

    };

    struct FMovieSceneNiagaraSystemTrackTemplate : FMovieSceneEvalTemplate //ScriptStruct Niagara.MovieSceneNiagaraSystemTrackTemplate
    {
    public:


    };

    struct FMovieSceneNiagaraVectorParameterSectionTemplate : FMovieSceneNiagaraParameterSectionTemplate //ScriptStruct Niagara.MovieSceneNiagaraVectorParameterSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneFloatChannel VectorChannels; // 0x40
        int32_t ChannelsUsed; // 0x2c0

    };

    struct FNiagaraBakerTextureSettings //ScriptStruct Niagara.NiagaraBakerTextureSettings
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName OutputName; // 0x0
        struct FNiagaraBakerTextureSource SourceBinding; // 0x8
        char bUseFrameSize; // 0x10
        struct FIntPoint FrameSize; // 0x14
        struct FIntPoint TextureSize; // 0x1c
        class UTexture2D* GeneratedTexture; // 0x28

    };

    struct FNiagaraBakerTextureSource //ScriptStruct Niagara.NiagaraBakerTextureSource
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName SourceName; // 0x0

    };

    struct FNiagaraScalabilityState //ScriptStruct Niagara.NiagaraScalabilityState
    {
    //Children Prop Count (Fields): 7
    public:

        float Significance; // 0x0
        char bCulled; // 0x4
        char bPreviousCulled; // 0x4
        char bCulledByDistance; // 0x4
        char bCulledByInstanceCount; // 0x4
        char bCulledByVisibility; // 0x4
        char bCulledByGlobalBudget; // 0x4

    };

    struct FNiagaraCompileDependency //ScriptStruct Niagara.NiagaraCompileDependency
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString LinkerErrorMessage; // 0x0
        struct FGuid NodeGuid; // 0x10
        struct FGuid PinGuid; // 0x20
        struct TArray<struct FGuid> StackGuids; // 0x30
        struct FNiagaraVariableBase DependentVariable; // 0x40

    };

    struct FNiagaraRandInfo //ScriptStruct Niagara.NiagaraRandInfo
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Seed1; // 0x0
        int32_t Seed2; // 0x4
        int32_t Seed3; // 0x8

    };

    struct FNiagaraUserParameterBinding //ScriptStruct Niagara.NiagaraUserParameterBinding
    {
    //Children Prop Count (Fields): 1
    public:

        struct FNiagaraVariable Parameter; // 0x0

    };

    struct FNiagaraScriptVariableBinding //ScriptStruct Niagara.NiagaraScriptVariableBinding
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FNiagaraVariableDataInterfaceBinding //ScriptStruct Niagara.NiagaraVariableDataInterfaceBinding
    {
    //Children Prop Count (Fields): 1
    public:

        struct FNiagaraVariable BoundVariable; // 0x0

    };

    struct FNiagaraMaterialAttributeBinding //ScriptStruct Niagara.NiagaraMaterialAttributeBinding
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName MaterialParameterName; // 0x0
        struct FNiagaraVariableBase NiagaraVariable; // 0x8
        struct FNiagaraVariableBase ResolvedNiagaraVariable; // 0x14
        struct FNiagaraVariableBase NiagaraChildVariable; // 0x20

    };

    struct FNiagaraVariableAttributeBinding //ScriptStruct Niagara.NiagaraVariableAttributeBinding
    {
    //Children Prop Count (Fields): 6
    public:

        struct FNiagaraVariableBase ParamMapVariable; // 0x0
        struct FNiagaraVariable DataSetVariable; // 0x10
        struct FNiagaraVariable RootVariable; // 0x30
        enum class ENiagaraBindingSource BindingSourceMode; // 0x50
        char bBindingExistsOnSource; // 0x54
        char bIsCachedParticleValue; // 0x54

    };

    struct FNiagaraVariableInfo //ScriptStruct Niagara.NiagaraVariableInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FNiagaraVariable Variable; // 0x0
        struct FText Definition; // 0x20
        class UNiagaraDataInterface* DataInterface; // 0x40

    };

    struct FNiagaraSystemUpdateContext //ScriptStruct Niagara.NiagaraSystemUpdateContext
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UNiagaraComponent*> ComponentsToReset; // 0x0
        struct TArray<class UNiagaraComponent*> ComponentsToReInit; // 0x10
        struct TArray<class UNiagaraComponent*> ComponentsToNotifySimDestroy; // 0x20
        struct TArray<class UNiagaraSystem*> SystemSimsToDestroy; // 0x30

    };

    struct FVMExternalFunctionBindingInfo //ScriptStruct Niagara.VMExternalFunctionBindingInfo
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x0
        struct FName OwnerName; // 0x8
        struct TArray<bool> InputParamLocations; // 0x10
        int32_t NumOutputs; // 0x20
        struct TArray<struct FVMFunctionSpecifier> FunctionSpecifiers; // 0x28

    };

    struct FVMFunctionSpecifier //ScriptStruct Niagara.VMFunctionSpecifier
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Key; // 0x0
        struct FName Value; // 0x8

    };

    struct FNiagaraStatScope //ScriptStruct Niagara.NiagaraStatScope
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName FullName; // 0x0
        struct FName FriendlyName; // 0x8

    };

    struct FNiagaraScriptDataInterfaceCompileInfo //ScriptStruct Niagara.NiagaraScriptDataInterfaceCompileInfo
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Name; // 0x0
        int32_t UserPtrIdx; // 0x8
        struct FNiagaraTypeDefinition Type; // 0x10
        struct FName RegisteredParameterMapRead; // 0x20
        struct FName RegisteredParameterMapWrite; // 0x28
        bool bIsPlaceholder; // 0x30

    };

    struct FNiagaraTypeDefinition //ScriptStruct Niagara.NiagaraTypeDefinition
    {
    //Children Prop Count (Fields): 2
    public:

        class UObject* ClassStructOrEnum; // 0x0
        uint16_t UnderlyingType; // 0x8

    };

    struct FNiagaraScriptDataInterfaceInfo //ScriptStruct Niagara.NiagaraScriptDataInterfaceInfo
    {
    //Children Prop Count (Fields): 6
    public:

        class UNiagaraDataInterface* DataInterface; // 0x0
        struct FName Name; // 0x8
        int32_t UserPtrIdx; // 0x10
        struct FNiagaraTypeDefinition Type; // 0x18
        struct FName RegisteredParameterMapRead; // 0x28
        struct FName RegisteredParameterMapWrite; // 0x30

    };

    struct FNiagaraFunctionSignature //ScriptStruct Niagara.NiagaraFunctionSignature
    {
    //Children Prop Count (Fields): 18
    public:

        struct FName Name; // 0x0
        struct TArray<struct FNiagaraVariable> Inputs; // 0x8
        struct TArray<struct FNiagaraVariable> Outputs; // 0x18
        struct FName OwnerName; // 0x28
        char bRequiresContext; // 0x30
        char bRequiresExecPin; // 0x30
        char bMemberFunction; // 0x30
        char bExperimental; // 0x30
        char bSupportsCPU; // 0x30
        char bSupportsGPU; // 0x30
        char bWriteFunction; // 0x30
        char bSoftDeprecatedFunction; // 0x30
        char bIsCompileTagGenerator; // 0x31
        char bHidden; // 0x31
        int32_t ModuleUsageBitmask; // 0x34
        int32_t ContextStageMinIndex; // 0x38
        int32_t ContextStageMaxIndex; // 0x3c
        struct TMap<struct FName, struct FName> FunctionSpecifiers; // 0x40

    };

    struct FNiagaraScriptDataUsageInfo //ScriptStruct Niagara.NiagaraScriptDataUsageInfo
    {
    //Children Prop Count (Fields): 1
    public:

        bool bReadsAttributeData; // 0x0

    };

    struct FNiagaraDataSetProperties //ScriptStruct Niagara.NiagaraDataSetProperties
    {
    //Children Prop Count (Fields): 2
    public:

        struct FNiagaraDataSetID ID; // 0x0
        struct TArray<struct FNiagaraVariable> Variables; // 0x10

    };

    struct FNiagaraDataSetID //ScriptStruct Niagara.NiagaraDataSetID
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        enum class ENiagaraDataSetType Type; // 0x8

    };

    struct FNiagaraMaterialOverride //ScriptStruct Niagara.NiagaraMaterialOverride
    {
    //Children Prop Count (Fields): 3
    public:

        class UMaterialInterface* Material; // 0x0
        uint32_t MaterialSubIndex; // 0x8
        class UNiagaraRendererProperties* EmitterRendererProperty; // 0x10

    };

    struct FNCPool //ScriptStruct Niagara.NCPool
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNCPoolElement> FreeElements; // 0x0

    };

    struct FNCPoolElement //ScriptStruct Niagara.NCPoolElement
    {
    //Children Prop Count (Fields): 1
    public:

        class UNiagaraComponent* Component; // 0x0

    };

    struct FNiagaraComponentPropertyBinding //ScriptStruct Niagara.NiagaraComponentPropertyBinding
    {
    //Children Prop Count (Fields): 6
    public:

        struct FNiagaraVariableAttributeBinding AttributeBinding; // 0x0
        struct FName PropertyName; // 0x58
        struct FNiagaraTypeDefinition PropertyType; // 0x60
        struct FName MetadataSetterName; // 0x70
        struct TMap<struct FString, struct FString> PropertySetterParameterDefaults; // 0x78
        struct FNiagaraVariable WritableValue; // 0xc8

    };

    struct FNiagaraEmitterNameSettingsRef //ScriptStruct Niagara.NiagaraEmitterNameSettingsRef
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName SystemName; // 0x0
        struct FString EmitterName; // 0x8

    };

    struct FBasicParticleData //ScriptStruct Niagara.BasicParticleData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Position; // 0x0
        float Size; // 0xc
        struct FVector Velocity; // 0x10

    };

    struct FMeshTriCoordinate //ScriptStruct Niagara.MeshTriCoordinate
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Tri; // 0x0
        struct FVector BaryCoord; // 0x4

    };

    struct FNDIStaticMeshSectionFilter //ScriptStruct Niagara.NDIStaticMeshSectionFilter
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<int32_t> AllowedMaterialSlots; // 0x0

    };

    struct FNiagaraDataSetCompiledData //ScriptStruct Niagara.NiagaraDataSetCompiledData
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FNiagaraVariable> Variables; // 0x0
        struct TArray<struct FNiagaraVariableLayoutInfo> VariableLayouts; // 0x10
        struct FNiagaraDataSetID ID; // 0x20
        uint32_t TotalFloatComponents; // 0x2c
        uint32_t TotalInt32Components; // 0x30
        uint32_t TotalHalfComponents; // 0x34
        char bRequiresPersistentIDs; // 0x38
        enum class ENiagaraSimTarget SimTarget; // 0x3c

    };

    struct FNiagaraVariableLayoutInfo //ScriptStruct Niagara.NiagaraVariableLayoutInfo
    {
    //Children Prop Count (Fields): 4
    public:

        uint32_t FloatComponentStart; // 0x0
        uint32_t Int32ComponentStart; // 0x4
        uint32_t HalfComponentStart; // 0x8
        struct FNiagaraTypeLayoutInfo LayoutInfo; // 0x10

    };

    struct FNiagaraTypeLayoutInfo //ScriptStruct Niagara.NiagaraTypeLayoutInfo
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<uint32_t> FloatComponentByteOffsets; // 0x0
        struct TArray<uint32_t> FloatComponentRegisterOffsets; // 0x10
        struct TArray<uint32_t> Int32ComponentByteOffsets; // 0x20
        struct TArray<uint32_t> Int32ComponentRegisterOffsets; // 0x30
        struct TArray<uint32_t> HalfComponentByteOffsets; // 0x40
        struct TArray<uint32_t> HalfComponentRegisterOffsets; // 0x50

    };

    struct FNiagaraSimpleClientInfo //ScriptStruct Niagara.NiagaraSimpleClientInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FString> Systems; // 0x0
        struct TArray<struct FString> actors; // 0x10
        struct TArray<struct FString> Components; // 0x20
        struct TArray<struct FString> Emitters; // 0x30

    };

    struct FNiagaraOutlinerCaptureSettings //ScriptStruct Niagara.NiagaraOutlinerCaptureSettings
    {
    //Children Prop Count (Fields): 3
    public:

        bool bTriggerCapture; // 0x0
        uint32_t CaptureDelayFrames; // 0x4
        bool bGatherPerfData; // 0x8

    };

    struct FNiagaraRequestSimpleClientInfoMessage //ScriptStruct Niagara.NiagaraRequestSimpleClientInfoMessage
    {
    public:


    };

    struct FNiagaraDebugHUDSettingsData //ScriptStruct Niagara.NiagaraDebugHUDSettingsData
    {
    //Children Prop Count (Fields): 34
    public:

        bool bEnabled; // 0x0
        bool bValidateSystemSimulationDataBuffers; // 0x1
        bool bValidateParticleDataBuffers; // 0x2
        bool bOverviewEnabled; // 0x3
        enum class ENiagaraDebugHudFont OverviewFont; // 0x4
        struct FVector2D OverviewLocation; // 0x8
        struct FString ActorFilter; // 0x10
        bool bComponentFilterEnabled; // 0x20
        struct FString ComponentFilter; // 0x28
        bool bSystemFilterEnabled; // 0x38
        struct FString SystemFilter; // 0x40
        bool bEmitterFilterEnabled; // 0x50
        struct FString EmitterFilter; // 0x58
        bool bActorFilterEnabled; // 0x68
        enum class ENiagaraDebugHudVerbosity SystemDebugVerbosity; // 0x6c
        enum class ENiagaraDebugHudVerbosity SystemEmitterVerbosity; // 0x70
        bool bSystemShowBounds; // 0x74
        bool bSystemShowActiveOnlyInWorld; // 0x75
        bool bShowSystemVariables; // 0x76
        struct TArray<struct FNiagaraDebugHUDVariable> SystemVariables; // 0x78
        struct FNiagaraDebugHudTextOptions SystemTextOptions; // 0x88
        bool bShowParticleVariables; // 0x98
        bool bEnableGpuParticleReadback; // 0x99
        struct TArray<struct FNiagaraDebugHUDVariable> ParticlesVariables; // 0xa0
        struct FNiagaraDebugHudTextOptions ParticleTextOptions; // 0xb0
        bool bShowParticlesVariablesWithSystem; // 0xc0
        bool bUseMaxParticlesToDisplay; // 0xc1
        int32_t MaxParticlesToDisplay; // 0xc4
        enum class ENiagaraDebugPlaybackMode PlaybackMode; // 0xc8
        bool bPlaybackRateEnabled; // 0xc9
        float PlaybackRate; // 0xcc
        bool bLoopTimeEnabled; // 0xd0
        float LoopTime; // 0xd4
        bool bShowGlobalBudgetInfo; // 0xd8

    };

    struct FNiagaraDebugHudTextOptions //ScriptStruct Niagara.NiagaraDebugHudTextOptions
    {
    //Children Prop Count (Fields): 4
    public:

        enum class ENiagaraDebugHudFont Font; // 0x0
        enum class ENiagaraDebugHudHAlign HorizontalAlignment; // 0x4
        enum class ENiagaraDebugHudVAlign VerticalAlignment; // 0x5
        struct FVector2D ScreenOffset; // 0x8

    };

    struct FNiagaraDebugHUDVariable //ScriptStruct Niagara.NiagaraDebugHUDVariable
    {
    //Children Prop Count (Fields): 2
    public:

        bool bEnabled; // 0x0
        struct FString Name; // 0x8

    };

    struct FNiagaraDebuggerOutlinerUpdate //ScriptStruct Niagara.NiagaraDebuggerOutlinerUpdate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FNiagaraOutlinerData OutlinerData; // 0x0

    };

    struct FNiagaraOutlinerData //ScriptStruct Niagara.NiagaraOutlinerData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, struct FNiagaraOutlinerWorldData> WorldData; // 0x0

    };

    struct FNiagaraOutlinerWorldData //ScriptStruct Niagara.NiagaraOutlinerWorldData
    {
    //Children Prop Count (Fields): 6
    public:

        struct TMap<struct FString, struct FNiagaraOutlinerSystemData> Systems; // 0x0
        bool bHasBegunPlay; // 0x50
        char WorldType; // 0x51
        char NetMode; // 0x52
        struct FNiagaraOutlinerTimingData AveragePerFrameTime; // 0x54
        struct FNiagaraOutlinerTimingData MaxPerFrameTime; // 0x5c

    };

    struct FNiagaraOutlinerTimingData //ScriptStruct Niagara.NiagaraOutlinerTimingData
    {
    //Children Prop Count (Fields): 2
    public:

        float GameThread; // 0x0
        float RenderThread; // 0x4

    };

    struct FNiagaraOutlinerSystemData //ScriptStruct Niagara.NiagaraOutlinerSystemData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FNiagaraOutlinerSystemInstanceData> SystemInstances; // 0x0
        struct FNiagaraOutlinerTimingData AveragePerFrameTime; // 0x10
        struct FNiagaraOutlinerTimingData MaxPerFrameTime; // 0x18
        struct FNiagaraOutlinerTimingData AveragePerInstanceTime; // 0x20
        struct FNiagaraOutlinerTimingData MaxPerInstanceTime; // 0x28

    };

    struct FNiagaraOutlinerSystemInstanceData //ScriptStruct Niagara.NiagaraOutlinerSystemInstanceData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString ComponentName; // 0x0
        struct TArray<struct FNiagaraOutlinerEmitterInstanceData> Emitters; // 0x10
        enum class ENiagaraExecutionState ActualExecutionState; // 0x20
        enum class ENiagaraExecutionState RequestedExecutionState; // 0x24
        struct FNiagaraScalabilityState ScalabilityState; // 0x28
        char bPendingKill; // 0x30
        enum class ENCPoolMethod PoolMethod; // 0x34
        struct FNiagaraOutlinerTimingData AverageTime; // 0x38
        struct FNiagaraOutlinerTimingData MaxTime; // 0x40

    };

    struct FNiagaraOutlinerEmitterInstanceData //ScriptStruct Niagara.NiagaraOutlinerEmitterInstanceData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString EmitterName; // 0x0
        enum class ENiagaraSimTarget SimTarget; // 0x10
        enum class ENiagaraExecutionState ExecState; // 0x14
        int32_t NumParticles; // 0x18

    };

    struct FNiagaraDebuggerExecuteConsoleCommand //ScriptStruct Niagara.NiagaraDebuggerExecuteConsoleCommand
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Command; // 0x0
        bool bRequiresWorld; // 0x10

    };

    struct FNiagaraDebuggerConnectionClosed //ScriptStruct Niagara.NiagaraDebuggerConnectionClosed
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid SessionId; // 0x0
        struct FGuid instanceId; // 0x10

    };

    struct FNiagaraDebuggerAcceptConnection //ScriptStruct Niagara.NiagaraDebuggerAcceptConnection
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid SessionId; // 0x0
        struct FGuid instanceId; // 0x10

    };

    struct FNiagaraDebuggerRequestConnection //ScriptStruct Niagara.NiagaraDebuggerRequestConnection
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid SessionId; // 0x0
        struct FGuid instanceId; // 0x10

    };

    struct FNiagaraGraphViewSettings //ScriptStruct Niagara.NiagaraGraphViewSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector2D Location; // 0x0
        float zoom; // 0x8
        bool bIsValid; // 0xc

    };

    struct FNiagaraEmitterScalabilityOverrides //ScriptStruct Niagara.NiagaraEmitterScalabilityOverrides
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNiagaraEmitterScalabilityOverride> Overrides; // 0x0

    };

    struct FNiagaraEmitterScalabilitySettings //ScriptStruct Niagara.NiagaraEmitterScalabilitySettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FNiagaraPlatformSet Platforms; // 0x0
        char bScaleSpawnCount; // 0x30
        float SpawnCountScale; // 0x34

    };

    struct FNiagaraPlatformSet //ScriptStruct Niagara.NiagaraPlatformSet
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t QualityLevelMask; // 0x0
        struct TArray<struct FNiagaraDeviceProfileStateEntry> DeviceProfileStates; // 0x8
        struct TArray<struct FNiagaraPlatformSetCVarCondition> CVarConditions; // 0x18

    };

    struct FNiagaraPlatformSetCVarCondition //ScriptStruct Niagara.NiagaraPlatformSetCVarCondition
    {
    //Children Prop Count (Fields): 10
    public:

        struct FName CVarName; // 0x0
        bool Value; // 0x8
        int32_t MinInt; // 0xc
        int32_t MaxInt; // 0x10
        float MinFloat; // 0x14
        float MaxFloat; // 0x18
        char bUseMinInt; // 0x1c
        char bUseMaxInt; // 0x1c
        char bUseMinFloat; // 0x1c
        char bUseMaxFloat; // 0x1c

    };

    struct FNiagaraDeviceProfileStateEntry //ScriptStruct Niagara.NiagaraDeviceProfileStateEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName ProfileName; // 0x0
        uint32_t QualityLevelMask; // 0x8
        uint32_t SetQualityLevelMask; // 0xc

    };

    struct FNiagaraEmitterScalabilityOverride : FNiagaraEmitterScalabilitySettings //ScriptStruct Niagara.NiagaraEmitterScalabilityOverride
    {
    //Children Prop Count (Fields): 1
    public:

        char bOverrideSpawnCountScale; // 0x38

    };

    struct FNiagaraEmitterScalabilitySettingsArray //ScriptStruct Niagara.NiagaraEmitterScalabilitySettingsArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNiagaraEmitterScalabilitySettings> Settings; // 0x0

    };

    struct FNiagaraSystemScalabilityOverrides //ScriptStruct Niagara.NiagaraSystemScalabilityOverrides
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNiagaraSystemScalabilityOverride> Overrides; // 0x0

    };

    struct FNiagaraSystemScalabilitySettings //ScriptStruct Niagara.NiagaraSystemScalabilitySettings
    {
    //Children Prop Count (Fields): 11
    public:

        struct FNiagaraPlatformSet Platforms; // 0x0
        char bCullByDistance; // 0x30
        char bCullMaxInstanceCount; // 0x30
        char bCullPerSystemMaxInstanceCount; // 0x30
        char bCullByMaxTimeWithoutRender; // 0x30
        char bCullByGlobalBudget; // 0x30
        float MaxDistance; // 0x34
        int32_t MaxInstances; // 0x38
        int32_t MaxSystemInstances; // 0x3c
        float MaxTimeWithoutRender; // 0x40
        float MaxGlobalBudgetUsage; // 0x44

    };

    struct FNiagaraSystemScalabilityOverride : FNiagaraSystemScalabilitySettings //ScriptStruct Niagara.NiagaraSystemScalabilityOverride
    {
    //Children Prop Count (Fields): 5
    public:

        char bOverrideDistanceSettings; // 0x48
        char bOverrideInstanceCountSettings; // 0x48
        char bOverridePerSystemInstanceCountSettings; // 0x48
        char bOverrideTimeSinceRendererSettings; // 0x48
        char bOverrideGlobalBudgetCullingSettings; // 0x48

    };

    struct FNiagaraSystemScalabilitySettingsArray //ScriptStruct Niagara.NiagaraSystemScalabilitySettingsArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNiagaraSystemScalabilitySettings> Settings; // 0x0

    };

    struct FNiagaraDetailsLevelScaleOverrides //ScriptStruct Niagara.NiagaraDetailsLevelScaleOverrides
    {
    //Children Prop Count (Fields): 5
    public:

        float Low; // 0x0
        float Medium; // 0x4
        float High; // 0x8
        float Epic; // 0xc
        float Cine; // 0x10

    };

    struct FNiagaraEmitterScriptProperties //ScriptStruct Niagara.NiagaraEmitterScriptProperties
    {
    //Children Prop Count (Fields): 3
    public:

        class UNiagaraScript* Script; // 0x0
        struct TArray<struct FNiagaraEventReceiverProperties> EventReceivers; // 0x8
        struct TArray<struct FNiagaraEventGeneratorProperties> EventGenerators; // 0x18

    };

    struct FNiagaraEventGeneratorProperties //ScriptStruct Niagara.NiagaraEventGeneratorProperties
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t MaxEventsPerFrame; // 0x0
        struct FName ID; // 0x4
        struct FNiagaraDataSetCompiledData DataSetCompiledData; // 0x10

    };

    struct FNiagaraEventReceiverProperties //ScriptStruct Niagara.NiagaraEventReceiverProperties
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        struct FName SourceEventGenerator; // 0x8
        struct FName SourceEmitter; // 0x10

    };

    struct FNiagaraEventScriptProperties : FNiagaraEmitterScriptProperties //ScriptStruct Niagara.NiagaraEventScriptProperties
    {
    //Children Prop Count (Fields): 7
    public:

        enum class EScriptExecutionMode ExecutionMode; // 0x28
        uint32_t SpawnNumber; // 0x2c
        uint32_t MaxEventsPerFrame; // 0x30
        struct FGuid SourceEmitterID; // 0x34
        struct FName SourceEventName; // 0x44
        bool bRandomSpawnNumber; // 0x4c
        uint32_t MinSpawnNumber; // 0x50

    };

    struct FNiagaraEmitterHandle //ScriptStruct Niagara.NiagaraEmitterHandle
    {
    //Children Prop Count (Fields): 5
    public:

        struct FGuid ID; // 0x0
        struct FName IdName; // 0x10
        bool bIsEnabled; // 0x18
        struct FName Name; // 0x1c
        class UNiagaraEmitter* Instance; // 0x28

    };

    struct FNiagaraCollisionEventPayload //ScriptStruct Niagara.NiagaraCollisionEventPayload
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector CollisionPos; // 0x0
        struct FVector CollisionNormal; // 0xc
        struct FVector CollisionVelocity; // 0x18
        int32_t ParticleIndex; // 0x24
        int32_t PhysicalMaterialIndex; // 0x28

    };

    struct FNiagaraMeshRendererMeshProperties //ScriptStruct Niagara.NiagaraMeshRendererMeshProperties
    {
    //Children Prop Count (Fields): 4
    public:

        class UStaticMesh* Mesh; // 0x0
        struct FVector Scale; // 0x8
        struct FVector PivotOffset; // 0x14
        enum class ENiagaraMeshPivotOffsetSpace PivotOffsetSpace; // 0x20

    };

    struct FNiagaraMeshMaterialOverride //ScriptStruct Niagara.NiagaraMeshMaterialOverride
    {
    //Children Prop Count (Fields): 2
    public:

        class UMaterialInterface* ExplicitMat; // 0x0
        struct FNiagaraUserParameterBinding UserParamBinding; // 0x8

    };

    struct FParameterDefinitionsSubscription //ScriptStruct Niagara.ParameterDefinitionsSubscription
    {
    public:


    };

    struct FNiagaraParameters //ScriptStruct Niagara.NiagaraParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNiagaraVariable> Parameters; // 0x0

    };

    struct FNiagaraParameterStore //ScriptStruct Niagara.NiagaraParameterStore
    {
    //Children Prop Count (Fields): 5
    public:

        class UObject* Owner; // 0x8
        struct TArray<struct FNiagaraVariableWithOffset> SortedParameterOffsets; // 0x10
        struct TArray<char> ParameterData; // 0x20
        struct TArray<class UNiagaraDataInterface*> DataInterfaces; // 0x30
        struct TArray<class UObject*> UObjects; // 0x40

    };

    struct FNiagaraVariableWithOffset : FNiagaraVariableBase //ScriptStruct Niagara.NiagaraVariableWithOffset
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Offset; // 0xc

    };

    struct FNiagaraBoundParameter //ScriptStruct Niagara.NiagaraBoundParameter
    {
    //Children Prop Count (Fields): 3
    public:

        struct FNiagaraVariable Parameter; // 0x0
        int32_t SrcOffset; // 0x20
        int32_t DestOffset; // 0x24

    };

    struct FNiagaraPerfBaselineStats //ScriptStruct Niagara.NiagaraPerfBaselineStats
    {
    //Children Prop Count (Fields): 4
    public:

        float PerInstanceAvg_GT; // 0x0
        float PerInstanceAvg_RT; // 0x4
        float PerInstanceMax_GT; // 0x8
        float PerInstanceMax_RT; // 0xc

    };

    struct FNiagaraPlatformSetConflictInfo //ScriptStruct Niagara.NiagaraPlatformSetConflictInfo
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t SetAIndex; // 0x0
        int32_t SetBIndex; // 0x4
        struct TArray<struct FNiagaraPlatformSetConflictEntry> Conflicts; // 0x8

    };

    struct FNiagaraPlatformSetConflictEntry //ScriptStruct Niagara.NiagaraPlatformSetConflictEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ProfileName; // 0x0
        int32_t QualityLevelMask; // 0x8

    };

    struct FNiagaraRibbonUVSettings //ScriptStruct Niagara.NiagaraRibbonUVSettings
    {
    //Children Prop Count (Fields): 8
    public:

        enum class ENiagaraRibbonUVDistributionMode DistributionMode; // 0x0
        enum class ENiagaraRibbonUVEdgeMode LeadingEdgeMode; // 0x4
        enum class ENiagaraRibbonUVEdgeMode TrailingEdgeMode; // 0x8
        float TilingLength; // 0xc
        struct FVector2D Offset; // 0x10
        struct FVector2D Scale; // 0x18
        bool bEnablePerParticleUOverride; // 0x20
        bool bEnablePerParticleVRangeOverride; // 0x21

    };

    struct FNiagaraRibbonShapeCustomVertex //ScriptStruct Niagara.NiagaraRibbonShapeCustomVertex
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector2D Position; // 0x0
        struct FVector2D Normal; // 0x8
        float TextureV; // 0x10

    };

    struct FNiagaraScalabilityManager //ScriptStruct Niagara.NiagaraScalabilityManager
    {
    //Children Prop Count (Fields): 2
    public:

        class UNiagaraEffectType* EffectType; // 0x0
        struct TArray<class UNiagaraComponent*> ManagedComponents; // 0x8

    };

    struct FVersionedNiagaraScriptData //ScriptStruct Niagara.VersionedNiagaraScriptData
    {
    public:


    };

    struct FNiagaraVMExecutableData //ScriptStruct Niagara.NiagaraVMExecutableData
    {
    //Children Prop Count (Fields): 18
    public:

        struct TArray<char> ByteCode; // 0x0
        struct TArray<char> OptimizedByteCode; // 0x10
        int32_t NumTempRegisters; // 0x20
        int32_t NumUserPtrs; // 0x24
        struct TArray<struct FNiagaraCompilerTag> CompileTags; // 0x28
        struct TArray<char> ScriptLiterals; // 0x38
        struct TArray<struct FNiagaraVariable> Attributes; // 0x48
        struct FNiagaraScriptDataUsageInfo DataUsage; // 0x58
        struct TArray<struct FNiagaraScriptDataInterfaceCompileInfo> DataInterfaceInfo; // 0x60
        struct TArray<struct FVMExternalFunctionBindingInfo> CalledVMExternalFunctions; // 0x70
        struct TArray<struct FNiagaraDataSetID> ReadDataSets; // 0x90
        struct TArray<struct FNiagaraDataSetProperties> WriteDataSets; // 0xa0
        struct TArray<struct FNiagaraStatScope> StatScopes; // 0xb0
        struct TArray<struct FNiagaraDataInterfaceGPUParamInfo> DIParamInfo; // 0xc0
        enum class ENiagaraScriptCompileStatus LastCompileStatus; // 0xd0
        struct TArray<struct FSimulationStageMetaData> SimulationStageMetaData; // 0xd8
        char bReadsSignificanceIndex; // 0xe8
        char bNeedsGPUContextInit; // 0xe8

    };

    struct FSimulationStageMetaData //ScriptStruct NiagaraShader.SimulationStageMetaData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName SimulationStageName; // 0x0
        struct FName IterationSource; // 0x8
        char bSpawnOnly; // 0x10
        char bWritesParticles; // 0x10
        char bPartialParticleUpdate; // 0x10
        struct TArray<struct FName> OutputDestinations; // 0x18
        int32_t MinStage; // 0x28
        int32_t MaxStage; // 0x2c

    };

    struct FNiagaraDataInterfaceGPUParamInfo //ScriptStruct NiagaraShader.NiagaraDataInterfaceGPUParamInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString DataInterfaceHLSLSymbol; // 0x0
        struct FString DIClassName; // 0x10
        struct TArray<struct FNiagaraDataInterfaceGeneratedFunction> GeneratedFunctions; // 0x20

    };

    struct FNiagaraDataInterfaceGeneratedFunction //ScriptStruct NiagaraShader.NiagaraDataInterfaceGeneratedFunction
    {
    public:


    };

    struct FNiagaraCompilerTag //ScriptStruct Niagara.NiagaraCompilerTag
    {
    //Children Prop Count (Fields): 2
    public:

        struct FNiagaraVariable Variable; // 0x0
        struct FString StringValue; // 0x20

    };

    struct FNiagaraVMExecutableDataId //ScriptStruct Niagara.NiagaraVMExecutableDataId
    {
    //Children Prop Count (Fields): 9
    public:

        struct FGuid CompilerVersionID; // 0x0
        enum class ENiagaraScriptUsage ScriptUsageType; // 0x10
        struct FGuid ScriptUsageTypeID; // 0x14
        char bUsesRapidIterationParams; // 0x24
        char bInterpolatedSpawn; // 0x24
        char bRequiresPersistentIDs; // 0x24
        struct FGuid BaseScriptID; // 0x28
        struct FNiagaraCompileHash BaseScriptCompileHash; // 0x38
        struct FGuid ScriptVersionID; // 0x48

    };

    struct FNiagaraModuleDependency //ScriptStruct Niagara.NiagaraModuleDependency
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName ID; // 0x0
        enum class ENiagaraModuleDependencyType Type; // 0x8
        enum class ENiagaraModuleDependencyScriptConstraint ScriptConstraint; // 0x9
        struct FText Description; // 0x10

    };

    struct FNiagaraScriptInstanceParameterStore : FNiagaraParameterStore //ScriptStruct Niagara.NiagaraScriptInstanceParameterStore
    {
    public:


    };

    struct FNiagaraScriptExecutionParameterStore : FNiagaraParameterStore //ScriptStruct Niagara.NiagaraScriptExecutionParameterStore
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t ParameterSize; // 0x78
        uint32_t PaddedParameterSize; // 0x7c
        struct TArray<struct FNiagaraScriptExecutionPaddingInfo> PaddingInfo; // 0x80
        char bInitialized; // 0x90

    };

    struct FNiagaraScriptExecutionPaddingInfo //ScriptStruct Niagara.NiagaraScriptExecutionPaddingInfo
    {
    //Children Prop Count (Fields): 4
    public:

        uint16_t SrcOffset; // 0x0
        uint16_t DestOffset; // 0x2
        uint16_t SrcSize; // 0x4
        uint16_t DestSize; // 0x6

    };

    struct FNiagaraScriptHighlight //ScriptStruct Niagara.NiagaraScriptHighlight
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLinearColor Color; // 0x0
        struct FText DisplayName; // 0x10

    };

    struct FNiagaraSystemCompileRequest //ScriptStruct Niagara.NiagaraSystemCompileRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UObject*> RootObjects; // 0x8

    };

    struct FEmitterCompiledScriptPair //ScriptStruct Niagara.EmitterCompiledScriptPair
    {
    public:


    };

    struct FNiagaraSystemCompiledData //ScriptStruct Niagara.NiagaraSystemCompiledData
    {
    //Children Prop Count (Fields): 12
    public:

        struct FNiagaraParameterStore InstanceParamStore; // 0x0
        struct FNiagaraDataSetCompiledData DataSetCompiledData; // 0x78
        struct FNiagaraDataSetCompiledData SpawnInstanceParamsDataSetCompiledData; // 0xb8
        struct FNiagaraDataSetCompiledData UpdateInstanceParamsDataSetCompiledData; // 0xf8
        struct FNiagaraParameterDataSetBindingCollection SpawnInstanceGlobalBinding; // 0x138
        struct FNiagaraParameterDataSetBindingCollection SpawnInstanceSystemBinding; // 0x158
        struct FNiagaraParameterDataSetBindingCollection SpawnInstanceOwnerBinding; // 0x178
        struct TArray<struct FNiagaraParameterDataSetBindingCollection> SpawnInstanceEmitterBindings; // 0x198
        struct FNiagaraParameterDataSetBindingCollection UpdateInstanceGlobalBinding; // 0x1a8
        struct FNiagaraParameterDataSetBindingCollection UpdateInstanceSystemBinding; // 0x1c8
        struct FNiagaraParameterDataSetBindingCollection UpdateInstanceOwnerBinding; // 0x1e8
        struct TArray<struct FNiagaraParameterDataSetBindingCollection> UpdateInstanceEmitterBindings; // 0x208

    };

    struct FNiagaraParameterDataSetBindingCollection //ScriptStruct Niagara.NiagaraParameterDataSetBindingCollection
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FNiagaraParameterDataSetBinding> FloatOffsets; // 0x0
        struct TArray<struct FNiagaraParameterDataSetBinding> Int32Offsets; // 0x10

    };

    struct FNiagaraParameterDataSetBinding //ScriptStruct Niagara.NiagaraParameterDataSetBinding
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t ParameterOffset; // 0x0
        int32_t DataSetComponentOffset; // 0x4

    };

    struct FNiagaraEmitterCompiledData //ScriptStruct Niagara.NiagaraEmitterCompiledData
    {
    //Children Prop Count (Fields): 9
    public:

        struct TArray<struct FName> SpawnAttributes; // 0x0
        struct FNiagaraVariable EmitterSpawnIntervalVar; // 0x10
        struct FNiagaraVariable EmitterInterpSpawnStartDTVar; // 0x30
        struct FNiagaraVariable EmitterSpawnGroupVar; // 0x50
        struct FNiagaraVariable EmitterAgeVar; // 0x70
        struct FNiagaraVariable EmitterRandomSeedVar; // 0x90
        struct FNiagaraVariable EmitterInstanceSeedVar; // 0xb0
        struct FNiagaraVariable EmitterTotalSpawnedParticlesVar; // 0xd0
        struct FNiagaraDataSetCompiledData DataSetCompiledData; // 0xf0

    };

    struct FNiagaraVariableMetaData //ScriptStruct Niagara.NiagaraVariableMetaData
    {
    //Children Prop Count (Fields): 12
    public:

        struct FText Description; // 0x0
        struct FText CategoryName; // 0x20
        bool bAdvancedDisplay; // 0x40
        int32_t EditorSortPriority; // 0x44
        bool bInlineEditConditionToggle; // 0x48
        struct FNiagaraInputConditionMetadata EditCondition; // 0x50
        struct FNiagaraInputConditionMetadata VisibleCondition; // 0x68
        struct TMap<struct FName, struct FString> PropertyMetaData; // 0x80
        struct FName ParentAttribute; // 0xd0
        struct FGuid VariableGuid; // 0xd8
        bool bIsStaticSwitch; // 0xe8
        int32_t StaticSwitchDefaultValue; // 0xec

    };

    struct FNiagaraInputConditionMetadata //ScriptStruct Niagara.NiagaraInputConditionMetadata
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InputName; // 0x0
        struct TArray<struct FString> TargetValues; // 0x8

    };

    struct FNiagaraCompileHashVisitorDebugInfo //ScriptStruct Niagara.NiagaraCompileHashVisitorDebugInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Object; // 0x0
        struct TArray<struct FString> PropertyKeys; // 0x10
        struct TArray<struct FString> PropertyValues; // 0x20

    };

    struct FNiagaraID //ScriptStruct Niagara.NiagaraID
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Index; // 0x0
        int32_t AcquireTag; // 0x4

    };

    struct FNiagaraSpawnInfo //ScriptStruct Niagara.NiagaraSpawnInfo
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Count; // 0x0
        float InterpStartDt; // 0x4
        float IntervalDt; // 0x8
        int32_t SpawnGroup; // 0xc

    };

    struct FNiagaraAssetVersion //ScriptStruct Niagara.NiagaraAssetVersion
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t MajorVersion; // 0x0
        int32_t MinorVersion; // 0x4
        struct FGuid VersionGuid; // 0x8
        bool bIsVisibleInVersionSelector; // 0x18

    };

    struct FNiagaraMatrix //ScriptStruct Niagara.NiagaraMatrix
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector4 Row0; // 0x0
        struct FVector4 Row1; // 0x10
        struct FVector4 Row2; // 0x20
        struct FVector4 Row3; // 0x30

    };

    struct FNiagaraParameterMap //ScriptStruct Niagara.NiagaraParameterMap
    {
    public:


    };

    struct FNiagaraNumeric //ScriptStruct Niagara.NiagaraNumeric
    {
    public:


    };

    struct FNiagaraHalfVector4 //ScriptStruct Niagara.NiagaraHalfVector4
    {
    //Children Prop Count (Fields): 4
    public:

        uint16_t X; // 0x0
        uint16_t Y; // 0x2
        uint16_t Z; // 0x4
        uint16_t W; // 0x6

    };

    struct FNiagaraHalfVector3 //ScriptStruct Niagara.NiagaraHalfVector3
    {
    //Children Prop Count (Fields): 3
    public:

        uint16_t X; // 0x0
        uint16_t Y; // 0x2
        uint16_t Z; // 0x4

    };

    struct FNiagaraHalfVector2 //ScriptStruct Niagara.NiagaraHalfVector2
    {
    //Children Prop Count (Fields): 2
    public:

        uint16_t X; // 0x0
        uint16_t Y; // 0x2

    };

    struct FNiagaraHalf //ScriptStruct Niagara.NiagaraHalf
    {
    //Children Prop Count (Fields): 1
    public:

        uint16_t Value; // 0x0

    };

    struct FNiagaraBool //ScriptStruct Niagara.NiagaraBool
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Value; // 0x0

    };

    struct FNiagaraInt32 //ScriptStruct Niagara.NiagaraInt32
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Value; // 0x0

    };

    struct FNiagaraFloat //ScriptStruct Niagara.NiagaraFloat
    {
    //Children Prop Count (Fields): 1
    public:

        float Value; // 0x0

    };

    struct FNiagaraWildcard //ScriptStruct Niagara.NiagaraWildcard
    {
    public:


    };

    struct FNiagaraUserRedirectionParameterStore : FNiagaraParameterStore //ScriptStruct Niagara.NiagaraUserRedirectionParameterStore
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FNiagaraVariable, struct FNiagaraVariable> UserParameterRedirects; // 0x78

    };

    struct FNiagaraVariant //ScriptStruct Niagara.NiagaraVariant
    {
    //Children Prop Count (Fields): 4
    public:

        class UObject* Object; // 0x0
        class UNiagaraDataInterface* DataInterface; // 0x8
        struct TArray<char> Bytes; // 0x10
        enum class ENiagaraVariantMode CurrentMode; // 0x20

    };

    struct FNiagaraWorldManagerTickFunction : FTickFunction //ScriptStruct Niagara.NiagaraWorldManagerTickFunction
    {
    public:


    };

    struct FNiagaraCompileEvent //ScriptStruct NiagaraShader.NiagaraCompileEvent
    {
    //Children Prop Count (Fields): 7
    public:

        enum class FNiagaraCompileEventSeverity Severity; // 0x0
        struct FString Message; // 0x8
        struct FString ShortDescription; // 0x18
        bool bDismissable; // 0x28
        struct FGuid NodeGuid; // 0x2c
        struct FGuid PinGuid; // 0x3c
        struct TArray<struct FGuid> StackGuids; // 0x50

    };

    struct FModularSynthPresetBankEntry //ScriptStruct Synthesis.ModularSynthPresetBankEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString PresetName; // 0x0
        struct FModularSynthPreset Preset; // 0x10

    };

    struct FModularSynthPreset : FTableRowBase //ScriptStruct Synthesis.ModularSynthPreset
    {
    //Children Prop Count (Fields): 59
    public:

        char bEnablePolyphony; // 0x8
        enum class ESynth1OscType Osc1Type; // 0xc
        float Osc1Gain; // 0x10
        float Osc1Octave; // 0x14
        float Osc1Semitones; // 0x18
        float Osc1Cents; // 0x1c
        float Osc1PulseWidth; // 0x20
        enum class ESynth1OscType Osc2Type; // 0x24
        float Osc2Gain; // 0x28
        float Osc2Octave; // 0x2c
        float Osc2Semitones; // 0x30
        float Osc2Cents; // 0x34
        float Osc2PulseWidth; // 0x38
        float Portamento; // 0x3c
        char bEnableUnison; // 0x40
        char bEnableOscillatorSync; // 0x40
        float Spread; // 0x44
        float Pan; // 0x48
        float LFO1Frequency; // 0x4c
        float LFO1Gain; // 0x50
        enum class ESynthLFOType LFO1Type; // 0x54
        enum class ESynthLFOMode LFO1Mode; // 0x55
        enum class ESynthLFOPatchType LFO1PatchType; // 0x56
        float LFO2Frequency; // 0x58
        float LFO2Gain; // 0x5c
        enum class ESynthLFOType LFO2Type; // 0x60
        enum class ESynthLFOMode LFO2Mode; // 0x61
        enum class ESynthLFOPatchType LFO2PatchType; // 0x62
        float GainDb; // 0x64
        float AttackTime; // 0x68
        float DecayTime; // 0x6c
        float SustainGain; // 0x70
        float ReleaseTime; // 0x74
        enum class ESynthModEnvPatch ModEnvPatchType; // 0x78
        enum class ESynthModEnvBiasPatch ModEnvBiasPatchType; // 0x79
        char bInvertModulationEnvelope; // 0x7c
        char bInvertModulationEnvelopeBias; // 0x7c
        float ModulationEnvelopeDepth; // 0x80
        float ModulationEnvelopeAttackTime; // 0x84
        float ModulationEnvelopeDecayTime; // 0x88
        float ModulationEnvelopeSustainGain; // 0x8c
        float ModulationEnvelopeReleaseTime; // 0x90
        char bLegato; // 0x94
        char bRetrigger; // 0x94
        float FilterFrequency; // 0x98
        float FilterQ; // 0x9c
        enum class ESynthFilterType FilterType; // 0xa0
        enum class ESynthFilterAlgorithm FilterAlgorithm; // 0xa1
        char bStereoDelayEnabled; // 0xa4
        enum class ESynthStereoDelayMode StereoDelayMode; // 0xa8
        float StereoDelayTime; // 0xac
        float StereoDelayFeedback; // 0xb0
        float StereoDelayWetlevel; // 0xb4
        float StereoDelayRatio; // 0xb8
        char bChorusEnabled; // 0xbc
        float ChorusDepth; // 0xc0
        float ChorusFeedback; // 0xc4
        float ChorusFrequency; // 0xc8
        struct TArray<struct FEpicSynth1Patch> Patches; // 0xd0

    };

    struct FEpicSynth1Patch //ScriptStruct Synthesis.EpicSynth1Patch
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ESynth1PatchSource PatchSource; // 0x0
        struct TArray<struct FSynth1PatchCable> PatchCables; // 0x8

    };

    struct FSynth1PatchCable //ScriptStruct Synthesis.Synth1PatchCable
    {
    //Children Prop Count (Fields): 2
    public:

        float Depth; // 0x0
        enum class ESynth1PatchDestination Destination; // 0x4

    };

    struct FPatchId //ScriptStruct Synthesis.PatchId
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t ID; // 0x0

    };

    struct FSourceEffectBitCrusherSettings //ScriptStruct Synthesis.SourceEffectBitCrusherSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float CrushedSampleRate; // 0x0
        struct FSoundModulationDestinationSettings SampleRateModulation; // 0x8
        float CrushedBits; // 0x18
        struct FSoundModulationDestinationSettings BitModulation; // 0x20

    };

    struct FSoundModulationDestinationSettings //ScriptStruct Engine.SoundModulationDestinationSettings
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x0
        class USoundModulatorBase* Modulator; // 0x8

    };

    struct FSourceEffectBitCrusherBaseSettings //ScriptStruct Synthesis.SourceEffectBitCrusherBaseSettings
    {
    //Children Prop Count (Fields): 2
    public:

        float SampleRate; // 0x0
        float BitDepth; // 0x4

    };

    struct FSourceEffectChorusSettings //ScriptStruct Synthesis.SourceEffectChorusSettings
    {
    //Children Prop Count (Fields): 12
    public:

        float Depth; // 0x0
        float Frequency; // 0x4
        float Feedback; // 0x8
        float WetLevel; // 0xc
        float DryLevel; // 0x10
        float Spread; // 0x14
        struct FSoundModulationDestinationSettings DepthModulation; // 0x18
        struct FSoundModulationDestinationSettings FrequencyModulation; // 0x28
        struct FSoundModulationDestinationSettings FeedbackModulation; // 0x38
        struct FSoundModulationDestinationSettings WetModulation; // 0x48
        struct FSoundModulationDestinationSettings DryModulation; // 0x58
        struct FSoundModulationDestinationSettings SpreadModulation; // 0x68

    };

    struct FSourceEffectChorusBaseSettings //ScriptStruct Synthesis.SourceEffectChorusBaseSettings
    {
    //Children Prop Count (Fields): 6
    public:

        float Depth; // 0x0
        float Frequency; // 0x4
        float Feedback; // 0x8
        float WetLevel; // 0xc
        float DryLevel; // 0x10
        float Spread; // 0x14

    };

    struct FSourceEffectDynamicsProcessorSettings //ScriptStruct Synthesis.SourceEffectDynamicsProcessorSettings
    {
    //Children Prop Count (Fields): 12
    public:

        enum class ESourceEffectDynamicsProcessorType DynamicsProcessorType; // 0x0
        enum class ESourceEffectDynamicsPeakMode PeakMode; // 0x1
        float LookAheadMsec; // 0x4
        float AttackTimeMsec; // 0x8
        float ReleaseTimeMsec; // 0xc
        float ThresholdDb; // 0x10
        float Ratio; // 0x14
        float KneeBandwidthDb; // 0x18
        float InputGainDb; // 0x1c
        float OutputGainDb; // 0x20
        char bStereoLinked; // 0x24
        char bAnalogMode; // 0x24

    };

    struct FSourceEffectEnvelopeFollowerSettings //ScriptStruct Synthesis.SourceEffectEnvelopeFollowerSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float AttackTime; // 0x0
        float ReleaseTime; // 0x4
        enum class EEnvelopeFollowerPeakMode PeakMode; // 0x8
        bool bIsAnalogMode; // 0x9

    };

    struct FSourceEffectEQSettings //ScriptStruct Synthesis.SourceEffectEQSettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FSourceEffectEQBand> EQBands; // 0x0

    };

    struct FSourceEffectEQBand //ScriptStruct Synthesis.SourceEffectEQBand
    {
    //Children Prop Count (Fields): 4
    public:

        float Frequency; // 0x0
        float Bandwidth; // 0x4
        float GainDb; // 0x8
        char bEnabled; // 0xc

    };

    struct FSourceEffectFilterSettings //ScriptStruct Synthesis.SourceEffectFilterSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class ESourceEffectFilterCircuit FilterCircuit; // 0x0
        enum class ESourceEffectFilterType FilterType; // 0x1
        float CutoffFrequency; // 0x4
        float FilterQ; // 0x8
        struct TArray<struct FSourceEffectFilterAudioBusModulationSettings> AudioBusModulation; // 0x10

    };

    struct FSourceEffectFilterAudioBusModulationSettings //ScriptStruct Synthesis.SourceEffectFilterAudioBusModulationSettings
    {
    //Children Prop Count (Fields): 9
    public:

        class UAudioBus* AudioBus; // 0x0
        int32_t EnvelopeFollowerAttackTimeMsec; // 0x8
        int32_t EnvelopeFollowerReleaseTimeMsec; // 0xc
        float EnvelopeGainMultiplier; // 0x10
        enum class ESourceEffectFilterParam FilterParam; // 0x14
        float MinFrequencyModulation; // 0x18
        float MaxFrequencyModulation; // 0x1c
        float MinResonanceModulation; // 0x20
        float MaxResonanceModulation; // 0x24

    };

    struct FSourceEffectFoldbackDistortionSettings //ScriptStruct Synthesis.SourceEffectFoldbackDistortionSettings
    {
    //Children Prop Count (Fields): 3
    public:

        float InputGainDb; // 0x0
        float ThresholdDb; // 0x4
        float OutputGainDb; // 0x8

    };

    struct FSourceEffectMidSideSpreaderSettings //ScriptStruct Synthesis.SourceEffectMidSideSpreaderSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float SpreadAmount; // 0x0
        enum class EStereoChannelMode InputMode; // 0x4
        enum class EStereoChannelMode OutputMode; // 0x5
        bool bEqualPower; // 0x6

    };

    struct FSourceEffectPannerSettings //ScriptStruct Synthesis.SourceEffectPannerSettings
    {
    //Children Prop Count (Fields): 2
    public:

        float Spread; // 0x0
        float Pan; // 0x4

    };

    struct FSourceEffectPhaserSettings //ScriptStruct Synthesis.SourceEffectPhaserSettings
    {
    //Children Prop Count (Fields): 5
    public:

        float WetLevel; // 0x0
        float Frequency; // 0x4
        float Feedback; // 0x8
        enum class EPhaserLFOType LFOType; // 0xc
        bool UseQuadraturePhase; // 0xd

    };

    struct FSourceEffectRingModulationSettings //ScriptStruct Synthesis.SourceEffectRingModulationSettings
    {
    //Children Prop Count (Fields): 6
    public:

        enum class ERingModulatorTypeSourceEffect ModulatorType; // 0x0
        float Frequency; // 0x4
        float Depth; // 0x8
        float DryLevel; // 0xc
        float WetLevel; // 0x10
        class UAudioBus* AudioBusModulator; // 0x18

    };

    struct FSourceEffectSimpleDelaySettings //ScriptStruct Synthesis.SourceEffectSimpleDelaySettings
    {
    //Children Prop Count (Fields): 6
    public:

        float SpeedOfSound; // 0x0
        float DelayAmount; // 0x4
        float DryAmount; // 0x8
        float WetAmount; // 0xc
        float Feedback; // 0x10
        char bDelayBasedOnDistance; // 0x14

    };

    struct FSourceEffectStereoDelaySettings //ScriptStruct Synthesis.SourceEffectStereoDelaySettings
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EStereoDelaySourceEffect DelayMode; // 0x0
        float DelayTimeMsec; // 0x4
        float Feedback; // 0x8
        float DelayRatio; // 0xc
        float WetLevel; // 0x10
        float DryLevel; // 0x14
        bool bFilterEnabled; // 0x18
        enum class EStereoDelayFiltertype FilterType; // 0x19
        float FilterFrequency; // 0x1c
        float FilterQ; // 0x20

    };

    struct FSourceEffectWaveShaperSettings //ScriptStruct Synthesis.SourceEffectWaveShaperSettings
    {
    //Children Prop Count (Fields): 2
    public:

        float Amount; // 0x0
        float OutputGainDb; // 0x4

    };

    struct FSubmixEffectConvolutionReverbSettings //ScriptStruct Synthesis.SubmixEffectConvolutionReverbSettings
    {
    //Children Prop Count (Fields): 10
    public:

        float NormalizationVolumeDb; // 0x0
        bool bBypass; // 0x4
        bool bMixInputChannelFormatToImpulseResponseFormat; // 0x5
        bool bMixReverbOutputToOutputChannelFormat; // 0x6
        float SurroundRearChannelBleedDb; // 0x8
        bool bInvertRearChannelBleedPhase; // 0xc
        bool bSurroundRearChannelFlip; // 0xd
        float SurroundRearChannelBleedAmount; // 0x10
        class UAudioImpulseResponse* ImpulseResponse; // 0x18
        bool AllowHArdwareAcceleration; // 0x20

    };

    struct FSubmixEffectDelaySettings //ScriptStruct Synthesis.SubmixEffectDelaySettings
    {
    //Children Prop Count (Fields): 3
    public:

        float MaximumDelayLength; // 0x0
        float InterpolationTime; // 0x4
        float DelayLength; // 0x8

    };

    struct FSubmixEffectFilterSettings //ScriptStruct Synthesis.SubmixEffectFilterSettings
    {
    //Children Prop Count (Fields): 4
    public:

        enum class ESubmixFilterType FilterType; // 0x0
        enum class ESubmixFilterAlgorithm FilterAlgorithm; // 0x1
        float FilterFrequency; // 0x4
        float FilterQ; // 0x8

    };

    struct FSubmixEffectFlexiverbSettings //ScriptStruct Synthesis.SubmixEffectFlexiverbSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float PreDelay; // 0x0
        float DecayTime; // 0x4
        float RoomDampening; // 0x8
        int32_t Complexity; // 0xc

    };

    struct FSubmixEffectMultibandCompressorSettings //ScriptStruct Synthesis.SubmixEffectMultibandCompressorSettings
    {
    //Children Prop Count (Fields): 7
    public:

        enum class ESubmixEffectDynamicsProcessorType DynamicsProcessorType; // 0x0
        enum class ESubmixEffectDynamicsPeakMode PeakMode; // 0x1
        float LookAheadMsec; // 0x4
        bool bLinkChannels; // 0x8
        bool bAnalogMode; // 0x9
        bool bFourPole; // 0xa
        struct TArray<struct FDynamicsBandSettings> Bands; // 0x10

    };

    struct FDynamicsBandSettings //ScriptStruct Synthesis.DynamicsBandSettings
    {
    //Children Prop Count (Fields): 8
    public:

        float CrossoverTopFrequency; // 0x0
        float AttackTimeMsec; // 0x4
        float ReleaseTimeMsec; // 0x8
        float ThresholdDb; // 0xc
        float Ratio; // 0x10
        float KneeBandwidthDb; // 0x14
        float InputGainDb; // 0x18
        float OutputGainDb; // 0x1c

    };

    struct FSubmixEffectStereoDelaySettings //ScriptStruct Synthesis.SubmixEffectStereoDelaySettings
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EStereoDelaySourceEffect DelayMode; // 0x0
        float DelayTimeMsec; // 0x4
        float Feedback; // 0x8
        float DelayRatio; // 0xc
        float WetLevel; // 0x10
        float DryLevel; // 0x14
        bool bFilterEnabled; // 0x18
        enum class EStereoDelayFiltertype FilterType; // 0x19
        float FilterFrequency; // 0x1c
        float FilterQ; // 0x20

    };

    struct FSubmixEffectTapDelaySettings //ScriptStruct Synthesis.SubmixEffectTapDelaySettings
    {
    //Children Prop Count (Fields): 3
    public:

        float MaximumDelayLength; // 0x0
        float InterpolationTime; // 0x4
        struct TArray<struct FTapDelayInfo> Taps; // 0x8

    };

    struct FTapDelayInfo //ScriptStruct Synthesis.TapDelayInfo
    {
    //Children Prop Count (Fields): 6
    public:

        enum class ETapLineMode TapLineMode; // 0x0
        float DelayLength; // 0x4
        float Gain; // 0x8
        int32_t OutputChannel; // 0xc
        float PanInDegrees; // 0x10
        int32_t TapId; // 0x14

    };

    struct FSynth2DSliderStyle : FSlateWidgetStyle //ScriptStruct Synthesis.Synth2DSliderStyle
    {
    //Children Prop Count (Fields): 6
    public:

        struct FSlateBrush NormalThumbImage; // 0x8
        struct FSlateBrush DisabledThumbImage; // 0x90
        struct FSlateBrush NormalBarImage; // 0x118
        struct FSlateBrush DisabledBarImage; // 0x1a0
        struct FSlateBrush BackgroundImage; // 0x228
        float BarThickness; // 0x2b0

    };

    struct FSynthKnobStyle : FSlateWidgetStyle //ScriptStruct Synthesis.SynthKnobStyle
    {
    //Children Prop Count (Fields): 7
    public:

        struct FSlateBrush LargeKnob; // 0x8
        struct FSlateBrush LargeKnobOverlay; // 0x90
        struct FSlateBrush MediumKnob; // 0x118
        struct FSlateBrush MediumKnobOverlay; // 0x1a0
        float MinValueAngle; // 0x228
        float MaxValueAngle; // 0x22c
        enum class ESynthKnobSize KnobSize; // 0x230

    };

    struct FSynthSlateStyle : FSlateWidgetStyle //ScriptStruct Synthesis.SynthSlateStyle
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ESynthSlateSizeType SizeType; // 0x8
        enum class ESynthSlateColorStyle ColorStyle; // 0x9

    };

    struct FSoundVariation //ScriptStruct SoundUtilities.SoundVariation
    {
    //Children Prop Count (Fields): 4
    public:

        class USoundWave* SoundWave; // 0x0
        float ProbabilityWeight; // 0x8
        struct FVector2D VolumeRange; // 0xc
        struct FVector2D PitchRange; // 0x14

    };

    struct FTimeSynthEnvelopeFollowerSettings //ScriptStruct TimeSynth.TimeSynthEnvelopeFollowerSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float AttackTime; // 0x0
        float ReleaseTime; // 0x4
        enum class ETimeSynthEnvelopeFollowerPeakMode PeakMode; // 0x8
        bool bIsAnalogMode; // 0x9

    };

    struct FTimeSynthFilterSettings //ScriptStruct TimeSynth.TimeSynthFilterSettings
    {
    //Children Prop Count (Fields): 3
    public:

        enum class ETimeSynthFilterType FilterType; // 0x0
        float CutoffFrequency; // 0x4
        float FilterQ; // 0x8

    };

    struct FTimeSynthClipSound //ScriptStruct TimeSynth.TimeSynthClipSound
    {
    //Children Prop Count (Fields): 3
    public:

        class USoundWave* SoundWave; // 0x0
        float RandomWeight; // 0x8
        struct FVector2D DistanceRange; // 0xc

    };

    struct FTimeSynthClipHandle //ScriptStruct TimeSynth.TimeSynthClipHandle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ClipName; // 0x0
        int32_t ClipId; // 0x8

    };

    struct FTimeSynthTimeDef //ScriptStruct TimeSynth.TimeSynthTimeDef
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t NumBars; // 0x0
        int32_t NumBeats; // 0x4

    };

    struct FTimeSynthQuantizationSettings //ScriptStruct TimeSynth.TimeSynthQuantizationSettings
    {
    //Children Prop Count (Fields): 5
    public:

        float BeatsPerMinute; // 0x0
        int32_t BeatsPerBar; // 0x4
        enum class ETimeSynthBeatDivision BeatDivision; // 0x8
        float EventDelaySeconds; // 0xc
        enum class ETimeSynthEventQuantization GlobalQuantization; // 0x10

    };

    struct FTimeSynthSpectralData //ScriptStruct TimeSynth.TimeSynthSpectralData
    {
    //Children Prop Count (Fields): 2
    public:

        float FrequencyHz; // 0x0
        float Magnitude; // 0x4

    };

    struct FLandmassBrushEffectsList //ScriptStruct Landmass.LandmassBrushEffectsList
    {
    //Children Prop Count (Fields): 5
    public:

        struct FBrushEffectBlurring Blurring; // 0x0
        struct FBrushEffectCurlNoise CurlNoise; // 0x8
        struct FBrushEffectDisplacement Displacement; // 0x18
        struct FBrushEffectSmoothBlending SmoothBlending; // 0x40
        struct FBrushEffectTerracing Terracing; // 0x48

    };

    struct FBrushEffectTerracing //ScriptStruct Landmass.BrushEffectTerracing
    {
    //Children Prop Count (Fields): 5
    public:

        float TerraceAlpha; // 0x0
        float TerraceSpacing; // 0x4
        float TerraceSmoothness; // 0x8
        float MaskLength; // 0xc
        float MaskStartOffset; // 0x10

    };

    struct FBrushEffectSmoothBlending //ScriptStruct Landmass.BrushEffectSmoothBlending
    {
    //Children Prop Count (Fields): 2
    public:

        float InnerSmoothDistance; // 0x0
        float OuterSmoothDistance; // 0x4

    };

    struct FBrushEffectDisplacement //ScriptStruct Landmass.BrushEffectDisplacement
    {
    //Children Prop Count (Fields): 6
    public:

        float DisplacementHeight; // 0x0
        float DisplacementTiling; // 0x4
        class UTexture2D* Texture; // 0x8
        float Midpoint; // 0x10
        struct FLinearColor Channel; // 0x14
        float WeightmapInfluence; // 0x24

    };

    struct FBrushEffectCurlNoise //ScriptStruct Landmass.BrushEffectCurlNoise
    {
    //Children Prop Count (Fields): 4
    public:

        float Curl1Amount; // 0x0
        float Curl2Amount; // 0x4
        float Curl1Tiling; // 0x8
        float Curl2Tiling; // 0xc

    };

    struct FBrushEffectBlurring //ScriptStruct Landmass.BrushEffectBlurring
    {
    //Children Prop Count (Fields): 2
    public:

        bool bBlurShape; // 0x0
        int32_t Radius; // 0x4

    };

    struct FBrushEffectCurves //ScriptStruct Landmass.BrushEffectCurves
    {
    //Children Prop Count (Fields): 5
    public:

        bool bUseCurveChannel; // 0x0
        class UCurveFloat* ElevationCurveAsset; // 0x8
        float ChannelEdgeOffset; // 0x10
        float ChannelDepth; // 0x14
        float CurveRampWidth; // 0x18

    };

    struct FLandmassFalloffSettings //ScriptStruct Landmass.LandmassFalloffSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EBrushFalloffMode FalloffMode; // 0x0
        float FalloffAngle; // 0x4
        float FalloffWidth; // 0x8
        float EdgeOffset; // 0xc
        float ZOffset; // 0x10

    };

    struct FLandmassTerrainCarvingSettings //ScriptStruct Landmass.LandmassTerrainCarvingSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EBrushBlendType BlendMode; // 0x0
        bool bInvertShape; // 0x1
        struct FLandmassFalloffSettings FalloffSettings; // 0x4
        struct FLandmassBrushEffectsList Effects; // 0x18
        int32_t Priority; // 0x78

    };

    struct FYEzProfileRuntimeData //ScriptStruct YEzProfile.YEzProfileRuntimeData
    {
    public:


    };

    struct FYEzProfileInitializationData //ScriptStruct YEzProfile.YEzProfileInitializationData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_triggerReason; // 0x0
        float m_timeToProfile; // 0x10
        enum class EYEZProfileType m_type; // 0x14
        bool m_forceNewProfile; // 0x15

    };

    struct FDatasmithCameraLookatTrackingSettingsTemplate //ScriptStruct DatasmithContent.DatasmithCameraLookatTrackingSettingsTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        char bEnableLookAtTracking; // 0x0
        char bAllowRoll; // 0x0
        struct TSoftObjectPtr<AActor> ActorToTrack; // 0x8

    };

    struct FDatasmithPostProcessSettingsTemplate //ScriptStruct DatasmithContent.DatasmithPostProcessSettingsTemplate
    {
    //Children Prop Count (Fields): 16
    public:

        char bOverride_WhiteTemp; // 0x0
        char bOverride_ColorSaturation; // 0x0
        char bOverride_VignetteIntensity; // 0x0
        char bOverride_FilmWhitePoint; // 0x0
        char bOverride_AutoExposureMethod; // 0x0
        char bOverride_CameraISO; // 0x0
        char bOverride_CameraShutterSpeed; // 0x0
        char bOverride_DepthOfFieldFstop; // 0x4
        float WhiteTemp; // 0x8
        float VignetteIntensity; // 0xc
        struct FLinearColor FilmWhitePoint; // 0x10
        struct FVector4 ColorSaturation; // 0x20
        enum class EAutoExposureMethod AutoExposureMethod; // 0x30
        float CameraISO; // 0x34
        float CameraShutterSpeed; // 0x38
        float DepthOfFieldFstop; // 0x3c

    };

    struct FDatasmithCameraFocusSettingsTemplate //ScriptStruct DatasmithContent.DatasmithCameraFocusSettingsTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ECameraFocusMethod FocusMethod; // 0x0
        float ManualFocusDistance; // 0x4

    };

    struct FDatasmithCameraLensSettingsTemplate //ScriptStruct DatasmithContent.DatasmithCameraLensSettingsTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        float MaxFStop; // 0x0

    };

    struct FDatasmithCameraFilmbackSettingsTemplate //ScriptStruct DatasmithContent.DatasmithCameraFilmbackSettingsTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        float SensorWidth; // 0x0
        float SensorHeight; // 0x4

    };

    struct FDatasmithTessellationOptions //ScriptStruct DatasmithContent.DatasmithTessellationOptions
    {
    //Children Prop Count (Fields): 4
    public:

        float ChordTolerance; // 0x0
        float MaxEdgeLength; // 0x4
        float NormalTolerance; // 0x8
        enum class EDatasmithCADStitchingTechnique StitchingTechnique; // 0xc

    };

    struct FDatasmithRetessellationOptions : FDatasmithTessellationOptions //ScriptStruct DatasmithContent.DatasmithRetessellationOptions
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EDatasmithCADRetessellationRule RetessellationRule; // 0x10

    };

    struct FDatasmithImportBaseOptions //ScriptStruct DatasmithContent.DatasmithImportBaseOptions
    {
    //Children Prop Count (Fields): 8
    public:

        enum class EDatasmithImportScene SceneHandling; // 0x0
        bool bIncludeGeometry; // 0x1
        bool bIncludeMaterial; // 0x2
        bool bIncludeLight; // 0x3
        bool bIncludeCamera; // 0x4
        bool bIncludeAnimation; // 0x5
        struct FDatasmithAssetImportOptions AssetOptions; // 0x8
        struct FDatasmithStaticMeshImportOptions StaticMeshOptions; // 0x10

    };

    struct FDatasmithStaticMeshImportOptions //ScriptStruct DatasmithContent.DatasmithStaticMeshImportOptions
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EDatasmithImportLightmapMin MinLightmapResolution; // 0x0
        enum class EDatasmithImportLightmapMax MaxLightmapResolution; // 0x1
        bool bGenerateLightmapUVs; // 0x2
        bool bRemoveDegenerates; // 0x3

    };

    struct FDatasmithAssetImportOptions //ScriptStruct DatasmithContent.DatasmithAssetImportOptions
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName PackagePath; // 0x0

    };

    struct FDatasmithReimportOptions //ScriptStruct DatasmithContent.DatasmithReimportOptions
    {
    //Children Prop Count (Fields): 2
    public:

        bool bUpdateActors; // 0x0
        bool bRespawnDeletedActors; // 0x1

    };

    struct FDatasmithStaticParameterSetTemplate //ScriptStruct DatasmithContent.DatasmithStaticParameterSetTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, bool> StaticSwitchParameters; // 0x0

    };

    struct FDatasmithMeshSectionInfoMapTemplate //ScriptStruct DatasmithContent.DatasmithMeshSectionInfoMapTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<uint32_t, struct FDatasmithMeshSectionInfoTemplate> Map; // 0x0

    };

    struct FDatasmithMeshSectionInfoTemplate //ScriptStruct DatasmithContent.DatasmithMeshSectionInfoTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t MaterialIndex; // 0x0

    };

    struct FDatasmithStaticMaterialTemplate //ScriptStruct DatasmithContent.DatasmithStaticMaterialTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName MaterialSlotName; // 0x0
        class UMaterialInterface* MaterialInterface; // 0x8

    };

    struct FDatasmithMeshBuildSettingsTemplate //ScriptStruct DatasmithContent.DatasmithMeshBuildSettingsTemplate
    {
    //Children Prop Count (Fields): 11
    public:

        char bUseMikkTSpace; // 0x0
        char bRecomputeNormals; // 0x0
        char bRecomputeTangents; // 0x0
        char bRemoveDegenerates; // 0x0
        char bBuildAdjacencyBuffer; // 0x0
        char bUseHighPrecisionTangentBasis; // 0x0
        char bUseFullPrecisionUVs; // 0x0
        char bGenerateLightmapUVs; // 0x0
        int32_t MinLightmapResolution; // 0x4
        int32_t SrcLightmapIndex; // 0x8
        int32_t DstLightmapIndex; // 0xc

    };

    struct FFunctionCaller //ScriptStruct VariantManagerContent.FunctionCaller
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName FunctionName; // 0x0

    };

    struct FCapturedPropSegment //ScriptStruct VariantManagerContent.CapturedPropSegment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString PropertyName; // 0x0
        int32_t PropertyIndex; // 0x10
        struct FString ComponentName; // 0x18

    };

    struct FVariantDependency //ScriptStruct VariantManagerContent.VariantDependency
    {
    //Children Prop Count (Fields): 3
    public:

        struct TSoftObjectPtr<UVariantSet> VariantSet; // 0x0
        struct TSoftObjectPtr<UVariant> Variant; // 0x28
        bool bEnabled; // 0x50

    };

    struct FAdaptorPolygon2Group //ScriptStruct EditableMesh.AdaptorPolygon2Group
    {
    //Children Prop Count (Fields): 3
    public:

        uint32_t RenderingSectionIndex; // 0x0
        int32_t MaterialIndex; // 0x4
        int32_t MaxTriangles; // 0x8

    };

    struct FAdaptorPolygon //ScriptStruct EditableMesh.AdaptorPolygon
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPolygonGroupID PolygonGroupID; // 0x0
        struct TArray<struct FAdaptorTriangleID> TriangulatedPolygonTriangleIndices; // 0x8

    };

    struct FElementID //ScriptStruct MeshDescription.ElementID
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t IDValue; // 0x0

    };

    struct FAdaptorTriangleID : FElementID //ScriptStruct EditableMesh.AdaptorTriangleID
    {
    public:


    };

    struct FPolygonGroupID : FElementID //ScriptStruct MeshDescription.PolygonGroupID
    {
    public:


    };

    struct FPolygonGroupForPolygon //ScriptStruct EditableMesh.PolygonGroupForPolygon
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPolygonID PolygonID; // 0x0
        struct FPolygonGroupID PolygonGroupID; // 0x4

    };

    struct FPolygonID : FElementID //ScriptStruct MeshDescription.PolygonID
    {
    public:


    };

    struct FPolygonGroupToCreate //ScriptStruct EditableMesh.PolygonGroupToCreate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMeshElementAttributeList PolygonGroupAttributes; // 0x0
        struct FPolygonGroupID OriginalPolygonGroupID; // 0x10

    };

    struct FMeshElementAttributeList //ScriptStruct EditableMesh.MeshElementAttributeList
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FMeshElementAttributeData> Attributes; // 0x0

    };

    struct FMeshElementAttributeData //ScriptStruct EditableMesh.MeshElementAttributeData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName AttributeName; // 0x0
        int32_t AttributeIndex; // 0x8
        struct FMeshElementAttributeValue AttributeValue; // 0x10

    };

    struct FMeshElementAttributeValue //ScriptStruct EditableMesh.MeshElementAttributeValue
    {
    public:


    };

    struct FVertexToMove //ScriptStruct EditableMesh.VertexToMove
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVertexID VertexID; // 0x0
        struct FVector NewVertexPosition; // 0x4

    };

    struct FVertexID : FElementID //ScriptStruct MeshDescription.VertexID
    {
    public:


    };

    struct FChangeVertexInstancesForPolygon //ScriptStruct EditableMesh.ChangeVertexInstancesForPolygon
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPolygonID PolygonID; // 0x0
        struct TArray<struct FVertexIndexAndInstanceID> PerimeterVertexIndicesAndInstanceIDs; // 0x8
        struct TArray<struct FVertexInstancesForPolygonHole> VertexIndicesAndInstanceIDsForEachHole; // 0x18

    };

    struct FVertexInstancesForPolygonHole //ScriptStruct EditableMesh.VertexInstancesForPolygonHole
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FVertexIndexAndInstanceID> VertexIndicesAndInstanceIDs; // 0x0

    };

    struct FVertexIndexAndInstanceID //ScriptStruct EditableMesh.VertexIndexAndInstanceID
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t ContourIndex; // 0x0
        struct FVertexInstanceID VertexInstanceID; // 0x4

    };

    struct FVertexInstanceID : FElementID //ScriptStruct MeshDescription.VertexInstanceID
    {
    public:


    };

    struct FVertexAttributesForPolygon //ScriptStruct EditableMesh.VertexAttributesForPolygon
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPolygonID PolygonID; // 0x0
        struct TArray<struct FMeshElementAttributeList> PerimeterVertexAttributeLists; // 0x8
        struct TArray<struct FVertexAttributesForPolygonHole> VertexAttributeListsForEachHole; // 0x18

    };

    struct FVertexAttributesForPolygonHole //ScriptStruct EditableMesh.VertexAttributesForPolygonHole
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FMeshElementAttributeList> VertexAttributeList; // 0x0

    };

    struct FAttributesForEdge //ScriptStruct EditableMesh.AttributesForEdge
    {
    //Children Prop Count (Fields): 2
    public:

        struct FEdgeID EdgeID; // 0x0
        struct FMeshElementAttributeList EdgeAttributes; // 0x8

    };

    struct FEdgeID : FElementID //ScriptStruct MeshDescription.EdgeID
    {
    public:


    };

    struct FAttributesForVertexInstance //ScriptStruct EditableMesh.AttributesForVertexInstance
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVertexInstanceID VertexInstanceID; // 0x0
        struct FMeshElementAttributeList VertexInstanceAttributes; // 0x8

    };

    struct FAttributesForVertex //ScriptStruct EditableMesh.AttributesForVertex
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVertexID VertexID; // 0x0
        struct FMeshElementAttributeList VertexAttributes; // 0x8

    };

    struct FPolygonToSplit //ScriptStruct EditableMesh.PolygonToSplit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPolygonID PolygonID; // 0x0
        struct TArray<struct FVertexPair> VertexPairsToSplitAt; // 0x8

    };

    struct FVertexPair //ScriptStruct EditableMesh.VertexPair
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVertexID VertexID0; // 0x0
        struct FVertexID VertexID1; // 0x4

    };

    struct FPolygonToCreate //ScriptStruct EditableMesh.PolygonToCreate
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPolygonGroupID PolygonGroupID; // 0x0
        struct TArray<struct FVertexAndAttributes> PerimeterVertices; // 0x8
        struct FPolygonID OriginalPolygonID; // 0x18
        enum class EPolygonEdgeHardness PolygonEdgeHardness; // 0x1c

    };

    struct FVertexAndAttributes //ScriptStruct EditableMesh.VertexAndAttributes
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVertexInstanceID VertexInstanceID; // 0x0
        struct FVertexID VertexID; // 0x4
        struct FMeshElementAttributeList PolygonVertexAttributes; // 0x8

    };

    struct FEdgeToCreate //ScriptStruct EditableMesh.EdgeToCreate
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVertexID VertexID0; // 0x0
        struct FVertexID VertexID1; // 0x4
        struct FMeshElementAttributeList EdgeAttributes; // 0x8
        struct FEdgeID OriginalEdgeID; // 0x18

    };

    struct FVertexInstanceToCreate //ScriptStruct EditableMesh.VertexInstanceToCreate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVertexID VertexID; // 0x0
        struct FMeshElementAttributeList VertexInstanceAttributes; // 0x8
        struct FVertexInstanceID OriginalVertexInstanceID; // 0x18

    };

    struct FVertexToCreate //ScriptStruct EditableMesh.VertexToCreate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMeshElementAttributeList VertexAttributes; // 0x0
        struct FVertexID OriginalVertexID; // 0x10

    };

    struct FSubdivisionLimitData //ScriptStruct EditableMesh.SubdivisionLimitData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FVector> VertexPositions; // 0x0
        struct TArray<struct FSubdivisionLimitSection> Sections; // 0x10
        struct TArray<struct FSubdividedWireEdge> SubdividedWireEdges; // 0x20

    };

    struct FSubdividedWireEdge //ScriptStruct EditableMesh.SubdividedWireEdge
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t EdgeVertex0PositionIndex; // 0x0
        int32_t EdgeVertex1PositionIndex; // 0x4

    };

    struct FSubdivisionLimitSection //ScriptStruct EditableMesh.SubdivisionLimitSection
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FSubdividedQuad> SubdividedQuads; // 0x0

    };

    struct FSubdividedQuad //ScriptStruct EditableMesh.SubdividedQuad
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSubdividedQuadVertex QuadVertex0; // 0x0
        struct FSubdividedQuadVertex QuadVertex1; // 0x34
        struct FSubdividedQuadVertex QuadVertex2; // 0x68
        struct FSubdividedQuadVertex QuadVertex3; // 0x9c

    };

    struct FSubdividedQuadVertex //ScriptStruct EditableMesh.SubdividedQuadVertex
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t VertexPositionIndex; // 0x0
        struct FVector2D TextureCoordinate0; // 0x4
        struct FVector2D TextureCoordinate1; // 0xc
        struct FColor VertexColor; // 0x14
        struct FVector VertexNormal; // 0x18
        struct FVector VertexTangent; // 0x24
        float VertexBinormalSign; // 0x30

    };

    struct FRenderingPolygonGroup //ScriptStruct EditableMesh.RenderingPolygonGroup
    {
    //Children Prop Count (Fields): 3
    public:

        uint32_t RenderingSectionIndex; // 0x0
        int32_t MaterialIndex; // 0x4
        int32_t MaxTriangles; // 0x8

    };

    struct FRenderingPolygon //ScriptStruct EditableMesh.RenderingPolygon
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPolygonGroupID PolygonGroupID; // 0x0
        struct TArray<struct FTriangleID> TriangulatedPolygonTriangleIndices; // 0x8

    };

    struct FTriangleID : FElementID //ScriptStruct MeshDescription.TriangleID
    {
    public:


    };

    struct FMovieSceneGeometryCollectionParams //ScriptStruct GeometryCollectionTracks.MovieSceneGeometryCollectionParams
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSoftObjectPath GeometryCollectionCache; // 0x8
        struct FFrameNumber StartFrameOffset; // 0x20
        struct FFrameNumber EndFrameOffset; // 0x24
        float PlayRate; // 0x28

    };

    struct FMovieSceneGeometryCollectionSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct GeometryCollectionTracks.MovieSceneGeometryCollectionSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneGeometryCollectionSectionTemplateParameters Params; // 0x20

    };

    struct FMovieSceneGeometryCollectionSectionTemplateParameters : FMovieSceneGeometryCollectionParams //ScriptStruct GeometryCollectionTracks.MovieSceneGeometryCollectionSectionTemplateParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumber SectionStartTime; // 0x30
        struct FFrameNumber SectionEndTime; // 0x34

    };

    struct FProcMeshSection //ScriptStruct ProceduralMeshComponent.ProcMeshSection
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FProcMeshVertex> ProcVertexBuffer; // 0x0
        struct TArray<uint32_t> ProcIndexBuffer; // 0x10
        struct FBox SectionLocalBox; // 0x20
        bool bEnableCollision; // 0x3c
        bool bSectionVisible; // 0x3d

    };

    struct FProcMeshVertex //ScriptStruct ProceduralMeshComponent.ProcMeshVertex
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector Position; // 0x0
        struct FVector Normal; // 0xc
        struct FProcMeshTangent Tangent; // 0x18
        struct FColor Color; // 0x28
        struct FVector2D UV0; // 0x2c
        struct FVector2D UV1; // 0x34
        struct FVector2D UV2; // 0x3c
        struct FVector2D UV3; // 0x44

    };

    struct FProcMeshTangent //ScriptStruct ProceduralMeshComponent.ProcMeshTangent
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector TangentX; // 0x0
        bool bFlipTangentY; // 0xc

    };

    struct FNodeHierarchyWithUserData //ScriptStruct AnimationCore.NodeHierarchyWithUserData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FNodeHierarchyData Hierarchy; // 0x8

    };

    struct FNodeHierarchyData //ScriptStruct AnimationCore.NodeHierarchyData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FNodeObject> nodes; // 0x0
        struct TArray<struct FTransform> Transforms; // 0x10
        struct TMap<struct FName, int32_t> NodeNameToIndexMapping; // 0x20

    };

    struct FNodeObject //ScriptStruct AnimationCore.NodeObject
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        struct FName ParentName; // 0x8

    };

    struct FAnimationHierarchy : FNodeHierarchyWithUserData //ScriptStruct ControlRig.AnimationHierarchy
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FConstraintNodeData> userData; // 0x78

    };

    struct FConstraintNodeData //ScriptStruct ControlRig.ConstraintNodeData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTransform RelativeParent; // 0x0
        struct FConstraintOffset ConstraintOffset; // 0x30
        struct FName LinkedNode; // 0x90
        struct TArray<struct FTransformConstraint> Constraints; // 0x98

    };

    struct FTransformConstraint //ScriptStruct AnimationCore.TransformConstraint
    {
    //Children Prop Count (Fields): 5
    public:

        struct FConstraintDescription Operator; // 0x0
        struct FName SourceNode; // 0x10
        struct FName TargetNode; // 0x18
        float weight; // 0x20
        bool bMaintainOffset; // 0x24

    };

    struct FConstraintDescription //ScriptStruct AnimationCore.ConstraintDescription
    {
    //Children Prop Count (Fields): 7
    public:

        bool bTranslation; // 0x0
        bool bRotation; // 0x1
        bool bScale; // 0x2
        bool bParent; // 0x3
        struct FFilterOptionPerAxis TranslationAxes; // 0x4
        struct FFilterOptionPerAxis RotationAxes; // 0x7
        struct FFilterOptionPerAxis ScaleAxes; // 0xa

    };

    struct FFilterOptionPerAxis //ScriptStruct AnimationCore.FilterOptionPerAxis
    {
    //Children Prop Count (Fields): 3
    public:

        bool bX; // 0x0
        bool bY; // 0x1
        bool bZ; // 0x2

    };

    struct FConstraintOffset //ScriptStruct AnimationCore.ConstraintOffset
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Translation; // 0x0
        struct FQuat Rotation; // 0x10
        struct FVector Scale; // 0x20
        struct FTransform Parent; // 0x30

    };

    struct FAnimNode_Base //ScriptStruct Engine.AnimNode_Base
    {
    public:


    };

    struct FAnimNode_CustomProperty : FAnimNode_Base //ScriptStruct Engine.AnimNode_CustomProperty
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FName> SourcePropertyNames; // 0x10
        struct TArray<struct FName> DestPropertyNames; // 0x20
        class UObject* TargetInstance; // 0x30

    };

    struct FAnimNode_ControlRigBase : FAnimNode_CustomProperty //ScriptStruct ControlRig.AnimNode_ControlRigBase
    {
    //Children Prop Count (Fields): 8
    public:

        struct FPoseLink Source; // 0x58
        struct TMap<struct FName, uint16_t> ControlRigBoneMapping; // 0x68
        struct TMap<struct FName, uint16_t> ControlRigCurveMapping; // 0xb8
        struct TMap<struct FName, uint16_t> InputToCurveMappingUIDs; // 0x108
        struct TWeakObjectPtr<struct UNodeMappingContainer> NodeMappingContainer; // 0x158
        struct FControlRigIOSettings InputSettings; // 0x160
        struct FControlRigIOSettings OutputSettings; // 0x162
        bool bExecute; // 0x164

    };

    struct FControlRigIOSettings //ScriptStruct ControlRig.ControlRigIOSettings
    {
    //Children Prop Count (Fields): 2
    public:

        bool bUpdatePose; // 0x0
        bool bUpdateCurves; // 0x1

    };

    struct FPoseLinkBase //ScriptStruct Engine.PoseLinkBase
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t LinkID; // 0x0

    };

    struct FPoseLink : FPoseLinkBase //ScriptStruct Engine.PoseLink
    {
    public:


    };

    struct FAnimNode_ControlRig : FAnimNode_ControlRigBase //ScriptStruct ControlRig.AnimNode_ControlRig
    {
    //Children Prop Count (Fields): 13
    public:

        class UControlRig* ControlRigClass; // 0x170
        class UControlRig* ControlRig; // 0x178
        float Alpha; // 0x180
        enum class EAnimAlphaInputType AlphaInputType; // 0x184
        char bAlphaBoolEnabled; // 0x185
        char bSetRefPoseFromSkeleton; // 0x185
        struct FInputScaleBias AlphaScaleBias; // 0x188
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x190
        struct FName AlphaCurveName; // 0x1d8
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x1e0
        struct TMap<struct FName, struct FName> InputMapping; // 0x210
        struct TMap<struct FName, struct FName> OutputMapping; // 0x260
        int32_t LODThreshold; // 0x360

    };

    struct FInputScaleBiasClamp //ScriptStruct Engine.InputScaleBiasClamp
    {
    //Children Prop Count (Fields): 11
    public:

        bool bMapRange; // 0x0
        bool bClampResult; // 0x1
        bool bInterpResult; // 0x2
        struct FInputRange InRange; // 0x4
        struct FInputRange OutRange; // 0xc
        float Scale; // 0x14
        float Bias; // 0x18
        float ClampMin; // 0x1c
        float ClampMax; // 0x20
        float InterpSpeedIncreasing; // 0x24
        float InterpSpeedDecreasing; // 0x28

    };

    struct FInputRange //ScriptStruct Engine.InputRange
    {
    //Children Prop Count (Fields): 2
    public:

        float Min; // 0x0
        float Max; // 0x4

    };

    struct FInputAlphaBoolBlend //ScriptStruct Engine.InputAlphaBoolBlend
    {
    //Children Prop Count (Fields): 6
    public:

        float BlendInTime; // 0x0
        float BlendOutTime; // 0x4
        enum class EAlphaBlendOption BlendOption; // 0x8
        bool bInitialized; // 0x9
        class UCurveFloat* CustomCurve; // 0x10
        struct FAlphaBlend AlphaBlend; // 0x18

    };

    struct FAlphaBlend //ScriptStruct Engine.AlphaBlend
    {
    //Children Prop Count (Fields): 3
    public:

        class UCurveFloat* CustomCurve; // 0x0
        float BlendTime; // 0x8
        enum class EAlphaBlendOption BlendOption; // 0x24

    };

    struct FInputScaleBias //ScriptStruct Engine.InputScaleBias
    {
    //Children Prop Count (Fields): 2
    public:

        float Scale; // 0x0
        float Bias; // 0x4

    };

    struct FAnimNode_ControlRig_ExternalSource : FAnimNode_ControlRigBase //ScriptStruct ControlRig.AnimNode_ControlRig_ExternalSource
    {
    //Children Prop Count (Fields): 1
    public:

        struct TWeakObjectPtr<struct UControlRig> ControlRig; // 0x170

    };

    struct FAnimInstanceProxy //ScriptStruct Engine.AnimInstanceProxy
    {
    public:


    };

    struct FControlRigAnimInstanceProxy : FAnimInstanceProxy //ScriptStruct ControlRig.ControlRigAnimInstanceProxy
    {
    public:


    };

    struct FControlRigComponentMappedCurve //ScriptStruct ControlRig.ControlRigComponentMappedCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Source; // 0x0
        struct FName Target; // 0x8

    };

    struct FControlRigComponentMappedBone //ScriptStruct ControlRig.ControlRigComponentMappedBone
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Source; // 0x0
        struct FName Target; // 0x8

    };

    struct FControlRigComponentMappedComponent //ScriptStruct ControlRig.ControlRigComponentMappedComponent
    {
    //Children Prop Count (Fields): 4
    public:

        class USceneComponent* Component; // 0x0
        struct FName ElementName; // 0x8
        enum class ERigElementType ElementType; // 0x10
        enum class EControlRigComponentMapDirection Direction; // 0x11

    };

    struct FControlRigComponentMappedElement //ScriptStruct ControlRig.ControlRigComponentMappedElement
    {
    //Children Prop Count (Fields): 12
    public:

        struct FComponentReference ComponentReference; // 0x0
        int32_t TransformIndex; // 0x28
        struct FName TransformName; // 0x2c
        enum class ERigElementType ElementType; // 0x34
        struct FName ElementName; // 0x38
        enum class EControlRigComponentMapDirection Direction; // 0x40
        struct FTransform Offset; // 0x50
        float weight; // 0x80
        enum class EControlRigComponentSpace Space; // 0x84
        class USceneComponent* SceneComponent; // 0x88
        int32_t ElementIndex; // 0x90
        int32_t SubIndex; // 0x94

    };

    struct FComponentReference //ScriptStruct Engine.ComponentReference
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* OtherActor; // 0x0
        struct FName ComponentProperty; // 0x8
        struct FString PathToComponent; // 0x10

    };

    struct FRigVMExecuteContext //ScriptStruct RigVM.RigVMExecuteContext
    {
    public:


    };

    struct FControlRigExecuteContext : FRigVMExecuteContext //ScriptStruct ControlRig.ControlRigExecuteContext
    {
    public:


    };

    struct FControlRigDrawContainer //ScriptStruct ControlRig.ControlRigDrawContainer
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FControlRigDrawInstruction> Instructions; // 0x8

    };

    struct FControlRigDrawInstruction //ScriptStruct ControlRig.ControlRigDrawInstruction
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Name; // 0x0
        enum class EControlRigDrawSettings PrimitiveType; // 0x8
        struct TArray<struct FVector> Positions; // 0x10
        struct FLinearColor Color; // 0x20
        float Thickness; // 0x30
        struct FTransform Transform; // 0x40

    };

    struct FControlRigDrawInterface : FControlRigDrawContainer //ScriptStruct ControlRig.ControlRigDrawInterface
    {
    public:


    };

    struct FGizmoActorCreationParam //ScriptStruct ControlRig.GizmoActorCreationParam
    {
    public:


    };

    struct FControlRigGizmoDefinition //ScriptStruct ControlRig.ControlRigGizmoDefinition
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName GizmoName; // 0x0
        struct TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x8
        struct FTransform Transform; // 0x30

    };

    struct FControlRigLayerInstanceProxy : FAnimInstanceProxy //ScriptStruct ControlRig.ControlRigLayerInstanceProxy
    {
    public:


    };

    struct FAnimNode_ControlRigInputPose : FAnimNode_Base //ScriptStruct ControlRig.AnimNode_ControlRigInputPose
    {
    //Children Prop Count (Fields): 1
    public:

        struct FPoseLink InputPose; // 0x10

    };

    struct FCRFourPointBezier //ScriptStruct ControlRig.CRFourPointBezier
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector A; // 0x0
        struct FVector B; // 0xc
        struct FVector C; // 0x18
        struct FVector D; // 0x24

    };

    struct FControlRigSequenceObjectReferenceMap //ScriptStruct ControlRig.ControlRigSequenceObjectReferenceMap
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FGuid> BindingIds; // 0x0
        struct TArray<struct FControlRigSequenceObjectReferences> References; // 0x10

    };

    struct FControlRigSequenceObjectReferences //ScriptStruct ControlRig.ControlRigSequenceObjectReferences
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FControlRigSequenceObjectReference> Array; // 0x0

    };

    struct FControlRigSequenceObjectReference //ScriptStruct ControlRig.ControlRigSequenceObjectReference
    {
    //Children Prop Count (Fields): 1
    public:

        class UControlRig* ControlRigClass; // 0x0

    };

    struct FAnimSequencerInstanceProxy : FAnimInstanceProxy //ScriptStruct AnimGraphRuntime.AnimSequencerInstanceProxy
    {
    public:


    };

    struct FControlRigSequencerAnimInstanceProxy : FAnimSequencerInstanceProxy //ScriptStruct ControlRig.ControlRigSequencerAnimInstanceProxy
    {
    public:


    };

    struct FControlRigSettingsPerPinBool //ScriptStruct ControlRig.ControlRigSettingsPerPinBool
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, bool> Values; // 0x0

    };

    struct FControlRigValidationContext //ScriptStruct ControlRig.ControlRigValidationContext
    {
    public:


    };

    struct FCRSimContainer //ScriptStruct ControlRig.CRSimContainer
    {
    //Children Prop Count (Fields): 3
    public:

        float TimeStep; // 0x8
        float AccumulatedTime; // 0xc
        float TimeLeftForStep; // 0x10

    };

    struct FCRSimLinearSpring //ScriptStruct ControlRig.CRSimLinearSpring
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t SubjectA; // 0x0
        int32_t SubjectB; // 0x4
        float Coefficient; // 0x8
        float Equilibrium; // 0xc

    };

    struct FCRSimPoint //ScriptStruct ControlRig.CRSimPoint
    {
    //Children Prop Count (Fields): 6
    public:

        float Mass; // 0x0
        float Size; // 0x4
        float LinearDamping; // 0x8
        float InheritMotion; // 0xc
        struct FVector Position; // 0x10
        struct FVector LinearVelocity; // 0x1c

    };

    struct FCRSimPointConstraint //ScriptStruct ControlRig.CRSimPointConstraint
    {
    //Children Prop Count (Fields): 5
    public:

        enum class ECRSimConstraintType Type; // 0x0
        int32_t SubjectA; // 0x4
        int32_t SubjectB; // 0x8
        struct FVector DataA; // 0xc
        struct FVector DataB; // 0x18

    };

    struct FCRSimPointContainer : FCRSimContainer //ScriptStruct ControlRig.CRSimPointContainer
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FCRSimPoint> Points; // 0x18
        struct TArray<struct FCRSimLinearSpring> Springs; // 0x28
        struct TArray<struct FCRSimPointForce> Forces; // 0x38
        struct TArray<struct FCRSimSoftCollision> CollisionVolumes; // 0x48
        struct TArray<struct FCRSimPointConstraint> Constraints; // 0x58
        struct TArray<struct FCRSimPoint> PreviousStep; // 0x68

    };

    struct FCRSimSoftCollision //ScriptStruct ControlRig.CRSimSoftCollision
    {
    //Children Prop Count (Fields): 7
    public:

        struct FTransform Transform; // 0x0
        enum class ECRSimSoftCollisionType ShapeType; // 0x30
        float MinimumDistance; // 0x34
        float MaximumDistance; // 0x38
        enum class EControlRigAnimEasingType FalloffType; // 0x3c
        float Coefficient; // 0x40
        bool bInverted; // 0x44

    };

    struct FCRSimPointForce //ScriptStruct ControlRig.CRSimPointForce
    {
    //Children Prop Count (Fields): 4
    public:

        enum class ECRSimPointForceType ForceType; // 0x0
        struct FVector Vector; // 0x4
        float Coefficient; // 0x10
        bool bNormalize; // 0x14

    };

    struct FMovieSceneSequenceInstanceData //ScriptStruct MovieScene.MovieSceneSequenceInstanceData
    {
    public:


    };

    struct FMovieSceneControlRigInstanceData : FMovieSceneSequenceInstanceData //ScriptStruct ControlRig.MovieSceneControlRigInstanceData
    {
    //Children Prop Count (Fields): 5
    public:

        bool bAdditive; // 0x8
        bool bApplyBoneFilter; // 0x9
        struct FInputBlendPose BoneFilter; // 0x10
        struct FMovieSceneFloatChannel weight; // 0x20
        struct FMovieSceneEvaluationOperand Operand; // 0xc0

    };

    struct FMovieSceneEvaluationOperand //ScriptStruct MovieScene.MovieSceneEvaluationOperand
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid ObjectBindingID; // 0x0
        struct FMovieSceneSequenceID SequenceID; // 0x10

    };

    struct FMovieSceneSequenceID //ScriptStruct MovieScene.MovieSceneSequenceID
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t Value; // 0x0

    };

    struct FInputBlendPose //ScriptStruct Engine.InputBlendPose
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FBranchFilter> BranchFilters; // 0x0

    };

    struct FBranchFilter //ScriptStruct Engine.BranchFilter
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName BoneName; // 0x0
        int32_t BlendDepth; // 0x8

    };

    struct FChannelMapInfo //ScriptStruct ControlRig.ChannelMapInfo
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t ControlIndex; // 0x0
        int32_t TotalChannelIndex; // 0x4
        int32_t ChannelIndex; // 0x8
        int32_t ParentControlIndex; // 0xc
        struct FName ChannelTypeName; // 0x10

    };

    struct FIntegerParameterNameAndCurve //ScriptStruct ControlRig.IntegerParameterNameAndCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneIntegerChannel ParameterCurve; // 0x8

    };

    struct FEnumParameterNameAndCurve //ScriptStruct ControlRig.EnumParameterNameAndCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneByteChannel ParameterCurve; // 0x8

    };

    struct FMovieSceneByteChannel : FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneByteChannel
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FFrameNumber> Times; // 0x8
        char DefaultValue; // 0x18
        bool bHasDefaultValue; // 0x19
        struct TArray<char> Values; // 0x20
        class UEnum* Enum; // 0x30

    };

    struct FMovieSceneParameterSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneParameterSectionTemplate
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FScalarParameterNameAndCurve> Scalars; // 0x20
        struct TArray<struct FBoolParameterNameAndCurve> Bools; // 0x30
        struct TArray<struct FVector2DParameterNameAndCurves> Vector2Ds; // 0x40
        struct TArray<struct FVectorParameterNameAndCurves> Vectors; // 0x50
        struct TArray<struct FColorParameterNameAndCurves> Colors; // 0x60
        struct TArray<struct FTransformParameterNameAndCurves> Transforms; // 0x70

    };

    struct FTransformParameterNameAndCurves //ScriptStruct MovieSceneTracks.TransformParameterNameAndCurves
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneFloatChannel Translation; // 0x8
        struct FMovieSceneFloatChannel Rotation; // 0x1e8
        struct FMovieSceneFloatChannel Scale; // 0x3c8

    };

    struct FColorParameterNameAndCurves //ScriptStruct MovieSceneTracks.ColorParameterNameAndCurves
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneFloatChannel RedCurve; // 0x8
        struct FMovieSceneFloatChannel GreenCurve; // 0xa8
        struct FMovieSceneFloatChannel BlueCurve; // 0x148
        struct FMovieSceneFloatChannel AlphaCurve; // 0x1e8

    };

    struct FVectorParameterNameAndCurves //ScriptStruct MovieSceneTracks.VectorParameterNameAndCurves
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneFloatChannel XCurve; // 0x8
        struct FMovieSceneFloatChannel YCurve; // 0xa8
        struct FMovieSceneFloatChannel ZCurve; // 0x148

    };

    struct FVector2DParameterNameAndCurves //ScriptStruct MovieSceneTracks.Vector2DParameterNameAndCurves
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneFloatChannel XCurve; // 0x8
        struct FMovieSceneFloatChannel YCurve; // 0xa8

    };

    struct FBoolParameterNameAndCurve //ScriptStruct MovieSceneTracks.BoolParameterNameAndCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneBoolChannel ParameterCurve; // 0x8

    };

    struct FScalarParameterNameAndCurve //ScriptStruct MovieSceneTracks.ScalarParameterNameAndCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParameterName; // 0x0
        struct FMovieSceneFloatChannel ParameterCurve; // 0x8

    };

    struct FMovieSceneControlRigParameterTemplate : FMovieSceneParameterSectionTemplate //ScriptStruct ControlRig.MovieSceneControlRigParameterTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FEnumParameterNameAndCurve> Enums; // 0x80
        struct TArray<struct FIntegerParameterNameAndCurve> Integers; // 0x90

    };

    struct FRigBoneHierarchy //ScriptStruct ControlRig.RigBoneHierarchy
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigBone> Bones; // 0x20
        struct TMap<struct FName, int32_t> NameToIndexMapping; // 0x30
        struct TArray<struct FName> Selection; // 0x80

    };

    struct FRigElement //ScriptStruct ControlRig.RigElement
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x8
        int32_t Index; // 0x10

    };

    struct FRigBone : FRigElement //ScriptStruct ControlRig.RigBone
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName ParentName; // 0x18
        int32_t ParentIndex; // 0x20
        struct FTransform InitialTransform; // 0x30
        struct FTransform GlobalTransform; // 0x60
        struct FTransform LocalTransform; // 0x90
        struct TArray<int32_t> Dependents; // 0xc0
        enum class ERigBoneType Type; // 0xd0

    };

    struct FRigControlHierarchy //ScriptStruct ControlRig.RigControlHierarchy
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigControl> Controls; // 0x98
        struct TMap<struct FName, int32_t> NameToIndexMapping; // 0xa8
        struct TArray<struct FName> Selection; // 0xf8

    };

    struct FRigControl : FRigElement //ScriptStruct ControlRig.RigControl
    {
    //Children Prop Count (Fields): 26
    public:

        enum class ERigControlType ControlType; // 0x18
        struct FName DisplayName; // 0x1c
        struct FName ParentName; // 0x24
        int32_t ParentIndex; // 0x2c
        struct FName SpaceName; // 0x30
        int32_t SpaceIndex; // 0x38
        struct FTransform OffsetTransform; // 0x40
        struct FRigControlValue InitialValue; // 0x70
        struct FRigControlValue Value; // 0xf0
        enum class ERigControlAxis PrimaryAxis; // 0x170
        bool bIsCurve; // 0x171
        bool bAnimatable; // 0x172
        bool bLimitTranslation; // 0x173
        bool bLimitRotation; // 0x174
        bool bLimitScale; // 0x175
        bool bDrawLimits; // 0x176
        struct FRigControlValue MinimumValue; // 0x180
        struct FRigControlValue MaximumValue; // 0x200
        bool bGizmoEnabled; // 0x280
        bool bGizmoVisible; // 0x281
        struct FName GizmoName; // 0x284
        struct FTransform GizmoTransform; // 0x290
        struct FLinearColor GizmoColor; // 0x2c0
        struct TArray<int32_t> Dependents; // 0x2d0
        bool bIsTransientControl; // 0x2e0
        class UEnum* ControlEnum; // 0x2e8

    };

    struct FRigControlValue //ScriptStruct ControlRig.RigControlValue
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigControlValueStorage FloatStorage; // 0x0
        struct FTransform Storage; // 0x50

    };

    struct FRigControlValueStorage //ScriptStruct ControlRig.RigControlValueStorage
    {
    //Children Prop Count (Fields): 17
    public:

        float Float00; // 0x0
        float Float01; // 0x4
        float Float02; // 0x8
        float Float03; // 0xc
        float Float10; // 0x10
        float Float11; // 0x14
        float Float12; // 0x18
        float Float13; // 0x1c
        float Float20; // 0x20
        float Float21; // 0x24
        float Float22; // 0x28
        float Float23; // 0x2c
        float Float30; // 0x30
        float Float31; // 0x34
        float Float32; // 0x38
        float Float33; // 0x3c
        bool bValid; // 0x40

    };

    struct FRigCurveContainer //ScriptStruct ControlRig.RigCurveContainer
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigCurve> Curves; // 0x20
        struct TMap<struct FName, int32_t> NameToIndexMapping; // 0x30
        struct TArray<struct FName> Selection; // 0x80

    };

    struct FRigCurve : FRigElement //ScriptStruct ControlRig.RigCurve
    {
    //Children Prop Count (Fields): 1
    public:

        float Value; // 0x18

    };

    struct FCachedRigElement //ScriptStruct ControlRig.CachedRigElement
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKey Key; // 0x0
        uint16_t Index; // 0xc
        int32_t ContainerVersion; // 0x10

    };

    struct FRigElementKey //ScriptStruct ControlRig.RigElementKey
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ERigElementType Type; // 0x0
        struct FName Name; // 0x4

    };

    struct FRigHierarchyRef //ScriptStruct ControlRig.RigHierarchyRef
    {
    public:


    };

    struct FRigHierarchyContainer //ScriptStruct ControlRig.RigHierarchyContainer
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigBoneHierarchy BoneHierarchy; // 0x0
        struct FRigSpaceHierarchy SpaceHierarchy; // 0x98
        struct FRigControlHierarchy ControlHierarchy; // 0x128
        struct FRigCurveContainer CurveContainer; // 0x230
        int32_t Version; // 0x2c8

    };

    struct FRigSpaceHierarchy //ScriptStruct ControlRig.RigSpaceHierarchy
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigSpace> Spaces; // 0x20
        struct TMap<struct FName, int32_t> NameToIndexMapping; // 0x30
        struct TArray<struct FName> Selection; // 0x80

    };

    struct FRigSpace : FRigElement //ScriptStruct ControlRig.RigSpace
    {
    //Children Prop Count (Fields): 5
    public:

        enum class ERigSpaceType SpaceType; // 0x18
        struct FName ParentName; // 0x1c
        int32_t ParentIndex; // 0x24
        struct FTransform InitialTransform; // 0x30
        struct FTransform LocalTransform; // 0x60

    };

    struct FRigMirrorSettings //ScriptStruct ControlRig.RigMirrorSettings
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EAxis MirrorAxis; // 0x0
        enum class EAxis AxisToFlip; // 0x1
        struct FString OldName; // 0x8
        struct FString NewName; // 0x18

    };

    struct FRigHierarchyCopyPasteContent //ScriptStruct ControlRig.RigHierarchyCopyPasteContent
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<enum class ERigElementType> Types; // 0x0
        struct TArray<struct FString> Contents; // 0x10
        struct TArray<struct FTransform> LocalTransforms; // 0x20
        struct TArray<struct FTransform> GlobalTransforms; // 0x30

    };

    struct FRigEventContext //ScriptStruct ControlRig.RigEventContext
    {
    public:


    };

    struct FRigElementKeyCollection //ScriptStruct ControlRig.RigElementKeyCollection
    {
    public:


    };

    struct FRigControlModifiedContext //ScriptStruct ControlRig.RigControlModifiedContext
    {
    public:


    };

    struct FRigPose //ScriptStruct ControlRig.RigPose
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRigPoseElement> Elements; // 0x0

    };

    struct FRigPoseElement //ScriptStruct ControlRig.RigPoseElement
    {
    //Children Prop Count (Fields): 4
    public:

        struct FCachedRigElement Index; // 0x0
        struct FTransform GlobalTransform; // 0x20
        struct FTransform LocalTransform; // 0x50
        float CurveValue; // 0x80

    };

    struct FRigInfluenceMapPerEvent //ScriptStruct ControlRig.RigInfluenceMapPerEvent
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FRigInfluenceMap> maps; // 0x0
        struct TMap<struct FName, int32_t> EventToIndex; // 0x10

    };

    struct FRigInfluenceMap //ScriptStruct ControlRig.RigInfluenceMap
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName EventName; // 0x0
        struct TArray<struct FRigInfluenceEntry> entries; // 0x8
        struct TMap<struct FRigElementKey, int32_t> KeyToIndex; // 0x18

    };

    struct FRigInfluenceEntry //ScriptStruct ControlRig.RigInfluenceEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKey Source; // 0x0
        struct TArray<struct FRigElementKey> AffectedList; // 0x10

    };

    struct FRigInfluenceEntryModifier //ScriptStruct ControlRig.RigInfluenceEntryModifier
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRigElementKey> AffectedList; // 0x0

    };

    struct FRigVMStruct //ScriptStruct RigVM.RigVMStruct
    {
    public:


    };

    struct FRigUnit : FRigVMStruct //ScriptStruct ControlRig.RigUnit
    {
    public:


    };

    struct FRigUnitMutable : FRigUnit //ScriptStruct ControlRig.RigUnitMutable
    {
    //Children Prop Count (Fields): 1
    public:

        struct FControlRigExecuteContext ExecuteContext; // 0x8

    };

    struct FRigUnit_SimBase : FRigUnit //ScriptStruct ControlRig.RigUnit_SimBase
    {
    public:


    };

    struct FRigUnit_AccumulateVectorRange : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateVectorRange
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Value; // 0x8
        struct FVector Minimum; // 0x14
        struct FVector Maximum; // 0x20
        struct FVector AccumulatedMinimum; // 0x2c
        struct FVector AccumulatedMaximum; // 0x38

    };

    struct FRigUnit_AccumulateFloatRange : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateFloatRange
    {
    //Children Prop Count (Fields): 5
    public:

        float Value; // 0x8
        float Minimum; // 0xc
        float Maximum; // 0x10
        float AccumulatedMinimum; // 0x14
        float AccumulatedMaximum; // 0x18

    };

    struct FRigUnit_AccumulateTransformLerp : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateTransformLerp
    {
    //Children Prop Count (Fields): 6
    public:

        struct FTransform TargetValue; // 0x10
        struct FTransform InitialValue; // 0x40
        float Blend; // 0x70
        bool bIntegrateDeltaTime; // 0x74
        struct FTransform Result; // 0x80
        struct FTransform AccumulatedValue; // 0xb0

    };

    struct FRigUnit_AccumulateQuatLerp : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateQuatLerp
    {
    //Children Prop Count (Fields): 6
    public:

        struct FQuat TargetValue; // 0x10
        struct FQuat InitialValue; // 0x20
        float Blend; // 0x30
        bool bIntegrateDeltaTime; // 0x34
        struct FQuat Result; // 0x40
        struct FQuat AccumulatedValue; // 0x50

    };

    struct FRigUnit_AccumulateVectorLerp : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateVectorLerp
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector TargetValue; // 0x8
        struct FVector InitialValue; // 0x14
        float Blend; // 0x20
        bool bIntegrateDeltaTime; // 0x24
        struct FVector Result; // 0x28
        struct FVector AccumulatedValue; // 0x34

    };

    struct FRigUnit_AccumulateFloatLerp : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateFloatLerp
    {
    //Children Prop Count (Fields): 6
    public:

        float TargetValue; // 0x8
        float InitialValue; // 0xc
        float Blend; // 0x10
        bool bIntegrateDeltaTime; // 0x14
        float Result; // 0x18
        float AccumulatedValue; // 0x1c

    };

    struct FRigUnit_AccumulateTransformMul : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateTransformMul
    {
    //Children Prop Count (Fields): 6
    public:

        struct FTransform Multiplier; // 0x10
        struct FTransform InitialValue; // 0x40
        bool bFlipOrder; // 0x70
        bool bIntegrateDeltaTime; // 0x71
        struct FTransform Result; // 0x80
        struct FTransform AccumulatedValue; // 0xb0

    };

    struct FRigUnit_AccumulateQuatMul : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateQuatMul
    {
    //Children Prop Count (Fields): 6
    public:

        struct FQuat Multiplier; // 0x10
        struct FQuat InitialValue; // 0x20
        bool bFlipOrder; // 0x30
        bool bIntegrateDeltaTime; // 0x31
        struct FQuat Result; // 0x40
        struct FQuat AccumulatedValue; // 0x50

    };

    struct FRigUnit_AccumulateVectorMul : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateVectorMul
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Multiplier; // 0x8
        struct FVector InitialValue; // 0x14
        bool bIntegrateDeltaTime; // 0x20
        struct FVector Result; // 0x24
        struct FVector AccumulatedValue; // 0x30

    };

    struct FRigUnit_AccumulateFloatMul : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateFloatMul
    {
    //Children Prop Count (Fields): 5
    public:

        float Multiplier; // 0x8
        float InitialValue; // 0xc
        bool bIntegrateDeltaTime; // 0x10
        float Result; // 0x14
        float AccumulatedValue; // 0x18

    };

    struct FRigUnit_AccumulateVectorAdd : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateVectorAdd
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Increment; // 0x8
        struct FVector InitialValue; // 0x14
        bool bIntegrateDeltaTime; // 0x20
        struct FVector Result; // 0x24
        struct FVector AccumulatedValue; // 0x30

    };

    struct FRigUnit_AccumulateFloatAdd : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AccumulateFloatAdd
    {
    //Children Prop Count (Fields): 5
    public:

        float Increment; // 0x8
        float InitialValue; // 0xc
        bool bIntegrateDeltaTime; // 0x10
        float Result; // 0x14
        float AccumulatedValue; // 0x18

    };

    struct FRigUnit_AddBoneTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_AddBoneTransform
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Bone; // 0x68
        struct FTransform Transform; // 0x70
        float weight; // 0xa0
        bool bPostMultiply; // 0xa4
        bool bPropagateToChildren; // 0xa5
        struct FCachedRigElement CachedBone; // 0xa8

    };

    struct FRigUnit_HighlevelBaseMutable : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_HighlevelBaseMutable
    {
    public:


    };

    struct FRigUnit_AimItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_AimItem
    {
    //Children Prop Count (Fields): 8
    public:

        struct FRigElementKey Item; // 0x68
        struct FRigUnit_AimItem_Target primary; // 0x74
        struct FRigUnit_AimItem_Target secondary; // 0xa0
        float weight; // 0xcc
        struct FRigUnit_AimBone_DebugSettings DebugSettings; // 0xd0
        struct FCachedRigElement CachedItem; // 0x110
        struct FCachedRigElement PrimaryCachedSpace; // 0x124
        struct FCachedRigElement SecondaryCachedSpace; // 0x138

    };

    struct FRigUnit_AimBone_DebugSettings //ScriptStruct ControlRig.RigUnit_AimBone_DebugSettings
    {
    //Children Prop Count (Fields): 3
    public:

        bool bEnabled; // 0x0
        float Scale; // 0x4
        struct FTransform WorldOffset; // 0x10

    };

    struct FRigUnit_AimItem_Target //ScriptStruct ControlRig.RigUnit_AimItem_Target
    {
    //Children Prop Count (Fields): 5
    public:

        float weight; // 0x0
        struct FVector Axis; // 0x4
        struct FVector Target; // 0x10
        enum class EControlRigVectorKind Kind; // 0x1c
        struct FRigElementKey Space; // 0x20

    };

    struct FRigUnit_AimBone : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_AimBone
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName Bone; // 0x68
        struct FRigUnit_AimBone_Target primary; // 0x70
        struct FRigUnit_AimBone_Target secondary; // 0x98
        float weight; // 0xc0
        bool bPropagateToChildren; // 0xc4
        struct FRigUnit_AimBone_DebugSettings DebugSettings; // 0xd0
        struct FCachedRigElement CachedBoneIndex; // 0x110
        struct FCachedRigElement PrimaryCachedSpace; // 0x124
        struct FCachedRigElement SecondaryCachedSpace; // 0x138

    };

    struct FRigUnit_AimBone_Target //ScriptStruct ControlRig.RigUnit_AimBone_Target
    {
    //Children Prop Count (Fields): 5
    public:

        float weight; // 0x0
        struct FVector Axis; // 0x4
        struct FVector Target; // 0x10
        enum class EControlRigVectorKind Kind; // 0x1c
        struct FName Space; // 0x20

    };

    struct FRigUnit_HighlevelBase : FRigUnit //ScriptStruct ControlRig.RigUnit_HighlevelBase
    {
    public:


    };

    struct FRigUnit_AimBoneMath : FRigUnit_HighlevelBase //ScriptStruct ControlRig.RigUnit_AimBoneMath
    {
    //Children Prop Count (Fields): 8
    public:

        struct FTransform InputTransform; // 0x10
        struct FRigUnit_AimItem_Target primary; // 0x40
        struct FRigUnit_AimItem_Target secondary; // 0x6c
        float weight; // 0x98
        struct FTransform Result; // 0xa0
        struct FRigUnit_AimBone_DebugSettings DebugSettings; // 0xd0
        struct FCachedRigElement PrimaryCachedSpace; // 0x110
        struct FCachedRigElement SecondaryCachedSpace; // 0x124

    };

    struct FRigUnit_AimConstraint : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_AimConstraint
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName Joint; // 0x68
        enum class EAimMode AimMode; // 0x70
        enum class EAimMode UpMode; // 0x71
        struct FVector AimVector; // 0x74
        struct FVector UpVector; // 0x80
        struct TArray<struct FAimTarget> AimTargets; // 0x90
        struct TArray<struct FAimTarget> UpTargets; // 0xa0
        struct FRigUnit_AimConstraint_WorkData WorkData; // 0xb0

    };

    struct FRigUnit_AimConstraint_WorkData //ScriptStruct ControlRig.RigUnit_AimConstraint_WorkData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FConstraintData> ConstraintData; // 0x0

    };

    struct FConstraintData //ScriptStruct AnimationCore.ConstraintData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FConstraintDescriptor Constraint; // 0x0
        float weight; // 0x10
        bool bMaintainOffset; // 0x14
        struct FTransform Offset; // 0x20
        struct FTransform CurrentTransform; // 0x50

    };

    struct FConstraintDescriptor //ScriptStruct AnimationCore.ConstraintDescriptor
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EConstraintType Type; // 0x0

    };

    struct FAimTarget //ScriptStruct ControlRig.AimTarget
    {
    //Children Prop Count (Fields): 3
    public:

        float weight; // 0x0
        struct FTransform Transform; // 0x10
        struct FVector AlignVector; // 0x40

    };

    struct FRigUnit_AlphaInterpVector : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AlphaInterpVector
    {
    //Children Prop Count (Fields): 14
    public:

        struct FVector Value; // 0x8
        float Scale; // 0x14
        float Bias; // 0x18
        bool bMapRange; // 0x1c
        struct FInputRange InRange; // 0x20
        struct FInputRange OutRange; // 0x28
        bool bClampResult; // 0x30
        float ClampMin; // 0x34
        float ClampMax; // 0x38
        bool bInterpResult; // 0x3c
        float InterpSpeedIncreasing; // 0x40
        float InterpSpeedDecreasing; // 0x44
        struct FVector Result; // 0x48
        struct FInputScaleBiasClamp ScaleBiasClamp; // 0x54

    };

    struct FRigUnit_AlphaInterp : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_AlphaInterp
    {
    //Children Prop Count (Fields): 14
    public:

        float Value; // 0x8
        float Scale; // 0xc
        float Bias; // 0x10
        bool bMapRange; // 0x14
        struct FInputRange InRange; // 0x18
        struct FInputRange OutRange; // 0x20
        bool bClampResult; // 0x28
        float ClampMin; // 0x2c
        float ClampMax; // 0x30
        bool bInterpResult; // 0x34
        float InterpSpeedIncreasing; // 0x38
        float InterpSpeedDecreasing; // 0x3c
        float Result; // 0x40
        struct FInputScaleBiasClamp ScaleBiasClamp; // 0x44

    };

    struct FRigUnit_AnimBase : FRigUnit //ScriptStruct ControlRig.RigUnit_AnimBase
    {
    public:


    };

    struct FRigUnit_AnimEasing : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_AnimEasing
    {
    //Children Prop Count (Fields): 7
    public:

        float Value; // 0x8
        enum class EControlRigAnimEasingType Type; // 0xc
        float SourceMinimum; // 0x10
        float SourceMaximum; // 0x14
        float TargetMinimum; // 0x18
        float TargetMaximum; // 0x1c
        float Result; // 0x20

    };

    struct FRigUnit_AnimEasingType : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_AnimEasingType
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EControlRigAnimEasingType Type; // 0x8

    };

    struct FRigUnit_AnimEvalRichCurve : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_AnimEvalRichCurve
    {
    //Children Prop Count (Fields): 7
    public:

        float Value; // 0x8
        struct FRuntimeFloatCurve Curve; // 0x10
        float SourceMinimum; // 0x98
        float SourceMaximum; // 0x9c
        float TargetMinimum; // 0xa0
        float TargetMaximum; // 0xa4
        float Result; // 0xa8

    };

    struct FRigUnit_AnimRichCurve : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_AnimRichCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRuntimeFloatCurve Curve; // 0x8

    };

    struct FRigUnit_ApplyFK : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_ApplyFK
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName Joint; // 0x68
        struct FTransform Transform; // 0x70
        struct FTransformFilter Filter; // 0xa0
        enum class EApplyTransformMode ApplyTransformMode; // 0xa9
        enum class ETransformSpaceMode ApplyTransformSpace; // 0xaa
        struct FTransform BaseTransform; // 0xb0
        struct FName BaseJoint; // 0xe0

    };

    struct FTransformFilter //ScriptStruct AnimationCore.TransformFilter
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFilterOptionPerAxis TranslationFilter; // 0x0
        struct FFilterOptionPerAxis RotationFilter; // 0x3
        struct FFilterOptionPerAxis ScaleFilter; // 0x6

    };

    struct FRigUnit_BeginExecution : FRigUnit //ScriptStruct ControlRig.RigUnit_BeginExecution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FControlRigExecuteContext ExecuteContext; // 0x8

    };

    struct FRigUnit_BlendTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_BlendTransform
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Source; // 0x10
        struct TArray<struct FBlendTarget> Targets; // 0x40
        struct FTransform Result; // 0x50

    };

    struct FBlendTarget //ScriptStruct ControlRig.BlendTarget
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Transform; // 0x0
        float weight; // 0x30

    };

    struct FRigUnit_ItemHarmonics : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_ItemHarmonics
    {
    //Children Prop Count (Fields): 11
    public:

        struct TArray<struct FRigUnit_Harmonics_TargetItem> Targets; // 0x68
        struct FVector WaveSpeed; // 0x78
        struct FVector WaveFrequency; // 0x84
        struct FVector WaveAmplitude; // 0x90
        struct FVector WaveOffset; // 0x9c
        struct FVector WaveNoise; // 0xa8
        enum class EControlRigAnimEasingType WaveEase; // 0xb4
        float WaveMinimum; // 0xb8
        float WaveMaximum; // 0xbc
        enum class EControlRigRotationOrder RotationOrder; // 0xc0
        struct FRigUnit_BoneHarmonics_WorkData WorkData; // 0xc8

    };

    struct FRigUnit_BoneHarmonics_WorkData //ScriptStruct ControlRig.RigUnit_BoneHarmonics_WorkData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FCachedRigElement> CachedItems; // 0x0
        struct FVector WaveTime; // 0x10

    };

    struct FRigUnit_Harmonics_TargetItem //ScriptStruct ControlRig.RigUnit_Harmonics_TargetItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKey Item; // 0x0
        float Ratio; // 0xc

    };

    struct FRigUnit_BoneHarmonics : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_BoneHarmonics
    {
    //Children Prop Count (Fields): 12
    public:

        struct TArray<struct FRigUnit_BoneHarmonics_BoneTarget> Bones; // 0x68
        struct FVector WaveSpeed; // 0x78
        struct FVector WaveFrequency; // 0x84
        struct FVector WaveAmplitude; // 0x90
        struct FVector WaveOffset; // 0x9c
        struct FVector WaveNoise; // 0xa8
        enum class EControlRigAnimEasingType WaveEase; // 0xb4
        float WaveMinimum; // 0xb8
        float WaveMaximum; // 0xbc
        enum class EControlRigRotationOrder RotationOrder; // 0xc0
        bool bPropagateToChildren; // 0xc1
        struct FRigUnit_BoneHarmonics_WorkData WorkData; // 0xc8

    };

    struct FRigUnit_BoneHarmonics_BoneTarget //ScriptStruct ControlRig.RigUnit_BoneHarmonics_BoneTarget
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Bone; // 0x0
        float Ratio; // 0x8

    };

    struct FRigUnit_ControlName : FRigUnit //ScriptStruct ControlRig.RigUnit_ControlName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Control; // 0x8

    };

    struct FRigUnit_SpaceName : FRigUnit //ScriptStruct ControlRig.RigUnit_SpaceName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Space; // 0x8

    };

    struct FRigUnit_BoneName : FRigUnit //ScriptStruct ControlRig.RigUnit_BoneName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Bone; // 0x8

    };

    struct FRigUnit_Item : FRigUnit //ScriptStruct ControlRig.RigUnit_Item
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRigElementKey Item; // 0x8

    };

    struct FRigUnit_CCDIKPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_CCDIKPerItem
    {
    //Children Prop Count (Fields): 10
    public:

        struct FRigElementKeyCollection Items; // 0x68
        struct FTransform EffectorTransform; // 0x80
        float Precision; // 0xb0
        float weight; // 0xb4
        int32_t MaxIterations; // 0xb8
        bool bStartFromTail; // 0xbc
        float BaseRotationLimit; // 0xc0
        struct TArray<struct FRigUnit_CCDIK_RotationLimitPerItem> RotationLimits; // 0xc8
        bool bPropagateToChildren; // 0xd8
        struct FRigUnit_CCDIK_WorkData WorkData; // 0xe0

    };

    struct FRigUnit_CCDIK_WorkData //ScriptStruct ControlRig.RigUnit_CCDIK_WorkData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FCCDIKChainLink> Chain; // 0x0
        struct TArray<struct FCachedRigElement> CachedItems; // 0x10
        struct TArray<int32_t> RotationLimitIndex; // 0x20
        struct TArray<float> RotationLimitsPerItem; // 0x30
        struct FCachedRigElement CachedEffector; // 0x40

    };

    struct FCCDIKChainLink //ScriptStruct AnimationCore.CCDIKChainLink
    {
    public:


    };

    struct FRigUnit_CCDIK_RotationLimitPerItem //ScriptStruct ControlRig.RigUnit_CCDIK_RotationLimitPerItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKey Item; // 0x0
        float Limit; // 0xc

    };

    struct FRigUnit_CCDIK : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_CCDIK
    {
    //Children Prop Count (Fields): 11
    public:

        struct FName StartBone; // 0x68
        struct FName EffectorBone; // 0x70
        struct FTransform EffectorTransform; // 0x80
        float Precision; // 0xb0
        float weight; // 0xb4
        int32_t MaxIterations; // 0xb8
        bool bStartFromTail; // 0xbc
        float BaseRotationLimit; // 0xc0
        struct TArray<struct FRigUnit_CCDIK_RotationLimit> RotationLimits; // 0xc8
        bool bPropagateToChildren; // 0xd8
        struct FRigUnit_CCDIK_WorkData WorkData; // 0xe0

    };

    struct FRigUnit_CCDIK_RotationLimit //ScriptStruct ControlRig.RigUnit_CCDIK_RotationLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Bone; // 0x0
        float Limit; // 0x8

    };

    struct FRigUnit_ChainHarmonicsPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_ChainHarmonicsPerItem
    {
    //Children Prop Count (Fields): 9
    public:

        struct FRigElementKey ChainRoot; // 0x68
        struct FVector Speed; // 0x74
        struct FRigUnit_ChainHarmonics_Reach Reach; // 0x80
        struct FRigUnit_ChainHarmonics_Wave Wave; // 0xa8
        struct FRuntimeFloatCurve WaveCurve; // 0xe8
        struct FRigUnit_ChainHarmonics_Pendulum Pendulum; // 0x170
        bool bDrawDebug; // 0x1ac
        struct FTransform DrawWorldOffset; // 0x1b0
        struct FRigUnit_ChainHarmonics_WorkData WorkData; // 0x1e0

    };

    struct FRigUnit_ChainHarmonics_WorkData //ScriptStruct ControlRig.RigUnit_ChainHarmonics_WorkData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector Time; // 0x0
        struct TArray<struct FCachedRigElement> Items; // 0x10
        struct TArray<float> Ratio; // 0x20
        struct TArray<struct FVector> LocalTip; // 0x30
        struct TArray<struct FVector> PendulumTip; // 0x40
        struct TArray<struct FVector> PendulumPosition; // 0x50
        struct TArray<struct FVector> PendulumVelocity; // 0x60
        struct TArray<struct FVector> HierarchyLine; // 0x70
        struct TArray<struct FVector> VelocityLines; // 0x80

    };

    struct FRigUnit_ChainHarmonics_Pendulum //ScriptStruct ControlRig.RigUnit_ChainHarmonics_Pendulum
    {
    //Children Prop Count (Fields): 11
    public:

        bool bEnabled; // 0x0
        float PendulumStiffness; // 0x4
        struct FVector PendulumGravity; // 0x8
        float PendulumBlend; // 0x14
        float PendulumDrag; // 0x18
        float PendulumMinimum; // 0x1c
        float PendulumMaximum; // 0x20
        enum class EControlRigAnimEasingType PendulumEase; // 0x24
        struct FVector UnwindAxis; // 0x28
        float UnwindMinimum; // 0x34
        float UnwindMaximum; // 0x38

    };

    struct FRigUnit_ChainHarmonics_Wave //ScriptStruct ControlRig.RigUnit_ChainHarmonics_Wave
    {
    //Children Prop Count (Fields): 8
    public:

        bool bEnabled; // 0x0
        struct FVector WaveFrequency; // 0x4
        struct FVector WaveAmplitude; // 0x10
        struct FVector WaveOffset; // 0x1c
        struct FVector WaveNoise; // 0x28
        float WaveMinimum; // 0x34
        float WaveMaximum; // 0x38
        enum class EControlRigAnimEasingType WaveEase; // 0x3c

    };

    struct FRigUnit_ChainHarmonics_Reach //ScriptStruct ControlRig.RigUnit_ChainHarmonics_Reach
    {
    //Children Prop Count (Fields): 6
    public:

        bool bEnabled; // 0x0
        struct FVector ReachTarget; // 0x4
        struct FVector ReachAxis; // 0x10
        float ReachMinimum; // 0x1c
        float ReachMaximum; // 0x20
        enum class EControlRigAnimEasingType ReachEase; // 0x24

    };

    struct FRigUnit_ChainHarmonics : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_ChainHarmonics
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName ChainRoot; // 0x68
        struct FVector Speed; // 0x70
        struct FRigUnit_ChainHarmonics_Reach Reach; // 0x7c
        struct FRigUnit_ChainHarmonics_Wave Wave; // 0xa4
        struct FRuntimeFloatCurve WaveCurve; // 0xe8
        struct FRigUnit_ChainHarmonics_Pendulum Pendulum; // 0x170
        bool bDrawDebug; // 0x1ac
        struct FTransform DrawWorldOffset; // 0x1b0
        struct FRigUnit_ChainHarmonics_WorkData WorkData; // 0x1e0

    };

    struct FRigUnit_CollectionBaseMutable : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_CollectionBaseMutable
    {
    public:


    };

    struct FRigUnit_CollectionLoop : FRigUnit_CollectionBaseMutable //ScriptStruct ControlRig.RigUnit_CollectionLoop
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKeyCollection Collection; // 0x68
        struct FRigElementKey Item; // 0x78
        int32_t Index; // 0x84
        int32_t Count; // 0x88
        float Ratio; // 0x8c
        bool Continue; // 0x90
        struct FControlRigExecuteContext Completed; // 0x98

    };

    struct FRigUnit_CollectionBase : FRigUnit //ScriptStruct ControlRig.RigUnit_CollectionBase
    {
    public:


    };

    struct FRigUnit_CollectionItemAtIndex : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionItemAtIndex
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKeyCollection Collection; // 0x8
        int32_t Index; // 0x18
        struct FRigElementKey Item; // 0x1c

    };

    struct FRigUnit_CollectionCount : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionCount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKeyCollection Collection; // 0x8
        int32_t Count; // 0x18

    };

    struct FRigUnit_CollectionReverse : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionReverse
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKeyCollection Collection; // 0x8
        struct FRigElementKeyCollection Reversed; // 0x18

    };

    struct FRigUnit_CollectionDifference : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionDifference
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKeyCollection A; // 0x8
        struct FRigElementKeyCollection B; // 0x18
        struct FRigElementKeyCollection Collection; // 0x28

    };

    struct FRigUnit_CollectionIntersection : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionIntersection
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKeyCollection A; // 0x8
        struct FRigElementKeyCollection B; // 0x18
        struct FRigElementKeyCollection Collection; // 0x28

    };

    struct FRigUnit_CollectionUnion : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionUnion
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKeyCollection A; // 0x8
        struct FRigElementKeyCollection B; // 0x18
        struct FRigElementKeyCollection Collection; // 0x28

    };

    struct FRigUnit_CollectionItems : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionItems
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FRigElementKey> Items; // 0x8
        struct FRigElementKeyCollection Collection; // 0x18

    };

    struct FRigUnit_CollectionReplaceItems : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionReplaceItems
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKeyCollection Items; // 0x8
        struct FName Old; // 0x18
        struct FName New; // 0x20
        bool RemoveInvalidItems; // 0x28
        struct FRigElementKeyCollection Collection; // 0x30
        struct FRigElementKeyCollection CachedCollection; // 0x40
        int32_t CachedHierarchyHash; // 0x50

    };

    struct FRigUnit_CollectionChildren : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionChildren
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKey Parent; // 0x8
        bool bIncludeParent; // 0x14
        bool bRecursive; // 0x15
        enum class ERigElementType TypeToSearch; // 0x16
        struct FRigElementKeyCollection Collection; // 0x18
        struct FRigElementKeyCollection CachedCollection; // 0x28
        int32_t CachedHierarchyHash; // 0x38

    };

    struct FRigUnit_CollectionNameSearch : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionNameSearch
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName PartialName; // 0x8
        enum class ERigElementType TypeToSearch; // 0x10
        struct FRigElementKeyCollection Collection; // 0x18
        struct FRigElementKeyCollection CachedCollection; // 0x28
        int32_t CachedHierarchyHash; // 0x38

    };

    struct FRigUnit_CollectionChain : FRigUnit_CollectionBase //ScriptStruct ControlRig.RigUnit_CollectionChain
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey FirstItem; // 0x8
        struct FRigElementKey LastItem; // 0x14
        bool Reverse; // 0x20
        struct FRigElementKeyCollection Collection; // 0x28
        struct FRigElementKeyCollection CachedCollection; // 0x38
        int32_t CachedHierarchyHash; // 0x48

    };

    struct FRigUnit_Control : FRigUnit //ScriptStruct ControlRig.RigUnit_Control
    {
    //Children Prop Count (Fields): 5
    public:

        struct FEulerTransform Transform; // 0x8
        struct FTransform Base; // 0x30
        struct FTransform InitTransform; // 0x60
        struct FTransform Result; // 0x90
        struct FTransformFilter Filter; // 0xc0

    };

    struct FEulerTransform //ScriptStruct AnimationCore.EulerTransform
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Location; // 0x0
        struct FRotator Rotation; // 0xc
        struct FVector Scale; // 0x18

    };

    struct FRigUnit_Control_StaticMesh : FRigUnit_Control //ScriptStruct ControlRig.RigUnit_Control_StaticMesh
    {
    //Children Prop Count (Fields): 1
    public:

        struct FTransform MeshTransform; // 0xd0

    };

    struct FRigUnit_ToSwingAndTwist : FRigUnit //ScriptStruct ControlRig.RigUnit_ToSwingAndTwist
    {
    //Children Prop Count (Fields): 4
    public:

        struct FQuat Input; // 0x10
        struct FVector TwistAxis; // 0x20
        struct FQuat Swing; // 0x30
        struct FQuat Twist; // 0x40

    };

    struct FRigUnit_ConvertQuaternionToVector : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertQuaternionToVector
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Input; // 0x10
        struct FVector Result; // 0x20

    };

    struct FRigUnit_ConvertRotationToVector : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertRotationToVector
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator Input; // 0x8
        struct FVector Result; // 0x14

    };

    struct FRigUnit_ConvertVectorToQuaternion : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertVectorToQuaternion
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Input; // 0x8
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_ConvertVectorToRotation : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertVectorToRotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Input; // 0x8
        struct FRotator Result; // 0x14

    };

    struct FRigUnit_ConvertQuaternion : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertQuaternion
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Input; // 0x10
        struct FRotator Result; // 0x20

    };

    struct FRigUnit_ConvertRotation : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertRotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator Input; // 0x8
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_ConvertVectorRotation : FRigUnit_ConvertRotation //ScriptStruct ControlRig.RigUnit_ConvertVectorRotation
    {
    public:


    };

    struct FRigUnit_ConvertEulerTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertEulerTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FEulerTransform Input; // 0x8
        struct FTransform Result; // 0x30

    };

    struct FRigUnit_ConvertTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_ConvertTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Input; // 0x10
        struct FEulerTransform Result; // 0x40

    };

    struct FRigUnit_DebugBaseMutable : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_DebugBaseMutable
    {
    public:


    };

    struct FRigUnit_DebugBase : FRigUnit //ScriptStruct ControlRig.RigUnit_DebugBase
    {
    public:


    };

    struct FRigUnit_DebugBezierItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugBezierItemSpace
    {
    //Children Prop Count (Fields): 9
    public:

        struct FCRFourPointBezier Bezier; // 0x68
        float MinimumU; // 0x98
        float MaximumU; // 0x9c
        struct FLinearColor Color; // 0xa0
        float Thickness; // 0xb0
        int32_t Detail; // 0xb4
        struct FRigElementKey Space; // 0xb8
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugBezier : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugBezier
    {
    //Children Prop Count (Fields): 9
    public:

        struct FCRFourPointBezier Bezier; // 0x68
        float MinimumU; // 0x98
        float MaximumU; // 0x9c
        struct FLinearColor Color; // 0xa0
        float Thickness; // 0xb0
        int32_t Detail; // 0xb4
        struct FName Space; // 0xb8
        struct FTransform WorldOffset; // 0xc0
        bool bEnabled; // 0xf0

    };

    struct FRigUnit_DebugHierarchy : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugHierarchy
    {
    //Children Prop Count (Fields): 5
    public:

        float Scale; // 0x68
        struct FLinearColor Color; // 0x6c
        float Thickness; // 0x7c
        struct FTransform WorldOffset; // 0x80
        bool bEnabled; // 0xb0

    };

    struct FRigUnit_DebugLineItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugLineItemSpace
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector A; // 0x68
        struct FVector B; // 0x74
        struct FLinearColor Color; // 0x80
        float Thickness; // 0x90
        struct FRigElementKey Space; // 0x94
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0

    };

    struct FRigUnit_DebugLine : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugLine
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector A; // 0x68
        struct FVector B; // 0x74
        struct FLinearColor Color; // 0x80
        float Thickness; // 0x90
        struct FName Space; // 0x94
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0

    };

    struct FRigUnit_DebugLineStripItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugLineStripItemSpace
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FVector> Points; // 0x68
        struct FLinearColor Color; // 0x78
        float Thickness; // 0x88
        struct FRigElementKey Space; // 0x8c
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0

    };

    struct FRigUnit_DebugLineStrip : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugLineStrip
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FVector> Points; // 0x68
        struct FLinearColor Color; // 0x78
        float Thickness; // 0x88
        struct FName Space; // 0x8c
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0

    };

    struct FRigUnit_DebugPointMutable : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugPointMutable
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector Vector; // 0x68
        enum class ERigUnitDebugPointMode Mode; // 0x74
        struct FLinearColor Color; // 0x78
        float Scale; // 0x88
        float Thickness; // 0x8c
        struct FName Space; // 0x90
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0

    };

    struct FRigUnit_DebugPoint : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_DebugPoint
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector Vector; // 0x8
        enum class ERigUnitDebugPointMode Mode; // 0x14
        struct FLinearColor Color; // 0x18
        float Scale; // 0x28
        float Thickness; // 0x2c
        struct FName Space; // 0x30
        struct FTransform WorldOffset; // 0x40
        bool bEnabled; // 0x70

    };

    struct FRigUnit_DebugArcItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugArcItemSpace
    {
    //Children Prop Count (Fields): 10
    public:

        struct FTransform Transform; // 0x70
        struct FLinearColor Color; // 0xa0
        float Radius; // 0xb0
        float MinimumDegrees; // 0xb4
        float MaximumDegrees; // 0xb8
        float Thickness; // 0xbc
        int32_t Detail; // 0xc0
        struct FRigElementKey Space; // 0xc4
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugArc : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugArc
    {
    //Children Prop Count (Fields): 10
    public:

        struct FTransform Transform; // 0x70
        struct FLinearColor Color; // 0xa0
        float Radius; // 0xb0
        float MinimumDegrees; // 0xb4
        float MaximumDegrees; // 0xb8
        float Thickness; // 0xbc
        int32_t Detail; // 0xc0
        struct FName Space; // 0xc4
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugRectangleItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugRectangleItemSpace
    {
    //Children Prop Count (Fields): 7
    public:

        struct FTransform Transform; // 0x70
        struct FLinearColor Color; // 0xa0
        float Scale; // 0xb0
        float Thickness; // 0xb4
        struct FRigElementKey Space; // 0xb8
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugRectangle : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugRectangle
    {
    //Children Prop Count (Fields): 7
    public:

        struct FTransform Transform; // 0x70
        struct FLinearColor Color; // 0xa0
        float Scale; // 0xb0
        float Thickness; // 0xb4
        struct FName Space; // 0xb8
        struct FTransform WorldOffset; // 0xc0
        bool bEnabled; // 0xf0

    };

    struct FRigUnit_DebugTransformArrayMutable : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugTransformArrayMutable
    {
    //Children Prop Count (Fields): 9
    public:

        struct TArray<struct FTransform> Transforms; // 0x68
        enum class ERigUnitDebugTransformMode Mode; // 0x78
        struct FLinearColor Color; // 0x7c
        float Thickness; // 0x8c
        float Scale; // 0x90
        struct FName Space; // 0x94
        struct FTransform WorldOffset; // 0xa0
        bool bEnabled; // 0xd0
        struct FRigUnit_DebugTransformArrayMutable_WorkData WorkData; // 0xd8

    };

    struct FRigUnit_DebugTransformArrayMutable_WorkData //ScriptStruct ControlRig.RigUnit_DebugTransformArrayMutable_WorkData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FTransform> DrawTransforms; // 0x0

    };

    struct FRigUnit_DebugTransformMutableItemSpace : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugTransformMutableItemSpace
    {
    //Children Prop Count (Fields): 8
    public:

        struct FTransform Transform; // 0x70
        enum class ERigUnitDebugTransformMode Mode; // 0xa0
        struct FLinearColor Color; // 0xa4
        float Thickness; // 0xb4
        float Scale; // 0xb8
        struct FRigElementKey Space; // 0xbc
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugTransformMutable : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_DebugTransformMutable
    {
    //Children Prop Count (Fields): 8
    public:

        struct FTransform Transform; // 0x70
        enum class ERigUnitDebugTransformMode Mode; // 0xa0
        struct FLinearColor Color; // 0xa4
        float Thickness; // 0xb4
        float Scale; // 0xb8
        struct FName Space; // 0xbc
        struct FTransform WorldOffset; // 0xd0
        bool bEnabled; // 0x100

    };

    struct FRigUnit_DebugTransform : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_DebugTransform
    {
    //Children Prop Count (Fields): 8
    public:

        struct FTransform Transform; // 0x10
        enum class ERigUnitDebugTransformMode Mode; // 0x40
        struct FLinearColor Color; // 0x44
        float Thickness; // 0x54
        float Scale; // 0x58
        struct FName Space; // 0x5c
        struct FTransform WorldOffset; // 0x70
        bool bEnabled; // 0xa0

    };

    struct FRigUnit_DeltaFromPreviousTransform : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_DeltaFromPreviousTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTransform Value; // 0x10
        struct FTransform Delta; // 0x40
        struct FTransform PreviousValue; // 0x70
        struct FTransform Cache; // 0xa0

    };

    struct FRigUnit_DeltaFromPreviousQuat : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_DeltaFromPreviousQuat
    {
    //Children Prop Count (Fields): 4
    public:

        struct FQuat Value; // 0x10
        struct FQuat Delta; // 0x20
        struct FQuat PreviousValue; // 0x30
        struct FQuat Cache; // 0x40

    };

    struct FRigUnit_DeltaFromPreviousVector : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_DeltaFromPreviousVector
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Value; // 0x8
        struct FVector Delta; // 0x14
        struct FVector PreviousValue; // 0x20
        struct FVector Cache; // 0x2c

    };

    struct FRigUnit_DeltaFromPreviousFloat : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_DeltaFromPreviousFloat
    {
    //Children Prop Count (Fields): 4
    public:

        float Value; // 0x8
        float Delta; // 0xc
        float PreviousValue; // 0x10
        float Cache; // 0x14

    };

    struct FRigUnit_DistributeRotationForCollection : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_DistributeRotationForCollection
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigElementKeyCollection Items; // 0x68
        struct TArray<struct FRigUnit_DistributeRotation_Rotation> Rotations; // 0x78
        enum class EControlRigAnimEasingType RotationEaseType; // 0x88
        float weight; // 0x8c
        struct FRigUnit_DistributeRotation_WorkData WorkData; // 0x90

    };

    struct FRigUnit_DistributeRotation_WorkData //ScriptStruct ControlRig.RigUnit_DistributeRotation_WorkData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FCachedRigElement> CachedItems; // 0x0
        struct TArray<int32_t> ItemRotationA; // 0x10
        struct TArray<int32_t> ItemRotationB; // 0x20
        struct TArray<float> ItemRotationT; // 0x30
        struct TArray<struct FTransform> ItemLocalTransforms; // 0x40

    };

    struct FRigUnit_DistributeRotation_Rotation //ScriptStruct ControlRig.RigUnit_DistributeRotation_Rotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Rotation; // 0x0
        float Ratio; // 0x10

    };

    struct FRigUnit_DistributeRotation : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_DistributeRotation
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName StartBone; // 0x68
        struct FName EndBone; // 0x70
        struct TArray<struct FRigUnit_DistributeRotation_Rotation> Rotations; // 0x78
        enum class EControlRigAnimEasingType RotationEaseType; // 0x88
        float weight; // 0x8c
        bool bPropagateToChildren; // 0x90
        struct FRigUnit_DistributeRotation_WorkData WorkData; // 0x98

    };

    struct FRigUnit_DrawContainerSetTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_DrawContainerSetTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InstructionName; // 0x68
        struct FTransform Transform; // 0x70

    };

    struct FRigUnit_DrawContainerSetThickness : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_DrawContainerSetThickness
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InstructionName; // 0x68
        float Thickness; // 0x70

    };

    struct FRigUnit_DrawContainerSetColor : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_DrawContainerSetColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InstructionName; // 0x68
        struct FLinearColor Color; // 0x70

    };

    struct FRigUnit_DrawContainerGetInstruction : FRigUnit //ScriptStruct ControlRig.RigUnit_DrawContainerGetInstruction
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName InstructionName; // 0x8
        struct FLinearColor Color; // 0x10
        struct FTransform Transform; // 0x20

    };

    struct FRigUnit_FABRIKPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_FABRIKPerItem
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKeyCollection Items; // 0x68
        struct FTransform EffectorTransform; // 0x80
        float Precision; // 0xb0
        float weight; // 0xb4
        bool bPropagateToChildren; // 0xb8
        int32_t MaxIterations; // 0xbc
        struct FRigUnit_FABRIK_WorkData WorkData; // 0xc0

    };

    struct FRigUnit_FABRIK_WorkData //ScriptStruct ControlRig.RigUnit_FABRIK_WorkData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FFABRIKChainLink> Chain; // 0x0
        struct TArray<struct FCachedRigElement> CachedItems; // 0x10
        struct FCachedRigElement CachedEffector; // 0x20

    };

    struct FFABRIKChainLink //ScriptStruct AnimationCore.FABRIKChainLink
    {
    public:


    };

    struct FRigUnit_FABRIK : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_FABRIK
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName StartBone; // 0x68
        struct FName EffectorBone; // 0x70
        struct FTransform EffectorTransform; // 0x80
        float Precision; // 0xb0
        float weight; // 0xb4
        bool bPropagateToChildren; // 0xb8
        int32_t MaxIterations; // 0xbc
        struct FRigUnit_FABRIK_WorkData WorkData; // 0xc0

    };

    struct FRigUnit_FitChainToCurvePerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_FitChainToCurvePerItem
    {
    //Children Prop Count (Fields): 15
    public:

        struct FRigElementKeyCollection Items; // 0x68
        struct FCRFourPointBezier Bezier; // 0x78
        enum class EControlRigCurveAlignment Alignment; // 0xa8
        float Minimum; // 0xac
        float Maximum; // 0xb0
        int32_t SamplingPrecision; // 0xb4
        struct FVector PrimaryAxis; // 0xb8
        struct FVector SecondaryAxis; // 0xc4
        struct FVector PoleVectorPosition; // 0xd0
        struct TArray<struct FRigUnit_FitChainToCurve_Rotation> Rotations; // 0xe0
        enum class EControlRigAnimEasingType RotationEaseType; // 0xf0
        float weight; // 0xf4
        bool bPropagateToChildren; // 0xf8
        struct FRigUnit_FitChainToCurve_DebugSettings DebugSettings; // 0x100
        struct FRigUnit_FitChainToCurve_WorkData WorkData; // 0x160

    };

    struct FRigUnit_FitChainToCurve_WorkData //ScriptStruct ControlRig.RigUnit_FitChainToCurve_WorkData
    {
    //Children Prop Count (Fields): 10
    public:

        float ChainLength; // 0x0
        struct TArray<struct FVector> ItemPositions; // 0x8
        struct TArray<float> ItemSegments; // 0x18
        struct TArray<struct FVector> CurvePositions; // 0x28
        struct TArray<float> CurveSegments; // 0x38
        struct TArray<struct FCachedRigElement> CachedItems; // 0x48
        struct TArray<int32_t> ItemRotationA; // 0x58
        struct TArray<int32_t> ItemRotationB; // 0x68
        struct TArray<float> ItemRotationT; // 0x78
        struct TArray<struct FTransform> ItemLocalTransforms; // 0x88

    };

    struct FRigUnit_FitChainToCurve_DebugSettings //ScriptStruct ControlRig.RigUnit_FitChainToCurve_DebugSettings
    {
    //Children Prop Count (Fields): 5
    public:

        bool bEnabled; // 0x0
        float Scale; // 0x4
        struct FLinearColor CurveColor; // 0x8
        struct FLinearColor SegmentsColor; // 0x18
        struct FTransform WorldOffset; // 0x30

    };

    struct FRigUnit_FitChainToCurve_Rotation //ScriptStruct ControlRig.RigUnit_FitChainToCurve_Rotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Rotation; // 0x0
        float Ratio; // 0x10

    };

    struct FRigUnit_FitChainToCurve : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_FitChainToCurve
    {
    //Children Prop Count (Fields): 16
    public:

        struct FName StartBone; // 0x68
        struct FName EndBone; // 0x70
        struct FCRFourPointBezier Bezier; // 0x78
        enum class EControlRigCurveAlignment Alignment; // 0xa8
        float Minimum; // 0xac
        float Maximum; // 0xb0
        int32_t SamplingPrecision; // 0xb4
        struct FVector PrimaryAxis; // 0xb8
        struct FVector SecondaryAxis; // 0xc4
        struct FVector PoleVectorPosition; // 0xd0
        struct TArray<struct FRigUnit_FitChainToCurve_Rotation> Rotations; // 0xe0
        enum class EControlRigAnimEasingType RotationEaseType; // 0xf0
        float weight; // 0xf4
        bool bPropagateToChildren; // 0xf8
        struct FRigUnit_FitChainToCurve_DebugSettings DebugSettings; // 0x100
        struct FRigUnit_FitChainToCurve_WorkData WorkData; // 0x160

    };

    struct FRigUnit_MapRange_Float : FRigUnit //ScriptStruct ControlRig.RigUnit_MapRange_Float
    {
    //Children Prop Count (Fields): 6
    public:

        float Value; // 0x8
        float MinIn; // 0xc
        float MaxIn; // 0x10
        float MinOut; // 0x14
        float MaxOut; // 0x18
        float Result; // 0x1c

    };

    struct FRigUnit_Clamp_Float : FRigUnit //ScriptStruct ControlRig.RigUnit_Clamp_Float
    {
    //Children Prop Count (Fields): 4
    public:

        float Value; // 0x8
        float Min; // 0xc
        float Max; // 0x10
        float Result; // 0x14

    };

    struct FRigUnit_BinaryFloatOp : FRigUnit //ScriptStruct ControlRig.RigUnit_BinaryFloatOp
    {
    //Children Prop Count (Fields): 3
    public:

        float Argument0; // 0x8
        float Argument1; // 0xc
        float Result; // 0x10

    };

    struct FRigUnit_Divide_FloatFloat : FRigUnit_BinaryFloatOp //ScriptStruct ControlRig.RigUnit_Divide_FloatFloat
    {
    public:


    };

    struct FRigUnit_Subtract_FloatFloat : FRigUnit_BinaryFloatOp //ScriptStruct ControlRig.RigUnit_Subtract_FloatFloat
    {
    public:


    };

    struct FRigUnit_Add_FloatFloat : FRigUnit_BinaryFloatOp //ScriptStruct ControlRig.RigUnit_Add_FloatFloat
    {
    public:


    };

    struct FRigUnit_Multiply_FloatFloat : FRigUnit_BinaryFloatOp //ScriptStruct ControlRig.RigUnit_Multiply_FloatFloat
    {
    public:


    };

    struct FRigUnit_ForLoopCount : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_ForLoopCount
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Count; // 0x68
        int32_t Index; // 0x6c
        float Ratio; // 0x70
        bool Continue; // 0x74
        struct FControlRigExecuteContext Completed; // 0x78

    };

    struct FRigUnit_GetBoneTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetBoneTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Bone; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedBone; // 0x50

    };

    struct FRigUnit_GetControlInitialTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlInitialTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Control; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedControlIndex; // 0x50

    };

    struct FRigUnit_GetControlTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlTransform
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Control; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FTransform Transform; // 0x20
        struct FTransform Minimum; // 0x50
        struct FTransform Maximum; // 0x80
        struct FCachedRigElement CachedControlIndex; // 0xb0

    };

    struct FRigUnit_GetControlRotator : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlRotator
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Control; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FRotator Rotator; // 0x14
        struct FRotator Minimum; // 0x20
        struct FRotator Maximum; // 0x2c
        struct FCachedRigElement CachedControlIndex; // 0x38

    };

    struct FRigUnit_GetControlVector : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlVector
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Control; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FVector Vector; // 0x14
        struct FVector Minimum; // 0x20
        struct FVector Maximum; // 0x2c
        struct FCachedRigElement CachedControlIndex; // 0x38

    };

    struct FRigUnit_GetControlVector2D : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlVector2D
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x8
        struct FVector2D Vector; // 0x10
        struct FVector2D Minimum; // 0x18
        struct FVector2D Maximum; // 0x20
        struct FCachedRigElement CachedControlIndex; // 0x28

    };

    struct FRigUnit_GetControlInteger : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlInteger
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x8
        int32_t IntegerValue; // 0x10
        int32_t Minimum; // 0x14
        int32_t Maximum; // 0x18
        struct FCachedRigElement CachedControlIndex; // 0x1c

    };

    struct FRigUnit_GetControlFloat : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlFloat
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x8
        float FloatValue; // 0x10
        float Minimum; // 0x14
        float Maximum; // 0x18
        struct FCachedRigElement CachedControlIndex; // 0x1c

    };

    struct FRigUnit_GetControlBool : FRigUnit //ScriptStruct ControlRig.RigUnit_GetControlBool
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Control; // 0x8
        bool BoolValue; // 0x10
        struct FCachedRigElement CachedControlIndex; // 0x14

    };

    struct FRigUnit_GetCurveValue : FRigUnit //ScriptStruct ControlRig.RigUnit_GetCurveValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Curve; // 0x8
        float Value; // 0x10
        struct FCachedRigElement CachedCurveIndex; // 0x14

    };

    struct FRigUnit_GetDeltaTime : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_GetDeltaTime
    {
    //Children Prop Count (Fields): 1
    public:

        float Result; // 0x8

    };

    struct FRigUnit_GetInitialBoneTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetInitialBoneTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Bone; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x10
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedBone; // 0x50

    };

    struct FRigUnit_GetJointTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_GetJointTransform
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Joint; // 0x68
        enum class ETransformGetterType Type; // 0x70
        enum class ETransformSpaceMode TransformSpace; // 0x71
        struct FTransform BaseTransform; // 0x80
        struct FName BaseJoint; // 0xb0
        struct FTransform Output; // 0xc0

    };

    struct FRigUnit_GetRelativeBoneTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetRelativeBoneTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Bone; // 0x8
        struct FName Space; // 0x10
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedBone; // 0x50
        struct FCachedRigElement CachedSpace; // 0x64

    };

    struct FRigUnit_GetRelativeTransformForItem : FRigUnit //ScriptStruct ControlRig.RigUnit_GetRelativeTransformForItem
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKey Child; // 0x8
        bool bChildInitial; // 0x14
        struct FRigElementKey Parent; // 0x18
        bool bParentInitial; // 0x24
        struct FTransform RelativeTransform; // 0x30
        struct FCachedRigElement CachedChild; // 0x60
        struct FCachedRigElement CachedParent; // 0x74

    };

    struct FRigUnit_GetSpaceTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetSpaceTransform
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Space; // 0x8
        enum class EBoneGetterSetterMode SpaceType; // 0x10
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedSpaceIndex; // 0x50

    };

    struct FRigUnit_GetTransform : FRigUnit //ScriptStruct ControlRig.RigUnit_GetTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigElementKey Item; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x14
        bool bInitial; // 0x15
        struct FTransform Transform; // 0x20
        struct FCachedRigElement CachedIndex; // 0x50

    };

    struct FRigUnit_GetWorldTime : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_GetWorldTime
    {
    //Children Prop Count (Fields): 8
    public:

        float Year; // 0x8
        float Month; // 0xc
        float Day; // 0x10
        float WeekDay; // 0x14
        float Hours; // 0x18
        float Minutes; // 0x1c
        float Seconds; // 0x20
        float OverallSeconds; // 0x24

    };

    struct FRigUnit_HierarchyBase : FRigUnit //ScriptStruct ControlRig.RigUnit_HierarchyBase
    {
    public:


    };

    struct FRigUnit_HierarchyGetSiblings : FRigUnit_HierarchyBase //ScriptStruct ControlRig.RigUnit_HierarchyGetSiblings
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigElementKey Item; // 0x8
        bool bIncludeItem; // 0x14
        struct FRigElementKeyCollection Siblings; // 0x18
        struct FCachedRigElement CachedItem; // 0x28
        struct FRigElementKeyCollection CachedSiblings; // 0x40

    };

    struct FRigUnit_HierarchyGetChildren : FRigUnit_HierarchyBase //ScriptStruct ControlRig.RigUnit_HierarchyGetChildren
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey Parent; // 0x8
        bool bIncludeParent; // 0x14
        bool bRecursive; // 0x15
        struct FRigElementKeyCollection Children; // 0x18
        struct FCachedRigElement CachedParent; // 0x28
        struct FRigElementKeyCollection CachedChildren; // 0x40

    };

    struct FRigUnit_HierarchyGetParents : FRigUnit_HierarchyBase //ScriptStruct ControlRig.RigUnit_HierarchyGetParents
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey Child; // 0x8
        bool bIncludeChild; // 0x14
        bool bReverse; // 0x15
        struct FRigElementKeyCollection Parents; // 0x18
        struct FCachedRigElement CachedChild; // 0x28
        struct FRigElementKeyCollection CachedParents; // 0x40

    };

    struct FRigUnit_HierarchyGetParent : FRigUnit_HierarchyBase //ScriptStruct ControlRig.RigUnit_HierarchyGetParent
    {
    //Children Prop Count (Fields): 4
    public:

        struct FRigElementKey Child; // 0x8
        struct FRigElementKey Parent; // 0x14
        struct FCachedRigElement CachedChild; // 0x20
        struct FCachedRigElement CachedParent; // 0x34

    };

    struct FRigUnit_InverseExecution : FRigUnit //ScriptStruct ControlRig.RigUnit_InverseExecution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FControlRigExecuteContext ExecuteContext; // 0x8

    };

    struct FRigUnit_IsInteracting : FRigUnit //ScriptStruct ControlRig.RigUnit_IsInteracting
    {
    //Children Prop Count (Fields): 1
    public:

        bool bIsInteracting; // 0x8

    };

    struct FRigUnit_ItemBase : FRigUnit //ScriptStruct ControlRig.RigUnit_ItemBase
    {
    public:


    };

    struct FRigUnit_ItemReplace : FRigUnit_ItemBase //ScriptStruct ControlRig.RigUnit_ItemReplace
    {
    //Children Prop Count (Fields): 4
    public:

        struct FRigElementKey Item; // 0x8
        struct FName Old; // 0x14
        struct FName New; // 0x1c
        struct FRigElementKey Result; // 0x24

    };

    struct FRigUnit_ItemExists : FRigUnit_ItemBase //ScriptStruct ControlRig.RigUnit_ItemExists
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRigElementKey Item; // 0x8
        bool Exists; // 0x14
        struct FCachedRigElement CachedIndex; // 0x18

    };

    struct FRigUnit_ItemBaseMutable : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_ItemBaseMutable
    {
    public:


    };

    struct FRigUnit_KalmanTransform : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_KalmanTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FTransform Value; // 0x10
        int32_t BufferSize; // 0x40
        struct FTransform Result; // 0x50
        struct TArray<struct FTransform> Buffer; // 0x80
        int32_t LastInsertIndex; // 0x90

    };

    struct FRigUnit_KalmanVector : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_KalmanVector
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Value; // 0x8
        int32_t BufferSize; // 0x14
        struct FVector Result; // 0x18
        struct TArray<struct FVector> Buffer; // 0x28
        int32_t LastInsertIndex; // 0x38

    };

    struct FRigUnit_KalmanFloat : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_KalmanFloat
    {
    //Children Prop Count (Fields): 5
    public:

        float Value; // 0x8
        int32_t BufferSize; // 0xc
        float Result; // 0x10
        struct TArray<float> Buffer; // 0x18
        int32_t LastInsertIndex; // 0x28

    };

    struct FRigUnit_MathBase : FRigUnit //ScriptStruct ControlRig.RigUnit_MathBase
    {
    public:


    };

    struct FRigUnit_MathBoolBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathBoolBase
    {
    public:


    };

    struct FRigUnit_MathBoolNotEquals : FRigUnit_MathBoolBase //ScriptStruct ControlRig.RigUnit_MathBoolNotEquals
    {
    //Children Prop Count (Fields): 3
    public:

        bool A; // 0x8
        bool B; // 0x9
        bool Result; // 0xa

    };

    struct FRigUnit_MathBoolEquals : FRigUnit_MathBoolBase //ScriptStruct ControlRig.RigUnit_MathBoolEquals
    {
    //Children Prop Count (Fields): 3
    public:

        bool A; // 0x8
        bool B; // 0x9
        bool Result; // 0xa

    };

    struct FRigUnit_MathBoolBinaryOp : FRigUnit_MathBoolBase //ScriptStruct ControlRig.RigUnit_MathBoolBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        bool A; // 0x8
        bool B; // 0x9
        bool Result; // 0xa

    };

    struct FRigUnit_MathBoolOr : FRigUnit_MathBoolBinaryOp //ScriptStruct ControlRig.RigUnit_MathBoolOr
    {
    public:


    };

    struct FRigUnit_MathBoolNand : FRigUnit_MathBoolBinaryOp //ScriptStruct ControlRig.RigUnit_MathBoolNand
    {
    public:


    };

    struct FRigUnit_MathBoolAnd : FRigUnit_MathBoolBinaryOp //ScriptStruct ControlRig.RigUnit_MathBoolAnd
    {
    public:


    };

    struct FRigUnit_MathBoolUnaryOp : FRigUnit_MathBoolBase //ScriptStruct ControlRig.RigUnit_MathBoolUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        bool Value; // 0x8
        bool Result; // 0x9

    };

    struct FRigUnit_MathBoolNot : FRigUnit_MathBoolUnaryOp //ScriptStruct ControlRig.RigUnit_MathBoolNot
    {
    public:


    };

    struct FRigUnit_MathBoolConstant : FRigUnit_MathBoolBase //ScriptStruct ControlRig.RigUnit_MathBoolConstant
    {
    //Children Prop Count (Fields): 1
    public:

        bool Value; // 0x8

    };

    struct FRigUnit_MathBoolConstFalse : FRigUnit_MathBoolConstant //ScriptStruct ControlRig.RigUnit_MathBoolConstFalse
    {
    public:


    };

    struct FRigUnit_MathBoolConstTrue : FRigUnit_MathBoolConstant //ScriptStruct ControlRig.RigUnit_MathBoolConstTrue
    {
    public:


    };

    struct FRigUnit_MathColorBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathColorBase
    {
    public:


    };

    struct FRigUnit_MathColorLerp : FRigUnit_MathColorBase //ScriptStruct ControlRig.RigUnit_MathColorLerp
    {
    //Children Prop Count (Fields): 4
    public:

        struct FLinearColor A; // 0x8
        struct FLinearColor B; // 0x18
        float T; // 0x28
        struct FLinearColor Result; // 0x2c

    };

    struct FRigUnit_MathColorBinaryOp : FRigUnit_MathColorBase //ScriptStruct ControlRig.RigUnit_MathColorBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLinearColor A; // 0x8
        struct FLinearColor B; // 0x18
        struct FLinearColor Result; // 0x28

    };

    struct FRigUnit_MathColorMul : FRigUnit_MathColorBinaryOp //ScriptStruct ControlRig.RigUnit_MathColorMul
    {
    public:


    };

    struct FRigUnit_MathColorSub : FRigUnit_MathColorBinaryOp //ScriptStruct ControlRig.RigUnit_MathColorSub
    {
    public:


    };

    struct FRigUnit_MathColorAdd : FRigUnit_MathColorBinaryOp //ScriptStruct ControlRig.RigUnit_MathColorAdd
    {
    public:


    };

    struct FRigUnit_MathColorFromFloat : FRigUnit_MathColorBase //ScriptStruct ControlRig.RigUnit_MathColorFromFloat
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x8
        struct FLinearColor Result; // 0xc

    };

    struct FRigUnit_MathFloatBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathFloatBase
    {
    public:


    };

    struct FRigUnit_MathFloatLawOfCosine : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatLawOfCosine
    {
    //Children Prop Count (Fields): 7
    public:

        float A; // 0x8
        float B; // 0xc
        float C; // 0x10
        float AlphaAngle; // 0x14
        float BetaAngle; // 0x18
        float GammaAngle; // 0x1c
        bool bValid; // 0x20

    };

    struct FRigUnit_MathFloatUnaryOp : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x8
        float Result; // 0xc

    };

    struct FRigUnit_MathFloatAtan : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatAtan
    {
    public:


    };

    struct FRigUnit_MathFloatAcos : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatAcos
    {
    public:


    };

    struct FRigUnit_MathFloatAsin : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatAsin
    {
    public:


    };

    struct FRigUnit_MathFloatTan : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatTan
    {
    public:


    };

    struct FRigUnit_MathFloatCos : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatCos
    {
    public:


    };

    struct FRigUnit_MathFloatSin : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatSin
    {
    public:


    };

    struct FRigUnit_MathFloatRad : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatRad
    {
    public:


    };

    struct FRigUnit_MathFloatDeg : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatDeg
    {
    public:


    };

    struct FRigUnit_MathFloatSelectBool : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatSelectBool
    {
    //Children Prop Count (Fields): 4
    public:

        bool Condition; // 0x8
        float IfTrue; // 0xc
        float IfFalse; // 0x10
        float Result; // 0x14

    };

    struct FRigUnit_MathFloatIsNearlyEqual : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatIsNearlyEqual
    {
    //Children Prop Count (Fields): 4
    public:

        float A; // 0x8
        float B; // 0xc
        float Tolerance; // 0x10
        bool Result; // 0x14

    };

    struct FRigUnit_MathFloatIsNearlyZero : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatIsNearlyZero
    {
    //Children Prop Count (Fields): 3
    public:

        float Value; // 0x8
        float Tolerance; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatLessEqual : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatLessEqual
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatGreaterEqual : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatGreaterEqual
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatLess : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatLess
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatGreater : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatGreater
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatNotEquals : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatNotEquals
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatEquals : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatEquals
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathFloatRemap : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatRemap
    {
    //Children Prop Count (Fields): 7
    public:

        float Value; // 0x8
        float SourceMinimum; // 0xc
        float SourceMaximum; // 0x10
        float TargetMinimum; // 0x14
        float TargetMaximum; // 0x18
        bool bClamp; // 0x1c
        float Result; // 0x20

    };

    struct FRigUnit_MathFloatLerp : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatLerp
    {
    //Children Prop Count (Fields): 4
    public:

        float A; // 0x8
        float B; // 0xc
        float T; // 0x10
        float Result; // 0x14

    };

    struct FRigUnit_MathFloatClamp : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatClamp
    {
    //Children Prop Count (Fields): 4
    public:

        float Value; // 0x8
        float Minimum; // 0xc
        float Maximum; // 0x10
        float Result; // 0x14

    };

    struct FRigUnit_MathFloatSign : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatSign
    {
    public:


    };

    struct FRigUnit_MathFloatToInt : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatToInt
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x8
        int32_t Result; // 0xc

    };

    struct FRigUnit_MathFloatRound : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatRound
    {
    //Children Prop Count (Fields): 3
    public:

        float Value; // 0x8
        float Result; // 0xc
        int32_t Int; // 0x10

    };

    struct FRigUnit_MathFloatCeil : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatCeil
    {
    //Children Prop Count (Fields): 3
    public:

        float Value; // 0x8
        float Result; // 0xc
        int32_t Int; // 0x10

    };

    struct FRigUnit_MathFloatFloor : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatFloor
    {
    //Children Prop Count (Fields): 3
    public:

        float Value; // 0x8
        float Result; // 0xc
        int32_t Int; // 0x10

    };

    struct FRigUnit_MathFloatAbs : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatAbs
    {
    public:


    };

    struct FRigUnit_MathFloatNegate : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatNegate
    {
    public:


    };

    struct FRigUnit_MathFloatSqrt : FRigUnit_MathFloatUnaryOp //ScriptStruct ControlRig.RigUnit_MathFloatSqrt
    {
    public:


    };

    struct FRigUnit_MathFloatBinaryOp : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        float A; // 0x8
        float B; // 0xc
        float Result; // 0x10

    };

    struct FRigUnit_MathFloatPow : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatPow
    {
    public:


    };

    struct FRigUnit_MathFloatMax : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatMax
    {
    public:


    };

    struct FRigUnit_MathFloatMin : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatMin
    {
    public:


    };

    struct FRigUnit_MathFloatMod : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatMod
    {
    public:


    };

    struct FRigUnit_MathFloatDiv : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatDiv
    {
    public:


    };

    struct FRigUnit_MathFloatMul : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatMul
    {
    public:


    };

    struct FRigUnit_MathFloatSub : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatSub
    {
    public:


    };

    struct FRigUnit_MathFloatAdd : FRigUnit_MathFloatBinaryOp //ScriptStruct ControlRig.RigUnit_MathFloatAdd
    {
    public:


    };

    struct FRigUnit_MathFloatConstant : FRigUnit_MathFloatBase //ScriptStruct ControlRig.RigUnit_MathFloatConstant
    {
    //Children Prop Count (Fields): 1
    public:

        float Value; // 0x8

    };

    struct FRigUnit_MathFloatConstTwoPi : FRigUnit_MathFloatConstant //ScriptStruct ControlRig.RigUnit_MathFloatConstTwoPi
    {
    public:


    };

    struct FRigUnit_MathFloatConstHalfPi : FRigUnit_MathFloatConstant //ScriptStruct ControlRig.RigUnit_MathFloatConstHalfPi
    {
    public:


    };

    struct FRigUnit_MathFloatConstPi : FRigUnit_MathFloatConstant //ScriptStruct ControlRig.RigUnit_MathFloatConstPi
    {
    public:


    };

    struct FRigUnit_MathIntBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathIntBase
    {
    public:


    };

    struct FRigUnit_MathIntLessEqual : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntLessEqual
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntGreaterEqual : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntGreaterEqual
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntLess : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntLess
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntGreater : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntGreater
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntNotEquals : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntNotEquals
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntEquals : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntEquals
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        bool Result; // 0x10

    };

    struct FRigUnit_MathIntClamp : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntClamp
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Value; // 0x8
        int32_t Minimum; // 0xc
        int32_t Maximum; // 0x10
        int32_t Result; // 0x14

    };

    struct FRigUnit_MathIntUnaryOp : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Value; // 0x8
        int32_t Result; // 0xc

    };

    struct FRigUnit_MathIntSign : FRigUnit_MathIntUnaryOp //ScriptStruct ControlRig.RigUnit_MathIntSign
    {
    public:


    };

    struct FRigUnit_MathIntToFloat : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntToFloat
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Value; // 0x8
        float Result; // 0xc

    };

    struct FRigUnit_MathIntAbs : FRigUnit_MathIntUnaryOp //ScriptStruct ControlRig.RigUnit_MathIntAbs
    {
    public:


    };

    struct FRigUnit_MathIntNegate : FRigUnit_MathIntUnaryOp //ScriptStruct ControlRig.RigUnit_MathIntNegate
    {
    public:


    };

    struct FRigUnit_MathIntBinaryOp : FRigUnit_MathIntBase //ScriptStruct ControlRig.RigUnit_MathIntBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t A; // 0x8
        int32_t B; // 0xc
        int32_t Result; // 0x10

    };

    struct FRigUnit_MathIntPow : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntPow
    {
    public:


    };

    struct FRigUnit_MathIntMax : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntMax
    {
    public:


    };

    struct FRigUnit_MathIntMin : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntMin
    {
    public:


    };

    struct FRigUnit_MathIntMod : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntMod
    {
    public:


    };

    struct FRigUnit_MathIntDiv : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntDiv
    {
    public:


    };

    struct FRigUnit_MathIntMul : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntMul
    {
    public:


    };

    struct FRigUnit_MathIntSub : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntSub
    {
    public:


    };

    struct FRigUnit_MathIntAdd : FRigUnit_MathIntBinaryOp //ScriptStruct ControlRig.RigUnit_MathIntAdd
    {
    public:


    };

    struct FRigUnit_MathQuaternionRotationOrder : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathQuaternionRotationOrder
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EControlRigRotationOrder RotationOrder; // 0x8

    };

    struct FRigUnit_MathQuaternionBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathQuaternionBase
    {
    public:


    };

    struct FRigUnit_MathQuaternionSwingTwist : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionSwingTwist
    {
    //Children Prop Count (Fields): 4
    public:

        struct FQuat Input; // 0x10
        struct FVector TwistAxis; // 0x20
        struct FQuat Swing; // 0x30
        struct FQuat Twist; // 0x40

    };

    struct FRigUnit_MathQuaternionGetAxis : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionGetAxis
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Quaternion; // 0x10
        enum class EAxis Axis; // 0x20
        struct FVector Result; // 0x24

    };

    struct FRigUnit_MathQuaternionRotateVector : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionRotateVector
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Quaternion; // 0x10
        struct FVector Vector; // 0x20
        struct FVector Result; // 0x2c

    };

    struct FRigUnit_MathQuaternionUnaryOp : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Value; // 0x10
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_MathQuaternionUnit : FRigUnit_MathQuaternionUnaryOp //ScriptStruct ControlRig.RigUnit_MathQuaternionUnit
    {
    public:


    };

    struct FRigUnit_MathQuaternionDot : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionDot
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat A; // 0x10
        struct FQuat B; // 0x20
        float Result; // 0x30

    };

    struct FRigUnit_MathQuaternionSelectBool : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionSelectBool
    {
    //Children Prop Count (Fields): 4
    public:

        bool Condition; // 0x8
        struct FQuat IfTrue; // 0x10
        struct FQuat IfFalse; // 0x20
        struct FQuat Result; // 0x30

    };

    struct FRigUnit_MathQuaternionNotEquals : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionNotEquals
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat A; // 0x10
        struct FQuat B; // 0x20
        bool Result; // 0x30

    };

    struct FRigUnit_MathQuaternionEquals : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionEquals
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat A; // 0x10
        struct FQuat B; // 0x20
        bool Result; // 0x30

    };

    struct FRigUnit_MathQuaternionSlerp : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionSlerp
    {
    //Children Prop Count (Fields): 4
    public:

        struct FQuat A; // 0x10
        struct FQuat B; // 0x20
        float T; // 0x30
        struct FQuat Result; // 0x40

    };

    struct FRigUnit_MathQuaternionInverse : FRigUnit_MathQuaternionUnaryOp //ScriptStruct ControlRig.RigUnit_MathQuaternionInverse
    {
    public:


    };

    struct FRigUnit_MathQuaternionBinaryOp : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat A; // 0x10
        struct FQuat B; // 0x20
        struct FQuat Result; // 0x30

    };

    struct FRigUnit_MathQuaternionMul : FRigUnit_MathQuaternionBinaryOp //ScriptStruct ControlRig.RigUnit_MathQuaternionMul
    {
    public:


    };

    struct FRigUnit_MathQuaternionToRotator : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionToRotator
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Value; // 0x10
        struct FRotator Result; // 0x20

    };

    struct FRigUnit_MathQuaternionToEuler : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionToEuler
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Value; // 0x10
        enum class EControlRigRotationOrder RotationOrder; // 0x20
        struct FVector Result; // 0x24

    };

    struct FRigUnit_MathQuaternionScale : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionScale
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Value; // 0x10
        float Scale; // 0x20

    };

    struct FRigUnit_MathQuaternionToAxisAndAngle : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionToAxisAndAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Value; // 0x10
        struct FVector Axis; // 0x20
        float Angle; // 0x2c

    };

    struct FRigUnit_MathQuaternionFromTwoVectors : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionFromTwoVectors
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_MathQuaternionFromRotator : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionFromRotator
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator Rotator; // 0x8
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_MathQuaternionFromEuler : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionFromEuler
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Euler; // 0x8
        enum class EControlRigRotationOrder RotationOrder; // 0x14
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_MathQuaternionFromAxisAndAngle : FRigUnit_MathQuaternionBase //ScriptStruct ControlRig.RigUnit_MathQuaternionFromAxisAndAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Axis; // 0x8
        float Angle; // 0x14
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_MathRBFInterpolateBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateBase
    {
    public:


    };

    struct FRigUnit_MathRBFInterpolateVectorBase : FRigUnit_MathRBFInterpolateBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorBase
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Input; // 0x8
        enum class ERBFVectorDistanceType DistanceFunction; // 0x14
        enum class ERBFKernelType SmoothingFunction; // 0x15
        float SmoothingRadius; // 0x18
        bool bNormalizeOutput; // 0x1c
        struct FRigUnit_MathRBFInterpolateVectorWorkData WorkData; // 0x20

    };

    struct FRigUnit_MathRBFInterpolateVectorWorkData //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorWorkData
    {
    public:


    };

    struct FRigUnit_MathRBFInterpolateVectorXform : FRigUnit_MathRBFInterpolateVectorBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorXform
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateVectorXform_Target> Targets; // 0xb0
        struct FTransform Output; // 0xc0

    };

    struct FMathRBFInterpolateVectorXform_Target //ScriptStruct ControlRig.MathRBFInterpolateVectorXform_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Target; // 0x0
        struct FTransform Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateVectorQuat : FRigUnit_MathRBFInterpolateVectorBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorQuat
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateVectorQuat_Target> Targets; // 0xb0
        struct FQuat Output; // 0xc0

    };

    struct FMathRBFInterpolateVectorQuat_Target //ScriptStruct ControlRig.MathRBFInterpolateVectorQuat_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Target; // 0x0
        struct FQuat Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateVectorColor : FRigUnit_MathRBFInterpolateVectorBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateVectorColor_Target> Targets; // 0xb0
        struct FLinearColor Output; // 0xc0

    };

    struct FMathRBFInterpolateVectorColor_Target //ScriptStruct ControlRig.MathRBFInterpolateVectorColor_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Target; // 0x0
        struct FLinearColor Value; // 0xc

    };

    struct FRigUnit_MathRBFInterpolateVectorVector : FRigUnit_MathRBFInterpolateVectorBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorVector
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateVectorVector_Target> Targets; // 0xb0
        struct FVector Output; // 0xc0

    };

    struct FMathRBFInterpolateVectorVector_Target //ScriptStruct ControlRig.MathRBFInterpolateVectorVector_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Target; // 0x0
        struct FVector Value; // 0xc

    };

    struct FRigUnit_MathRBFInterpolateVectorFloat : FRigUnit_MathRBFInterpolateVectorBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateVectorFloat
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateVectorFloat_Target> Targets; // 0xb0
        float Output; // 0xc0

    };

    struct FMathRBFInterpolateVectorFloat_Target //ScriptStruct ControlRig.MathRBFInterpolateVectorFloat_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Target; // 0x0
        float Value; // 0xc

    };

    struct FRigUnit_MathRBFInterpolateQuatBase : FRigUnit_MathRBFInterpolateBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatBase
    {
    //Children Prop Count (Fields): 7
    public:

        struct FQuat Input; // 0x10
        enum class ERBFQuatDistanceType DistanceFunction; // 0x20
        enum class ERBFKernelType SmoothingFunction; // 0x21
        float SmoothingAngle; // 0x24
        bool bNormalizeOutput; // 0x28
        struct FVector TwistAxis; // 0x2c
        struct FRigUnit_MathRBFInterpolateQuatWorkData WorkData; // 0x40

    };

    struct FRigUnit_MathRBFInterpolateQuatWorkData //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatWorkData
    {
    public:


    };

    struct FRigUnit_MathRBFInterpolateQuatXform : FRigUnit_MathRBFInterpolateQuatBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatXform
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateQuatXform_Target> Targets; // 0xd0
        struct FTransform Output; // 0xe0

    };

    struct FMathRBFInterpolateQuatXform_Target //ScriptStruct ControlRig.MathRBFInterpolateQuatXform_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Target; // 0x0
        struct FTransform Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateQuatQuat : FRigUnit_MathRBFInterpolateQuatBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatQuat
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateQuatQuat_Target> Targets; // 0xd0
        struct FQuat Output; // 0xe0

    };

    struct FMathRBFInterpolateQuatQuat_Target //ScriptStruct ControlRig.MathRBFInterpolateQuatQuat_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Target; // 0x0
        struct FQuat Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateQuatColor : FRigUnit_MathRBFInterpolateQuatBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateQuatColor_Target> Targets; // 0xd0
        struct FLinearColor Output; // 0xe0

    };

    struct FMathRBFInterpolateQuatColor_Target //ScriptStruct ControlRig.MathRBFInterpolateQuatColor_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Target; // 0x0
        struct FLinearColor Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateQuatVector : FRigUnit_MathRBFInterpolateQuatBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatVector
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateQuatVector_Target> Targets; // 0xd0
        struct FVector Output; // 0xe0

    };

    struct FMathRBFInterpolateQuatVector_Target //ScriptStruct ControlRig.MathRBFInterpolateQuatVector_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Target; // 0x0
        struct FVector Value; // 0x10

    };

    struct FRigUnit_MathRBFInterpolateQuatFloat : FRigUnit_MathRBFInterpolateQuatBase //ScriptStruct ControlRig.RigUnit_MathRBFInterpolateQuatFloat
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMathRBFInterpolateQuatFloat_Target> Targets; // 0xd0
        float Output; // 0xe0

    };

    struct FMathRBFInterpolateQuatFloat_Target //ScriptStruct ControlRig.MathRBFInterpolateQuatFloat_Target
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Target; // 0x0
        float Value; // 0x10

    };

    struct FRigUnit_MathTransformBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathTransformBase
    {
    public:


    };

    struct FRigUnit_MathTransformClampSpatially : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformClampSpatially
    {
    //Children Prop Count (Fields): 10
    public:

        struct FTransform Value; // 0x10
        enum class EAxis Axis; // 0x40
        enum class EControlRigClampSpatialMode Type; // 0x41
        float Minimum; // 0x44
        float Maximum; // 0x48
        struct FTransform Space; // 0x50
        bool bDrawDebug; // 0x80
        struct FLinearColor DebugColor; // 0x84
        float DebugThickness; // 0x94
        struct FTransform Result; // 0xa0

    };

    struct FRigUnit_MathTransformFromSRT : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformFromSRT
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Location; // 0x8
        struct FVector Rotation; // 0x14
        enum class EControlRigRotationOrder RotationOrder; // 0x20
        struct FVector Scale; // 0x24
        struct FTransform Transform; // 0x30
        struct FEulerTransform EulerTransform; // 0x60

    };

    struct FRigUnit_MathTransformTransformVector : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformTransformVector
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Transform; // 0x10
        struct FVector Location; // 0x40
        struct FVector Result; // 0x4c

    };

    struct FRigUnit_MathTransformRotateVector : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformRotateVector
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Transform; // 0x10
        struct FVector Direction; // 0x40
        struct FVector Result; // 0x4c

    };

    struct FRigUnit_MathTransformSelectBool : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformSelectBool
    {
    //Children Prop Count (Fields): 4
    public:

        bool Condition; // 0x8
        struct FTransform IfTrue; // 0x10
        struct FTransform IfFalse; // 0x40
        struct FTransform Result; // 0x70

    };

    struct FRigUnit_MathTransformLerp : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformLerp
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTransform A; // 0x10
        struct FTransform B; // 0x40
        float T; // 0x70
        struct FTransform Result; // 0x80

    };

    struct FRigUnit_MathTransformUnaryOp : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Value; // 0x10
        struct FTransform Result; // 0x40

    };

    struct FRigUnit_MathTransformInverse : FRigUnit_MathTransformUnaryOp //ScriptStruct ControlRig.RigUnit_MathTransformInverse
    {
    public:


    };

    struct FRigUnit_MathTransformMakeAbsolute : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformMakeAbsolute
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Local; // 0x10
        struct FTransform Parent; // 0x40
        struct FTransform Global; // 0x70

    };

    struct FRigUnit_MathTransformMakeRelative : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformMakeRelative
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Global; // 0x10
        struct FTransform Parent; // 0x40
        struct FTransform Local; // 0x70

    };

    struct FRigUnit_MathTransformBinaryOp : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform A; // 0x10
        struct FTransform B; // 0x40
        struct FTransform Result; // 0x70

    };

    struct FRigUnit_MathTransformMul : FRigUnit_MathTransformBinaryOp //ScriptStruct ControlRig.RigUnit_MathTransformMul
    {
    public:


    };

    struct FRigUnit_MathTransformToEulerTransform : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformToEulerTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Value; // 0x10
        struct FEulerTransform Result; // 0x40

    };

    struct FRigUnit_MathTransformFromEulerTransform : FRigUnit_MathTransformBase //ScriptStruct ControlRig.RigUnit_MathTransformFromEulerTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FEulerTransform EulerTransform; // 0x8
        struct FTransform Result; // 0x30

    };

    struct FRigUnit_MathVectorBase : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_MathVectorBase
    {
    public:


    };

    struct FRigUnit_MathIntersectPlane : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathIntersectPlane
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Start; // 0x8
        struct FVector Direction; // 0x14
        struct FVector PlanePoint; // 0x20
        struct FVector PlaneNormal; // 0x2c
        struct FVector Result; // 0x38
        float Distance; // 0x44

    };

    struct FRigUnit_MathVectorClampSpatially : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorClampSpatially
    {
    //Children Prop Count (Fields): 10
    public:

        struct FVector Value; // 0x8
        enum class EAxis Axis; // 0x14
        enum class EControlRigClampSpatialMode Type; // 0x15
        float Minimum; // 0x18
        float Maximum; // 0x1c
        struct FTransform Space; // 0x20
        bool bDrawDebug; // 0x50
        struct FLinearColor DebugColor; // 0x54
        float DebugThickness; // 0x64
        struct FVector Result; // 0x68

    };

    struct FRigUnit_MathVectorMakeBezierFourPoint : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorMakeBezierFourPoint
    {
    //Children Prop Count (Fields): 1
    public:

        struct FCRFourPointBezier Bezier; // 0x8

    };

    struct FRigUnit_MathVectorBezierFourPoint : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorBezierFourPoint
    {
    //Children Prop Count (Fields): 4
    public:

        struct FCRFourPointBezier Bezier; // 0x8
        float T; // 0x38
        struct FVector Result; // 0x3c
        struct FVector Tangent; // 0x48

    };

    struct FRigUnit_MathVectorOrthogonal : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorOrthogonal
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        bool Result; // 0x20

    };

    struct FRigUnit_MathVectorParallel : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorParallel
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        bool Result; // 0x20

    };

    struct FRigUnit_MathVectorAngle : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        float Result; // 0x20

    };

    struct FRigUnit_MathVectorMirror : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorMirror
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Value; // 0x8
        struct FVector Normal; // 0x14
        struct FVector Result; // 0x20

    };

    struct FRigUnit_MathVectorClampLength : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorClampLength
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Value; // 0x8
        float MinimumLength; // 0x14
        float MaximumLength; // 0x18
        struct FVector Result; // 0x1c

    };

    struct FRigUnit_MathVectorSetLength : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorSetLength
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Value; // 0x8
        float Length; // 0x14
        struct FVector Result; // 0x18

    };

    struct FRigUnit_MathVectorUnaryOp : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorUnaryOp
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Value; // 0x8
        struct FVector Result; // 0x14

    };

    struct FRigUnit_MathVectorUnit : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorUnit
    {
    public:


    };

    struct FRigUnit_MathVectorDot : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorDot
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        float Result; // 0x20

    };

    struct FRigUnit_MathVectorBinaryOp : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorBinaryOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        struct FVector Result; // 0x20

    };

    struct FRigUnit_MathVectorCross : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorCross
    {
    public:


    };

    struct FRigUnit_MathVectorDistance : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorDistance
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        float Result; // 0x20

    };

    struct FRigUnit_MathVectorLength : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorLength
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Value; // 0x8
        float Result; // 0x14

    };

    struct FRigUnit_MathVectorLengthSquared : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorLengthSquared
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Value; // 0x8
        float Result; // 0x14

    };

    struct FRigUnit_MathVectorRad : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorRad
    {
    public:


    };

    struct FRigUnit_MathVectorDeg : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorDeg
    {
    public:


    };

    struct FRigUnit_MathVectorSelectBool : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorSelectBool
    {
    //Children Prop Count (Fields): 4
    public:

        bool Condition; // 0x8
        struct FVector IfTrue; // 0xc
        struct FVector IfFalse; // 0x18
        struct FVector Result; // 0x24

    };

    struct FRigUnit_MathVectorIsNearlyEqual : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorIsNearlyEqual
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        float Tolerance; // 0x20
        bool Result; // 0x24

    };

    struct FRigUnit_MathVectorIsNearlyZero : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorIsNearlyZero
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Value; // 0x8
        float Tolerance; // 0x14
        bool Result; // 0x18

    };

    struct FRigUnit_MathVectorNotEquals : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorNotEquals
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        bool Result; // 0x20

    };

    struct FRigUnit_MathVectorEquals : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorEquals
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        bool Result; // 0x20

    };

    struct FRigUnit_MathVectorRemap : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorRemap
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Value; // 0x8
        struct FVector SourceMinimum; // 0x14
        struct FVector SourceMaximum; // 0x20
        struct FVector TargetMinimum; // 0x2c
        struct FVector TargetMaximum; // 0x38
        bool bClamp; // 0x44
        struct FVector Result; // 0x48

    };

    struct FRigUnit_MathVectorLerp : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorLerp
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector A; // 0x8
        struct FVector B; // 0x14
        float T; // 0x20
        struct FVector Result; // 0x24

    };

    struct FRigUnit_MathVectorClamp : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorClamp
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Value; // 0x8
        struct FVector Minimum; // 0x14
        struct FVector Maximum; // 0x20
        struct FVector Result; // 0x2c

    };

    struct FRigUnit_MathVectorSign : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorSign
    {
    public:


    };

    struct FRigUnit_MathVectorRound : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorRound
    {
    public:


    };

    struct FRigUnit_MathVectorCeil : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorCeil
    {
    public:


    };

    struct FRigUnit_MathVectorFloor : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorFloor
    {
    public:


    };

    struct FRigUnit_MathVectorAbs : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorAbs
    {
    public:


    };

    struct FRigUnit_MathVectorNegate : FRigUnit_MathVectorUnaryOp //ScriptStruct ControlRig.RigUnit_MathVectorNegate
    {
    public:


    };

    struct FRigUnit_MathVectorMax : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorMax
    {
    public:


    };

    struct FRigUnit_MathVectorMin : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorMin
    {
    public:


    };

    struct FRigUnit_MathVectorMod : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorMod
    {
    public:


    };

    struct FRigUnit_MathVectorDiv : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorDiv
    {
    public:


    };

    struct FRigUnit_MathVectorScale : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorScale
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Value; // 0x8
        float Factor; // 0x14
        struct FVector Result; // 0x18

    };

    struct FRigUnit_MathVectorMul : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorMul
    {
    public:


    };

    struct FRigUnit_MathVectorSub : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorSub
    {
    public:


    };

    struct FRigUnit_MathVectorAdd : FRigUnit_MathVectorBinaryOp //ScriptStruct ControlRig.RigUnit_MathVectorAdd
    {
    public:


    };

    struct FRigUnit_MathVectorFromFloat : FRigUnit_MathVectorBase //ScriptStruct ControlRig.RigUnit_MathVectorFromFloat
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x8
        struct FVector Result; // 0xc

    };

    struct FRigUnit_ModifyBoneTransforms : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_ModifyBoneTransforms
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FRigUnit_ModifyBoneTransforms_PerBone> BoneToModify; // 0x68
        float weight; // 0x78
        float WeightMinimum; // 0x7c
        float WeightMaximum; // 0x80
        enum class EControlRigModifyBoneMode Mode; // 0x84
        struct FRigUnit_ModifyBoneTransforms_WorkData WorkData; // 0x88

    };

    struct FRigUnit_ModifyTransforms_WorkData //ScriptStruct ControlRig.RigUnit_ModifyTransforms_WorkData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FCachedRigElement> CachedItems; // 0x0

    };

    struct FRigUnit_ModifyBoneTransforms_WorkData : FRigUnit_ModifyTransforms_WorkData //ScriptStruct ControlRig.RigUnit_ModifyBoneTransforms_WorkData
    {
    public:


    };

    struct FRigUnit_ModifyBoneTransforms_PerBone //ScriptStruct ControlRig.RigUnit_ModifyBoneTransforms_PerBone
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Bone; // 0x0
        struct FTransform Transform; // 0x10

    };

    struct FRigUnit_ModifyTransforms : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_ModifyTransforms
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FRigUnit_ModifyTransforms_PerItem> ItemToModify; // 0x68
        float weight; // 0x78
        float WeightMinimum; // 0x7c
        float WeightMaximum; // 0x80
        enum class EControlRigModifyBoneMode Mode; // 0x84
        struct FRigUnit_ModifyTransforms_WorkData WorkData; // 0x88

    };

    struct FRigUnit_ModifyTransforms_PerItem //ScriptStruct ControlRig.RigUnit_ModifyTransforms_PerItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRigElementKey Item; // 0x0
        struct FTransform Transform; // 0x10

    };

    struct FRigUnit_MultiFABRIK : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_MultiFABRIK
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName RootBone; // 0x68
        struct TArray<struct FRigUnit_MultiFABRIK_EndEffector> Effectors; // 0x70
        float Precision; // 0x80
        bool bPropagateToChildren; // 0x84
        int32_t MaxIterations; // 0x88
        struct FRigUnit_MultiFABRIK_WorkData WorkData; // 0x90

    };

    struct FRigUnit_MultiFABRIK_WorkData //ScriptStruct ControlRig.RigUnit_MultiFABRIK_WorkData
    {
    public:


    };

    struct FRigUnit_MultiFABRIK_EndEffector //ScriptStruct ControlRig.RigUnit_MultiFABRIK_EndEffector
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Bone; // 0x0
        struct FVector Location; // 0x8

    };

    struct FRigUnit_NameBase : FRigUnit //ScriptStruct ControlRig.RigUnit_NameBase
    {
    public:


    };

    struct FRigUnit_Contains : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_Contains
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x8
        struct FName Search; // 0x10
        bool Result; // 0x18

    };

    struct FRigUnit_StartsWith : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_StartsWith
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x8
        struct FName Start; // 0x10
        bool Result; // 0x18

    };

    struct FRigUnit_EndsWith : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_EndsWith
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x8
        struct FName Ending; // 0x10
        bool Result; // 0x18

    };

    struct FRigUnit_NameReplace : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_NameReplace
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Name; // 0x8
        struct FName Old; // 0x10
        struct FName New; // 0x18
        struct FName Result; // 0x20

    };

    struct FRigUnit_NameTruncate : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_NameTruncate
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x8
        int32_t Count; // 0x10
        bool FromEnd; // 0x14
        struct FName Remainder; // 0x18
        struct FName Chopped; // 0x20

    };

    struct FRigUnit_NameConcat : FRigUnit_NameBase //ScriptStruct ControlRig.RigUnit_NameConcat
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName A; // 0x8
        struct FName B; // 0x10
        struct FName Result; // 0x18

    };

    struct FRigUnit_NoiseVector : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_NoiseVector
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Position; // 0x8
        struct FVector Speed; // 0x14
        struct FVector Frequency; // 0x20
        float Minimum; // 0x2c
        float Maximum; // 0x30
        struct FVector Result; // 0x34
        struct FVector Time; // 0x40

    };

    struct FRigUnit_NoiseFloat : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_NoiseFloat
    {
    //Children Prop Count (Fields): 7
    public:

        float Value; // 0x8
        float Speed; // 0xc
        float Frequency; // 0x10
        float Minimum; // 0x14
        float Maximum; // 0x18
        float Result; // 0x1c
        float Time; // 0x20

    };

    struct FRigUnit_OffsetTransformForItem : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_OffsetTransformForItem
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigElementKey Item; // 0x68
        struct FTransform OffsetTransform; // 0x80
        float weight; // 0xb0
        bool bPropagateToChildren; // 0xb4
        struct FCachedRigElement CachedIndex; // 0xb8

    };

    struct FRigUnit_ParentSwitchConstraint : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_ParentSwitchConstraint
    {
    //Children Prop Count (Fields): 10
    public:

        struct FRigElementKey Subject; // 0x68
        int32_t ParentIndex; // 0x74
        struct FRigElementKeyCollection Parents; // 0x78
        struct FTransform InitialGlobalTransform; // 0x90
        float weight; // 0xc0
        struct FTransform Transform; // 0xd0
        bool Switched; // 0x100
        struct FCachedRigElement CachedSubject; // 0x104
        struct FCachedRigElement CachedParent; // 0x118
        struct FTransform RelativeOffset; // 0x130

    };

    struct FRigUnit_SimBaseMutable : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SimBaseMutable
    {
    public:


    };

    struct FRigUnit_PointSimulation : FRigUnit_SimBaseMutable //ScriptStruct ControlRig.RigUnit_PointSimulation
    {
    //Children Prop Count (Fields): 15
    public:

        struct TArray<struct FCRSimPoint> Points; // 0x68
        struct TArray<struct FCRSimLinearSpring> Links; // 0x78
        struct TArray<struct FCRSimPointForce> Forces; // 0x88
        struct TArray<struct FCRSimSoftCollision> CollisionVolumes; // 0x98
        float SimulatedStepsPerSecond; // 0xa8
        enum class ECRSimPointIntegrateType IntegratorType; // 0xac
        float VerletBlend; // 0xb0
        struct TArray<struct FRigUnit_PointSimulation_BoneTarget> BoneTargets; // 0xb8
        bool bLimitLocalPosition; // 0xc8
        bool bPropagateToChildren; // 0xc9
        struct FVector PrimaryAimAxis; // 0xcc
        struct FVector SecondaryAimAxis; // 0xd8
        struct FRigUnit_PointSimulation_DebugSettings DebugSettings; // 0xf0
        struct FCRFourPointBezier Bezier; // 0x140
        struct FRigUnit_PointSimulation_WorkData WorkData; // 0x170

    };

    struct FRigUnit_PointSimulation_WorkData //ScriptStruct ControlRig.RigUnit_PointSimulation_WorkData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FCRSimPointContainer Simulation; // 0x0
        struct TArray<struct FCachedRigElement> BoneIndices; // 0x78

    };

    struct FRigUnit_PointSimulation_DebugSettings //ScriptStruct ControlRig.RigUnit_PointSimulation_DebugSettings
    {
    //Children Prop Count (Fields): 6
    public:

        bool bEnabled; // 0x0
        float Scale; // 0x4
        float CollisionScale; // 0x8
        bool bDrawPointsAsSpheres; // 0xc
        struct FLinearColor Color; // 0x10
        struct FTransform WorldOffset; // 0x20

    };

    struct FRigUnit_PointSimulation_BoneTarget //ScriptStruct ControlRig.RigUnit_PointSimulation_BoneTarget
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Bone; // 0x0
        int32_t TranslationPoint; // 0x8
        int32_t PrimaryAimPoint; // 0xc
        int32_t SecondaryAimPoint; // 0x10

    };

    struct FRigUnit_PrepareForExecution : FRigUnit //ScriptStruct ControlRig.RigUnit_PrepareForExecution
    {
    //Children Prop Count (Fields): 1
    public:

        struct FControlRigExecuteContext ExecuteContext; // 0x8

    };

    struct FRigUnit_EndProfilingTimer : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_EndProfilingTimer
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t NumberOfMeasurements; // 0x68
        struct FString Prefix; // 0x70
        float AccumulatedTime; // 0x80
        int32_t MeasurementsLeft; // 0x84

    };

    struct FRigUnit_StartProfilingTimer : FRigUnit_DebugBaseMutable //ScriptStruct ControlRig.RigUnit_StartProfilingTimer
    {
    public:


    };

    struct FRigUnit_ProjectTransformToNewParent : FRigUnit //ScriptStruct ControlRig.RigUnit_ProjectTransformToNewParent
    {
    //Children Prop Count (Fields): 10
    public:

        struct FRigElementKey Child; // 0x8
        bool bChildInitial; // 0x14
        struct FRigElementKey OldParent; // 0x18
        bool bOldParentInitial; // 0x24
        struct FRigElementKey NewParent; // 0x28
        bool bNewParentInitial; // 0x34
        struct FTransform Transform; // 0x40
        struct FCachedRigElement CachedChild; // 0x70
        struct FCachedRigElement CachedOldParent; // 0x84
        struct FCachedRigElement CachedNewParent; // 0x98

    };

    struct FRigUnit_PropagateTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_PropagateTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FRigElementKey Item; // 0x68
        bool bRecomputeGlobal; // 0x74
        bool bApplyToChildren; // 0x75
        bool bRecursive; // 0x76
        struct FCachedRigElement CachedIndex; // 0x78

    };

    struct FRigUnit_QuaternionToAngle : FRigUnit //ScriptStruct ControlRig.RigUnit_QuaternionToAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Axis; // 0x8
        struct FQuat Argument; // 0x20
        float Angle; // 0x30

    };

    struct FRigUnit_QuaternionFromAxisAndAngle : FRigUnit //ScriptStruct ControlRig.RigUnit_QuaternionFromAxisAndAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Axis; // 0x8
        float Angle; // 0x14
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_QuaternionToAxisAndAngle : FRigUnit //ScriptStruct ControlRig.RigUnit_QuaternionToAxisAndAngle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Argument; // 0x10
        struct FVector Axis; // 0x20
        float Angle; // 0x2c

    };

    struct FRigUnit_UnaryQuaternionOp : FRigUnit //ScriptStruct ControlRig.RigUnit_UnaryQuaternionOp
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Argument; // 0x10
        struct FQuat Result; // 0x20

    };

    struct FRigUnit_InverseQuaterion : FRigUnit_UnaryQuaternionOp //ScriptStruct ControlRig.RigUnit_InverseQuaterion
    {
    public:


    };

    struct FRigUnit_BinaryQuaternionOp : FRigUnit //ScriptStruct ControlRig.RigUnit_BinaryQuaternionOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FQuat Argument0; // 0x10
        struct FQuat Argument1; // 0x20
        struct FQuat Result; // 0x30

    };

    struct FRigUnit_MultiplyQuaternion : FRigUnit_BinaryQuaternionOp //ScriptStruct ControlRig.RigUnit_MultiplyQuaternion
    {
    public:


    };

    struct FRigUnit_RandomVector : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_RandomVector
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t Seed; // 0x8
        float Minimum; // 0xc
        float Maximum; // 0x10
        float Duration; // 0x14
        struct FVector Result; // 0x18
        struct FVector LastResult; // 0x24
        int32_t LastSeed; // 0x30
        float timeLeft; // 0x34

    };

    struct FRigUnit_RandomFloat : FRigUnit_MathBase //ScriptStruct ControlRig.RigUnit_RandomFloat
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t Seed; // 0x8
        float Minimum; // 0xc
        float Maximum; // 0x10
        float Duration; // 0x14
        float Result; // 0x18
        float LastResult; // 0x1c
        int32_t LastSeed; // 0x20
        float timeLeft; // 0x24

    };

    struct FRigUnit_SendEvent : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SendEvent
    {
    //Children Prop Count (Fields): 5
    public:

        enum class ERigEvent Event; // 0x68
        struct FRigElementKey Item; // 0x6c
        float OffsetInSeconds; // 0x78
        bool bEnable; // 0x7c
        bool bOnlyDuringInteraction; // 0x7d

    };

    struct FRigUnit_SequenceExecution : FRigUnit //ScriptStruct ControlRig.RigUnit_SequenceExecution
    {
    //Children Prop Count (Fields): 5
    public:

        struct FControlRigExecuteContext ExecuteContext; // 0x8
        struct FControlRigExecuteContext A; // 0x68
        struct FControlRigExecuteContext B; // 0xc8
        struct FControlRigExecuteContext C; // 0x128
        struct FControlRigExecuteContext D; // 0x188

    };

    struct FRigUnit_SetBoneInitialTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetBoneInitialTransform
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Bone; // 0x68
        struct FTransform Transform; // 0x70
        struct FTransform Result; // 0xa0
        enum class EBoneGetterSetterMode Space; // 0xd0
        bool bPropagateToChildren; // 0xd1
        struct FCachedRigElement CachedBone; // 0xd4

    };

    struct FRigUnit_SetBoneRotation : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetBoneRotation
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Bone; // 0x68
        struct FQuat Rotation; // 0x70
        enum class EBoneGetterSetterMode Space; // 0x80
        float weight; // 0x84
        bool bPropagateToChildren; // 0x88
        struct FCachedRigElement CachedBone; // 0x8c

    };

    struct FRigUnit_SetBoneTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetBoneTransform
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName Bone; // 0x68
        struct FTransform Transform; // 0x70
        struct FTransform Result; // 0xa0
        enum class EBoneGetterSetterMode Space; // 0xd0
        float weight; // 0xd4
        bool bPropagateToChildren; // 0xd8
        struct FCachedRigElement CachedBone; // 0xdc

    };

    struct FRigUnit_SetBoneTranslation : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetBoneTranslation
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Bone; // 0x68
        struct FVector Translation; // 0x70
        enum class EBoneGetterSetterMode Space; // 0x7c
        float weight; // 0x80
        bool bPropagateToChildren; // 0x84
        struct FCachedRigElement CachedBone; // 0x88

    };

    struct FRigUnit_SetControlColor : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlColor
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Control; // 0x68
        struct FLinearColor Color; // 0x70
        struct FCachedRigElement CachedControlIndex; // 0x80

    };

    struct FRigUnit_SetControlOffset : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlOffset
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Control; // 0x68
        struct FTransform Offset; // 0x70
        enum class EBoneGetterSetterMode Space; // 0xa0
        struct FCachedRigElement CachedControlIndex; // 0xa4

    };

    struct FRigUnit_SetControlTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x68
        float weight; // 0x70
        struct FTransform Transform; // 0x80
        enum class EBoneGetterSetterMode Space; // 0xb0
        struct FCachedRigElement CachedControlIndex; // 0xb4

    };

    struct FRigUnit_SetMultiControlRotator : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetMultiControlRotator
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigUnit_SetMultiControlRotator_Entry> entries; // 0x68
        float weight; // 0x78
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x80

    };

    struct FRigUnit_SetMultiControlRotator_Entry //ScriptStruct ControlRig.RigUnit_SetMultiControlRotator_Entry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Control; // 0x0
        struct FRotator Rotator; // 0x8
        enum class EBoneGetterSetterMode Space; // 0x14

    };

    struct FRigUnit_SetControlRotator : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlRotator
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x68
        float weight; // 0x70
        struct FRotator Rotator; // 0x74
        enum class EBoneGetterSetterMode Space; // 0x80
        struct FCachedRigElement CachedControlIndex; // 0x84

    };

    struct FRigUnit_SetControlVector : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlVector
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Control; // 0x68
        float weight; // 0x70
        struct FVector Vector; // 0x74
        enum class EBoneGetterSetterMode Space; // 0x80
        struct FCachedRigElement CachedControlIndex; // 0x84

    };

    struct FRigUnit_SetMultiControlVector2D : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetMultiControlVector2D
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigUnit_SetMultiControlVector2D_Entry> entries; // 0x68
        float weight; // 0x78
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x80

    };

    struct FRigUnit_SetMultiControlVector2D_Entry //ScriptStruct ControlRig.RigUnit_SetMultiControlVector2D_Entry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Control; // 0x0
        struct FVector2D Vector; // 0x8

    };

    struct FRigUnit_SetControlVector2D : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlVector2D
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Control; // 0x68
        float weight; // 0x70
        struct FVector2D Vector; // 0x74
        struct FCachedRigElement CachedControlIndex; // 0x7c

    };

    struct FRigUnit_SetMultiControlInteger : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetMultiControlInteger
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigUnit_SetMultiControlInteger_Entry> entries; // 0x68
        float weight; // 0x78
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x80

    };

    struct FRigUnit_SetMultiControlInteger_Entry //ScriptStruct ControlRig.RigUnit_SetMultiControlInteger_Entry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Control; // 0x0
        int32_t IntegerValue; // 0x8

    };

    struct FRigUnit_SetControlInteger : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlInteger
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Control; // 0x68
        int32_t weight; // 0x70
        int32_t IntegerValue; // 0x74
        struct FCachedRigElement CachedControlIndex; // 0x78

    };

    struct FRigUnit_SetMultiControlFloat : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetMultiControlFloat
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FRigUnit_SetMultiControlFloat_Entry> entries; // 0x68
        float weight; // 0x78
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x80

    };

    struct FRigUnit_SetMultiControlFloat_Entry //ScriptStruct ControlRig.RigUnit_SetMultiControlFloat_Entry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Control; // 0x0
        float FloatValue; // 0x8

    };

    struct FRigUnit_SetControlFloat : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlFloat
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName Control; // 0x68
        float weight; // 0x70
        float FloatValue; // 0x74
        struct FCachedRigElement CachedControlIndex; // 0x78

    };

    struct FRigUnit_SetMultiControlBool : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetMultiControlBool
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FRigUnit_SetMultiControlBool_Entry> entries; // 0x68
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x78

    };

    struct FRigUnit_SetMultiControlBool_Entry //ScriptStruct ControlRig.RigUnit_SetMultiControlBool_Entry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Control; // 0x0
        bool BoolValue; // 0x8

    };

    struct FRigUnit_SetControlBool : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlBool
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Control; // 0x68
        bool BoolValue; // 0x70
        struct FCachedRigElement CachedControlIndex; // 0x74

    };

    struct FRigUnit_SetControlVisibility : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetControlVisibility
    {
    //Children Prop Count (Fields): 4
    public:

        struct FRigElementKey Item; // 0x68
        struct FString Pattern; // 0x78
        bool bVisible; // 0x88
        struct TArray<struct FCachedRigElement> CachedControlIndices; // 0x90

    };

    struct FRigUnit_SetCurveValue : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetCurveValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Curve; // 0x68
        float Value; // 0x70
        struct FCachedRigElement CachedCurveIndex; // 0x74

    };

    struct FRigUnit_SetRelativeBoneTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetRelativeBoneTransform
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName Bone; // 0x68
        struct FName Space; // 0x70
        struct FTransform Transform; // 0x80
        float weight; // 0xb0
        bool bPropagateToChildren; // 0xb4
        struct FCachedRigElement CachedBone; // 0xb8
        struct FCachedRigElement CachedSpaceIndex; // 0xcc

    };

    struct FRigUnit_SetRelativeTransformForItem : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetRelativeTransformForItem
    {
    //Children Prop Count (Fields): 8
    public:

        struct FRigElementKey Child; // 0x68
        struct FRigElementKey Parent; // 0x74
        bool bParentInitial; // 0x80
        struct FTransform RelativeTransform; // 0x90
        float weight; // 0xc0
        bool bPropagateToChildren; // 0xc4
        struct FCachedRigElement CachedChild; // 0xc8
        struct FCachedRigElement CachedParent; // 0xdc

    };

    struct FRigUnit_SetSpaceInitialTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetSpaceInitialTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName SpaceName; // 0x68
        struct FTransform Transform; // 0x70
        struct FTransform Result; // 0xa0
        enum class EBoneGetterSetterMode Space; // 0xd0
        struct FCachedRigElement CachedSpaceIndex; // 0xd4

    };

    struct FRigUnit_SetSpaceTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetSpaceTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Space; // 0x68
        float weight; // 0x70
        struct FTransform Transform; // 0x80
        enum class EBoneGetterSetterMode SpaceType; // 0xb0
        struct FCachedRigElement CachedSpaceIndex; // 0xb4

    };

    struct FRigUnit_SetScale : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetScale
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey Item; // 0x68
        enum class EBoneGetterSetterMode Space; // 0x74
        struct FVector Scale; // 0x78
        float weight; // 0x84
        bool bPropagateToChildren; // 0x88
        struct FCachedRigElement CachedIndex; // 0x8c

    };

    struct FRigUnit_SetRotation : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetRotation
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey Item; // 0x68
        enum class EBoneGetterSetterMode Space; // 0x74
        struct FQuat Rotation; // 0x80
        float weight; // 0x90
        bool bPropagateToChildren; // 0x94
        struct FCachedRigElement CachedIndex; // 0x98

    };

    struct FRigUnit_SetTranslation : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetTranslation
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRigElementKey Item; // 0x68
        enum class EBoneGetterSetterMode Space; // 0x74
        struct FVector Translation; // 0x78
        float weight; // 0x84
        bool bPropagateToChildren; // 0x88
        struct FCachedRigElement CachedIndex; // 0x8c

    };

    struct FRigUnit_SetTransform : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_SetTransform
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKey Item; // 0x68
        enum class EBoneGetterSetterMode Space; // 0x74
        bool bInitial; // 0x75
        struct FTransform Transform; // 0x80
        float weight; // 0xb0
        bool bPropagateToChildren; // 0xb4
        struct FCachedRigElement CachedIndex; // 0xb8

    };

    struct FRigUnit_SlideChainPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_SlideChainPerItem
    {
    //Children Prop Count (Fields): 4
    public:

        struct FRigElementKeyCollection Items; // 0x68
        float SlideAmount; // 0x78
        bool bPropagateToChildren; // 0x7c
        struct FRigUnit_SlideChain_WorkData WorkData; // 0x80

    };

    struct FRigUnit_SlideChain_WorkData //ScriptStruct ControlRig.RigUnit_SlideChain_WorkData
    {
    //Children Prop Count (Fields): 5
    public:

        float ChainLength; // 0x0
        struct TArray<float> ItemSegments; // 0x8
        struct TArray<struct FCachedRigElement> CachedItems; // 0x18
        struct TArray<struct FTransform> Transforms; // 0x28
        struct TArray<struct FTransform> BlendedTransforms; // 0x38

    };

    struct FRigUnit_SlideChain : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_SlideChain
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName StartBone; // 0x68
        struct FName EndBone; // 0x70
        float SlideAmount; // 0x78
        bool bPropagateToChildren; // 0x7c
        struct FRigUnit_SlideChain_WorkData WorkData; // 0x80

    };

    struct FRigUnit_SpringIK : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_SpringIK
    {
    //Children Prop Count (Fields): 20
    public:

        struct FName StartBone; // 0x68
        struct FName EndBone; // 0x70
        float HierarchyStrength; // 0x78
        float EffectorStrength; // 0x7c
        float EffectorRatio; // 0x80
        float RootStrength; // 0x84
        float RootRatio; // 0x88
        float Damping; // 0x8c
        struct FVector PoleVector; // 0x90
        bool bFlipPolePlane; // 0x9c
        enum class EControlRigVectorKind PoleVectorKind; // 0x9d
        struct FName PoleVectorSpace; // 0xa0
        struct FVector PrimaryAxis; // 0xa8
        struct FVector SecondaryAxis; // 0xb4
        bool bLiveSimulation; // 0xc0
        int32_t Iterations; // 0xc4
        bool bLimitLocalPosition; // 0xc8
        bool bPropagateToChildren; // 0xc9
        struct FRigUnit_SpringIK_DebugSettings DebugSettings; // 0xd0
        struct FRigUnit_SpringIK_WorkData WorkData; // 0x120

    };

    struct FRigUnit_SpringIK_WorkData //ScriptStruct ControlRig.RigUnit_SpringIK_WorkData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FCachedRigElement> CachedBones; // 0x0
        struct FCachedRigElement CachedPoleVector; // 0x10
        struct TArray<struct FTransform> Transforms; // 0x28
        struct FCRSimPointContainer Simulation; // 0x38

    };

    struct FRigUnit_SpringIK_DebugSettings //ScriptStruct ControlRig.RigUnit_SpringIK_DebugSettings
    {
    //Children Prop Count (Fields): 4
    public:

        bool bEnabled; // 0x0
        float Scale; // 0x4
        struct FLinearColor Color; // 0x8
        struct FTransform WorldOffset; // 0x20

    };

    struct FRigUnit_SecondsToFrames : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_SecondsToFrames
    {
    //Children Prop Count (Fields): 2
    public:

        float Seconds; // 0x8
        float Frames; // 0xc

    };

    struct FRigUnit_FramesToSeconds : FRigUnit_AnimBase //ScriptStruct ControlRig.RigUnit_FramesToSeconds
    {
    //Children Prop Count (Fields): 2
    public:

        float Frames; // 0x8
        float Seconds; // 0xc

    };

    struct FRigUnit_Timeline : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_Timeline
    {
    //Children Prop Count (Fields): 3
    public:

        float Speed; // 0x8
        float Time; // 0xc
        float AccumulatedValue; // 0x10

    };

    struct FRigUnit_TimeOffsetTransform : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_TimeOffsetTransform
    {
    //Children Prop Count (Fields): 9
    public:

        struct FTransform Value; // 0x10
        float SecondsAgo; // 0x40
        int32_t BufferSize; // 0x44
        float TimeRange; // 0x48
        struct FTransform Result; // 0x50
        struct TArray<struct FTransform> Buffer; // 0x80
        struct TArray<float> DeltaTimes; // 0x90
        int32_t LastInsertIndex; // 0xa0
        int32_t UpperBound; // 0xa4

    };

    struct FRigUnit_TimeOffsetVector : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_TimeOffsetVector
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector Value; // 0x8
        float SecondsAgo; // 0x14
        int32_t BufferSize; // 0x18
        float TimeRange; // 0x1c
        struct FVector Result; // 0x20
        struct TArray<struct FVector> Buffer; // 0x30
        struct TArray<float> DeltaTimes; // 0x40
        int32_t LastInsertIndex; // 0x50
        int32_t UpperBound; // 0x54

    };

    struct FRigUnit_TimeOffsetFloat : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_TimeOffsetFloat
    {
    //Children Prop Count (Fields): 9
    public:

        float Value; // 0x8
        float SecondsAgo; // 0xc
        int32_t BufferSize; // 0x10
        float TimeRange; // 0x14
        float Result; // 0x18
        struct TArray<float> Buffer; // 0x20
        struct TArray<float> DeltaTimes; // 0x30
        int32_t LastInsertIndex; // 0x40
        int32_t UpperBound; // 0x44

    };

    struct FRigUnit_BinaryTransformOp : FRigUnit //ScriptStruct ControlRig.RigUnit_BinaryTransformOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Argument0; // 0x10
        struct FTransform Argument1; // 0x40
        struct FTransform Result; // 0x70

    };

    struct FRigUnit_GetRelativeTransform : FRigUnit_BinaryTransformOp //ScriptStruct ControlRig.RigUnit_GetRelativeTransform
    {
    public:


    };

    struct FRigUnit_MultiplyTransform : FRigUnit_BinaryTransformOp //ScriptStruct ControlRig.RigUnit_MultiplyTransform
    {
    public:


    };

    struct FRigUnit_TransformConstraintPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TransformConstraintPerItem
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKey Item; // 0x68
        enum class ETransformSpaceMode BaseTransformSpace; // 0x74
        struct FTransform BaseTransform; // 0x80
        struct FRigElementKey BaseItem; // 0xb0
        struct TArray<struct FConstraintTarget> Targets; // 0xc0
        bool bUseInitialTransforms; // 0xd0
        struct FRigUnit_TransformConstraint_WorkData WorkData; // 0xd8

    };

    struct FRigUnit_TransformConstraint_WorkData //ScriptStruct ControlRig.RigUnit_TransformConstraint_WorkData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FConstraintData> ConstraintData; // 0x0
        struct TMap<int32_t, int32_t> ConstraintDataToTargets; // 0x10

    };

    struct FConstraintTarget //ScriptStruct ControlRig.ConstraintTarget
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTransform Transform; // 0x0
        float weight; // 0x30
        bool bMaintainOffset; // 0x34
        struct FTransformFilter Filter; // 0x35

    };

    struct FRigUnit_TransformConstraint : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TransformConstraint
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName Bone; // 0x68
        enum class ETransformSpaceMode BaseTransformSpace; // 0x70
        struct FTransform BaseTransform; // 0x80
        struct FName BaseBone; // 0xb0
        struct TArray<struct FConstraintTarget> Targets; // 0xb8
        bool bUseInitialTransforms; // 0xc8
        struct FRigUnit_TransformConstraint_WorkData WorkData; // 0xd0

    };

    struct FRigUnit_TwistBonesPerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TwistBonesPerItem
    {
    //Children Prop Count (Fields): 7
    public:

        struct FRigElementKeyCollection Items; // 0x68
        struct FVector TwistAxis; // 0x78
        struct FVector PoleAxis; // 0x84
        enum class EControlRigAnimEasingType TwistEaseType; // 0x90
        float weight; // 0x94
        bool bPropagateToChildren; // 0x98
        struct FRigUnit_TwistBones_WorkData WorkData; // 0xa0

    };

    struct FRigUnit_TwistBones_WorkData //ScriptStruct ControlRig.RigUnit_TwistBones_WorkData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FCachedRigElement> CachedItems; // 0x0
        struct TArray<float> ItemRatios; // 0x10
        struct TArray<struct FTransform> ItemTransforms; // 0x20

    };

    struct FRigUnit_TwistBones : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TwistBones
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName StartBone; // 0x68
        struct FName EndBone; // 0x70
        struct FVector TwistAxis; // 0x78
        struct FVector PoleAxis; // 0x84
        enum class EControlRigAnimEasingType TwistEaseType; // 0x90
        float weight; // 0x94
        bool bPropagateToChildren; // 0x98
        struct FRigUnit_TwistBones_WorkData WorkData; // 0xa0

    };

    struct FRigUnit_TwoBoneIKFK : FRigUnitMutable //ScriptStruct ControlRig.RigUnit_TwoBoneIKFK
    {
    //Children Prop Count (Fields): 18
    public:

        struct FName StartJoint; // 0x68
        struct FName EndJoint; // 0x70
        struct FVector PoleTarget; // 0x78
        float Spin; // 0x84
        struct FTransform EndEffector; // 0x90
        float IKBlend; // 0xc0
        struct FTransform StartJointFKTransform; // 0xd0
        struct FTransform MidJointFKTransform; // 0x100
        struct FTransform EndJointFKTransform; // 0x130
        float PreviousFKIKBlend; // 0x160
        struct FTransform StartJointIKTransform; // 0x170
        struct FTransform MidJointIKTransform; // 0x1a0
        struct FTransform EndJointIKTransform; // 0x1d0
        int32_t StartJointIndex; // 0x200
        int32_t MidJointIndex; // 0x204
        int32_t EndJointIndex; // 0x208
        float UpperLimbLength; // 0x20c
        float LowerLimbLength; // 0x210

    };

    struct FRigUnit_TwoBoneIKSimpleTransforms : FRigUnit_HighlevelBase //ScriptStruct ControlRig.RigUnit_TwoBoneIKSimpleTransforms
    {
    //Children Prop Count (Fields): 12
    public:

        struct FTransform Root; // 0x10
        struct FVector PoleVector; // 0x40
        struct FTransform Effector; // 0x50
        struct FVector PrimaryAxis; // 0x80
        struct FVector SecondaryAxis; // 0x8c
        float SecondaryAxisWeight; // 0x98
        bool bEnableStretch; // 0x9c
        float StretchStartRatio; // 0xa0
        float StretchMaximumRatio; // 0xa4
        float BoneALength; // 0xa8
        float BoneBLength; // 0xac
        struct FTransform Elbow; // 0xb0

    };

    struct FRigUnit_TwoBoneIKSimpleVectors : FRigUnit_HighlevelBase //ScriptStruct ControlRig.RigUnit_TwoBoneIKSimpleVectors
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector Root; // 0x8
        struct FVector PoleVector; // 0x14
        struct FVector Effector; // 0x20
        bool bEnableStretch; // 0x2c
        float StretchStartRatio; // 0x30
        float StretchMaximumRatio; // 0x34
        float BoneALength; // 0x38
        float BoneBLength; // 0x3c
        struct FVector Elbow; // 0x40

    };

    struct FRigUnit_TwoBoneIKSimplePerItem : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TwoBoneIKSimplePerItem
    {
    //Children Prop Count (Fields): 22
    public:

        struct FRigElementKey ItemA; // 0x68
        struct FRigElementKey ItemB; // 0x74
        struct FRigElementKey EffectorItem; // 0x80
        struct FTransform Effector; // 0x90
        struct FVector PrimaryAxis; // 0xc0
        struct FVector SecondaryAxis; // 0xcc
        float SecondaryAxisWeight; // 0xd8
        struct FVector PoleVector; // 0xdc
        enum class EControlRigVectorKind PoleVectorKind; // 0xe8
        struct FRigElementKey PoleVectorSpace; // 0xec
        bool bEnableStretch; // 0xf8
        float StretchStartRatio; // 0xfc
        float StretchMaximumRatio; // 0x100
        float weight; // 0x104
        float ItemALength; // 0x108
        float ItemBLength; // 0x10c
        bool bPropagateToChildren; // 0x110
        struct FRigUnit_TwoBoneIKSimple_DebugSettings DebugSettings; // 0x120
        struct FCachedRigElement CachedItemAIndex; // 0x160
        struct FCachedRigElement CachedItemBIndex; // 0x174
        struct FCachedRigElement CachedEffectorItemIndex; // 0x188
        struct FCachedRigElement CachedPoleVectorSpaceIndex; // 0x19c

    };

    struct FRigUnit_TwoBoneIKSimple_DebugSettings //ScriptStruct ControlRig.RigUnit_TwoBoneIKSimple_DebugSettings
    {
    //Children Prop Count (Fields): 3
    public:

        bool bEnabled; // 0x0
        float Scale; // 0x4
        struct FTransform WorldOffset; // 0x10

    };

    struct FRigUnit_TwoBoneIKSimple : FRigUnit_HighlevelBaseMutable //ScriptStruct ControlRig.RigUnit_TwoBoneIKSimple
    {
    //Children Prop Count (Fields): 22
    public:

        struct FName BoneA; // 0x68
        struct FName BoneB; // 0x70
        struct FName EffectorBone; // 0x78
        struct FTransform Effector; // 0x80
        struct FVector PrimaryAxis; // 0xb0
        struct FVector SecondaryAxis; // 0xbc
        float SecondaryAxisWeight; // 0xc8
        struct FVector PoleVector; // 0xcc
        enum class EControlRigVectorKind PoleVectorKind; // 0xd8
        struct FName PoleVectorSpace; // 0xdc
        bool bEnableStretch; // 0xe4
        float StretchStartRatio; // 0xe8
        float StretchMaximumRatio; // 0xec
        float weight; // 0xf0
        float BoneALength; // 0xf4
        float BoneBLength; // 0xf8
        bool bPropagateToChildren; // 0xfc
        struct FRigUnit_TwoBoneIKSimple_DebugSettings DebugSettings; // 0x100
        struct FCachedRigElement CachedBoneAIndex; // 0x140
        struct FCachedRigElement CachedBoneBIndex; // 0x154
        struct FCachedRigElement CachedEffectorBoneIndex; // 0x168
        struct FCachedRigElement CachedPoleVectorSpaceIndex; // 0x17c

    };

    struct FRigUnit_Distance_VectorVector : FRigUnit //ScriptStruct ControlRig.RigUnit_Distance_VectorVector
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Argument0; // 0x8
        struct FVector Argument1; // 0x14
        float Result; // 0x20

    };

    struct FRigUnit_BinaryVectorOp : FRigUnit //ScriptStruct ControlRig.RigUnit_BinaryVectorOp
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Argument0; // 0x8
        struct FVector Argument1; // 0x14
        struct FVector Result; // 0x20

    };

    struct FRigUnit_Divide_VectorVector : FRigUnit_BinaryVectorOp //ScriptStruct ControlRig.RigUnit_Divide_VectorVector
    {
    public:


    };

    struct FRigUnit_Subtract_VectorVector : FRigUnit_BinaryVectorOp //ScriptStruct ControlRig.RigUnit_Subtract_VectorVector
    {
    public:


    };

    struct FRigUnit_Add_VectorVector : FRigUnit_BinaryVectorOp //ScriptStruct ControlRig.RigUnit_Add_VectorVector
    {
    public:


    };

    struct FRigUnit_Multiply_VectorVector : FRigUnit_BinaryVectorOp //ScriptStruct ControlRig.RigUnit_Multiply_VectorVector
    {
    public:


    };

    struct FRigUnit_VerletIntegrateVector : FRigUnit_SimBase //ScriptStruct ControlRig.RigUnit_VerletIntegrateVector
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector Target; // 0x8
        float Strength; // 0x14
        float Damp; // 0x18
        float Blend; // 0x1c
        struct FVector Position; // 0x20
        struct FVector Velocity; // 0x2c
        struct FVector Acceleration; // 0x38
        struct FCRSimPoint Point; // 0x44
        bool bInitialized; // 0x6c

    };

    struct FRigUnit_VisualDebugTransformItemSpace : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugTransformItemSpace
    {
    //Children Prop Count (Fields): 5
    public:

        struct FTransform Value; // 0x10
        bool bEnabled; // 0x40
        float Thickness; // 0x44
        float Scale; // 0x48
        struct FRigElementKey Space; // 0x4c

    };

    struct FRigUnit_VisualDebugTransform : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugTransform
    {
    //Children Prop Count (Fields): 5
    public:

        struct FTransform Value; // 0x10
        bool bEnabled; // 0x40
        float Thickness; // 0x44
        float Scale; // 0x48
        struct FName BoneSpace; // 0x4c

    };

    struct FRigUnit_VisualDebugQuatItemSpace : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugQuatItemSpace
    {
    //Children Prop Count (Fields): 5
    public:

        struct FQuat Value; // 0x10
        bool bEnabled; // 0x20
        float Thickness; // 0x24
        float Scale; // 0x28
        struct FRigElementKey Space; // 0x2c

    };

    struct FRigUnit_VisualDebugQuat : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugQuat
    {
    //Children Prop Count (Fields): 5
    public:

        struct FQuat Value; // 0x10
        bool bEnabled; // 0x20
        float Thickness; // 0x24
        float Scale; // 0x28
        struct FName BoneSpace; // 0x2c

    };

    struct FRigUnit_VisualDebugVectorItemSpace : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugVectorItemSpace
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Value; // 0x8
        bool bEnabled; // 0x14
        enum class ERigUnitVisualDebugPointMode Mode; // 0x15
        struct FLinearColor Color; // 0x18
        float Thickness; // 0x28
        float Scale; // 0x2c
        struct FRigElementKey Space; // 0x30

    };

    struct FRigUnit_VisualDebugVector : FRigUnit_DebugBase //ScriptStruct ControlRig.RigUnit_VisualDebugVector
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Value; // 0x8
        bool bEnabled; // 0x14
        enum class ERigUnitVisualDebugPointMode Mode; // 0x15
        struct FLinearColor Color; // 0x18
        float Thickness; // 0x28
        float Scale; // 0x2c
        struct FName BoneSpace; // 0x30

    };

    struct FRigUnit_SphereTraceWorld : FRigUnit //ScriptStruct ControlRig.RigUnit_SphereTraceWorld
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector Start; // 0x8
        struct FVector End; // 0x14
        enum class ECollisionChannel Channel; // 0x20
        float Radius; // 0x24
        bool bHit; // 0x28
        struct FVector HitLocation; // 0x2c
        struct FVector HitNormal; // 0x38

    };

    struct FRigUnit_ToRigSpace_Rotation : FRigUnit //ScriptStruct ControlRig.RigUnit_ToRigSpace_Rotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Rotation; // 0x10
        struct FQuat Global; // 0x20

    };

    struct FRigUnit_ToWorldSpace_Rotation : FRigUnit //ScriptStruct ControlRig.RigUnit_ToWorldSpace_Rotation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuat Rotation; // 0x10
        struct FQuat World; // 0x20

    };

    struct FRigUnit_ToRigSpace_Location : FRigUnit //ScriptStruct ControlRig.RigUnit_ToRigSpace_Location
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Location; // 0x8
        struct FVector Global; // 0x14

    };

    struct FRigUnit_ToWorldSpace_Location : FRigUnit //ScriptStruct ControlRig.RigUnit_ToWorldSpace_Location
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Location; // 0x8
        struct FVector World; // 0x14

    };

    struct FRigUnit_ToRigSpace_Transform : FRigUnit //ScriptStruct ControlRig.RigUnit_ToRigSpace_Transform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Transform; // 0x10
        struct FTransform Global; // 0x40

    };

    struct FRigUnit_ToWorldSpace_Transform : FRigUnit //ScriptStruct ControlRig.RigUnit_ToWorldSpace_Transform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Transform; // 0x10
        struct FTransform World; // 0x40

    };

    struct FStructReference //ScriptStruct ControlRig.StructReference
    {
    public:


    };

    struct FAnimNode_SkeletalControlBase : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_SkeletalControlBase
    {
    //Children Prop Count (Fields): 10
    public:

        struct FComponentSpacePoseLink ComponentPose; // 0x10
        int32_t LODThreshold; // 0x20
        float ActualAlpha; // 0x24
        enum class EAnimAlphaInputType AlphaInputType; // 0x28
        bool bAlphaBoolEnabled; // 0x29
        float Alpha; // 0x2c
        struct FInputScaleBias AlphaScaleBias; // 0x30
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x38
        struct FName AlphaCurveName; // 0x80
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x88

    };

    struct FComponentSpacePoseLink : FPoseLinkBase //ScriptStruct Engine.ComponentSpacePoseLink
    {
    public:


    };

    struct FAnimNode_PowerIK : FAnimNode_SkeletalControlBase //ScriptStruct PowerIKRuntime.AnimNode_PowerIK
    {
    //Children Prop Count (Fields): 16
    public:

        struct FName CharacterRoot; // 0xc8
        float RootRotationMultiplier; // 0xd0
        struct FPowerIKBodyInertia BodyInertia; // 0xd4
        struct TArray<struct FPowerIKBoneBendDirection> BendDirections; // 0xe8
        struct TArray<struct FPowerIKExcludedBone> ExcludedBones; // 0xf8
        struct TArray<struct FPowerIKBoneLimit> JointLimits; // 0x108
        struct TArray<struct FPowerIKEffector> Effectors; // 0x118
        float SmoothingMaxSpeedMultiplier; // 0x128
        float SmoothingMaxDistanceMultiplier; // 0x12c
        struct FPowerIKCenterOfGravity CenterOfGravityConstraint; // 0x130
        int32_t MaxSquashIterations; // 0x140
        int32_t MaxStretchIterations; // 0x144
        int32_t MaxFinalIterations; // 0x148
        bool AllowBoneTranslation; // 0x14c
        float SolverAlpha; // 0x150
        float DebugDrawSize; // 0x154

    };

    struct FPowerIKCenterOfGravity //ScriptStruct PowerIKRuntime.PowerIKCenterOfGravity
    {
    //Children Prop Count (Fields): 4
    public:

        float Alpha; // 0x0
        float HorizAmount; // 0x4
        float VertAmount; // 0x8
        float PullBodyAmount; // 0xc

    };

    struct FPowerIKEffector //ScriptStruct PowerIKRuntime.PowerIKEffector
    {
    //Children Prop Count (Fields): 17
    public:

        struct FName BoneName; // 0x0
        struct FVector Position; // 0x8
        enum class EEffectorSpaceEnum PositionSpace; // 0x14
        struct FRotator Rotation; // 0x18
        enum class EEffectorSpaceEnum RotationSpace; // 0x24
        float PullWeight; // 0x28
        bool NormalizePulling; // 0x2c
        struct FVector PositivePullFactor; // 0x30
        struct FVector NegativePullFactor; // 0x3c
        bool RotateBone; // 0x48
        bool RotateLimb; // 0x49
        float DeltaSmoothSpeed; // 0x4c
        float AngularDeltaSmoothSpeed; // 0x50
        struct FPowerIKSmoothing Smoothing; // 0x54
        struct FPowerIKPoleVector PoleVector; // 0x6c
        bool AffectsCenterOfGravity; // 0x8c
        float Alpha; // 0x90

    };

    struct FPowerIKPoleVector //ScriptStruct PowerIKRuntime.PowerIKPoleVector
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EPoleVectorModeEnum Mode; // 0x0
        struct FVector Position; // 0x4
        struct FName BoneName; // 0x10
        float AngleOffset; // 0x1c

    };

    struct FPowerIKSmoothing //ScriptStruct PowerIKRuntime.PowerIKSmoothing
    {
    //Children Prop Count (Fields): 6
    public:

        bool SmoothPositionOverTime; // 0x0
        float MaxPositionSpeed; // 0x4
        float MaxPositionDistance; // 0x8
        bool SmoothRotationOverTime; // 0xc
        float MaxDegreesSpeed; // 0x10
        float MaxDegreesDistance; // 0x14

    };

    struct FPowerIKBoneLimit //ScriptStruct PowerIKRuntime.PowerIKBoneLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName BoneName; // 0x0
        float Stiffness; // 0x8

    };

    struct FPowerIKExcludedBone //ScriptStruct PowerIKRuntime.PowerIKExcludedBone
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName BoneName; // 0x0

    };

    struct FPowerIKBoneBendDirection //ScriptStruct PowerIKRuntime.PowerIKBoneBendDirection
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName BoneName; // 0x0
        struct FVector BendDirection; // 0x8

    };

    struct FPowerIKBodyInertia //ScriptStruct PowerIKRuntime.PowerIKBodyInertia
    {
    //Children Prop Count (Fields): 5
    public:

        bool ApplyInertiaToBody; // 0x0
        float SmoothFactor; // 0x4
        bool UseSpring; // 0x8
        float SpringStrength; // 0xc
        float SpringDamping; // 0x10

    };

    struct FAnimNode_PowerIK_Ground : FAnimNode_SkeletalControlBase //ScriptStruct PowerIKRuntime.AnimNode_PowerIK_Ground
    {
    //Children Prop Count (Fields): 16
    public:

        struct FName CharacterRoot; // 0xc8
        struct FPowerIKBodyInertia BodyInertia; // 0xd0
        struct TArray<struct FPowerIKGroundFoot> Feet; // 0xe8
        float FeetDeltaSmoothSpeed; // 0xf8
        float RootRotationMultiplier; // 0xfc
        struct FPowerIKGroundCollision GroundCollision; // 0x100
        struct FPowerIKGroundSlope GroundSlope; // 0x114
        struct TArray<struct FPowerIKBoneBendDirection> BendDirections; // 0x1a8
        struct TArray<struct FPowerIKExcludedBone> ExcludedBones; // 0x1b8
        struct TArray<struct FPowerIKBoneLimit> JointLimits; // 0x1c8
        int32_t MaxSquashIterations; // 0x1e8
        int32_t MaxStretchIterations; // 0x1ec
        int32_t MaxFinalIterations; // 0x1f0
        bool AllowBoneTranslation; // 0x1f4
        float SolverAlpha; // 0x1f8
        float DebugDrawSize; // 0x1fc

    };

    struct FPowerIKGroundSlope //ScriptStruct PowerIKRuntime.PowerIKGroundSlope
    {
    //Children Prop Count (Fields): 33
    public:

        struct FVector StrideDirection; // 0x0
        float MaxGroundAngle; // 0xc
        float MaxNormalAngularSpeed; // 0x10
        bool OrientToGround; // 0x14
        float OrientToPitch; // 0x18
        float OrientToRoll; // 0x1c
        bool ScaleStride; // 0x20
        float UphillStrideScale; // 0x24
        float DownhillStrideScale; // 0x28
        float SidehillStrideScale; // 0x2c
        float SidehillPushOuterFeet; // 0x30
        bool Lean; // 0x34
        float UphillLean; // 0x38
        float DownhillLean; // 0x3c
        float SidehillLean; // 0x40
        bool CounterLean; // 0x44
        struct FName CounterLeanBoneName; // 0x48
        float UphillCounterLean; // 0x54
        float DownhillCounterLean; // 0x58
        float SidehillCounterLean; // 0x5c
        bool MoveRoot; // 0x60
        float UphillVertOffset; // 0x64
        float UphillHorizOffset; // 0x68
        float DownhillVertOffset; // 0x6c
        float DownhillHorizOffset; // 0x70
        float SidehillHorizOffset; // 0x74
        float SidehillVertOffset; // 0x78
        bool RotateFootToGround; // 0x7c
        float PitchFootAmount; // 0x80
        float RollFootAmount; // 0x84
        float FootAngleDeltaSmoothSpeed; // 0x88
        bool OffsetFeetPositions; // 0x8c
        float StaticFootOffset; // 0x90

    };

    struct FPowerIKGroundCollision //ScriptStruct PowerIKRuntime.PowerIKGroundCollision
    {
    //Children Prop Count (Fields): 6
    public:

        enum class ECollisionChannel CollisionChannel; // 0x0
        bool TraceComplex; // 0x1
        float RayCastUp; // 0x4
        float RayCastDown; // 0x8
        bool EnableWallCollision; // 0xc
        float WallOffset; // 0x10

    };

    struct FPowerIKGroundFoot //ScriptStruct PowerIKRuntime.PowerIKGroundFoot
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName BoneName; // 0x0
        float PullWeight; // 0x8
        bool NormalizePulling; // 0xc
        struct FVector PositivePullFactor; // 0x10
        struct FVector NegativePullFactor; // 0x1c

    };

    struct FAnimNode_PowerIK_Walk : FAnimNode_SkeletalControlBase //ScriptStruct PowerIKRuntime.AnimNode_PowerIK_Walk
    {
    //Children Prop Count (Fields): 22
    public:

        struct FName CharacterRoot; // 0xc8
        float RootRotationMultiplier; // 0xd0
        struct FPowerIKBodyInertia BodyInertia; // 0xd4
        struct TArray<struct FPowerIKWalkingLimb> Limbs; // 0xe8
        float StepMaxReachDistance; // 0x104
        float StepDurationMultiplier; // 0x108
        float StepHeightMultiplier; // 0x10c
        class UCurveFloat* StepHeightCurve; // 0x110
        class UCurveFloat* StepSpeedCurve; // 0x118
        float teleportDistance; // 0x120
        bool PrintTeleportWarning; // 0x124
        enum class ECollisionChannel CollisionChannel; // 0x125
        bool TraceComplex; // 0x126
        struct TArray<struct FPowerIKBoneBendDirection> BendDirections; // 0x128
        struct TArray<struct FPowerIKExcludedBone> ExcludedBones; // 0x138
        struct TArray<struct FPowerIKBoneLimit> JointLimits; // 0x148
        int32_t MaxSquashIterations; // 0x158
        int32_t MaxStretchIterations; // 0x15c
        int32_t MaxFinalIterations; // 0x160
        bool AllowBoneTranslation; // 0x164
        float SolverAlpha; // 0x168
        float DebugDrawSize; // 0x16c

    };

    struct FPowerIKWalkingLimb //ScriptStruct PowerIKRuntime.PowerIKWalkingLimb
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName StartBone; // 0x0
        struct FName EndBone; // 0x10
        float LimbMaxLengthMultiplier; // 0x20
        float StepLengthMultiplier; // 0x28
        float StepDuration; // 0x30
        float StepHeight; // 0x38
        struct TArray<int32_t> RelatedLimbs; // 0x40
        float RotateFootToGround; // 0x50
        float FootCollisionRadius; // 0x54

    };

    struct FPlaneConstraint //ScriptStruct PowerIKRuntime.PlaneConstraint
    {
    public:


    };

    struct FPowerIKCore //ScriptStruct PowerIKRuntime.PowerIKCore
    {
    public:


    };

    struct FPowerIKRootData //ScriptStruct PowerIKRuntime.PowerIKRootData
    {
    public:


    };

    struct FPowerIKBoneData //ScriptStruct PowerIKRuntime.PowerIKBoneData
    {
    public:


    };

    struct FPowerIKEffectorData //ScriptStruct PowerIKRuntime.PowerIKEffectorData
    {
    public:


    };

    struct FRigUnit_PowerIK : FRigUnitMutable //ScriptStruct PowerIKRuntime.RigUnit_PowerIK
    {
    //Children Prop Count (Fields): 14
    public:

        struct FName CharacterRoot; // 0x68
        float RootRotationMultiplier; // 0x70
        struct TArray<struct FPowerIKEffector> Effectors; // 0x78
        struct TArray<struct FPowerIKBoneBendDirection> BendDirections; // 0x88
        struct TArray<struct FPowerIKExcludedBone> ExcludedBones; // 0x98
        struct TArray<struct FPowerIKBoneLimit> JointLimits; // 0xa8
        struct FPowerIKCenterOfGravity CenterOfGravityConstraint; // 0xb8
        struct FPowerIKBodyInertia Inertia; // 0xc8
        int32_t MaxSquashIterations; // 0xdc
        int32_t MaxStretchIterations; // 0xe0
        int32_t MaxFinalIterations; // 0xe4
        bool AllowBoneTranslation; // 0xe8
        float SolverAlpha; // 0xec
        struct FPowerIKCore Core; // 0xf0

    };

    struct FConnectionAlwaysRelevantNodePair //ScriptStruct ReplicationGraph.ConnectionAlwaysRelevantNodePair
    {
    //Children Prop Count (Fields): 2
    public:

        class UNetConnection* NetConnection; // 0x0
        class UReplicationGraphNode_AlwaysRelevant_ForConnection* Node; // 0x8

    };

    struct FLastLocationGatherInfo //ScriptStruct ReplicationGraph.LastLocationGatherInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UNetConnection* Connection; // 0x0
        struct FVector LastLocation; // 0x8
        struct FVector LastOutOfRangeLocationCheck; // 0x14

    };

    struct FTearOffActorInfo //ScriptStruct ReplicationGraph.TearOffActorInfo
    {
    //Children Prop Count (Fields): 1
    public:

        class AActor* Actor; // 0x8

    };

    struct FAlwaysRelevantActorInfo //ScriptStruct ReplicationGraph.AlwaysRelevantActorInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UNetConnection* Connection; // 0x0
        class AActor* LastViewer; // 0x8
        class AActor* LastViewTarget; // 0x10

    };

    struct FClassReplicationInfo //ScriptStruct ReplicationGraph.ClassReplicationInfo
    {
    //Children Prop Count (Fields): 8
    public:

        float DistancePriorityScale; // 0x0
        float StarvationPriorityScale; // 0x4
        float AccumulatedNetPriorityBias; // 0x8
        uint16_t ReplicationPeriodFrame; // 0xc
        uint16_t FastPath_ReplicationPeriodFrame; // 0xe
        uint16_t ActorChannelFrameTimeout; // 0x10
        float CullDistance; // 0x68
        float CullDistanceSquared; // 0x6c

    };

    struct FDestructibleChunkParameters //ScriptStruct ApexDestruction.DestructibleChunkParameters
    {
    //Children Prop Count (Fields): 4
    public:

        bool bIsSupportChunk; // 0x0
        bool bDoNotFracture; // 0x1
        bool bDoNotDamage; // 0x2
        bool bDoNotCrumble; // 0x3

    };

    struct FFractureMaterial //ScriptStruct ApexDestruction.FractureMaterial
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector2D UVScale; // 0x0
        struct FVector2D UVOffset; // 0x8
        struct FVector Tangent; // 0x10
        float UAngle; // 0x1c
        int32_t InteriorElementIndex; // 0x20

    };

    struct FDestructibleParameters //ScriptStruct ApexDestruction.DestructibleParameters
    {
    //Children Prop Count (Fields): 6
    public:

        struct FDestructibleDamageParameters DamageParameters; // 0x0
        struct FDestructibleDebrisParameters DebrisParameters; // 0x1c
        struct FDestructibleAdvancedParameters AdvancedParameters; // 0x48
        struct FDestructibleSpecialHierarchyDepths SpecialHierarchyDepths; // 0x58
        struct TArray<struct FDestructibleDepthParameters> DepthParameters; // 0x70
        struct FDestructibleParametersFlag Flags; // 0x80

    };

    struct FDestructibleParametersFlag //ScriptStruct ApexDestruction.DestructibleParametersFlag
    {
    //Children Prop Count (Fields): 9
    public:

        char bAccumulateDamage; // 0x0
        char bAssetDefinedSupport; // 0x0
        char bWorldSupport; // 0x0
        char bDebrisTimeout; // 0x0
        char bDebrisMaxSeparation; // 0x0
        char bCrumbleSmallestChunks; // 0x0
        char bAccurateRaycasts; // 0x0
        char bUseValidBounds; // 0x0
        char bFormExtendedStructures; // 0x1

    };

    struct FDestructibleDepthParameters //ScriptStruct ApexDestruction.DestructibleDepthParameters
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EImpactDamageOverride ImpactDamageOverride; // 0x0

    };

    struct FDestructibleSpecialHierarchyDepths //ScriptStruct ApexDestruction.DestructibleSpecialHierarchyDepths
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t SupportDepth; // 0x0
        int32_t MinimumFractureDepth; // 0x4
        bool bEnableDebris; // 0x8
        int32_t DebrisDepth; // 0xc
        int32_t EssentialDepth; // 0x10

    };

    struct FDestructibleAdvancedParameters //ScriptStruct ApexDestruction.DestructibleAdvancedParameters
    {
    //Children Prop Count (Fields): 4
    public:

        float DamageCap; // 0x0
        float ImpactVelocityThreshold; // 0x4
        float MaxChunkSpeed; // 0x8
        float FractureImpulseScale; // 0xc

    };

    struct FDestructibleDebrisParameters //ScriptStruct ApexDestruction.DestructibleDebrisParameters
    {
    //Children Prop Count (Fields): 5
    public:

        float DebrisLifetimeMin; // 0x0
        float DebrisLifetimeMax; // 0x4
        float DebrisMaxSeparationMin; // 0x8
        float DebrisMaxSeparationMax; // 0xc
        struct FBox ValidBounds; // 0x10

    };

    struct FDestructibleDamageParameters //ScriptStruct ApexDestruction.DestructibleDamageParameters
    {
    //Children Prop Count (Fields): 7
    public:

        float DamageThreshold; // 0x0
        float DamageSpread; // 0x4
        bool bEnableImpactDamage; // 0x8
        float ImpactDamage; // 0xc
        int32_t DefaultImpactDamageDepth; // 0x10
        bool bCustomImpactResistance; // 0x14
        float ImpactResistance; // 0x18

    };

    struct FBuoyancyData //ScriptStruct Water.BuoyancyData
    {
    //Children Prop Count (Fields): 16
    public:

        struct TArray<struct FSphericalPontoon> Pontoons; // 0x0
        float BuoyancyCoefficient; // 0x10
        float BuoyancyDamp; // 0x14
        float BuoyancyDamp2; // 0x18
        float BuoyancyRampMinVelocity; // 0x1c
        float BuoyancyRampMaxVelocity; // 0x20
        float BuoyancyRampMax; // 0x24
        float MaxBuoyantForce; // 0x28
        float WaterShorePushFactor; // 0x2c
        float WaterVelocityStrength; // 0x30
        float MaxWaterForce; // 0x34
        float DragCoefficient; // 0x38
        float DragCoefficient2; // 0x3c
        float AngularDragCoefficient; // 0x40
        float MaxDragSpeed; // 0x44
        bool bApplyDragForcesInWater; // 0x48

    };

    struct FGerstnerWaveOctave //ScriptStruct Water.GerstnerWaveOctave
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t NumWaves; // 0x0
        float AmplitudeScale; // 0x4
        float MainDirection; // 0x8
        float SpreadAngle; // 0xc
        bool bUniformSpread; // 0x10

    };

    struct FGerstnerWave //ScriptStruct Water.GerstnerWave
    {
    //Children Prop Count (Fields): 9
    public:

        float WaveLength; // 0x0
        float Amplitude; // 0x4
        float Steepness; // 0x8
        struct FVector Direction; // 0xc
        struct FVector2D WaveVector; // 0x18
        float WaveSpeed; // 0x20
        float WKA; // 0x24
        float Q; // 0x28
        float PhaseOffset; // 0x2c

    };

    struct FUnderwaterPostProcessSettings //ScriptStruct Water.UnderwaterPostProcessSettings
    {
    //Children Prop Count (Fields): 6
    public:

        bool bEnabled; // 0x0
        float Priority; // 0x4
        float BlendRadius; // 0x8
        float BlendWeight; // 0xc
        struct FPostProcessSettings PostProcessSettings; // 0x10
        class UMaterialInterface* UnderwaterPostProcessMaterial; // 0x500

    };

    struct FPostProcessSettings //ScriptStruct Engine.PostProcessSettings
    {
    //Children Prop Count (Fields): 374
    public:

        char bOverride_TemperatureType; // 0x0
        char bOverride_WhiteTemp; // 0x0
        char bOverride_WhiteTint; // 0x0
        char bOverride_ColorSaturation; // 0x0
        char bOverride_ColorContrast; // 0x0
        char bOverride_ColorGamma; // 0x0
        char bOverride_ColorGain; // 0x0
        char bOverride_ColorOffset; // 0x0
        char bOverride_ColorSaturationShadows; // 0x1
        char bOverride_ColorContrastShadows; // 0x1
        char bOverride_ColorGammaShadows; // 0x1
        char bOverride_ColorGainShadows; // 0x1
        char bOverride_ColorOffsetShadows; // 0x1
        char bOverride_ColorSaturationMidtones; // 0x1
        char bOverride_ColorContrastMidtones; // 0x1
        char bOverride_ColorGammaMidtones; // 0x1
        char bOverride_ColorGainMidtones; // 0x2
        char bOverride_ColorOffsetMidtones; // 0x2
        char bOverride_ColorSaturationHighlights; // 0x2
        char bOverride_ColorContrastHighlights; // 0x2
        char bOverride_ColorGammaHighlights; // 0x2
        char bOverride_ColorGainHighlights; // 0x2
        char bOverride_ColorOffsetHighlights; // 0x2
        char bOverride_ColorCorrectionShadowsMax; // 0x2
        char bOverride_ColorCorrectionHighlightsMin; // 0x3
        char bOverride_BlueCorrection; // 0x3
        char bOverride_ExpandGamut; // 0x3
        char bOverride_ToneCurveAmount; // 0x3
        char bOverride_FilmWhitePoint; // 0x3
        char bOverride_FilmSaturation; // 0x3
        char bOverride_FilmChannelMixerRed; // 0x3
        char bOverride_FilmChannelMixerGreen; // 0x3
        char bOverride_FilmChannelMixerBlue; // 0x4
        char bOverride_FilmContrast; // 0x4
        char bOverride_FilmDynamicRange; // 0x4
        char bOverride_FilmHealAmount; // 0x4
        char bOverride_FilmToeAmount; // 0x4
        char bOverride_FilmShadowTint; // 0x4
        char bOverride_FilmShadowTintBlend; // 0x4
        char bOverride_FilmShadowTintAmount; // 0x4
        char bOverride_FilmSlope; // 0x5
        char bOverride_FilmToe; // 0x5
        char bOverride_FilmShoulder; // 0x5
        char bOverride_FilmBlackClip; // 0x5
        char bOverride_FilmWhiteClip; // 0x5
        char bOverride_SceneColorTint; // 0x5
        char bOverride_SceneFringeIntensity; // 0x5
        char bOverride_ChromaticAberrationStartOffset; // 0x5
        char bOverride_AmbientCubemapTint; // 0x6
        char bOverride_AmbientCubemapIntensity; // 0x6
        char bOverride_BloomMethod; // 0x6
        char bOverride_BloomIntensity; // 0x6
        char bOverride_BloomThreshold; // 0x6
        char bOverride_Bloom1Tint; // 0x6
        char bOverride_Bloom1Size; // 0x6
        char bOverride_Bloom2Size; // 0x6
        char bOverride_Bloom2Tint; // 0x7
        char bOverride_Bloom3Tint; // 0x7
        char bOverride_Bloom3Size; // 0x7
        char bOverride_Bloom4Tint; // 0x7
        char bOverride_Bloom4Size; // 0x7
        char bOverride_Bloom5Tint; // 0x7
        char bOverride_Bloom5Size; // 0x7
        char bOverride_Bloom6Tint; // 0x7
        char bOverride_Bloom6Size; // 0x8
        char bOverride_BloomSizeScale; // 0x8
        char bOverride_BloomConvolutionTexture; // 0x8
        char bOverride_BloomConvolutionSize; // 0x8
        char bOverride_BloomConvolutionCenterUV; // 0x8
        char bOverride_BloomConvolutionPreFilter; // 0x8
        char bOverride_BloomConvolutionPreFilterMin; // 0x8
        char bOverride_BloomConvolutionPreFilterMax; // 0x8
        char bOverride_BloomConvolutionPreFilterMult; // 0x9
        char bOverride_BloomConvolutionBufferScale; // 0x9
        char bOverride_BloomDirtMaskIntensity; // 0x9
        char bOverride_BloomDirtMaskTint; // 0x9
        char bOverride_BloomDirtMask; // 0x9
        char bOverride_CameraShutterSpeed; // 0x9
        char bOverride_CameraISO; // 0x9
        char bOverride_AutoExposureMethod; // 0x9
        char bOverride_AutoExposureLowPercent; // 0xa
        char bOverride_AutoExposureHighPercent; // 0xa
        char bOverride_AutoExposureMinBrightness; // 0xa
        char bOverride_AutoExposureMaxBrightness; // 0xa
        char bOverride_AutoExposureCalibrationConstant; // 0xa
        char bOverride_AutoExposureSpeedUp; // 0xa
        char bOverride_AutoExposureSpeedDown; // 0xa
        char bOverride_AutoExposureBias; // 0xa
        char bOverride_AutoExposureBiasCurve; // 0xb
        char bOverride_AutoExposureMeterMask; // 0xb
        char bOverride_AutoExposureApplyPhysicalCameraExposure; // 0xb
        char bOverride_HistogramLogMin; // 0xb
        char bOverride_HistogramLogMax; // 0xb
        char bOverride_LensFlareIntensity; // 0xb
        char bOverride_LensFlareTint; // 0xb
        char bOverride_LensFlareTints; // 0xb
        char bOverride_LensFlareBokehSize; // 0xc
        char bOverride_LensFlareBokehShape; // 0xc
        char bOverride_LensFlareThreshold; // 0xc
        char bOverride_VignetteIntensity; // 0xc
        char bOverride_GrainIntensity; // 0xc
        char bOverride_GrainJitter; // 0xc
        char bOverride_AmbientOcclusionIntensity; // 0xc
        char bOverride_AmbientOcclusionStaticFraction; // 0xc
        char bOverride_AmbientOcclusionRadius; // 0xd
        char bOverride_AmbientOcclusionFadeDistance; // 0xd
        char bOverride_AmbientOcclusionFadeRadius; // 0xd
        char bOverride_AmbientOcclusionDistance; // 0xd
        char bOverride_AmbientOcclusionRadiusInWS; // 0xd
        char bOverride_AmbientOcclusionPower; // 0xd
        char bOverride_AmbientOcclusionBias; // 0xd
        char bOverride_AmbientOcclusionQuality; // 0xd
        char bOverride_AmbientOcclusionMipBlend; // 0xe
        char bOverride_AmbientOcclusionMipScale; // 0xe
        char bOverride_AmbientOcclusionMipThreshold; // 0xe
        char bOverride_AmbientOcclusionTemporalBlendWeight; // 0xe
        char bOverride_RayTracingAO; // 0x10
        char bOverride_RayTracingAOSamplesPerPixel; // 0x10
        char bOverride_RayTracingAOIntensity; // 0x10
        char bOverride_RayTracingAORadius; // 0x10
        char bOverride_LPVIntensity; // 0x14
        char bOverride_LPVDirectionalOcclusionIntensity; // 0x14
        char bOverride_LPVDirectionalOcclusionRadius; // 0x14
        char bOverride_LPVDiffuseOcclusionExponent; // 0x14
        char bOverride_LPVSpecularOcclusionExponent; // 0x14
        char bOverride_LPVDiffuseOcclusionIntensity; // 0x14
        char bOverride_LPVSpecularOcclusionIntensity; // 0x14
        char bOverride_LPVSize; // 0x14
        char bOverride_LPVSecondaryOcclusionIntensity; // 0x15
        char bOverride_LPVSecondaryBounceIntensity; // 0x15
        char bOverride_LPVGeometryVolumeBias; // 0x15
        char bOverride_LPVVplInjectionBias; // 0x15
        char bOverride_LPVEmissiveInjectionIntensity; // 0x15
        char bOverride_LPVFadeRange; // 0x15
        char bOverride_LPVDirectionalOcclusionFadeRange; // 0x15
        char bOverride_IndirectLightingColor; // 0x15
        char bOverride_IndirectLightingIntensity; // 0x16
        char bOverride_ColorGradingIntensity; // 0x16
        char bOverride_ColorGradingLUT; // 0x16
        char bOverride_DepthOfFieldFocalDistance; // 0x16
        char bOverride_DepthOfFieldFstop; // 0x16
        char bOverride_DepthOfFieldMinFstop; // 0x16
        char bOverride_DepthOfFieldBladeCount; // 0x16
        char bOverride_DepthOfFieldSensorWidth; // 0x16
        char bOverride_DepthOfFieldDepthBlurRadius; // 0x17
        char bOverride_DepthOfFieldDepthBlurAmount; // 0x17
        char bOverride_DepthOfFieldFocalRegion; // 0x17
        char bOverride_DepthOfFieldNearTransitionRegion; // 0x17
        char bOverride_DepthOfFieldFarTransitionRegion; // 0x17
        char bOverride_DepthOfFieldScale; // 0x17
        char bOverride_DepthOfFieldNearBlurSize; // 0x17
        char bOverride_DepthOfFieldFarBlurSize; // 0x17
        char bOverride_MobileHQGaussian; // 0x18
        char bOverride_DepthOfFieldOcclusion; // 0x18
        char bOverride_DepthOfFieldSkyFocusDistance; // 0x18
        char bOverride_DepthOfFieldVignetteSize; // 0x18
        char bOverride_MotionBlurAmount; // 0x18
        char bOverride_MotionBlurMax; // 0x18
        char bOverride_MotionBlurTargetFPS; // 0x18
        char bOverride_MotionBlurPerObjectSize; // 0x18
        char bOverride_ScreenPercentage; // 0x19
        char bOverride_ScreenSpaceReflectionIntensity; // 0x19
        char bOverride_ScreenSpaceReflectionQuality; // 0x19
        char bOverride_ScreenSpaceReflectionMaxRoughness; // 0x19
        char bOverride_ScreenSpaceReflectionRoughnessScale; // 0x19
        char bOverride_ReflectionsType; // 0x1c
        char bOverride_RayTracingReflectionsMaxRoughness; // 0x1c
        char bOverride_RayTracingReflectionsMaxBounces; // 0x1c
        char bOverride_RayTracingReflectionsSamplesPerPixel; // 0x1c
        char bOverride_RayTracingReflectionsShadows; // 0x1c
        char bOverride_RayTracingReflectionsTranslucency; // 0x1c
        char bOverride_TranslucencyType; // 0x1c
        char bOverride_RayTracingTranslucencyMaxRoughness; // 0x1c
        char bOverride_RayTracingTranslucencyRefractionRays; // 0x1d
        char bOverride_RayTracingTranslucencySamplesPerPixel; // 0x1d
        char bOverride_RayTracingTranslucencyShadows; // 0x1d
        char bOverride_RayTracingTranslucencyRefraction; // 0x1d
        char bOverride_RayTracingGI; // 0x1d
        char bOverride_RayTracingGIMaxBounces; // 0x1d
        char bOverride_RayTracingGISamplesPerPixel; // 0x1d
        char bOverride_PathTracingMaxBounces; // 0x1d
        char bOverride_PathTracingSamplesPerPixel; // 0x1e
        char bOverride_PathTracingFilterWidth; // 0x1e
        char bOverride_PathTracingEnableEmissive; // 0x1e
        char bOverride_PathTracingMaxPathExposure; // 0x1e
        char bOverride_PathTracingEnableDenoiser; // 0x1e
        char bMobileHQGaussian; // 0x20
        enum class EBloomMethod BloomMethod; // 0x21
        enum class EAutoExposureMethod AutoExposureMethod; // 0x22
        enum class ETemperatureMethod TemperatureType; // 0x23
        float WhiteTemp; // 0x24
        float WhiteTint; // 0x28
        struct FVector4 ColorSaturation; // 0x30
        struct FVector4 ColorContrast; // 0x40
        struct FVector4 ColorGamma; // 0x50
        struct FVector4 ColorGain; // 0x60
        struct FVector4 ColorOffset; // 0x70
        struct FVector4 ColorSaturationShadows; // 0x80
        struct FVector4 ColorContrastShadows; // 0x90
        struct FVector4 ColorGammaShadows; // 0xa0
        struct FVector4 ColorGainShadows; // 0xb0
        struct FVector4 ColorOffsetShadows; // 0xc0
        struct FVector4 ColorSaturationMidtones; // 0xd0
        struct FVector4 ColorContrastMidtones; // 0xe0
        struct FVector4 ColorGammaMidtones; // 0xf0
        struct FVector4 ColorGainMidtones; // 0x100
        struct FVector4 ColorOffsetMidtones; // 0x110
        struct FVector4 ColorSaturationHighlights; // 0x120
        struct FVector4 ColorContrastHighlights; // 0x130
        struct FVector4 ColorGammaHighlights; // 0x140
        struct FVector4 ColorGainHighlights; // 0x150
        struct FVector4 ColorOffsetHighlights; // 0x160
        float ColorCorrectionHighlightsMin; // 0x170
        float ColorCorrectionShadowsMax; // 0x174
        float BlueCorrection; // 0x178
        float ExpandGamut; // 0x17c
        float ToneCurveAmount; // 0x180
        float FilmSlope; // 0x184
        float FilmToe; // 0x188
        float FilmShoulder; // 0x18c
        float FilmBlackClip; // 0x190
        float FilmWhiteClip; // 0x194
        struct FLinearColor FilmWhitePoint; // 0x198
        struct FLinearColor FilmShadowTint; // 0x1a8
        float FilmShadowTintBlend; // 0x1b8
        float FilmShadowTintAmount; // 0x1bc
        float FilmSaturation; // 0x1c0
        struct FLinearColor FilmChannelMixerRed; // 0x1c4
        struct FLinearColor FilmChannelMixerGreen; // 0x1d4
        struct FLinearColor FilmChannelMixerBlue; // 0x1e4
        float FilmContrast; // 0x1f4
        float FilmToeAmount; // 0x1f8
        float FilmHealAmount; // 0x1fc
        float FilmDynamicRange; // 0x200
        struct FLinearColor SceneColorTint; // 0x204
        float SceneFringeIntensity; // 0x214
        float ChromaticAberrationStartOffset; // 0x218
        float BloomIntensity; // 0x21c
        float BloomThreshold; // 0x220
        float BloomSizeScale; // 0x224
        float Bloom1Size; // 0x228
        float Bloom2Size; // 0x22c
        float Bloom3Size; // 0x230
        float Bloom4Size; // 0x234
        float Bloom5Size; // 0x238
        float Bloom6Size; // 0x23c
        struct FLinearColor Bloom1Tint; // 0x240
        struct FLinearColor Bloom2Tint; // 0x250
        struct FLinearColor Bloom3Tint; // 0x260
        struct FLinearColor Bloom4Tint; // 0x270
        struct FLinearColor Bloom5Tint; // 0x280
        struct FLinearColor Bloom6Tint; // 0x290
        float BloomConvolutionSize; // 0x2a0
        class UTexture2D* BloomConvolutionTexture; // 0x2a8
        struct FVector2D BloomConvolutionCenterUV; // 0x2b0
        float BloomConvolutionPreFilterMin; // 0x2b8
        float BloomConvolutionPreFilterMax; // 0x2bc
        float BloomConvolutionPreFilterMult; // 0x2c0
        float BloomConvolutionBufferScale; // 0x2c4
        class UTexture* BloomDirtMask; // 0x2c8
        float BloomDirtMaskIntensity; // 0x2d0
        struct FLinearColor BloomDirtMaskTint; // 0x2d4
        struct FLinearColor AmbientCubemapTint; // 0x2e4
        float AmbientCubemapIntensity; // 0x2f4
        class UTextureCube* AmbientCubemap; // 0x2f8
        float CameraShutterSpeed; // 0x300
        float CameraISO; // 0x304
        float DepthOfFieldFstop; // 0x308
        float DepthOfFieldMinFstop; // 0x30c
        int32_t DepthOfFieldBladeCount; // 0x310
        float AutoExposureBias; // 0x314
        float AutoExposureBiasBackup; // 0x318
        char bOverride_AutoExposureBiasBackup; // 0x31c
        char AutoExposureApplyPhysicalCameraExposure; // 0x320
        class UCurveFloat* AutoExposureBiasCurve; // 0x328
        class UTexture* AutoExposureMeterMask; // 0x330
        float AutoExposureLowPercent; // 0x338
        float AutoExposureHighPercent; // 0x33c
        float AutoExposureMinBrightness; // 0x340
        float AutoExposureMaxBrightness; // 0x344
        float AutoExposureSpeedUp; // 0x348
        float AutoExposureSpeedDown; // 0x34c
        float HistogramLogMin; // 0x350
        float HistogramLogMax; // 0x354
        float AutoExposureCalibrationConstant; // 0x358
        float LensFlareIntensity; // 0x35c
        struct FLinearColor LensFlareTint; // 0x360
        float LensFlareBokehSize; // 0x370
        float LensFlareThreshold; // 0x374
        class UTexture* LensFlareBokehShape; // 0x378
        struct TArray<struct FLinearColor> LensFlareTints; // 0x380
        float VignetteIntensity; // 0x390
        float GrainJitter; // 0x394
        float GrainIntensity; // 0x398
        float AmbientOcclusionIntensity; // 0x39c
        float AmbientOcclusionStaticFraction; // 0x3a0
        float AmbientOcclusionRadius; // 0x3a4
        char AmbientOcclusionRadiusInWS; // 0x3a8
        float AmbientOcclusionFadeDistance; // 0x3ac
        float AmbientOcclusionFadeRadius; // 0x3b0
        float AmbientOcclusionDistance; // 0x3b4
        float AmbientOcclusionPower; // 0x3b8
        float AmbientOcclusionBias; // 0x3bc
        float AmbientOcclusionQuality; // 0x3c0
        float AmbientOcclusionMipBlend; // 0x3c4
        float AmbientOcclusionMipScale; // 0x3c8
        float AmbientOcclusionMipThreshold; // 0x3cc
        float AmbientOcclusionTemporalBlendWeight; // 0x3d0
        char RayTracingAO; // 0x3d4
        int32_t RayTracingAOSamplesPerPixel; // 0x3d8
        float RayTracingAOIntensity; // 0x3dc
        float RayTracingAORadius; // 0x3e0
        struct FLinearColor IndirectLightingColor; // 0x3e4
        float IndirectLightingIntensity; // 0x3f4
        enum class ERayTracingGlobalIlluminationType RayTracingGIType; // 0x3f8
        int32_t RayTracingGIMaxBounces; // 0x3fc
        int32_t RayTracingGISamplesPerPixel; // 0x400
        float ColorGradingIntensity; // 0x404
        class UTexture* ColorGradingLUT; // 0x408
        float DepthOfFieldSensorWidth; // 0x410
        float DepthOfFieldFocalDistance; // 0x414
        float DepthOfFieldDepthBlurAmount; // 0x418
        float DepthOfFieldDepthBlurRadius; // 0x41c
        float DepthOfFieldFocalRegion; // 0x420
        float DepthOfFieldNearTransitionRegion; // 0x424
        float DepthOfFieldFarTransitionRegion; // 0x428
        float DepthOfFieldScale; // 0x42c
        float DepthOfFieldNearBlurSize; // 0x430
        float DepthOfFieldFarBlurSize; // 0x434
        float DepthOfFieldOcclusion; // 0x438
        float DepthOfFieldSkyFocusDistance; // 0x43c
        float DepthOfFieldVignetteSize; // 0x440
        float MotionBlurAmount; // 0x444
        float MotionBlurMax; // 0x448
        int32_t MotionBlurTargetFPS; // 0x44c
        float MotionBlurPerObjectSize; // 0x450
        float LPVIntensity; // 0x454
        float LPVVplInjectionBias; // 0x458
        float LPVSize; // 0x45c
        float LPVSecondaryOcclusionIntensity; // 0x460
        float LPVSecondaryBounceIntensity; // 0x464
        float LPVGeometryVolumeBias; // 0x468
        float LPVEmissiveInjectionIntensity; // 0x46c
        float LPVDirectionalOcclusionIntensity; // 0x470
        float LPVDirectionalOcclusionRadius; // 0x474
        float LPVDiffuseOcclusionExponent; // 0x478
        float LPVSpecularOcclusionExponent; // 0x47c
        float LPVDiffuseOcclusionIntensity; // 0x480
        float LPVSpecularOcclusionIntensity; // 0x484
        enum class EReflectionsType ReflectionsType; // 0x488
        float ScreenSpaceReflectionIntensity; // 0x48c
        float ScreenSpaceReflectionQuality; // 0x490
        float ScreenSpaceReflectionMaxRoughness; // 0x494
        float RayTracingReflectionsMaxRoughness; // 0x498
        int32_t RayTracingReflectionsMaxBounces; // 0x49c
        int32_t RayTracingReflectionsSamplesPerPixel; // 0x4a0
        enum class EReflectedAndRefractedRayTracedShadows RayTracingReflectionsShadows; // 0x4a4
        char RayTracingReflectionsTranslucency; // 0x4a5
        enum class ETranslucencyType TranslucencyType; // 0x4a6
        float RayTracingTranslucencyMaxRoughness; // 0x4a8
        int32_t RayTracingTranslucencyRefractionRays; // 0x4ac
        int32_t RayTracingTranslucencySamplesPerPixel; // 0x4b0
        enum class EReflectedAndRefractedRayTracedShadows RayTracingTranslucencyShadows; // 0x4b4
        char RayTracingTranslucencyRefraction; // 0x4b5
        int32_t PathTracingMaxBounces; // 0x4b8
        int32_t PathTracingSamplesPerPixel; // 0x4bc
        float PathTracingFilterWidth; // 0x4c0
        char PathTracingEnableEmissive; // 0x4c4
        float PathTracingMaxPathExposure; // 0x4c8
        char PathTracingEnableDenoiser; // 0x4cc
        float LPVFadeRange; // 0x4d0
        float LPVDirectionalOcclusionFadeRange; // 0x4d4
        float ScreenPercentage; // 0x4d8
        struct FWeightedBlendables WeightedBlendables; // 0x4e0

    };

    struct FWeightedBlendables //ScriptStruct Engine.WeightedBlendables
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FWeightedBlendable> Array; // 0x0

    };

    struct FWeightedBlendable //ScriptStruct Engine.WeightedBlendable
    {
    //Children Prop Count (Fields): 2
    public:

        float weight; // 0x0
        class UObject* Object; // 0x8

    };

    struct FWaterBodyHeightmapSettings //ScriptStruct Water.WaterBodyHeightmapSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EWaterBrushBlendType BlendMode; // 0x0
        bool bInvertShape; // 0x1
        struct FWaterFalloffSettings FalloffSettings; // 0x4
        struct FWaterBrushEffects Effects; // 0x18
        int32_t Priority; // 0x78

    };

    struct FWaterBrushEffects //ScriptStruct Water.WaterBrushEffects
    {
    //Children Prop Count (Fields): 5
    public:

        struct FWaterBrushEffectBlurring Blurring; // 0x0
        struct FWaterBrushEffectCurlNoise CurlNoise; // 0x8
        struct FWaterBrushEffectDisplacement Displacement; // 0x18
        struct FWaterBrushEffectSmoothBlending SmoothBlending; // 0x40
        struct FWaterBrushEffectTerracing Terracing; // 0x48

    };

    struct FWaterBrushEffectTerracing //ScriptStruct Water.WaterBrushEffectTerracing
    {
    //Children Prop Count (Fields): 5
    public:

        float TerraceAlpha; // 0x0
        float TerraceSpacing; // 0x4
        float TerraceSmoothness; // 0x8
        float MaskLength; // 0xc
        float MaskStartOffset; // 0x10

    };

    struct FWaterBrushEffectSmoothBlending //ScriptStruct Water.WaterBrushEffectSmoothBlending
    {
    //Children Prop Count (Fields): 2
    public:

        float InnerSmoothDistance; // 0x0
        float OuterSmoothDistance; // 0x4

    };

    struct FWaterBrushEffectDisplacement //ScriptStruct Water.WaterBrushEffectDisplacement
    {
    //Children Prop Count (Fields): 6
    public:

        float DisplacementHeight; // 0x0
        float DisplacementTiling; // 0x4
        class UTexture2D* Texture; // 0x8
        float Midpoint; // 0x10
        struct FLinearColor Channel; // 0x14
        float WeightmapInfluence; // 0x24

    };

    struct FWaterBrushEffectCurlNoise //ScriptStruct Water.WaterBrushEffectCurlNoise
    {
    //Children Prop Count (Fields): 4
    public:

        float Curl1Amount; // 0x0
        float Curl2Amount; // 0x4
        float Curl1Tiling; // 0x8
        float Curl2Tiling; // 0xc

    };

    struct FWaterBrushEffectBlurring //ScriptStruct Water.WaterBrushEffectBlurring
    {
    //Children Prop Count (Fields): 2
    public:

        bool bBlurShape; // 0x0
        int32_t Radius; // 0x4

    };

    struct FWaterFalloffSettings //ScriptStruct Water.WaterFalloffSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EWaterBrushFalloffMode FalloffMode; // 0x0
        float FalloffAngle; // 0x4
        float FalloffWidth; // 0x8
        float EdgeOffset; // 0xc
        float ZOffset; // 0x10

    };

    struct FWaterBodyWeightmapSettings //ScriptStruct Water.WaterBodyWeightmapSettings
    {
    //Children Prop Count (Fields): 7
    public:

        float FalloffWidth; // 0x0
        float EdgeOffset; // 0x4
        class UTexture2D* ModulationTexture; // 0x8
        float TextureTiling; // 0x10
        float TextureInfluence; // 0x14
        float Midpoint; // 0x18
        float FinalOpacity; // 0x1c

    };

    struct FWaterBrushEffectCurves //ScriptStruct Water.WaterBrushEffectCurves
    {
    //Children Prop Count (Fields): 5
    public:

        bool bUseCurveChannel; // 0x0
        class UCurveFloat* ElevationCurveAsset; // 0x8
        float ChannelEdgeOffset; // 0x10
        float ChannelDepth; // 0x14
        float CurveRampWidth; // 0x18

    };

    struct FWaterCurveSettings //ScriptStruct Water.WaterCurveSettings
    {
    //Children Prop Count (Fields): 5
    public:

        bool bUseCurveChannel; // 0x0
        class UCurveFloat* ElevationCurveAsset; // 0x8
        float ChannelEdgeOffset; // 0x10
        float ChannelDepth; // 0x14
        float CurveRampWidth; // 0x18

    };

    struct FWaterSplineCurveDefaults //ScriptStruct Water.WaterSplineCurveDefaults
    {
    //Children Prop Count (Fields): 4
    public:

        float DefaultDepth; // 0x0
        float DefaultWidth; // 0x4
        float DefaultVelocity; // 0x8
        float DefaultAudioIntensity; // 0xc

    };

    struct FYAssetValidatorEntry //ScriptStruct YDataValidator.YAssetValidatorEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FYAssetTagCheckEntry> m_prefixes; // 0x0
        struct TArray<struct FYAssetTagCheckEntry> m_suffixes; // 0x10
        bool m_enabled; // 0x20

    };

    struct FYAssetTagCheckEntry //ScriptStruct YDataValidator.YAssetTagCheckEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_tag; // 0x0
        bool m_specificTagEnabled; // 0x10
        struct TArray<struct FString> m_onlyCheckSpecificFolders; // 0x18
        struct TArray<struct FString> m_ignoreSpecificFolders; // 0x28

    };

    struct FYAssetValidationStatistics //ScriptStruct YDataValidator.YAssetValidationStatistics
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYAssetValidatorEntry> m_enabledAssetTypes; // 0x0
        struct TArray<struct FYAssetValidatorEntry> m_disabledAssetTypes; // 0x10

    };

    struct FYInitializationRequestEntry //ScriptStruct YInitializationPlugin.YInitializationRequestEntry
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* m_relevantContext; // 0x0
        struct FDelegate m_bpDelegate; // 0x18
        enum class EYInitializationRequestSettingTypes m_requestType; // 0x28

    };

    struct FAnimNode_AccelerationWarp : FAnimNode_Base //ScriptStruct Strider.AnimNode_AccelerationWarp
    {
    //Children Prop Count (Fields): 9
    public:

        struct FPoseLink InputPose; // 0x10
        float Acceleration; // 0x20
        float Direction; // 0x24
        float Alpha; // 0x28
        struct FVector UpAxis; // 0x2c
        float TorsoBendRatio; // 0x38
        float MaxTorsoBend; // 0x3c
        float Smoothing; // 0x40
        struct FBoneChain SpineChain; // 0x48

    };

    struct FBoneChain //ScriptStruct Strider.BoneChain
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FBoneChainLink> BoneChain; // 0x0

    };

    struct FBoneChainLink //ScriptStruct Strider.BoneChainLink
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference Bone; // 0x0
        float weight; // 0x10

    };

    struct FBoneReference //ScriptStruct Engine.BoneReference
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName BoneName; // 0x0

    };

    struct FAnimNode_BankWarp : FAnimNode_Base //ScriptStruct Strider.AnimNode_BankWarp
    {
    //Children Prop Count (Fields): 13
    public:

        struct FPoseLink InputPose; // 0x10
        float BankValue; // 0x20
        float Alpha; // 0x24
        struct FVector UpAxis; // 0x28
        struct FVector ForwardAxis; // 0x34
        float TwistRate; // 0x40
        float MaxTwist; // 0x44
        float LeanRate; // 0x48
        float MaxLean; // 0x4c
        float Smoothing; // 0x50
        struct FBoneReference RootBone; // 0x54
        struct FBoneChain SpineChain; // 0x68
        struct TArray<struct FBoneReference> RootBonesToAdjust; // 0x88

    };

    struct FAnimNode_OrientationWarp : FAnimNode_Base //ScriptStruct Strider.AnimNode_OrientationWarp
    {
    //Children Prop Count (Fields): 11
    public:

        struct FPoseLink InputPose; // 0x10
        float Direction; // 0x20
        float Offset; // 0x24
        float UpperBodyAlpha; // 0x28
        struct FVector UpAxis; // 0x2c
        float Alpha; // 0x38
        float MaxWarpDelta; // 0x3c
        float Smoothing; // 0x40
        struct FBoneReference RootBone; // 0x44
        struct FBoneChain SpineChain; // 0x58
        struct TArray<struct FBoneReference> RootBonesToCounterAdjust; // 0x78

    };

    struct FAnimNode_SlopeWarp : FAnimNode_SkeletalControlBase //ScriptStruct Strider.AnimNode_SlopeWarp
    {
    //Children Prop Count (Fields): 14
    public:

        struct FVector SlopeNormal; // 0xc8
        struct FVector SlopePoint; // 0xd4
        enum class ESlopeDetectionMode SlopeDetectionMode; // 0xe0
        enum class ESlopeRollCompensation SlopeRollCompensation; // 0xe1
        struct FVector IKRootLeftVector; // 0xe4
        float MaxSlopeAngle; // 0xf0
        float HeightOffset; // 0xf4
        float SlopeSmoothingRate; // 0xf8
        float AllowExtensionPercent; // 0xfc
        float DownSlopeShiftRate; // 0x100
        struct FBoneReference IkRoot; // 0x104
        struct FHipAdjustment HipAdjustment; // 0x114
        struct TArray<struct FLimbDefinition> Limbs; // 0x130
        struct TArray<struct FBoneReference> AdditionalBonesToAdjustWithHips; // 0x140

    };

    struct FLimbDefinition //ScriptStruct Strider.LimbDefinition
    {
    //Children Prop Count (Fields): 3
    public:

        struct FBoneReference Tip; // 0x0
        struct FBoneReference IkTarget; // 0x10
        int32_t BoneCount; // 0x20

    };

    struct FHipAdjustment //ScriptStruct Strider.HipAdjustment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FBoneReference Hips; // 0x0
        float AdjustmentRatio; // 0x10
        float MaxRecoveryRate; // 0x14

    };

    struct FAnimNode_StrideWarp : FAnimNode_SkeletalControlBase //ScriptStruct Strider.AnimNode_StrideWarp
    {
    //Children Prop Count (Fields): 8
    public:

        float StrideScale; // 0xc8
        float Direction; // 0xcc
        float Twist; // 0xd0
        float AllowExtensionPercent; // 0xd4
        struct FStridePivot StridePivot; // 0xe0
        struct FHipAdjustment HipAdjustment; // 0x140
        struct TArray<struct FLimbDefinition> Limbs; // 0x158
        struct TArray<struct FBoneReference> AdditionalBonesToAdjustWithHips; // 0x168

    };

    struct FStridePivot //ScriptStruct Strider.StridePivot
    {
    //Children Prop Count (Fields): 6
    public:

        struct FBoneReference Root; // 0x0
        bool bProjectToGround; // 0x10
        float Offset; // 0x14
        enum class EStrideVectorMethod StrideVectorMethod; // 0x18
        float Smoothing; // 0x1c
        bool bChooseNearestAxis; // 0x20

    };

    struct FBakedDataInfo //ScriptStruct SteamAudio.BakedDataInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        int32_t Size; // 0x8

    };

    struct FSubmixEffectReverbPluginSettings //ScriptStruct SteamAudio.SubmixEffectReverbPluginSettings
    {
    public:


    };

    struct FYBattleEyeMessageSendingStatsData //ScriptStruct YBattleEye.YBattleEyeMessageSendingStatsData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_numMessageSent; // 0x0
        int32_t m_numMessageReceived; // 0x4
        int32_t m_numMessageAcked; // 0x8
        int32_t m_numMessageSentToBattlEye; // 0xc

    };

    struct FYBattleEyeReplicatedMessageEntry //ScriptStruct YBattleEye.YBattleEyeReplicatedMessageEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<char> m_batchedData; // 0x0
        struct FGuid m_guid; // 0x10
        uint32_t m_length; // 0x20

    };

    struct FYPlayerBattleEyePlayerInformation //ScriptStruct YBattleEye.YPlayerBattleEyePlayerInformation
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_userId; // 0x0
        struct FString m_username; // 0x10
        uint32_t m_typeHash; // 0x20

    };

    struct FYPlayerConnectionData //ScriptStruct YBattleEye.YPlayerConnectionData
    {
    //Children Prop Count (Fields): 3
    public:

        uint32_t m_ip; // 0x0
        int32_t m_port; // 0x4
        struct FString m_fullAdressString; // 0x8

    };

    struct FYPlayerBattleEyePlayerActionData //ScriptStruct YBattleEye.YPlayerBattleEyePlayerActionData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_playerId; // 0x0
        struct FString m_reason; // 0x10
        int32_t m_min; // 0x20
        enum class EYPlayerBattleEyeActionType m_action; // 0x24

    };

    struct FYPlayerBattleEyeData //ScriptStruct YBattleEye.YPlayerBattleEyeData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_pid; // 0x0
        struct FString m_address; // 0x8
        char m_port; // 0x18

    };

    struct FNetSerializeScriptStructCache //ScriptStruct GameplayAbilities.NetSerializeScriptStructCache
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UScriptStruct*> ScriptStructs; // 0x0

    };

    struct FAttributeMetaData : FTableRowBase //ScriptStruct GameplayAbilities.AttributeMetaData
    {
    //Children Prop Count (Fields): 5
    public:

        float baseValue; // 0x8
        float MinValue; // 0xc
        float MaxValue; // 0x10
        struct FString DerivedAttributeInfo; // 0x18
        bool bCanStack; // 0x28

    };

    struct FGameplayAttributeData //ScriptStruct GameplayAbilities.GameplayAttributeData
    {
    //Children Prop Count (Fields): 2
    public:

        float baseValue; // 0x8
        float CurrentValue; // 0xc

    };

    struct FAbilityTriggerData //ScriptStruct GameplayAbilities.AbilityTriggerData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayTag TriggerTag; // 0x0
        enum class EGameplayAbilityTriggerSource TriggerSource; // 0x8

    };

    struct FGameplayAbilityBindInfo //ScriptStruct GameplayAbilities.GameplayAbilityBindInfo
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EGameplayAbilityInputBinds Command; // 0x0
        class UGameplayAbility* GameplayAbilityClass; // 0x8

    };

    struct FGameplayTargetDataFilter //ScriptStruct GameplayAbilities.GameplayTargetDataFilter
    {
    //Children Prop Count (Fields): 4
    public:

        class AActor* SelfActor; // 0x8
        class AActor* RequiredActorClass; // 0x10
        enum class ETargetDataFilterSelf SelfFilter; // 0x18
        bool bReverseFilter; // 0x19

    };

    struct FGameplayAbilityTargetData //ScriptStruct GameplayAbilities.GameplayAbilityTargetData
    {
    public:


    };

    struct FGameplayAbilityTargetData_SingleTargetHit : FGameplayAbilityTargetData //ScriptStruct GameplayAbilities.GameplayAbilityTargetData_SingleTargetHit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FHitResult HitResult; // 0x8
        bool bHitReplaced; // 0x90

    };

    struct FGameplayAbilityTargetData_ActorArray : FGameplayAbilityTargetData //ScriptStruct GameplayAbilities.GameplayAbilityTargetData_ActorArray
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayAbilityTargetingLocationInfo SourceLocation; // 0x10
        struct TArray<struct TWeakObjectPtr<struct AActor>> TargetActorArray; // 0x80

    };

    struct FGameplayAbilityTargetingLocationInfo //ScriptStruct GameplayAbilities.GameplayAbilityTargetingLocationInfo
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EGameplayAbilityTargetingLocationType LocationType; // 0x10
        struct FTransform LiteralTransform; // 0x20
        class AActor* SourceActor; // 0x50
        class UMeshComponent* SourceComponent; // 0x58
        class UGameplayAbility* SourceAbility; // 0x60
        struct FName SourceSocketName; // 0x68

    };

    struct FGameplayAbilityTargetData_LocationInfo : FGameplayAbilityTargetData //ScriptStruct GameplayAbilities.GameplayAbilityTargetData_LocationInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayAbilityTargetingLocationInfo SourceLocation; // 0x10
        struct FGameplayAbilityTargetingLocationInfo TargetLocation; // 0x80

    };

    struct FGameplayAbilitySpecHandleAndPredictionKey //ScriptStruct GameplayAbilities.GameplayAbilitySpecHandleAndPredictionKey
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayAbilitySpecHandle AbilityHandle; // 0x0
        int32_t PredictionKeyAtCreation; // 0x4

    };

    struct FAbilityTaskDebugMessage //ScriptStruct GameplayAbilities.AbilityTaskDebugMessage
    {
    //Children Prop Count (Fields): 2
    public:

        class UGameplayTask* FromTask; // 0x0
        struct FString Message; // 0x8

    };

    struct FAbilityEndedData //ScriptStruct GameplayAbilities.AbilityEndedData
    {
    //Children Prop Count (Fields): 4
    public:

        class UGameplayAbility* AbilityThatEnded; // 0x0
        struct FGameplayAbilitySpecHandle AbilitySpecHandle; // 0x8
        bool bReplicateEndAbility; // 0xc
        bool bWasCancelled; // 0xd

    };

    struct FGameplayAbilityActorInfo //ScriptStruct GameplayAbilities.GameplayAbilityActorInfo
    {
    //Children Prop Count (Fields): 8
    public:

        struct TWeakObjectPtr<struct AActor> OwnerActor; // 0x8
        struct TWeakObjectPtr<struct AActor> AvatarActor; // 0x10
        struct TWeakObjectPtr<struct APlayerController> PlayerController; // 0x18
        struct TWeakObjectPtr<struct UAbilitySystemComponent> AbilitySystemComponent; // 0x20
        struct TWeakObjectPtr<struct USkeletalMeshComponent> SkeletalMeshComponent; // 0x28
        struct TWeakObjectPtr<struct UAnimInstance> AnimInstance; // 0x30
        struct TWeakObjectPtr<struct UMovementComponent> MovementComponent; // 0x38
        struct FName AffectedAnimInstanceTag; // 0x40

    };

    struct FWorldReticleParameters //ScriptStruct GameplayAbilities.WorldReticleParameters
    {
    //Children Prop Count (Fields): 1
    public:

        struct FVector AOEScale; // 0x0

    };

    struct FPreallocationInfo //ScriptStruct GameplayAbilities.PreallocationInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class AGameplayCueNotify_Actor*> ClassesNeedingPreallocation; // 0x50

    };

    struct FGameplayCuePendingExecute //ScriptStruct GameplayAbilities.GameplayCuePendingExecute
    {
    //Children Prop Count (Fields): 5
    public:

        struct FPredictionKey PredictionKey; // 0x18
        enum class EGameplayCuePayloadType PayloadType; // 0x28
        class UAbilitySystemComponent* OwningComponent; // 0x30
        struct FGameplayEffectSpecForRPC FromSpec; // 0x38
        struct FGameplayCueParameters CueParameters; // 0xb0

    };

    struct FMinimalGameplayCueReplicationProxy //ScriptStruct GameplayAbilities.MinimalGameplayCueReplicationProxy
    {
    //Children Prop Count (Fields): 1
    public:

        class UAbilitySystemComponent* Owner; // 0x280

    };

    struct FGameplayCueTag //ScriptStruct GameplayAbilities.GameplayCueTag
    {
    //Children Prop Count (Fields): 1
    public:

        struct FGameplayTag GameplayCueTag; // 0x0

    };

    struct FGameplayCueObjectLibrary //ScriptStruct GameplayAbilities.GameplayCueObjectLibrary
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FString> Paths; // 0x0
        class UObjectLibrary* ActorObjectLibrary; // 0x30
        class UObjectLibrary* StaticObjectLibrary; // 0x38
        class UGameplayCueSet* CueSet; // 0x40
        bool bShouldSyncScan; // 0x4c
        bool bShouldAsyncLoad; // 0x4d
        bool bShouldSyncLoad; // 0x4e
        bool bHasBeenInitialized; // 0x4f

    };

    struct FGameplayCueNotifyData //ScriptStruct GameplayAbilities.GameplayCueNotifyData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGameplayTag GameplayCueTag; // 0x0
        struct FSoftObjectPath GameplayCueNotifyObj; // 0x8
        class UObject* LoadedGameplayCueClass; // 0x20

    };

    struct FGameplayCueTranslationManager //ScriptStruct GameplayAbilities.GameplayCueTranslationManager
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FGameplayCueTranslatorNode> TranslationLUT; // 0x0
        struct TMap<struct FName, struct FGameplayCueTranslatorNodeIndex> TranslationNameToIndexMap; // 0x10
        class UGameplayTagsManager* TagManager; // 0x60

    };

    struct FGameplayCueTranslatorNodeIndex //ScriptStruct GameplayAbilities.GameplayCueTranslatorNodeIndex
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Index; // 0x0

    };

    struct FGameplayCueTranslatorNode //ScriptStruct GameplayAbilities.GameplayCueTranslatorNode
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FGameplayCueTranslationLink> Links; // 0x0
        struct FGameplayCueTranslatorNodeIndex CachedIndex; // 0x10
        struct FGameplayTag CachedGameplayTag; // 0x14
        struct FName CachedGameplayTagName; // 0x1c

    };

    struct FGameplayCueTranslationLink //ScriptStruct GameplayAbilities.GameplayCueTranslationLink
    {
    //Children Prop Count (Fields): 1
    public:

        class UGameplayCueTranslator* RulesCDO; // 0x0

    };

    struct FActiveGameplayEffectQuery //ScriptStruct GameplayAbilities.ActiveGameplayEffectQuery
    {
    public:


    };

    struct FInheritedTagContainer //ScriptStruct GameplayAbilities.InheritedTagContainer
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGameplayTagContainer CombinedTags; // 0x0
        struct FGameplayTagContainer added; // 0x20
        struct FGameplayTagContainer Removed; // 0x40

    };

    struct FGameplayEffectCue //ScriptStruct GameplayAbilities.GameplayEffectCue
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGameplayAttribute MagnitudeAttribute; // 0x0
        float MinLevel; // 0x38
        float MaxLevel; // 0x3c
        struct FGameplayTagContainer GameplayCueTags; // 0x40

    };

    struct FGameplayModifierInfo //ScriptStruct GameplayAbilities.GameplayModifierInfo
    {
    //Children Prop Count (Fields): 7
    public:

        struct FGameplayAttribute Attribute; // 0x0
        enum class EGameplayModOp ModifierOp; // 0x38
        struct FScalableFloat Magnitude; // 0x40
        struct FGameplayEffectModifierMagnitude ModifierMagnitude; // 0x68
        struct FGameplayModEvaluationChannelSettings EvaluationChannelSettings; // 0x248
        struct FGameplayTagRequirements SourceTags; // 0x250
        struct FGameplayTagRequirements TargetTags; // 0x290

    };

    struct FGameplayModEvaluationChannelSettings //ScriptStruct GameplayAbilities.GameplayModEvaluationChannelSettings
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EGameplayModEvaluationChannel Channel; // 0x0

    };

    struct FGameplayEffectModifierMagnitude //ScriptStruct GameplayAbilities.GameplayEffectModifierMagnitude
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EGameplayEffectMagnitudeCalculation MagnitudeCalculationType; // 0x0
        struct FScalableFloat ScalableFloatMagnitude; // 0x8
        struct FAttributeBasedFloat AttributeBasedMagnitude; // 0x30
        struct FCustomCalculationBasedFloat CustomMagnitude; // 0x140
        struct FSetByCallerFloat SetByCallerMagnitude; // 0x1d0

    };

    struct FSetByCallerFloat //ScriptStruct GameplayAbilities.SetByCallerFloat
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName DataName; // 0x0
        struct FGameplayTag DataTag; // 0x8

    };

    struct FCustomCalculationBasedFloat //ScriptStruct GameplayAbilities.CustomCalculationBasedFloat
    {
    //Children Prop Count (Fields): 5
    public:

        class UGameplayModMagnitudeCalculation* CalculationClassMagnitude; // 0x0
        struct FScalableFloat Coefficient; // 0x8
        struct FScalableFloat PreMultiplyAdditiveValue; // 0x30
        struct FScalableFloat PostMultiplyAdditiveValue; // 0x58
        struct FCurveTableRowHandle FinalLookupCurve; // 0x80

    };

    struct FAttributeBasedFloat //ScriptStruct GameplayAbilities.AttributeBasedFloat
    {
    //Children Prop Count (Fields): 9
    public:

        struct FScalableFloat Coefficient; // 0x0
        struct FScalableFloat PreMultiplyAdditiveValue; // 0x28
        struct FScalableFloat PostMultiplyAdditiveValue; // 0x50
        struct FGameplayEffectAttributeCaptureDefinition BackingAttribute; // 0x78
        struct FCurveTableRowHandle AttributeCurve; // 0xb8
        enum class EAttributeBasedFloatCalculationType AttributeCalculationType; // 0xc8
        enum class EGameplayModEvaluationChannel FinalChannel; // 0xc9
        struct FGameplayTagContainer SourceTagFilter; // 0xd0
        struct FGameplayTagContainer TargetTagFilter; // 0xf0

    };

    struct FGameplayEffectExecutionDefinition //ScriptStruct GameplayAbilities.GameplayEffectExecutionDefinition
    {
    //Children Prop Count (Fields): 5
    public:

        class UGameplayEffectExecutionCalculation* CalculationClass; // 0x0
        struct FGameplayTagContainer PassedInTags; // 0x8
        struct TArray<struct FGameplayEffectExecutionScopedModifierInfo> CalculationModifiers; // 0x28
        struct TArray<class UGameplayEffect*> ConditionalGameplayEffectClasses; // 0x38
        struct TArray<struct FConditionalGameplayEffect> ConditionalGameplayEffects; // 0x48

    };

    struct FConditionalGameplayEffect //ScriptStruct GameplayAbilities.ConditionalGameplayEffect
    {
    //Children Prop Count (Fields): 2
    public:

        class UGameplayEffect* EffectClass; // 0x0
        struct FGameplayTagContainer RequiredSourceTags; // 0x8

    };

    struct FGameplayEffectExecutionScopedModifierInfo //ScriptStruct GameplayAbilities.GameplayEffectExecutionScopedModifierInfo
    {
    //Children Prop Count (Fields): 8
    public:

        struct FGameplayEffectAttributeCaptureDefinition CapturedAttribute; // 0x0
        struct FGameplayTag TransientAggregatorIdentifier; // 0x40
        enum class EGameplayEffectScopedModifierAggregatorType AggregatorType; // 0x48
        enum class EGameplayModOp ModifierOp; // 0x49
        struct FGameplayEffectModifierMagnitude ModifierMagnitude; // 0x50
        struct FGameplayModEvaluationChannelSettings EvaluationChannelSettings; // 0x230
        struct FGameplayTagRequirements SourceTags; // 0x238
        struct FGameplayTagRequirements TargetTags; // 0x278

    };

    struct FGameplayEffectCustomExecutionOutput //ScriptStruct GameplayAbilities.GameplayEffectCustomExecutionOutput
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FGameplayModifierEvaluatedData> OutputModifiers; // 0x0
        char bTriggerConditionalGameplayEffects; // 0x10
        char bHandledStackCountManually; // 0x10
        char bHandledGameplayCuesManually; // 0x10

    };

    struct FGameplayModifierEvaluatedData //ScriptStruct GameplayAbilities.GameplayModifierEvaluatedData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FGameplayAttribute Attribute; // 0x0
        enum class EGameplayModOp ModifierOp; // 0x38
        float Magnitude; // 0x3c
        struct FActiveGameplayEffectHandle Handle; // 0x40
        bool IsValid; // 0x48

    };

    struct FGameplayEffectCustomExecutionParameters //ScriptStruct GameplayAbilities.GameplayEffectCustomExecutionParameters
    {
    public:


    };

    struct FGameplayTagBlueprintPropertyMap //ScriptStruct GameplayAbilities.GameplayTagBlueprintPropertyMap
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FGameplayTagBlueprintPropertyMapping> PropertyMappings; // 0x10

    };

    struct FGameplayTagBlueprintPropertyMapping //ScriptStruct GameplayAbilities.GameplayTagBlueprintPropertyMapping
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGameplayTag TagToMap; // 0x0
        struct TFieldPath<FProperty> PropertyToEdit; // 0x8
        struct FName PropertyName; // 0x28
        struct FGuid PropertyGuid; // 0x30

    };

    struct FGameplayEffectContext //ScriptStruct GameplayAbilities.GameplayEffectContext
    {
    //Children Prop Count (Fields): 11
    public:

        struct TWeakObjectPtr<struct AActor> Instigator; // 0x8
        struct TWeakObjectPtr<struct AActor> EffectCauser; // 0x10
        struct TWeakObjectPtr<struct UGameplayAbility> AbilityCDO; // 0x18
        struct TWeakObjectPtr<struct UGameplayAbility> AbilityInstanceNotReplicated; // 0x20
        int32_t AbilityLevel; // 0x28
        struct TWeakObjectPtr<struct UObject> SourceObject; // 0x2c
        struct TWeakObjectPtr<struct UAbilitySystemComponent> InstigatorAbilitySystemComponent; // 0x34
        struct TArray<struct TWeakObjectPtr<struct AActor>> actors; // 0x40
        struct FVector WorldOrigin; // 0x60
        char bHasWorldOrigin; // 0x6c
        char bReplicateSourceObject; // 0x6c

    };

    struct FGameplayTagResponseTableEntry //ScriptStruct GameplayAbilities.GameplayTagResponseTableEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayTagReponsePair Positive; // 0x0
        struct FGameplayTagReponsePair Negative; // 0x28

    };

    struct FGameplayTagReponsePair //ScriptStruct GameplayAbilities.GameplayTagReponsePair
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGameplayTag Tag; // 0x0
        class UGameplayEffect* ResponseGameplayEffect; // 0x8
        struct TArray<class UGameplayEffect*> ResponseGameplayEffects; // 0x10
        int32_t SoftCountCap; // 0x20

    };

    struct FMovieSceneGameplayCueChannel : FMovieSceneChannel //ScriptStruct GameplayAbilities.MovieSceneGameplayCueChannel
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FFrameNumber> KeyTimes; // 0x8
        struct TArray<struct FMovieSceneGameplayCueKey> KeyValues; // 0x18

    };

    struct FMovieSceneGameplayCueKey //ScriptStruct GameplayAbilities.MovieSceneGameplayCueKey
    {
    //Children Prop Count (Fields): 11
    public:

        struct FGameplayCueTag Cue; // 0x0
        struct FVector Location; // 0x8
        struct FVector Normal; // 0x14
        struct FName AttachSocketName; // 0x20
        float NormalizedMagnitude; // 0x28
        struct FMovieSceneObjectBindingID Instigator; // 0x2c
        struct FMovieSceneObjectBindingID EffectCauser; // 0x44
        class UPhysicalMaterial* PhysicalMaterial; // 0x60
        int32_t GameplayEffectLevel; // 0x68
        int32_t AbilityLevel; // 0x6c
        bool bAttachToBinding; // 0x70

    };

    struct FMovieSceneObjectBindingID //ScriptStruct MovieScene.MovieSceneObjectBindingID
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid Guid; // 0x0
        int32_t SequenceID; // 0x10
        int32_t ResolveParentIndex; // 0x14

    };

    struct FDataRegistrySource_DataTableRules //ScriptStruct DataRegistry.DataRegistrySource_DataTableRules
    {
    //Children Prop Count (Fields): 2
    public:

        bool bPrecacheTable; // 0x0
        float CachedTableKeepSeconds; // 0x4

    };

    struct FDataRegistrySourceItemId //ScriptStruct DataRegistry.DataRegistrySourceItemId
    {
    public:


    };

    struct FDataRegistryCachePolicy //ScriptStruct DataRegistry.DataRegistryCachePolicy
    {
    //Children Prop Count (Fields): 6
    public:

        bool bCacheIsAlwaysVolatile; // 0x0
        bool bUseCurveTableCacheVersion; // 0x1
        int32_t MinNumberKept; // 0x4
        int32_t MaxNumberKept; // 0x8
        float ForceKeepSeconds; // 0xc
        float ForceReleaseSeconds; // 0x10

    };

    struct FDataRegistryIdFormat //ScriptStruct DataRegistry.DataRegistryIdFormat
    {
    //Children Prop Count (Fields): 1
    public:

        struct FGameplayTag BaseGameplayTag; // 0x0

    };

    struct FYFilterWordEntry //ScriptStruct YChatFilteringPlugin.YFilterWordEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_local; // 0x0
        struct FString m_culture; // 0x10
        struct FString m_replacement; // 0x20

    };

    struct FYCodeConventionBlueprintVarGroup //ScriptStruct YConventionPlugin.YCodeConventionBlueprintVarGroup
    {
    //Children Prop Count (Fields): 4
    public:

        float CameraTraceVolumeWidth; // 0x0
        float CameraTraceVolumeHeight; // 0x4
        bool ShowCameraWidget; // 0x8
        bool ShowWeaponWidget; // 0x9

    };

    struct FYCSVFileData //ScriptStruct YExcelDataConverter.YCSVFileData
    {
    public:


    };

    struct FYCSVMetaDataEntry //ScriptStruct YExcelDataConverter.YCSVMetaDataEntry
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString m_filePath; // 0x0
        int32_t m_settingsRow; // 0x10
        int32_t m_rowDataStart; // 0x14
        int32_t m_rowDataEnd; // 0x18
        int32_t m_widthDataStart; // 0x1c
        int32_t m_widthDataEnd; // 0x20

    };

    struct FYCSVRowEntryData //ScriptStruct YExcelDataConverter.YCSVRowEntryData
    {
    public:


    };

    struct FYCSVTitleSettings //ScriptStruct YExcelDataConverter.YCSVTitleSettings
    {
    public:


    };

    struct FYConverterExcelToGameData //ScriptStruct YExcelDataConverter.YConverterExcelToGameData
    {
    public:


    };

    struct FYExcelReportResult //ScriptStruct YExcelDataConverter.YExcelReportResult
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UPackage*> m_packages; // 0x0

    };

    struct FYExcelReportResultEntry //ScriptStruct YExcelDataConverter.YExcelReportResultEntry
    {
    public:


    };

    struct FYBiEventsWrapper //ScriptStruct YGameAnalytics.YBiEventsWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYBiEventWrapper> Messages; // 0x0

    };

    struct FYBiEventWrapper //ScriptStruct YGameAnalytics.YBiEventWrapper
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString messageType; // 0x0
        struct FString eventData; // 0x10

    };

    struct FYTestBIEventData //ScriptStruct YGameAnalytics.YTestBIEventData
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t IntegerField; // 0x0
        float FloatField; // 0x4
        bool BooleanField; // 0x8
        struct FString StringField; // 0x10
        struct TArray<struct FString> StringArray; // 0x20
        struct TArray<uint32_t> Blob; // 0x30
        struct FTestBIDataStruct DataStruct; // 0x40
        struct TArray<struct FTestBIStructForArray> ArrayOfStructs; // 0x58

    };

    struct FTestBIStructForArray //ScriptStruct YGameAnalytics.TestBIStructForArray
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTestBIDataStruct InternalDataStruct; // 0x0
        struct FString InternalStringField; // 0x18
        struct TArray<struct FString> InternalStringArray; // 0x28

    };

    struct FTestBIDataStruct //ScriptStruct YGameAnalytics.TestBIDataStruct
    {
    //Children Prop Count (Fields): 3
    public:

        uint16_t UInt16Field; // 0x0
        int64_t Int64Field; // 0x8
        int8_t Int8Field; // 0x10

    };

    struct FYCheckAndPerformUserRollbackIfNeededResult //ScriptStruct YPlatformUtils.YCheckAndPerformUserRollbackIfNeededResult
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYRollbackCheckResult Result; // 0x0

    };

    struct FYClientUpdateResponse //ScriptStruct YPlatformUtils.YClientUpdateResponse
    {
    //Children Prop Count (Fields): 1
    public:

        bool isClientUpToDate; // 0x0

    };

    struct FYClientUpdateRequest //ScriptStruct YPlatformUtils.YClientUpdateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Version; // 0x0

    };

    struct FYLocallyAcceptedLegalAgreements //ScriptStruct YPlatformUtils.YLocallyAcceptedLegalAgreements
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_userIdPlatform; // 0x0
        int32_t m_NDAVersion; // 0x10
        int32_t m_EULAVersion; // 0x14
        bool m_hasAcceptedNDA; // 0x18
        bool m_hasAcceptedEULA; // 0x19

    };

    struct FYNewLegalAgreementsResponse //ScriptStruct YPlatformUtils.YNewLegalAgreementsResponse
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t requiredNDAVersion; // 0x0
        int32_t requiredEULAVersion; // 0x4
        bool hasAccepted; // 0x8

    };

    struct FYNewLegalAgreementsRequest //ScriptStruct YPlatformUtils.YNewLegalAgreementsRequest
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYGamePlatform gamePlatform; // 0x0
        int32_t NDAVersion; // 0x4
        int32_t EULAVersion; // 0x8

    };

    struct FYCanGoToStationResponse //ScriptStruct YPlatformUtils.YCanGoToStationResponse
    {
    //Children Prop Count (Fields): 3
    public:

        bool canGoToStation; // 0x0
        int32_t Delta; // 0x4
        struct FString timeStampUpdate; // 0x8

    };

    struct FYLoginQueueStateResponse //ScriptStruct YPlatformUtils.YLoginQueueStateResponse
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t waitingUserCount; // 0x0
        struct FString Timestamp; // 0x8

    };

    struct FYLoginQueueStateRequest //ScriptStruct YPlatformUtils.YLoginQueueStateRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Region; // 0x0

    };

    struct FYRequestRegisterUserMacAddress //ScriptStruct YPlatformUtils.YRequestRegisterUserMacAddress
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString macAddress; // 0x0

    };

    struct FYFriendsImportResponse //ScriptStruct YPlatformUtils.YFriendsImportResponse
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYFriendsImportResultCode resultCode; // 0x0
        int32_t numOfImportedFriends; // 0x4
        int32_t numOfLinkedFriends; // 0x8

    };

    struct FYClientsideFriendsImportRequest //ScriptStruct YPlatformUtils.YClientsideFriendsImportRequest
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYGamePlatform Platform; // 0x0
        struct TArray<struct FString> userIds; // 0x8

    };

    struct FYFriendsImportRequest //ScriptStruct YPlatformUtils.YFriendsImportRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString loginIdentityProviderString; // 0x0
        struct FString AccessToken; // 0x10

    };

    struct FYFinalizeAccountLinkingResponse //ScriptStruct YPlatformUtils.YFinalizeAccountLinkingResponse
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYAccountLinkingResultCode resultCode; // 0x0

    };

    struct FYFinalizeAccountLinkingRequest //ScriptStruct YPlatformUtils.YFinalizeAccountLinkingRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString targetUserIdPlayFabMaster; // 0x0
        struct FString targetUserIdPlatform; // 0x10
        struct FString targetPlayFabPlatformName; // 0x20

    };

    struct FIntMargin //ScriptStruct Paper2D.IntMargin
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Left; // 0x0
        int32_t Top; // 0x4
        int32_t Right; // 0x8
        int32_t Bottom; // 0xc

    };

    struct FPaperFlipbookKeyFrame //ScriptStruct Paper2D.PaperFlipbookKeyFrame
    {
    //Children Prop Count (Fields): 2
    public:

        class UPaperSprite* Sprite; // 0x0
        int32_t FrameRun; // 0x8

    };

    struct FSpriteInstanceData //ScriptStruct Paper2D.SpriteInstanceData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMatrix Transform; // 0x0
        class UPaperSprite* SourceSprite; // 0x40
        struct FColor VertexColor; // 0x48
        int32_t MaterialIndex; // 0x4c

    };

    struct FPaperSpriteSocket //ScriptStruct Paper2D.PaperSpriteSocket
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform LocalTransform; // 0x0
        struct FName SocketName; // 0x30

    };

    struct FPaperSpriteAtlasSlot //ScriptStruct Paper2D.PaperSpriteAtlasSlot
    {
    //Children Prop Count (Fields): 6
    public:

        struct TSoftObjectPtr<UPaperSprite> SpriteRef; // 0x0
        int32_t AtlasIndex; // 0x28
        int32_t X; // 0x2c
        int32_t Y; // 0x30
        int32_t Width; // 0x34
        int32_t Height; // 0x38

    };

    struct FPaperTerrainMaterialRule //ScriptStruct Paper2D.PaperTerrainMaterialRule
    {
    //Children Prop Count (Fields): 8
    public:

        class UPaperSprite* StartCap; // 0x0
        struct TArray<class UPaperSprite*> Body; // 0x8
        class UPaperSprite* EndCap; // 0x18
        float MinimumAngle; // 0x20
        float MaximumAngle; // 0x24
        bool bEnableCollision; // 0x28
        float CollisionOffset; // 0x2c
        int32_t DrawOrder; // 0x30

    };

    struct FPaperTileInfo //ScriptStruct Paper2D.PaperTileInfo
    {
    //Children Prop Count (Fields): 2
    public:

        class UPaperTileSet* TileSet; // 0x0
        int32_t PackedTileIndex; // 0x8

    };

    struct FPaperTileSetTerrain //ScriptStruct Paper2D.PaperTileSetTerrain
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString TerrainName; // 0x0
        int32_t CenterTileIndex; // 0x10

    };

    struct FPaperTileMetadata //ScriptStruct Paper2D.PaperTileMetadata
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName UserDataName; // 0x0
        struct FSpriteGeometryCollection CollisionData; // 0x8
        char TerrainMembership; // 0x38

    };

    struct FSpriteGeometryCollection //ScriptStruct Paper2D.SpriteGeometryCollection
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FSpriteGeometryShape> Shapes; // 0x0
        enum class ESpritePolygonMode GeometryType; // 0x10
        int32_t PixelsPerSubdivisionX; // 0x14
        int32_t PixelsPerSubdivisionY; // 0x18
        bool bAvoidVertexMerging; // 0x1c
        float AlphaThreshold; // 0x20
        float DetailAmount; // 0x24
        float SimplifyEpsilon; // 0x28

    };

    struct FSpriteGeometryShape //ScriptStruct Paper2D.SpriteGeometryShape
    {
    //Children Prop Count (Fields): 6
    public:

        enum class ESpriteShapeType ShapeType; // 0x0
        struct TArray<struct FVector2D> Vertices; // 0x8
        struct FVector2D BoxSize; // 0x18
        struct FVector2D BoxPosition; // 0x20
        float Rotation; // 0x28
        bool bNegativeWinding; // 0x2c

    };

    struct FSpriteDrawCallRecord //ScriptStruct Paper2D.SpriteDrawCallRecord
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Destination; // 0x0
        class UTexture* BaseTexture; // 0x10
        struct FColor Color; // 0x48

    };

    struct FSpriteAssetInitParameters //ScriptStruct Paper2D.SpriteAssetInitParameters
    {
    public:


    };

    struct FVOscillator //ScriptStruct GameplayCameras.VOscillator
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFOscillator X; // 0x0
        struct FFOscillator Y; // 0xc
        struct FFOscillator Z; // 0x18

    };

    struct FFOscillator //ScriptStruct GameplayCameras.FOscillator
    {
    //Children Prop Count (Fields): 4
    public:

        float Amplitude; // 0x0
        float Frequency; // 0x4
        enum class EInitialOscillatorOffset InitialOffset; // 0x8
        enum class EOscillatorWaveform Waveform; // 0x9

    };

    struct FROscillator //ScriptStruct GameplayCameras.ROscillator
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFOscillator Pitch; // 0x0
        struct FFOscillator Yaw; // 0xc
        struct FFOscillator Roll; // 0x18

    };

    struct FPerlinNoiseShaker //ScriptStruct GameplayCameras.PerlinNoiseShaker
    {
    //Children Prop Count (Fields): 2
    public:

        float Amplitude; // 0x0
        float Frequency; // 0x4

    };

    struct FWaveOscillator //ScriptStruct GameplayCameras.WaveOscillator
    {
    //Children Prop Count (Fields): 3
    public:

        float Amplitude; // 0x0
        float Frequency; // 0x4
        enum class EInitialWaveOscillatorOffsetType InitialOffsetType; // 0x8

    };

    struct FTemplateSequenceBindingOverrideData //ScriptStruct TemplateSequence.TemplateSequenceBindingOverrideData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct UObject> Object; // 0x0
        bool bOverridesDefault; // 0x8

    };

    struct FTemplateSectionPropertyScale //ScriptStruct TemplateSequence.TemplateSectionPropertyScale
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGuid ObjectBinding; // 0x0
        struct FMovieScenePropertyBinding PropertyBinding; // 0x10
        enum class ETemplateSectionPropertyScaleType PropertyScaleType; // 0x24
        struct FMovieSceneFloatChannel FloatChannel; // 0x28

    };

    struct FMovieScenePropertyBinding //ScriptStruct MovieScene.MovieScenePropertyBinding
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName PropertyName; // 0x0
        struct FName PropertyPath; // 0x8
        bool bCanUseClassLookup; // 0x10

    };

    struct FTickAnimationSharingFunction : FTickFunction //ScriptStruct AnimationSharing.TickAnimationSharingFunction
    {
    public:


    };

    struct FAnimationSharingScalability //ScriptStruct AnimationSharing.AnimationSharingScalability
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPerPlatformBool UseBlendTransitions; // 0x0
        struct FPerPlatformFloat BlendSignificanceValue; // 0x4
        struct FPerPlatformInt MaximumNumberConcurrentBlends; // 0x8
        struct FPerPlatformFloat TickSignificanceValue; // 0xc

    };

    struct FPerPlatformFloat //ScriptStruct Engine.PerPlatformFloat
    {
    //Children Prop Count (Fields): 1
    public:

        float Default; // 0x0

    };

    struct FPerPlatformInt //ScriptStruct Engine.PerPlatformInt
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Default; // 0x0

    };

    struct FPerPlatformBool //ScriptStruct Engine.PerPlatformBool
    {
    //Children Prop Count (Fields): 1
    public:

        bool Default; // 0x0

    };

    struct FPerSkeletonAnimationSharingSetup //ScriptStruct AnimationSharing.PerSkeletonAnimationSharingSetup
    {
    //Children Prop Count (Fields): 6
    public:

        class USkeleton* Skeleton; // 0x0
        class USkeletalMesh* SkeletalMesh; // 0x8
        class UAnimSharingTransitionInstance* BlendAnimBlueprint; // 0x10
        class UAnimSharingAdditiveInstance* AdditiveAnimBlueprint; // 0x18
        class UAnimationSharingStateProcessor* StateProcessorClass; // 0x20
        struct TArray<struct FAnimationStateEntry> AnimationStates; // 0x28

    };

    struct FAnimationStateEntry //ScriptStruct AnimationSharing.AnimationStateEntry
    {
    //Children Prop Count (Fields): 11
    public:

        char State; // 0x0
        struct TArray<struct FAnimationSetup> AnimationSetups; // 0x8
        bool bOnDemand; // 0x18
        bool bAdditive; // 0x19
        float BlendTime; // 0x1c
        bool bReturnToPreviousState; // 0x20
        bool bSetNextState; // 0x21
        char NextState; // 0x22
        struct FPerPlatformInt MaximumNumberOfConcurrentInstances; // 0x24
        float WiggleTimePercentage; // 0x28
        bool bRequiresCurves; // 0x2c

    };

    struct FAnimationSetup //ScriptStruct AnimationSharing.AnimationSetup
    {
    //Children Prop Count (Fields): 4
    public:

        class UAnimSequence* AnimSequence; // 0x0
        class UAnimSharingStateInstance* AnimBlueprint; // 0x8
        struct FPerPlatformInt NumRandomizedInstances; // 0x10
        struct FPerPlatformBool Enabled; // 0x14

    };

    struct FMyPluginStruct //ScriptStruct UObjectPlugin.MyPluginStruct
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString TestString; // 0x0

    };

    struct FTrackRenderData //ScriptStruct GeometryCache.TrackRenderData
    {
    public:


    };

    struct FGeometryCacheMeshData //ScriptStruct GeometryCache.GeometryCacheMeshData
    {
    public:


    };

    struct FGeometryCacheVertexInfo //ScriptStruct GeometryCache.GeometryCacheVertexInfo
    {
    public:


    };

    struct FGeometryCacheMeshBatchInfo //ScriptStruct GeometryCache.GeometryCacheMeshBatchInfo
    {
    public:


    };

    struct FMovieSceneGeometryCacheParams //ScriptStruct GeometryCacheTracks.MovieSceneGeometryCacheParams
    {
    //Children Prop Count (Fields): 9
    public:

        class UGeometryCache* GeometryCacheAsset; // 0x0
        struct FFrameNumber FirstLoopStartFrameOffset; // 0x8
        struct FFrameNumber StartFrameOffset; // 0xc
        struct FFrameNumber EndFrameOffset; // 0x10
        float PlayRate; // 0x14
        char bReverse; // 0x18
        float StartOffset; // 0x1c
        float EndOffset; // 0x20
        struct FSoftObjectPath GeometryCache; // 0x28

    };

    struct FMovieSceneGeometryCacheSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct GeometryCacheTracks.MovieSceneGeometryCacheSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneGeometryCacheSectionTemplateParameters Params; // 0x20

    };

    struct FMovieSceneGeometryCacheSectionTemplateParameters : FMovieSceneGeometryCacheParams //ScriptStruct GeometryCacheTracks.MovieSceneGeometryCacheSectionTemplateParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumber SectionStartTime; // 0x40
        struct FFrameNumber SectionEndTime; // 0x44

    };

    struct FChaosClothWeightedValue //ScriptStruct ChaosCloth.ChaosClothWeightedValue
    {
    //Children Prop Count (Fields): 2
    public:

        float Low; // 0x0
        float High; // 0x4

    };

    struct FChaosDestructionEvent //ScriptStruct ChaosNiagara.ChaosDestructionEvent
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector Position; // 0x0
        struct FVector Normal; // 0xc
        struct FVector Velocity; // 0x18
        struct FVector AngularVelocity; // 0x24
        float ExtentMin; // 0x30
        float ExtentMax; // 0x34
        int32_t ParticleID; // 0x38
        float Time; // 0x3c
        int32_t Type; // 0x40

    };

    struct FPrefabricatorAssetCollectionItem //ScriptStruct PrefabricatorRuntime.PrefabricatorAssetCollectionItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UPrefabricatorAsset> PrefabAsset; // 0x0
        float weight; // 0x28

    };

    struct FPrefabricatorActorData //ScriptStruct PrefabricatorRuntime.PrefabricatorActorData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FGuid PrefabItemID; // 0x0
        struct FTransform RelativeTransform; // 0x10
        struct FString ClassPath; // 0x40
        struct FSoftClassPath ClassPathRef; // 0x50
        struct TArray<class UPrefabricatorProperty*> Properties; // 0x68
        struct TArray<struct FPrefabricatorComponentData> Components; // 0x78

    };

    struct FPrefabricatorComponentData //ScriptStruct PrefabricatorRuntime.PrefabricatorComponentData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform RelativeTransform; // 0x0
        struct FString ComponentName; // 0x30
        struct TArray<class UPrefabricatorProperty*> Properties; // 0x40

    };

    struct FPrefabricatorPropertyAssetMapping //ScriptStruct PrefabricatorRuntime.PrefabricatorPropertyAssetMapping
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSoftObjectPath AssetReference; // 0x0
        struct FString AssetClassName; // 0x18
        struct FName AssetObjectPath; // 0x28
        bool bUseQuotes; // 0x30

    };

    struct FConstructionSystemSavePlayerInfo //ScriptStruct ConstructionSystemRuntime.ConstructionSystemSavePlayerInfo
    {
    //Children Prop Count (Fields): 3
    public:

        bool bRestorePlayerInfo; // 0x0
        struct FTransform Transform; // 0x10
        struct FRotator ControlRotation; // 0x40

    };

    struct FConstructionSystemSaveConstructedItem //ScriptStruct ConstructionSystemRuntime.ConstructionSystemSaveConstructedItem
    {
    //Children Prop Count (Fields): 3
    public:

        class UPrefabricatorAssetInterface* PrefabAsset; // 0x0
        int32_t Seed; // 0x8
        struct FTransform Transform; // 0x10

    };

    struct FPCSnapConstraintWall //ScriptStruct ConstructionSystemRuntime.PCSnapConstraintWall
    {
    //Children Prop Count (Fields): 4
    public:

        bool AttachTop; // 0x0
        bool AttachBottom; // 0x1
        bool AttachLeft; // 0x2
        bool AttachRight; // 0x3

    };

    struct FPCSnapConstraintFloor //ScriptStruct ConstructionSystemRuntime.PCSnapConstraintFloor
    {
    //Children Prop Count (Fields): 6
    public:

        bool AttachX; // 0x0
        bool AttachXNegative; // 0x1
        bool AttachY; // 0x2
        bool AttachYNegative; // 0x3
        bool AttachZ; // 0x4
        bool AttachZNegative; // 0x5

    };

    struct FConstructionSystemUICategory //ScriptStruct ConstructionSystemRuntime.ConstructionSystemUICategory
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText DisplayName; // 0x0
        class UTexture2D* Icon; // 0x20
        struct TArray<struct FConstructionSystemUIPrefabEntry> PrefabEntries; // 0x28

    };

    struct FConstructionSystemUIPrefabEntry //ScriptStruct ConstructionSystemRuntime.ConstructionSystemUIPrefabEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText DisplayName; // 0x0
        struct FText Tooltip; // 0x20
        class UTexture2D* Icon; // 0x40
        class UPrefabricatorAssetInterface* Prefab; // 0x48

    };

    struct FMovieScenePropertySectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieScene.MovieScenePropertySectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieScenePropertySectionData PropertyData; // 0x20

    };

    struct FMovieScenePropertySectionData //ScriptStruct MovieScene.MovieScenePropertySectionData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName PropertyName; // 0x0
        struct FString PropertyPath; // 0x8

    };

    struct FMovieSceneMediaPlayerPropertySectionTemplate : FMovieScenePropertySectionTemplate //ScriptStruct MediaCompositing.MovieSceneMediaPlayerPropertySectionTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        class UMediaSource* MediaSource; // 0x38
        struct FFrameNumber SectionStartFrame; // 0x40
        bool bLoop; // 0x44

    };

    struct FMovieSceneMediaSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MediaCompositing.MovieSceneMediaSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneMediaSectionParams Params; // 0x20

    };

    struct FMovieSceneMediaSectionParams //ScriptStruct MediaCompositing.MovieSceneMediaSectionParams
    {
    //Children Prop Count (Fields): 8
    public:

        class UMediaSoundComponent* MediaSoundComponent; // 0x0
        class UMediaSource* MediaSource; // 0x8
        class UMediaTexture* MediaTexture; // 0x10
        class UMediaPlayer* MediaPlayer; // 0x18
        struct FFrameNumber SectionStartFrame; // 0x20
        struct FFrameNumber SectionEndFrame; // 0x24
        bool bLooping; // 0x28
        struct FFrameNumber StartFrameOffset; // 0x2c

    };

    struct FUdpMockMessage //ScriptStruct UdpMessaging.UdpMockMessage
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> Data; // 0x0

    };

    struct FActorSequenceObjectReferenceMap //ScriptStruct ActorSequence.ActorSequenceObjectReferenceMap
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FGuid> BindingIds; // 0x0
        struct TArray<struct FActorSequenceObjectReferences> References; // 0x10

    };

    struct FActorSequenceObjectReferences //ScriptStruct ActorSequence.ActorSequenceObjectReferences
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FActorSequenceObjectReference> Array; // 0x0

    };

    struct FActorSequenceObjectReference //ScriptStruct ActorSequence.ActorSequenceObjectReference
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EActorSequenceObjectReferenceType Type; // 0x0
        struct FGuid ActorId; // 0x4
        struct FString PathToComponent; // 0x18

    };

    struct FActorLayer //ScriptStruct ActorLayerUtilities.ActorLayer
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FAudioCaptureDeviceInfo //ScriptStruct AudioCapture.AudioCaptureDeviceInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName DeviceName; // 0x0
        int32_t NumInputChannels; // 0x8
        int32_t SampleRate; // 0xc

    };

    struct FCustomMeshTriangle //ScriptStruct CustomMeshComponent.CustomMeshTriangle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Vertex0; // 0x0
        struct FVector Vertex1; // 0xc
        struct FVector Vertex2; // 0x18

    };

    struct FAnimNode_LiveLinkPose : FAnimNode_Base //ScriptStruct LiveLink.AnimNode_LiveLinkPose
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPoseLink InputPose; // 0x10
        struct FLiveLinkSubjectName LiveLinkSubjectName; // 0x20
        class ULiveLinkRetargetAsset* RetargetAsset; // 0x28
        class ULiveLinkRetargetAsset* CurrentRetargetAsset; // 0x30

    };

    struct FLiveLinkSubjectName //ScriptStruct LiveLinkInterface.LiveLinkSubjectName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FLiveLinkInstanceProxy : FAnimInstanceProxy //ScriptStruct LiveLink.LiveLinkInstanceProxy
    {
    //Children Prop Count (Fields): 1
    public:

        struct FAnimNode_LiveLinkPose PoseNode; // 0x770

    };

    struct FProviderPollResult //ScriptStruct LiveLink.ProviderPollResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Name; // 0x10
        struct FString MachineName; // 0x20
        double MachineTimeOffset; // 0x30

    };

    struct FLiveLinkRetargetAssetReference //ScriptStruct LiveLink.LiveLinkRetargetAssetReference
    {
    public:


    };

    struct FLiveLinkRoleProjectSetting //ScriptStruct LiveLink.LiveLinkRoleProjectSetting
    {
    //Children Prop Count (Fields): 4
    public:

        class ULiveLinkRole* Role; // 0x0
        class ULiveLinkSubjectSettings* SettingClass; // 0x8
        class ULiveLinkFrameInterpolationProcessor* FrameInterpolationProcessor; // 0x10
        struct TArray<class ULiveLinkFramePreProcessor*> FramePreProcessors; // 0x18

    };

    struct FLiveLinkTransformControllerData //ScriptStruct LiveLinkComponents.LiveLinkTransformControllerData
    {
    //Children Prop Count (Fields): 6
    public:

        bool bWorldTransform; // 0x0
        bool bUseLocation; // 0x1
        bool bUseRotation; // 0x2
        bool bUseScale; // 0x3
        bool bSweep; // 0x4
        bool bTeleport; // 0x5

    };

    struct FMovieSceneLiveLinkSectionTemplate : FMovieScenePropertySectionTemplate //ScriptStruct LiveLinkMovieScene.MovieSceneLiveLinkSectionTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLiveLinkSubjectPreset SubjectPreset; // 0x38
        struct TArray<bool> ChannelMask; // 0x70
        struct TArray<struct FLiveLinkSubSectionData> SubSectionsData; // 0x80

    };

    struct FLiveLinkSubSectionData //ScriptStruct LiveLinkMovieScene.LiveLinkSubSectionData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FLiveLinkPropertyData> Properties; // 0x0

    };

    struct FLiveLinkPropertyData //ScriptStruct LiveLinkMovieScene.LiveLinkPropertyData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName PropertyName; // 0x0
        struct TArray<struct FMovieSceneFloatChannel> FloatChannel; // 0x8
        struct TArray<struct FMovieSceneStringChannel> StringChannel; // 0x18
        struct TArray<struct FMovieSceneIntegerChannel> IntegerChannel; // 0x28
        struct TArray<struct FMovieSceneBoolChannel> BoolChannel; // 0x38
        struct TArray<struct FMovieSceneByteChannel> ByteChannel; // 0x48

    };

    struct FMovieSceneStringChannel : FMovieSceneChannel //ScriptStruct MovieSceneTracks.MovieSceneStringChannel
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FFrameNumber> Times; // 0x8
        struct TArray<struct FString> Values; // 0x18
        struct FString DefaultValue; // 0x28
        bool bHasDefaultValue; // 0x38

    };

    struct FLiveLinkSubjectPreset //ScriptStruct LiveLinkInterface.LiveLinkSubjectPreset
    {
    //Children Prop Count (Fields): 5
    public:

        struct FLiveLinkSubjectKey Key; // 0x0
        class ULiveLinkRole* Role; // 0x18
        class ULiveLinkSubjectSettings* Settings; // 0x20
        class ULiveLinkVirtualSubject* VirtualSubject; // 0x28
        bool bEnabled; // 0x30

    };

    struct FLiveLinkSubjectKey //ScriptStruct LiveLinkInterface.LiveLinkSubjectKey
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid Source; // 0x0
        struct FLiveLinkSubjectName SubjectName; // 0x10

    };

    struct FAnimNode_WheelHandler : FAnimNode_SkeletalControlBase //ScriptStruct PhysXVehicles.AnimNode_WheelHandler
    {
    public:


    };

    struct FTireConfigMaterialFriction //ScriptStruct PhysXVehicles.TireConfigMaterialFriction
    {
    //Children Prop Count (Fields): 2
    public:

        class UPhysicalMaterial* PhysicalMaterial; // 0x0
        float FrictionScale; // 0x8

    };

    struct FVehicleAnimInstanceProxy : FAnimInstanceProxy //ScriptStruct PhysXVehicles.VehicleAnimInstanceProxy
    {
    public:


    };

    struct FVehicleInputRate //ScriptStruct PhysXVehicles.VehicleInputRate
    {
    //Children Prop Count (Fields): 2
    public:

        float RiseRate; // 0x0
        float FallRate; // 0x4

    };

    struct FReplicatedVehicleState //ScriptStruct PhysXVehicles.ReplicatedVehicleState
    {
    //Children Prop Count (Fields): 5
    public:

        float SteeringInput; // 0x0
        float ThrottleInput; // 0x4
        float BrakeInput; // 0x8
        float HandbrakeInput; // 0xc
        int32_t CurrentGear; // 0x10

    };

    struct FWheelSetup //ScriptStruct PhysXVehicles.WheelSetup
    {
    //Children Prop Count (Fields): 4
    public:

        class UVehicleWheel* WheelClass; // 0x0
        struct FName BoneName; // 0x8
        struct FVector AdditionalOffset; // 0x10
        bool bDisableSteering; // 0x1c

    };

    struct FVehicleTransmissionData //ScriptStruct PhysXVehicles.VehicleTransmissionData
    {
    //Children Prop Count (Fields): 8
    public:

        bool bUseGearAutoBox; // 0x0
        float GearSwitchTime; // 0x4
        float GearAutoBoxLatency; // 0x8
        float FinalRatio; // 0xc
        struct TArray<struct FVehicleGearData> ForwardGears; // 0x10
        float ReverseGearRatio; // 0x20
        float NeutralGearUpRatio; // 0x24
        float ClutchStrength; // 0x28

    };

    struct FVehicleGearData //ScriptStruct PhysXVehicles.VehicleGearData
    {
    //Children Prop Count (Fields): 3
    public:

        float Ratio; // 0x0
        float DownRatio; // 0x4
        float UpRatio; // 0x8

    };

    struct FVehicleEngineData //ScriptStruct PhysXVehicles.VehicleEngineData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRuntimeFloatCurve TorqueCurve; // 0x0
        float MaxRPM; // 0x88
        float MOI; // 0x8c
        float DampingRateFullThrottle; // 0x90
        float DampingRateZeroThrottleClutchEngaged; // 0x94
        float DampingRateZeroThrottleClutchDisengaged; // 0x98

    };

    struct FVehicleDifferential4WData //ScriptStruct PhysXVehicles.VehicleDifferential4WData
    {
    //Children Prop Count (Fields): 7
    public:

        enum class EVehicleDifferential4W DifferentialType; // 0x0
        float FrontRearSplit; // 0x4
        float FrontLeftRightSplit; // 0x8
        float RearLeftRightSplit; // 0xc
        float CentreBias; // 0x10
        float FrontBias; // 0x14
        float RearBias; // 0x18

    };

    struct FYDropAbilityAnalyticsPerPlayer : FYBaseAnalyticsEvent //ScriptStruct Prospect.YDropAbilityAnalyticsPerPlayer
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString ability_id; // 0xa8
        struct FString ability_name; // 0xb8
        int32_t time_since_match_start; // 0xc8
        int32_t drop_location_X; // 0xcc
        int32_t drop_location_Y; // 0xd0
        int32_t Source; // 0xd4

    };

    struct FYAbilityAnalyticsPerPlayer //ScriptStruct Prospect.YAbilityAnalyticsPerPlayer
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_playerNetID; // 0x0
        class AActor* m_relevantPlayerActor; // 0x10
        struct TArray<struct FYAbilityAnalyticsEvent> m_abilities; // 0x18

    };

    struct FYAbilityAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YAbilityAnalyticsEvent
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName ability_id; // 0xa8
        struct FString ability_name; // 0xb0
        int32_t ability_pickup_time; // 0xc0
        int32_t ability_pickup_user_time; // 0xc4
        int32_t ability_use_time; // 0xc8
        int32_t ability_use_user_time; // 0xcc
        int32_t location_x; // 0xd0
        int32_t location_y; // 0xd4
        int32_t location_z; // 0xd8

    };

    struct FYAbilityTransportInitializationData //ScriptStruct Prospect.YAbilityTransportInitializationData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector m_startLocation; // 0x0
        struct FVector m_direction; // 0xc
        struct FDataTableRowHandle m_abilityActionRowHandle; // 0x18
        struct FDataTableRowHandle m_itemRowHandle; // 0x28
        class AActor* m_owner; // 0x38

    };

    struct FYAbilityInitializationData //ScriptStruct Prospect.YAbilityInitializationData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDataTableRowHandle> m_abilities; // 0x0

    };

    struct FYWeaponDataTableBase : FYItemDataTableRowBase //ScriptStruct Prospect.YWeaponDataTableBase
    {
    //Children Prop Count (Fields): 45
    public:

        struct FY3dWidgetInfo m_3dWidgetInfo; // 0x408
        struct FText m_weaponName; // 0x440
        struct FYWeaponUIData m_uiData; // 0x460
        struct FSoftClassProperty m_animInstance; // 0x4e0
        struct FName m_attachSocketOverride; // 0x508
        struct TArray<struct TSoftObjectPtr<USkeletalMesh>> m_weaponVanityMeshAlternatives; // 0x510
        struct TArray<struct FYWeaponVanityMeshAttachment> m_defaultVanityMeshAttachments; // 0x520
        struct TArray<struct FYWeaponMaterialData> m_weaponVanityMaterialEntries; // 0x530
        enum class EYCustomizationCategory m_customizationCameraCategory; // 0x540
        float m_pivottOffsetXDistance; // 0x544
        struct FRotator m_pivotStartRotation; // 0x548
        struct TArray<struct FYDefaultModAttachmentData> m_defaultModAttachmentEntries; // 0x558
        struct TArray<enum class EYModificationSlotType> m_modSlots; // 0x568
        struct FGameplayTagContainer m_weaponTags; // 0x578
        float m_defaultScopeOffset; // 0x598
        enum class EYDeviceCategory m_deviceCategory; // 0x59c
        float m_weaponTargetingFOV; // 0x5a0
        bool m_fireAnimationIsLooping; // 0x5a4
        bool m_stopFireAnimationWhenInterrupted; // 0x5a5
        bool m_hideNormalCrosshairWhenTargeting; // 0x5a6
        bool m_showFullscreenCrosshairWhenTargeting; // 0x5a7
        bool m_alwaysHideCrosshair; // 0x5a8
        struct FSoftClassProperty m_fullscreenWidgetPath; // 0x5b0
        bool m_fireWeaponFromMuzzleLocation; // 0x5d8
        bool m_forceFireWeaponFromCameraLocationWhenADSing; // 0x5d9
        bool m_hideGunWhenFinishedTargeting; // 0x5da
        bool m_canUseTargeting; // 0x5db
        bool m_ignoreForAutomationTest; // 0x5dc
        bool m_updateBeamFXEveryFrame; // 0x5dd
        struct FDataTableRowHandle m_audioDataTableRow; // 0x5e0
        struct FDataTableRowHandle m_tuningDataTableRow; // 0x5f0
        struct FDataTableRowHandle m_defaultFXCategoryRow; // 0x600
        struct FName m_overrideSecondaryWeaponCosmeticAttachmentName; // 0x610
        enum class EYVFX_WeaponType m_vfxWeaponType; // 0x618
        bool m_useSpinUpPercentMaterialParameter; // 0x619
        struct FDataTableRowHandle m_transportDataTableRow; // 0x620
        enum class EYEquipedWeaponPoseType m_animationPose; // 0x630
        enum class EYEquipedAnimationWeaponType m_animationWeaponType; // 0x631
        bool m_blockAllWeaponInput; // 0x632
        bool m_useAnimSections; // 0x633
        struct TMap<enum class EYWeaponPlayState, struct FYWeaponPlayStateAnimationsEntry> m_animsForState; // 0x638
        class UYScriptableWeaponComponent* m_ScriptableComponent; // 0x688
        bool m_spawnComponentOnClients; // 0x690
        bool m_spawnOnCharacter; // 0x691
        bool m_useSwitchModeInsteadOfTargeting; // 0x692

    };

    struct FYWeaponPlayStateAnimationsEntry //ScriptStruct Prospect.YWeaponPlayStateAnimationsEntry
    {
    //Children Prop Count (Fields): 6
    public:

        struct TSoftObjectPtr<UAnimMontage> m_animWeaponFirstPerson; // 0x0
        struct TSoftObjectPtr<UAnimMontage> m_animWeaponThirdPerson; // 0x28
        struct TSoftObjectPtr<UAnimMontage> m_animFirstPerson; // 0x50
        struct TSoftObjectPtr<UAnimMontage> m_animThirdPerson; // 0x78
        struct TSoftObjectPtr<UAnimMontage> m_animLowStaminaFirstPerson; // 0xa0
        struct TSoftObjectPtr<UAnimMontage> m_animLowStaminaThirdPerson; // 0xc8

    };

    struct FYDefaultModAttachmentData //ScriptStruct Prospect.YDefaultModAttachmentData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_mesh; // 0x0
        struct FName m_socketAttachmentName; // 0x28
        enum class EYModificationSlotType m_modType; // 0x30

    };

    struct FYWeaponMaterialData //ScriptStruct Prospect.YWeaponMaterialData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYWeaponMaterialEntry> m_materialEntries; // 0x0

    };

    struct FYWeaponMaterialEntry //ScriptStruct Prospect.YWeaponMaterialEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UMaterialInterface> m_materialVariation; // 0x0
        int32_t m_materialIndex; // 0x28

    };

    struct FYWeaponVanityMeshAttachment //ScriptStruct Prospect.YWeaponVanityMeshAttachment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName m_attachmentSocket; // 0x0
        struct TSoftObjectPtr<USkeletalMesh> m_meshAttachmentSK; // 0x8
        struct TArray<struct FYVanityMaterialEntry> m_meshAttachmentMaterialOverrides; // 0x30

    };

    struct FYWeaponUIData //ScriptStruct Prospect.YWeaponUIData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TSoftObjectPtr<UTexture2D> m_textureUIIcon; // 0x0
        struct TSoftObjectPtr<UTexture2D> m_textureUISmall; // 0x28
        struct TSoftObjectPtr<UTexture2D> m_textureUIBig; // 0x50
        enum class EYItemStatsCategory m_itemStatsCategory; // 0x78

    };

    struct FY3dWidgetInfo //ScriptStruct Prospect.Y3dWidgetInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FSoftClassProperty m_userWidget3d; // 0x0
        struct FName m_socketNameAttachTo; // 0x28
        float m_widgetScale; // 0x30

    };

    struct FYAbilityDataTableRow : FYWeaponDataTableBase //ScriptStruct Prospect.YAbilityDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_abilityName; // 0x698
        struct FYAbilityActionEntry m_abilityAction; // 0x6b8
        bool m_overrideLeftHand; // 0x6d0
        struct FSoftClassProperty m_statsWidget; // 0x6d8

    };

    struct FYAbilityActionEntry //ScriptStruct Prospect.YAbilityActionEntry
    {
    //Children Prop Count (Fields): 2
    public:

        class UYCharacterAbilityComponent* m_abilityClass; // 0x0
        struct FDataTableRowHandle m_dataRow; // 0x8

    };

    struct FYAbilityActionDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YAbilityActionDataTableRow
    {
    //Children Prop Count (Fields): 18
    public:

        struct FDataTableRowHandle m_transportRow; // 0x10
        class AYPlacementActor* m_placementActorClass; // 0x20
        float m_placementSize; // 0x28
        float m_attachSkeletalMeshTime; // 0x2c
        float m_activeTime; // 0x30
        float m_timeToActivateFromReady; // 0x34
        bool m_traceTransportTowardsGround; // 0x38
        float m_directionAdditionalOffset; // 0x3c
        float m_velocityLocationMultiplier; // 0x40
        float m_forwardToUpAddition; // 0x44
        float m_zOffsetAddition; // 0x48
        bool m_startLocationFromOwnerRoot; // 0x4c
        bool m_adjustStartLocationBasedOnTrace; // 0x4d
        bool m_isClientSidePredicted; // 0x4e
        enum class ECollisionChannel m_transportCollisionChannel; // 0x4f
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifiersToApply; // 0x50
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifiersToApplyAtDeactivation; // 0x60
        bool m_removeFromPerceptionSystemWhenActive; // 0x70

    };

    struct FYAbilityActionTurret : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionTurret
    {
    public:


    };

    struct FYAbilityActionCloakData : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionCloakData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDataTableRowHandle m_cloakData; // 0x78

    };

    struct FYAbilityActionKineticShieldData : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionKineticShieldData
    {
    //Children Prop Count (Fields): 5
    public:

        class UMaterialInstance* m_kineticShieldMaterialNormal; // 0x78
        class UMaterialInstance* m_kineticShieldMaterialPact; // 0x80
        class UMaterialInstance* m_kineticShieldMaterialEnemy; // 0x88
        struct FName m_shieldFadeOutParameter; // 0x90
        struct FDataTableRowHandle m_healthRowHandle; // 0x98

    };

    struct FYAbilityActionBlinkData : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionBlinkData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_startSound; // 0x78
        struct FDataTableRowHandle m_endSound; // 0x88
        class UParticleSystem* m_particleSystemBlinkAway; // 0x98
        class UParticleSystem* m_particleSystemBlinkInto; // 0xa0

    };

    struct FYAbilityActionHealWardData : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionHealWardData
    {
    //Children Prop Count (Fields): 6
    public:

        float m_healPerSecond; // 0x78
        float m_healWardFinalRadius; // 0x7c
        bool m_attachToOwner; // 0x80
        bool m_isDestructable; // 0x81
        class UMaterialInstance* m_healwardMaterial; // 0x88
        enum class EYDamageApplication m_application; // 0x90

    };

    struct FYAbilityActionBombardmentData : FYAbilityActionDataTableRow //ScriptStruct Prospect.YAbilityActionBombardmentData
    {
    //Children Prop Count (Fields): 13
    public:

        float m_radius; // 0x78
        float m_damageCapsuleRadius; // 0x7c
        float m_damageCapsuleHalfHeight; // 0x80
        float m_damage; // 0x84
        float m_damageDuration; // 0x88
        float m_warmUpDuration; // 0x8c
        class UParticleSystem* m_bombardmentStartParticleSystem; // 0x90
        class UParticleSystem* m_bombardmentEndParticleSystem; // 0x98
        struct FDataTableRowHandle m_playerActivationSFX; // 0xa0
        struct FDataTableRowHandle m_incomingSFX; // 0xb0
        struct FDataTableRowHandle m_impactSFX; // 0xc0
        int32_t m_amountOfStrikes; // 0xd0
        enum class EYDamageApplication m_application; // 0xd4

    };

    struct FYActiveVanityCustomizationInitializatonData //ScriptStruct Prospect.YActiveVanityCustomizationInitializatonData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TSoftObjectPtr<UStaticMesh> m_staticMesh; // 0x0
        struct TSoftObjectPtr<USkeletalMesh> m_skeletalMesh; // 0x28
        struct FDataTableRowHandle m_rowHandle; // 0x50
        struct FYInventoryItem m_desiredInventoryItem; // 0x60
        enum class EYVanityType m_vanityType; // 0x138

    };

    struct FYActivitySetsRow : FTableRowBase //ScriptStruct Prospect.YActivitySetsRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<enum class EYActivityType> m_activities; // 0x8

    };

    struct FYActivityDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YActivityDataTableRow
    {
    //Children Prop Count (Fields): 9
    public:

        enum class EYActivityType m_activityType; // 0x10
        struct FYCountPerMap m_desiredActivityActorCountPerMap; // 0x18
        float m_multiplierActorsAtMatchStart; // 0x70
        float m_respawnCheckInterval; // 0x74
        int32_t m_maxActorsToSpawnPerCheck; // 0x78
        float m_minimumDistanceToPlayers; // 0x7c
        struct FSoftClassProperty m_activityActorManagerClass; // 0x80
        struct FSoftClassProperty m_activityActorClass; // 0xa8
        struct TSoftObjectPtr<UTexture2D> m_activityIcon; // 0xd0

    };

    struct FYCountPerMap //ScriptStruct Prospect.YCountPerMap
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_count; // 0x0
        struct TMap<enum class EYMapType, int32_t> m_mapOverride; // 0x8

    };

    struct FYActivityCountEntry //ScriptStruct Prospect.YActivityCountEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_stringIdentifier; // 0x0
        int32_t m_count; // 0x10

    };

    struct FYEvaluationResult //ScriptStruct Prospect.YEvaluationResult
    {
    //Children Prop Count (Fields): 4
    public:

        float m_lastTimeEvaluated; // 0x0
        int32_t m_overAllScore; // 0x4
        struct TMap<enum class EYActivityType, int32_t> m_occupiedLocationsCount; // 0x8
        struct TMap<enum class EYActivityType, int32_t> m_scorePerType; // 0x58

    };

    struct FYFindActivityLocationsRequestData //ScriptStruct Prospect.YFindActivityLocationsRequestData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_amount; // 0x0
        enum class EYActivityType m_type; // 0x4
        float m_minimumDistanceToPlayers; // 0x8
        class AYActivityLocationLinked* m_areaLinkedLocationFilter; // 0x10

    };

    struct FYActivityLinkedLocations //ScriptStruct Prospect.YActivityLinkedLocations
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYActivityType, struct FYActivityLocationArray> m_linkedLocationsPerType; // 0x0

    };

    struct FYActivityLocationArray //ScriptStruct Prospect.YActivityLocationArray
    {
    public:


    };

    struct FYDespawnActorInfo //ScriptStruct Prospect.YDespawnActorInfo
    {
    //Children Prop Count (Fields): 1
    public:

        class AActor* m_actor; // 0x0

    };

    struct FYPooledActorEntry //ScriptStruct Prospect.YPooledActorEntry
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* m_actor; // 0x0
        char m_isInUse; // 0x8

    };

    struct FYActorUIWidgetData //ScriptStruct Prospect.YActorUIWidgetData
    {
    //Children Prop Count (Fields): 14
    public:

        struct TSoftObjectPtr<UTexture2D> m_uiTexture; // 0x0
        struct FSlateColor m_color; // 0x28
        struct FText m_playerName; // 0x50
        struct FText m_title; // 0x70
        float m_renderDistance; // 0x90
        float m_minRenderDistance; // 0x94
        bool m_playAnimation; // 0x98
        bool m_attachPlayerNameToTitle; // 0x99
        bool m_showArrow; // 0x9a
        bool m_overrideColor; // 0x9b
        bool m_attachAmountToTitle; // 0x9c
        bool m_useOwnerTeamColor; // 0x9d
        bool m_calculateDistanceToPlayer; // 0x9e
        struct FDataTableRowHandle m_dataTableRowHandleContext; // 0xa0

    };

    struct FYMapErrorInfo //ScriptStruct Prospect.YMapErrorInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> m_errors; // 0x0

    };

    struct FYAIAggroTuning //ScriptStruct Prospect.YAIAggroTuning
    {
    //Children Prop Count (Fields): 22
    public:

        float m_weightDistance; // 0x0
        float m_weightToken; // 0x4
        float m_weightNotInDBNO; // 0x8
        float m_weightTypeBonus; // 0xc
        float m_weightDamageReceived; // 0x10
        float m_weightVisibility; // 0x14
        float m_lastSeenTimeout; // 0x18
        float m_lastFarSightSeenTimeout; // 0x1c
        float m_lastSharedSenseTimeout; // 0x20
        float m_lastHeardTimeout; // 0x24
        float m_groupAggroMultiplier; // 0x28
        float m_groupAggroMinMultiplier; // 0x2c
        int32_t m_groupAggroStartingIndex; // 0x30
        float m_distanceReference; // 0x34
        float m_minDistanceToBeInvisibleInsideHideableFoliage; // 0x38
        float m_distancePanicThresholdForPlayer; // 0x3c
        float m_distancePanicPlayerMultiplier; // 0x40
        float m_targetTypePlayerBonus; // 0x44
        float m_minAggroSwitchCooldown; // 0x48
        float m_maxAggroSwitchCooldown; // 0x4c
        float m_damageReceivedDecayPerSecond; // 0x50
        float m_damageReceivedMax; // 0x54

    };

    struct FYAICombatAnalyticsData //ScriptStruct Prospect.YAICombatAnalyticsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYAICombatAnalyticsEvent m_aiCombatAnalyticsEvent; // 0x0
        struct TMap<struct FUniqueNetIdRepl, struct FYAIPerPlayerCombatData> m_aiCombatDataPerPlayer; // 0x148

    };

    struct FYAIPerPlayerCombatData //ScriptStruct Prospect.YAIPerPlayerCombatData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ai_damage_dealt; // 0x0
        int32_t hits_by_ai; // 0x4
        int32_t weakspots_hits_by_ai; // 0x8

    };

    struct FYAIBaseAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YAIBaseAnalyticsEvent
    {
    //Children Prop Count (Fields): 9
    public:

        int32_t location_x; // 0xa8
        int32_t location_y; // 0xac
        int32_t location_z; // 0xb0
        int32_t time_since_match_start; // 0xb4
        struct FString ai_name; // 0xb8
        struct FString ai_type; // 0xc8
        struct FString ai_variation; // 0xd8
        struct FString ai_squad_type_name; // 0xe8
        int32_t current_alive_ai; // 0xf8

    };

    struct FYAICombatAnalyticsEvent : FYAIBaseAnalyticsEvent //ScriptStruct Prospect.YAICombatAnalyticsEvent
    {
    //Children Prop Count (Fields): 11
    public:

        int32_t time_started_when_ai_attacks; // 0x100
        int32_t ai_damage_dealt; // 0x104
        int32_t Status; // 0x108
        struct FString player_id; // 0x110
        int32_t shot_by_ai; // 0x120
        int32_t hits_by_ai; // 0x124
        int32_t weakspots_hits_by_ai; // 0x128
        int32_t location_x_player; // 0x12c
        int32_t location_y_player; // 0x130
        int32_t location_z_player; // 0x134
        struct FString type_of_aggro; // 0x138

    };

    struct FYKilledAIAnalyticsEvents //ScriptStruct Prospect.YKilledAIAnalyticsEvents
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, struct FYKilledAIAnalyticsEvent> m_killedAIAnalyticsEventsByName; // 0x0

    };

    struct FYKilledAIAnalyticsEvent : FYAIBaseAnalyticsEvent //ScriptStruct Prospect.YKilledAIAnalyticsEvent
    {
    //Children Prop Count (Fields): 13
    public:

        int32_t location_x_killer; // 0x100
        int32_t location_y_killer; // 0x104
        int32_t location_z_killer; // 0x108
        int32_t time_since_user_joined; // 0x10c
        int32_t time_started_to_get_killed_by_player; // 0x110
        int32_t AI_activity; // 0x114
        int32_t ai_damage_dealt; // 0x118
        int32_t health_on_started_to_get_killed_by_player; // 0x11c
        struct FString player_item; // 0x120
        struct FString player_item_id; // 0x130
        int32_t hits_ai; // 0x140
        int32_t weakspot_hits_ai; // 0x144
        int32_t squadAI_id; // 0x148

    };

    struct FYTurnAngleData //ScriptStruct Prospect.YTurnAngleData
    {
    //Children Prop Count (Fields): 1
    public:

        float m_angle; // 0x0

    };

    struct FYHitAngleData //ScriptStruct Prospect.YHitAngleData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_dotValue; // 0x0
        float m_angle; // 0x4
        bool m_isRight; // 0x8

    };

    struct FYReplicatedAttackRuntimeData //ScriptStruct Prospect.YReplicatedAttackRuntimeData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_serverTimestamp; // 0x0
        int32_t m_indexRangedAttack; // 0x4
        enum class EYAIAttackStatus m_attackStatus; // 0x8

    };

    struct FYAIRangedAttackDefinition //ScriptStruct Prospect.YAIRangedAttackDefinition
    {
    //Children Prop Count (Fields): 9
    public:

        struct FDataTableRowHandle m_rangedAttackHandle; // 0x0
        class UAnimMontage* m_rangedAttackMontage; // 0x10
        struct FName m_nameAttack; // 0x18
        float m_overrideProjectileGravity; // 0x20
        float m_requestedArc; // 0x24
        float m_accuracy; // 0x28
        struct FDataTableRowHandle m_weaponTransport; // 0x30
        bool m_shootAtGroundLocationOfTarget; // 0x40
        struct TArray<struct FYAIAttackPhaseDefinition> m_attackPhases; // 0x48

    };

    struct FYAIAttackPhaseDefinition //ScriptStruct Prospect.YAIAttackPhaseDefinition
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName m_namePhase; // 0x0
        float m_durationFixed; // 0x8
        bool m_durationNeedsToBeCalculatedAtRuntime; // 0xc
        int32_t m_numTimesToPlayThisPhase; // 0x10
        int32_t m_numShots; // 0x14
        float m_firingDelayAfterPhaseStart; // 0x18
        float m_refireTime; // 0x1c
        bool m_isAffectedByGPAModifierAIAmountAttackPhaseCount; // 0x20

    };

    struct FYAIEQSPreferedRange : FYDataTableRowBase //ScriptStruct Prospect.YAIEQSPreferedRange
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, float> m_EQSParameters; // 0x10

    };

    struct FYDebugAIStats //ScriptStruct Prospect.YDebugAIStats
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, int32_t> m_aiCountPerType; // 0x0

    };

    struct FYAiProjectileTransportData //ScriptStruct Prospect.YAiProjectileTransportData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector m_shootFromLocation; // 0x0
        struct FVector m_shootAtLocation; // 0xc
        struct FVector m_launchVelocity; // 0x18
        float m_gravityZMultiplier; // 0x24

    };

    struct FYAiRangedAttackData //ScriptStruct Prospect.YAiRangedAttackData
    {
    //Children Prop Count (Fields): 5
    public:

        class AYAICharacter* m_aiAttacker; // 0x0
        class AActor* m_victimActor; // 0x8
        struct FYAIRangedAttackDefinitionNew m_rangedAttackDefinition; // 0x10
        class AYProjectile* m_preSpawnedProjectile; // 0x40
        struct FVector m_overrideAttackerLocation; // 0x48

    };

    struct FYAIRangedAttackDefinitionNew : FTableRowBase //ScriptStruct Prospect.YAIRangedAttackDefinitionNew
    {
    //Children Prop Count (Fields): 6
    public:

        float m_overrideProjectileGravity; // 0x8
        bool m_shootStraight; // 0xc
        float m_accuracy; // 0x10
        float m_requestedArc; // 0x14
        bool m_shootAtGroundLocationOfTarget; // 0x18
        struct FDataTableRowHandle m_weaponTransport; // 0x20

    };

    struct FYAIAllyAlertEvent //ScriptStruct Prospect.YAIAllyAlertEvent
    {
    //Children Prop Count (Fields): 3
    public:

        class AYAISquad* m_aiSquad; // 0x0
        class AActor* m_target; // 0x8
        class AActor* m_characterAISensingTarget; // 0x10

    };

    struct FYAISenseTuning //ScriptStruct Prospect.YAISenseTuning
    {
    //Children Prop Count (Fields): 4
    public:

        float m_decreasePerSecond; // 0x0
        float m_targetIsCrouchingMultiplier; // 0x4
        struct TMap<enum class EYAIBehaviorReaction, float> m_behaviorReactionThresholds; // 0x8
        float m_maxIntensity; // 0x58

    };

    struct FYAINavMeshInfo //ScriptStruct Prospect.YAINavMeshInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<enum class EYEnemyType> m_supportedEnemyTypes; // 0x0

    };

    struct FYAISpawnCharactersRow : FYDataTableRowBase //ScriptStruct Prospect.YAISpawnCharactersRow
    {
    //Children Prop Count (Fields): 2
    public:

        bool m_usePrototypeVersionByDefault; // 0x10
        struct TMap<enum class EYEnemyType, struct FYAISpawnCharacterInfo> m_aiCharactersPerType; // 0x18

    };

    struct FYAISpawnCharacterInfo //ScriptStruct Prospect.YAISpawnCharacterInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSoftClassProperty m_aiCharacter; // 0x0
        struct FSoftClassProperty m_aiCharacterPrototypeVersion; // 0x28

    };

    struct FYAISquadSpawnRow : FYDataTableRowBase //ScriptStruct Prospect.YAISquadSpawnRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYAISquadDefinition> m_spawnOptions; // 0x10
        struct TArray<struct FYAISquadDefinition> m_spawnOptionsStorm; // 0x20

    };

    struct FYAISquadDefinition //ScriptStruct Prospect.YAISquadDefinition
    {
    //Children Prop Count (Fields): 2
    public:

        float m_spawnWeight; // 0x0
        struct TArray<struct FYSpawnTypeInfo> m_ais; // 0x8

    };

    struct FYSpawnTypeInfo //ScriptStruct Prospect.YSpawnTypeInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYAICharacterDefinition m_aiCharacter; // 0x0
        int32_t m_amount; // 0x48
        struct FGameplayTagContainer m_tags; // 0x50

    };

    struct FYAISquadSpawnDefinition //ScriptStruct Prospect.YAISquadSpawnDefinition
    {
    //Children Prop Count (Fields): 11
    public:

        struct FVector m_spawnLocation; // 0x0
        struct TArray<struct FTransform> m_subSpawnLocations; // 0x10
        struct FVector m_roamingLocationOverride; // 0x20
        float m_roamingRadiusOverride; // 0x2c
        float m_forcedResetRadius; // 0x30
        struct FRotator m_spawnRotationOverride; // 0x34
        bool m_purgeSquadOnceNoPlayerClose; // 0x40
        struct FString m_spawnContextString; // 0x48
        class AActor* m_spawnContextActor; // 0x58
        struct FGameplayTagContainer m_gameplayTags; // 0x60
        struct FString m_squadTypeName; // 0x80

    };

    struct FYSquadDefinition //ScriptStruct Prospect.YSquadDefinition
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYSquadAIType> m_AIsToSpawn; // 0x0

    };

    struct FYAITargetInfo //ScriptStruct Prospect.YAITargetInfo
    {
    //Children Prop Count (Fields): 19
    public:

        bool m_isVisible; // 0x0
        bool m_isCurrentCombatAggroTarget; // 0x1
        bool m_isPlayer; // 0x2
        bool m_isDBNO; // 0x3
        float m_currentDistance; // 0x4
        float m_damagedReceivedFromTarget; // 0x8
        int32_t m_registeredTokens; // 0xc
        int32_t m_maxTokens; // 0x10
        float m_timeTargetAcquired; // 0x14
        float m_minTimeToAggro; // 0x18
        float m_aggroValue; // 0x1c
        float m_groupAggroMultiplier; // 0x20
        int32_t m_groupAggroIndex; // 0x24
        enum class EYAISenseType m_highestSenseType; // 0x28
        enum class EYAISenseType m_lastPeceivedSenseType; // 0x29
        struct FVector m_lastPerceivedSenseLocation; // 0x2c
        struct TMap<enum class EYAISenseType, float> m_lastTimeTargetWasPerceivedMap; // 0x38
        struct FYAITargetDetailedAggroInfo m_detailedAggroInfo; // 0x88
        struct FYAITargetAggroMultiplier m_multiplier; // 0xd8

    };

    struct FYAITargetAggroMultiplier //ScriptStruct Prospect.YAITargetAggroMultiplier
    {
    //Children Prop Count (Fields): 2
    public:

        float m_aggroMultiplier; // 0x0
        float m_multiplierTimeLeft; // 0x4

    };

    struct FYAITargetDetailedAggroInfo //ScriptStruct Prospect.YAITargetDetailedAggroInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYAIDetailAggroType, float> m_detailedAggroValues; // 0x0

    };

    struct FYAISenseTriggerRow : FYDataTableRowBase //ScriptStruct Prospect.YAISenseTriggerRow
    {
    //Children Prop Count (Fields): 3
    public:

        float m_intensity; // 0x10
        float m_maxRange; // 0x14
        enum class EYAISenseType m_type; // 0x18

    };

    struct FYAITuningRow : FYDataTableRowBase //ScriptStruct Prospect.YAITuningRow
    {
    //Children Prop Count (Fields): 30
    public:

        struct TMap<enum class EYAIState, float> m_movementSpeedPerState; // 0x10
        float m_characterMovementSpeed; // 0x60
        float m_resetRadius; // 0x64
        float m_basePenetration; // 0x68
        struct TArray<struct FYAIMeleeAttackDefinition> m_meleeAttacks; // 0x70
        float m_meleeStrafeMoveDistance; // 0x80
        float m_meleeBackOffDistance; // 0x84
        float m_weakAreaDamageMultiplier; // 0x88
        float m_stabilityDamageRagdollThresholds; // 0x8c
        struct TArray<struct FYAIRangedAttackDefinition> m_rangedAttacks; // 0x90
        struct TArray<struct FYAIRangedAttackMontageDefinition> m_rangedAttackMontages; // 0xa0
        struct FDataTableRowHandle m_eqsPreferredRange; // 0xb0
        enum class EYEnemyType m_type; // 0xc0
        struct FText m_characterAIName; // 0xc8
        struct FGameplayTagContainer m_defaultGameplayTags; // 0xe8
        struct FYAISpawnArchetypeData m_spawnArchetypeData; // 0x108
        struct FDataTableRowHandle m_senseTuningRow; // 0x110
        struct FDataTableRowHandle m_lootRow; // 0x120
        struct FDataTableRowHandle m_lootRowStorm; // 0x130
        int32_t m_defaultArmor; // 0x140
        struct TArray<struct FDataTableRowHandle> m_armorRows; // 0x148
        float m_effectiveHealthPerArmorConstant; // 0x158
        float m_damageReductionScalarMin; // 0x15c
        float m_damageReductionScalarMax; // 0x160
        struct FDataTableRowHandle m_healthRow; // 0x168
        struct TMap<struct FName, float> m_damageAreas; // 0x178
        struct TMap<struct FName, enum class EYAIWeakSpotDeathAnimType> m_weakSpotDeathAnimTypeMap; // 0x1c8
        struct TMap<struct FName, struct FYAIStaggerDefinition> m_staggers; // 0x218
        struct TArray<struct FYAIStaggerTriggerHealthPercentage> m_percentageTriggers; // 0x268
        struct TArray<struct FYAIStaggerTriggerWeakspotHealth> m_weakspotTriggers; // 0x278

    };

    struct FYAIStaggerTriggerWeakspotHealth //ScriptStruct Prospect.YAIStaggerTriggerWeakspotHealth
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FName> m_hitspotNames; // 0x0
        struct TArray<float> m_damageValues; // 0x10
        struct FName m_staggerName; // 0x20

    };

    struct FYAIStaggerTriggerHealthPercentage //ScriptStruct Prospect.YAIStaggerTriggerHealthPercentage
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<float> m_healthPercentages; // 0x0
        float m_time; // 0x10
        struct FName m_staggerName; // 0x14

    };

    struct FYAIStaggerDefinition //ScriptStruct Prospect.YAIStaggerDefinition
    {
    //Children Prop Count (Fields): 4
    public:

        float m_cooldown; // 0x0
        struct TArray<struct FName> m_additionalStaggersToCooldown; // 0x8
        bool m_isFlinch; // 0x18
        struct TArray<struct FYAIStaggerAnimations> m_animationOptions; // 0x20

    };

    struct FYAIStaggerAnimations //ScriptStruct Prospect.YAIStaggerAnimations
    {
    //Children Prop Count (Fields): 3
    public:

        float m_minAngle; // 0x0
        float m_maxAngle; // 0x4
        struct TArray<class UAnimMontage*> m_animMontages; // 0x8

    };

    struct FYAISpawnArchetypeData //ScriptStruct Prospect.YAISpawnArchetypeData
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYNavMeshType m_spawnNavMesh; // 0x0

    };

    struct FYAIRangedAttackMontageDefinition //ScriptStruct Prospect.YAIRangedAttackMontageDefinition
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_attackName; // 0x0
        struct TSoftObjectPtr<UAnimMontage> m_animMontageToPlay; // 0x20

    };

    struct FYAIMeleeAttackDefinition //ScriptStruct Prospect.YAIMeleeAttackDefinition
    {
    //Children Prop Count (Fields): 13
    public:

        struct FGameplayTag m_requiredComboTag; // 0x0
        bool m_predictProjectilePath; // 0x8
        struct FPredictProjectilePathParams m_predictProjectilePathParameters; // 0x10
        float m_minDistanceToPredictedHitToAllowAttack; // 0x70
        float m_meleeAttackRangeMin; // 0x74
        float m_meleeAttackRangeMax; // 0x78
        float m_velocityOwnerMin; // 0x7c
        float m_blockTime; // 0x80
        float m_meleeAttackDot2D; // 0x84
        float m_meleeAttackMaxVelocityPredicition; // 0x88
        float m_meleeDamageCheckDistanceOffset; // 0x8c
        struct FDataTableRowHandle m_meleeAttack; // 0x90
        struct TArray<struct TSoftObjectPtr<UAnimMontage>> m_meleeAttackMontages; // 0xa0

    };

    struct FPredictProjectilePathParams //ScriptStruct Engine.PredictProjectilePathParams
    {
    //Children Prop Count (Fields): 14
    public:

        struct FVector StartLocation; // 0x0
        struct FVector LaunchVelocity; // 0xc
        bool bTraceWithCollision; // 0x18
        float ProjectileRadius; // 0x1c
        float MaxSimTime; // 0x20
        bool bTraceWithChannel; // 0x24
        enum class ECollisionChannel TraceChannel; // 0x25
        struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x28
        struct TArray<class AActor*> ActorsToIgnore; // 0x38
        float SimFrequency; // 0x48
        float OverrideGravityZ; // 0x4c
        enum class EDrawDebugTrace DrawDebugType; // 0x50
        float DrawDebugTime; // 0x54
        bool bTraceComplex; // 0x58

    };

    struct FYAISenseTuningRow : FYDataTableRowBase //ScriptStruct Prospect.YAISenseTuningRow
    {
    //Children Prop Count (Fields): 11
    public:

        float m_sightRadius; // 0x10
        float m_farSightRadius; // 0x14
        float m_loseSightRadiusAdditional; // 0x18
        float m_peripheralVisionAngleDegrees; // 0x1c
        float m_lostSightTimeout; // 0x20
        float m_hearingRange; // 0x24
        float m_losHearingRange; // 0x28
        float m_hearingEventsRangeMultiplier; // 0x2c
        float m_shareSenseRadius; // 0x30
        struct FYAIAggroTuning m_aggroTuning; // 0x34
        struct TMap<enum class EYAISenseType, struct FYAISenseTuning> m_senses; // 0x90

    };

    struct FYAITuningSnipedReactionTuning : FTableRowBase //ScriptStruct Prospect.YAITuningSnipedReactionTuning
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FDataTableRowHandle> m_perks; // 0x8
        float m_snipedMinimunDamage; // 0x18
        float m_snipedDamagedRange; // 0x1c
        float m_snipedPlayerRadius; // 0x20

    };

    struct FYAITuningCallReinforcementsRow : FTableRowBase //ScriptStruct Prospect.YAITuningCallReinforcementsRow
    {
    //Children Prop Count (Fields): 8
    public:

        float m_callReinforcementRadius; // 0x8
        struct FDataTableRowHandle m_callReinforcementDatatableRowName; // 0x10
        int32_t m_callReinforcementOnAllyCount; // 0x20
        float m_callReinforcementInterrupDamage; // 0x24
        float m_callReinforcementInterrupTime; // 0x28
        float m_callReinforcementCooldown; // 0x2c
        int32_t m_callReinforcementMaxCount; // 0x30
        int32_t m_callReinforcementWaves; // 0x34

    };

    struct FYAITuningBuffAlliesTuning : FTableRowBase //ScriptStruct Prospect.YAITuningBuffAlliesTuning
    {
    //Children Prop Count (Fields): 7
    public:

        struct TArray<struct FDataTableRowHandle> m_perks; // 0x8
        float m_buffCooldown; // 0x18
        float m_buffRadius; // 0x1c
        class AActor* m_buffClasses; // 0x20
        bool m_buffExcludeSelf; // 0x28
        float m_buffInterrupDamage; // 0x2c
        float m_buffInterrupTime; // 0x30

    };

    struct FYEQSParameterFloat //ScriptStruct Prospect.YEQSParameterFloat
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName m_name; // 0x0
        float m_value; // 0x8

    };

    struct FYAIDodgeDefinition //ScriptStruct Prospect.YAIDodgeDefinition
    {
    //Children Prop Count (Fields): 4
    public:

        float m_dodgeDamagedThreshold; // 0x0
        float m_dodgeMinDot2DToCombatTarget; // 0x4
        float m_dodgeBlockDurationAfterDodge; // 0x8
        float m_chanceCancelHitReactionByDodge; // 0xc

    };

    struct FYAIStabilityDefinition //ScriptStruct Prospect.YAIStabilityDefinition
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName m_name; // 0x0
        float m_cooldown; // 0x8
        float m_stabilityThreshold; // 0xc
        class UCurveFloat* m_stabilityMultiplierAfterTrigger; // 0x10
        float m_stabilityDecreasePerSecond; // 0x18
        bool m_isFlinchAnimation; // 0x1c
        struct TArray<struct FDataTableRowHandle> m_perksToApply; // 0x20

    };

    struct FYAITurnAnimationRow : FYDataTableRowBase //ScriptStruct Prospect.YAITurnAnimationRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYAIState, struct FYAITurnAnimationsData> m_turnsAnimationPerState; // 0x10

    };

    struct FYAITurnAnimationsData //ScriptStruct Prospect.YAITurnAnimationsData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYAITurnAnimation> m_animations; // 0x0

    };

    struct FYAITurnAnimation //ScriptStruct Prospect.YAITurnAnimation
    {
    //Children Prop Count (Fields): 2
    public:

        class UAnimMontage* m_animations; // 0x0
        float m_angle; // 0x8

    };

    struct FYAimTargetInfo //ScriptStruct Prospect.YAimTargetInfo
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* m_targetActor; // 0x0
        struct FVector m_targetLocation; // 0x8

    };

    struct FYAIAudio //ScriptStruct Prospect.YAIAudio
    {
    //Children Prop Count (Fields): 23
    public:

        struct FYAIBarkAudioInfo m_barkIdle; // 0x0
        struct FYAIBarkAudioInfo m_barkCombat; // 0x18
        struct FDataTableRowHandle m_stateEnterIdle; // 0x30
        struct FDataTableRowHandle m_stateEnterCombat; // 0x40
        struct FDataTableRowHandle m_death; // 0x50
        struct FDataTableRowHandle m_deathCritical; // 0x60
        struct FDataTableRowHandle m_barkCombatAlertBehindPlayer; // 0x70
        struct FDataTableRowHandle m_attackStartMelee; // 0x80
        struct FDataTableRowHandle m_attackStartRanged; // 0x90
        struct FDataTableRowHandle m_attackRangedFired; // 0xa0
        struct FDataTableRowHandle m_hitReaction; // 0xb0
        struct FDataTableRowHandle m_buffingStart; // 0xc0
        struct FDataTableRowHandle m_buffingInterrupt; // 0xd0
        struct FDataTableRowHandle m_summoningStart; // 0xe0
        struct FDataTableRowHandle m_summoningInterrupt; // 0xf0
        struct FDataTableRowHandle m_snipedReaction; // 0x100
        struct FDataTableRowHandle m_spawning; // 0x110
        struct FDataTableRowHandle m_spawningProjectile; // 0x120
        struct FDataTableRowHandle m_flinch; // 0x130
        struct FDataTableRowHandle m_wingsFlapping; // 0x140
        float m_wingsFlappingFadeIn; // 0x150
        float m_wingsFlappingFadeOut; // 0x154
        bool m_playFoliageAudio; // 0x158

    };

    struct FYAIBarkAudioInfo //ScriptStruct Prospect.YAIBarkAudioInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_barkSound; // 0x0
        float m_barkIntervalMin; // 0x10
        float m_barkIntervalMax; // 0x14

    };

    struct FYAIEndLoopInfo //ScriptStruct Prospect.YAIEndLoopInfo
    {
    //Children Prop Count (Fields): 2
    public:

        float m_serverTimestamp; // 0x0
        float m_blendOutTime; // 0x4

    };

    struct FYAIMontagePlayInfo //ScriptStruct Prospect.YAIMontagePlayInfo
    {
    //Children Prop Count (Fields): 6
    public:

        class UAnimMontage* m_montage; // 0x0
        float m_rootMotionRotationScale; // 0x8
        float m_serverTimestamp; // 0xc
        bool m_allowPhysicsRotation; // 0x10
        struct FName m_sectionName; // 0x14
        struct FGuid m_animGuid; // 0x1c

    };

    struct FYAIMontageStopInfo //ScriptStruct Prospect.YAIMontageStopInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UAnimMontage* m_montage; // 0x0
        float m_serverTimestamp; // 0x8
        float m_blendOutTime; // 0xc

    };

    struct FYAIVariationsRow : FYDataTableRowBase //ScriptStruct Prospect.YAIVariationsRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_aiTuningDataHandle; // 0x10
        struct TSoftObjectPtr<UMaterialInterface> m_material; // 0x20
        struct TSoftObjectPtr<USkeletalMesh> m_mesh; // 0x48

    };

    struct FYAmmoTypeDataTableRow : FYItemDataTableRowBase //ScriptStruct Prospect.YAmmoTypeDataTableRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_lootDropHandle; // 0x408
        struct FText m_ammoNamePlayerFacing; // 0x418
        struct TSoftObjectPtr<UMaterialInstance> m_ammoIcon; // 0x438

    };

    struct FYClientMapLoadingStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YClientMapLoadingStats
    {
    //Children Prop Count (Fields): 10
    public:

        uint32_t map_loading_time; // 0xa8
        uint32_t physical_memory_total; // 0xac
        uint64_t physical_memory_usage; // 0xb0
        uint64_t physical_memory_available; // 0xb8
        uint64_t physical_memory_peak; // 0xc0
        uint64_t page_size; // 0xc8
        uint64_t virtual_memory_total; // 0xd0
        uint64_t virtual_memory_usage; // 0xd8
        uint64_t virtual_memory_available; // 0xe0
        uint64_t virtual_memory_peak; // 0xe8

    };

    struct FYPlayerQuitEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerQuitEvent
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Reason; // 0xa8
        struct FString game_situation; // 0xb8

    };

    struct FYAnalyticsHardwareStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YAnalyticsHardwareStats
    {
    //Children Prop Count (Fields): 22
    public:

        struct FString graphic_device_name; // 0xa8
        struct FString graphic_device_driver_version; // 0xb8
        struct FString graphic_device_vendor; // 0xc8
        struct FString graphic_device_id; // 0xd8
        int32_t graphic_memory_size; // 0xe8
        int32_t graphic_memory_size_dedicated; // 0xec
        int32_t graphic_memory_size_shared; // 0xf0
        struct FString directx_feature_level; // 0xf8
        struct FString cpu_name; // 0x108
        int32_t cpu_model; // 0x118
        int32_t map_loading_time; // 0x11c
        int32_t cpu_stepping; // 0x120
        int32_t cpu_processor_frequency; // 0x124
        int32_t cpu_processor_count; // 0x128
        int32_t cpu_processor_real_count; // 0x12c
        int32_t cpu_processor_virtual_count; // 0x130
        int32_t system_memory_size; // 0x134
        struct FString system_memory_type; // 0x138
        struct FString os_name; // 0x148
        struct FString os_version; // 0x158
        struct FString hard_drive_type; // 0x168
        struct FString machine_name; // 0x178

    };

    struct FYAnalyticsTypesSettingsRow : FTableRowBase //ScriptStruct Prospect.YAnalyticsTypesSettingsRow
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_isEnabled; // 0x8
        bool m_ignoreUserSampling; // 0x9
        int32_t m_samplingRate; // 0xc
        bool m_serverSideSampling; // 0x10

    };

    struct FYArmorDataTableRow : FYItemDataTableRowBase //ScriptStruct Prospect.YArmorDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_armorAmount; // 0x408
        struct TArray<struct FDataTableRowHandle> m_armoredHitZones; // 0x410
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifiers; // 0x420
        struct TArray<struct FDataTableRowHandle> m_perks; // 0x430

    };

    struct FYShieldDataTableRow : FYArmorDataTableRow //ScriptStruct Prospect.YShieldDataTableRow
    {
    public:


    };

    struct FYHelmetDataTableRow : FYArmorDataTableRow //ScriptStruct Prospect.YHelmetDataTableRow
    {
    public:


    };

    struct FYAssetVariationDefinitionRow : FYDataTableRowBase //ScriptStruct Prospect.YAssetVariationDefinitionRow
    {
    public:


    };

    struct FYAudioEffectZoneInstanceData //ScriptStruct Prospect.YAudioEffectZoneInstanceData
    {
    //Children Prop Count (Fields): 9
    public:

        bool m_linkedPlayerStateActive; // 0x8
        bool m_linkedMovementComponentMoving; // 0x9
        float m_previousActorYaw; // 0xc
        struct TWeakObjectPtr<struct UAudioComponent> m_playingAudioComponent; // 0x10
        struct FVector m_linkedZoneLocation; // 0x18
        float m_currentPlayerWalkStateValue; // 0x24
        float m_currentStartPlayerWalkStateValue; // 0x28
        float m_targetPlayerWalkStateValue; // 0x2c
        float m_currentPlayerWalkInterpolationTime; // 0x30

    };

    struct FYAudioEffectZoneElement //ScriptStruct Prospect.YAudioEffectZoneElement
    {
    public:


    };

    struct FYAudioEffectZoneDataType //ScriptStruct Prospect.YAudioEffectZoneDataType
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EYAudioEffectZoneEffectType m_effectType; // 0x0
        bool m_playEffectOnLinkedActor; // 0x1
        struct FDataTableRowHandle m_effectHandle; // 0x8
        float m_effectFadeOutTime; // 0x18
        float m_effectFadeOutLevel; // 0x1c
        struct FName m_playerWalkStateAudioParameter; // 0x20
        float m_playerWalkStateInterpolationTime; // 0x28
        float m_basePlayerWalkStateValue; // 0x2c
        struct TArray<struct FYAudioEffectZoneMovementStateData> m_playerWalkStates; // 0x30
        float m_movementStopEffectDelayDuration; // 0x40

    };

    struct FYAudioEffectZoneMovementStateData //ScriptStruct Prospect.YAudioEffectZoneMovementStateData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYPlayerStateBlueprint m_targetState; // 0x0
        float m_targetWalkStateValue; // 0x4

    };

    struct FYAudioSettingsRow : FYDataTableRowBase //ScriptStruct Prospect.YAudioSettingsRow
    {
    //Children Prop Count (Fields): 8
    public:

        float m_announcementInterruptSoundFadeoutTime; // 0x10
        float m_fallbackSoundDuration; // 0x14
        float m_minDurationAnnouncement; // 0x18
        float m_maxDurationAnnouncement; // 0x1c
        float m_maxQueueTime; // 0x20
        struct FName m_factionIdFallback; // 0x24
        float m_subtitleOcclusionCullingThreshold; // 0x2c
        struct TMap<enum class EYVolumeBusType, class USoundClass*> m_soundClassesPerVolumeBusType; // 0x30

    };

    struct FYVOCategoryRow : FYDataTableRowBase //ScriptStruct Prospect.YVOCategoryRow
    {
    //Children Prop Count (Fields): 2
    public:

        uint32_t m_priority; // 0x10
        struct FLinearColor m_color; // 0x14

    };

    struct FYVOSpeakerRow : FYDataTableRowBase //ScriptStruct Prospect.YVOSpeakerRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_name; // 0x10
        class UTexture2D* m_icon; // 0x30
        struct FText m_description; // 0x38

    };

    struct FYUIAudioDataTableRow : FYAudioDataTableRow //ScriptStruct Prospect.YUIAudioDataTableRow
    {
    public:


    };

    struct FYAudioTagRow : FYDataTableRowBase //ScriptStruct Prospect.YAudioTagRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FGameplayTag, class USoundBase*> m_sounds; // 0x10

    };

    struct FYPlayerAudioDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YPlayerAudioDataTableRow
    {
    //Children Prop Count (Fields): 9
    public:

        struct FDataTableRowHandle m_mineralLootDiscoveredSound; // 0x10
        struct FYInteractionAudio m_interactionAudio; // 0x20
        struct FYPlayerHealthAudioData m_healthData; // 0x40
        struct FYCommWheelAudioData m_commWheelData; // 0x88
        struct FYPlayerAnnouncementAudioData m_announcementData; // 0xd8
        struct FYPlayerHUDAudioData m_hudAudioData; // 0x298
        struct FYPlayerPactHUDAudioData m_pactHUDAudioData; // 0x348
        struct FDataTableRowHandle m_standEventHandle; // 0x3a8
        struct FYPlayerAbilitiesAudioData m_abilities; // 0x3b8

    };

    struct FYPlayerAbilitiesAudioData //ScriptStruct Prospect.YPlayerAbilitiesAudioData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_cloakStartSound; // 0x0
        struct FDataTableRowHandle m_cloakEndSound; // 0x10

    };

    struct FYPlayerPactHUDAudioData //ScriptStruct Prospect.YPlayerPactHUDAudioData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FDataTableRowHandle m_pactInviteIssued; // 0x0
        struct FDataTableRowHandle m_pactInviteReceived; // 0x10
        struct FDataTableRowHandle m_pactInviteExpired; // 0x20
        struct FDataTableRowHandle m_pactStarted; // 0x30
        struct FDataTableRowHandle m_pactCancelled; // 0x40
        struct FDataTableRowHandle m_pactEnded; // 0x50

    };

    struct FYPlayerHUDAudioData //ScriptStruct Prospect.YPlayerHUDAudioData
    {
    //Children Prop Count (Fields): 11
    public:

        struct FDataTableRowHandle m_gearStoreSuccessfulPurchase; // 0x0
        struct FDataTableRowHandle m_matchStarted; // 0x10
        struct FDataTableRowHandle m_levelUp; // 0x20
        struct FDataTableRowHandle m_maxLevel; // 0x30
        struct FDataTableRowHandle m_scoreFromTeammate; // 0x40
        struct FDataTableRowHandle m_scoreFromSelf; // 0x50
        struct FDataTableRowHandle m_socialActorPing; // 0x60
        struct TArray<struct FYLootNotificationAudioData> m_lootNotifications; // 0x70
        struct FDataTableRowHandle m_abilityActivationDeniedDueCooldown; // 0x80
        struct FDataTableRowHandle m_weaponDropFromInventory; // 0x90
        struct FDataTableRowHandle m_abilityDropFromInventory; // 0xa0

    };

    struct FYLootNotificationAudioData //ScriptStruct Prospect.YLootNotificationAudioData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYItemRarityType m_rarity; // 0x0
        struct FDataTableRowHandle m_lootNotification; // 0x8

    };

    struct FYPlayerAnnouncementAudioData //ScriptStruct Prospect.YPlayerAnnouncementAudioData
    {
    //Children Prop Count (Fields): 28
    public:

        struct FDataTableRowHandle m_gearStoreSuccessfulPurchase; // 0x0
        struct FDataTableRowHandle m_gearStoreSuccessfulUpgrade; // 0x10
        struct FDataTableRowHandle m_levelUp; // 0x20
        struct FDataTableRowHandle m_maxLevel; // 0x30
        struct FDataTableRowHandle m_pactInviteIssued; // 0x40
        struct FDataTableRowHandle m_pactInviteReceived; // 0x50
        struct FDataTableRowHandle m_pactAccepted; // 0x60
        struct FDataTableRowHandle m_pactDeclined; // 0x70
        struct FDataTableRowHandle m_pactStartCancellation; // 0x80
        struct FDataTableRowHandle m_pactEnded; // 0x90
        struct FDataTableRowHandle m_pactMateRevived; // 0xa0
        struct FDataTableRowHandle m_suitPactmateDied; // 0xb0
        struct FDataTableRowHandle m_suitHealthWarningStart; // 0xc0
        struct FDataTableRowHandle m_BFCEscapeSuccess; // 0xd0
        struct FDataTableRowHandle m_BFCEscapeFailure; // 0xe0
        struct FDataTableRowHandle m_BFCPlayerDiedbyMonster; // 0xf0
        struct FDataTableRowHandle m_BFCPlayedDiedbyPlayer; // 0x100
        struct FDataTableRowHandle m_BFCYouKilledaPlayer; // 0x110
        struct FDataTableRowHandle m_SuitPlayerEnterDBNO; // 0x120
        struct FDataTableRowHandle m_SuitPlayerRevived; // 0x130
        struct FDataTableRowHandle m_suitStartExecuting; // 0x140
        struct FDataTableRowHandle m_suitStartReviving; // 0x150
        struct FDataTableRowHandle m_bountyAnnounced; // 0x160
        struct FDataTableRowHandle m_localPlayerGottenBounty; // 0x170
        struct FDataTableRowHandle m_bountyCollected; // 0x180
        struct FDataTableRowHandle m_localPlayerBountyTaken; // 0x190
        struct FDataTableRowHandle m_bountyTimedOut; // 0x1a0
        struct FDataTableRowHandle m_localPlayerBountyTimedOut; // 0x1b0

    };

    struct FYCommWheelAudioData //ScriptStruct Prospect.YCommWheelAudioData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FDataTableRowHandle m_onOpenCommWheel; // 0x0
        struct FDataTableRowHandle m_onOpenSubCommWheel; // 0x10
        struct FDataTableRowHandle m_onAbortCommWheel; // 0x20
        struct FDataTableRowHandle m_onHoverOverItem; // 0x30
        struct FDataTableRowHandle m_onCommandInput; // 0x40

    };

    struct FYPlayerHealthAudioData //ScriptStruct Prospect.YPlayerHealthAudioData
    {
    //Children Prop Count (Fields): 5
    public:

        float m_playLowHealthAlarmAtPercent; // 0x0
        struct FDataTableRowHandle m_lowHealthAlarmStart; // 0x8
        struct FDataTableRowHandle m_lowHealthAlarmStop; // 0x18
        struct FDataTableRowHandle m_lowHealthAlarmStopDBNO; // 0x28
        struct FDataTableRowHandle m_fallingDamageEvent; // 0x38

    };

    struct FYInteractionAudio //ScriptStruct Prospect.YInteractionAudio
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_lootContainerOpen; // 0x0
        struct FDataTableRowHandle m_lootContainerClose; // 0x10

    };

    struct FYWeaponAudioDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YWeaponAudioDataTableRow
    {
    //Children Prop Count (Fields): 20
    public:

        struct TSoftObjectPtr<USoundBase> m_startSpinUpSound; // 0x10
        float m_spinUpSoundFadeOut; // 0x38
        struct TSoftObjectPtr<USoundBase> m_startFiringSound; // 0x40
        float m_firingSoundFadeOut; // 0x68
        struct TSoftObjectPtr<USoundBase> m_weaponFiredSound; // 0x70
        struct TSoftObjectPtr<USoundBase> m_weaponTailSound; // 0x98
        struct TSoftObjectPtr<USoundBase> m_weaponSilencedFiredSound; // 0xc0
        struct TSoftObjectPtr<USoundBase> m_weaponSilencedTailSound; // 0xe8
        struct TSoftObjectPtr<USoundBase> m_stopFiringSound; // 0x110
        float m_stopFiringDelay; // 0x138
        struct TSoftObjectPtr<USoundBase> m_burstCompleteSound; // 0x140
        struct TSoftObjectPtr<USoundBase> m_equipWeaponSound; // 0x168
        struct TSoftObjectPtr<USoundBase> m_unequipWeaponSound; // 0x190
        struct TSoftObjectPtr<USoundBase> m_outOfAmmoInClipSound; // 0x1b8
        struct TSoftObjectPtr<USoundBase> m_outOfAmmoSound; // 0x1e0
        struct TSoftObjectPtr<USoundBase> m_startTargetingSound; // 0x208
        struct TSoftObjectPtr<USoundBase> m_stopTargetingSound; // 0x230
        struct TSoftObjectPtr<USoundBase> m_targetingCompleteSound; // 0x258
        struct TArray<struct TSoftObjectPtr<USoundBase>> m_reloadSounds; // 0x280
        bool m_runAutomationTest; // 0x290

    };

    struct FYElasticsearchData //ScriptStruct Prospect.YElasticsearchData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TMap<struct FString, int32_t> m_integerValues; // 0x0
        struct TMap<struct FString, float> m_floatValues; // 0x50
        struct TMap<struct FString, struct FString> m_stringValues; // 0xa0
        struct TMap<struct FString, bool> m_boolValues; // 0xf0
        struct FString m_title; // 0x140

    };

    struct FYEditorMetricsData //ScriptStruct Prospect.YEditorMetricsData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TMap<struct FString, int32_t> metricsNumericData; // 0x0
        struct TMap<struct FString, struct FString> metricsStringData; // 0x50
        struct TMap<struct FString, bool> metricsBoolData; // 0xa0

    };

    struct FYWeaponModCombinationWithDamage : FTableRowBase //ScriptStruct Prospect.YWeaponModCombinationWithDamage
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName m_weaponName; // 0x8
        struct TArray<struct FName> m_modCombinations; // 0x10
        struct FName m_targetName; // 0x20
        float m_damageDealt; // 0x28
        float m_distanceToTarget; // 0x2c

    };

    struct FYPlayerAutomationData //ScriptStruct Prospect.YPlayerAutomationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYAutomationLoadingMetrics m_loadingMetrics; // 0x0
        bool m_finishedInitialization; // 0x50

    };

    struct FYAutomationLoadingMetrics //ScriptStruct Prospect.YAutomationLoadingMetrics
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, int32_t> m_timesLoadedMap; // 0x0

    };

    struct FYWeaponSuitableModsCombination //ScriptStruct Prospect.YWeaponSuitableModsCombination
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> m_modCombinations; // 0x0

    };

    struct FYWeaponSuitableMods //ScriptStruct Prospect.YWeaponSuitableMods
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FName> m_modNames; // 0x0
        enum class EYModificationSlotType m_modificationSlotType; // 0x10

    };

    struct FYBannerVanityRow : FYVanityItemRowBase //ScriptStruct Prospect.YBannerVanityRow
    {
    //Children Prop Count (Fields): 5
    public:

        struct TSoftObjectPtr<UParticleSystem> m_particleSystem; // 0x508
        struct TArray<struct TSoftObjectPtr<USoundBase>> m_sounds; // 0x530
        struct FLinearColor m_particleSystemColor; // 0x540
        struct FText m_secondPlateText; // 0x550
        bool m_isPublished; // 0x570

    };

    struct FYEncountersPerType //ScriptStruct Prospect.YEncountersPerType
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYPlayerEncounterType, struct FYPlayerEncounters> m_encountersPerType; // 0x0

    };

    struct FYPlayerEncounters //ScriptStruct Prospect.YPlayerEncounters
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPlayerEncounter> m_encounters; // 0x0

    };

    struct FYPlayerEncounter //ScriptStruct Prospect.YPlayerEncounter
    {
    //Children Prop Count (Fields): 9
    public:

        bool m_isKillEncounter; // 0x0
        bool m_isOtherPlayer; // 0x1
        enum class EYPlayerEncounterType m_type; // 0x2
        float m_timestampStarted; // 0x4
        float m_timestampLastUpdate; // 0x8
        float m_damage; // 0xc
        struct FDataTableRowHandle m_damageInfoCauserRowHandle; // 0x10
        struct FString m_userId; // 0x20
        struct FString m_displayName; // 0x30

    };

    struct FYBattleLogTuning //ScriptStruct Prospect.YBattleLogTuning
    {
    //Children Prop Count (Fields): 5
    public:

        float m_distance; // 0x0
        float m_distanceVoIP; // 0x4
        float m_encounterTime; // 0x8
        float m_delayFinalizeEncounters; // 0xc
        struct TMap<enum class EYPlayerEncounterType, float> m_encounterTimePerType; // 0x10

    };

    struct FYBIHook_EscapeTriggered : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBIHook_EscapeTriggered
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t time_since_match_start; // 0xa8
        int32_t time_since_user_joined; // 0xac
        int32_t position_x; // 0xb0
        int32_t position_y; // 0xb4
        int32_t position_z; // 0xb8
        int32_t player_position_x; // 0xbc
        int32_t player_position_y; // 0xc0
        int32_t player_position_z; // 0xc4
        int32_t Status; // 0xc8
        int32_t cooldown_duration; // 0xcc
        struct FString escape_ship_id; // 0xd0
        struct FString evac_id; // 0xe0

    };

    struct FYBIHook_GetPvpDamage : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBIHook_GetPvpDamage
    {
    //Children Prop Count (Fields): 13
    public:

        int32_t location_x; // 0xa8
        int32_t location_y; // 0xac
        int32_t location_z; // 0xb0
        int32_t location_x_attacker; // 0xb4
        int32_t location_y_attacker; // 0xb8
        int32_t location_z_attacker; // 0xbc
        int32_t time_since_match_start; // 0xc0
        int32_t time_since_user_joined; // 0xc4
        struct FString equipped_weapon; // 0xc8
        int32_t health_when_attacked; // 0xd8
        int32_t attacker_damage; // 0xdc
        struct FString attacker_weapon_id; // 0xe0
        struct FString attacker_user_id; // 0xf0

    };

    struct FYBIHook_LootAreaPhases : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBIHook_LootAreaPhases
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t location_x; // 0xa8
        int32_t location_y; // 0xac
        int32_t Radius; // 0xb0
        int32_t time_since_match_start; // 0xb4
        int32_t Status; // 0xb8
        struct FString threshold_values; // 0xc0
        struct FString loot_area_name; // 0xd0

    };

    struct FYBIHook_MinimapOpen : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBIHook_MinimapOpen
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t time_since_user_joined; // 0xa8

    };

    struct FYControlsSettingsChangedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YControlsSettingsChangedEvent
    {
    //Children Prop Count (Fields): 10
    public:

        float sensitivity; // 0xa8
        float ads_sensitivity; // 0xac
        bool invert_x_axis; // 0xb0
        bool invert_y_axis; // 0xb1
        bool mouse_smoothing; // 0xb2
        bool fov_based_sensitivity_scaling; // 0xb3
        bool sprint_toggle; // 0xb4
        bool crouch_toggle; // 0xb5
        bool targeting_toggle; // 0xb6
        bool leaning_toggle; // 0xb7

    };

    struct FYAudioSettingsChangedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YAudioSettingsChangedEvent
    {
    //Children Prop Count (Fields): 9
    public:

        float master_volume; // 0xa8
        float music_volume; // 0xac
        float sound_effects_volume; // 0xb0
        float dialogue_volume; // 0xb4
        float ui_volume; // 0xb8
        float hitmarker_volume; // 0xbc
        float input_volume; // 0xc0
        float output_volume; // 0xc4
        bool push_to_talk; // 0xc8

    };

    struct FYBIHook_TutorialTnc : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBIHook_TutorialTnc
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t step; // 0xa8
        struct FString Action; // 0xb0

    };

    struct FYEliteCrusherActivityStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YEliteCrusherActivityStats
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Action; // 0xa8
        int32_t time_since_beacon_placed; // 0xb8
        int32_t location_x; // 0xbc
        int32_t location_y; // 0xc0
        int32_t location_z; // 0xc4
        struct FString cavern_id; // 0xc8

    };

    struct FYLaserDrillActivityStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YLaserDrillActivityStats
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Action; // 0xa8
        int32_t time_since_beacon_placed; // 0xb8
        int32_t total_letium_collected; // 0xbc
        int32_t location_x; // 0xc0
        int32_t location_y; // 0xc4
        int32_t location_z; // 0xc8
        struct FString laser_drill_id; // 0xd0

    };

    struct FYOilPumpsActivityStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YOilPumpsActivityStats
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString Action; // 0xa8
        int32_t time_since_beacon_placed; // 0xb8
        int32_t location_x; // 0xbc
        int32_t location_y; // 0xc0
        int32_t location_z; // 0xc4
        struct FString oil_well_id; // 0xc8
        struct FString oil_well_tier; // 0xd8

    };

    struct FYBossEncounterTrackingData //ScriptStruct Prospect.YBossEncounterTrackingData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYBossEncounterActivityStats m_stats; // 0x0
        int32_t m_firstInteractionTimeStamp; // 0xc8
        int32_t m_lastInteractionTimeStamp; // 0xcc

    };

    struct FYBaseActivityStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YBaseActivityStats
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t position_x; // 0xa8
        int32_t position_y; // 0xac
        int32_t position_z; // 0xb0
        int32_t time_since_match_start; // 0xb4

    };

    struct FYBossEncounterActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YBossEncounterActivityStats
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t boss_damage_done; // 0xb8
        int32_t boss_damage_taken; // 0xbc
        int32_t encounter_duration; // 0xc0

    };

    struct FYContractsInteractionAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YContractsInteractionAnalyticsEvent
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString faction_name; // 0xa8
        struct FString contract1; // 0xb8
        struct FString contract2; // 0xc8
        struct FString contract3; // 0xd8
        int32_t Action; // 0xe8

    };

    struct FYActivityBigDrillFlyToAnalyticsEvent : FYBaseActivityStats //ScriptStruct Prospect.YActivityBigDrillFlyToAnalyticsEvent
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t target_position_x; // 0xb8
        int32_t target_position_y; // 0xbc

    };

    struct FYPainTrainActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YPainTrainActivityStats
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYPainTrainStatus Status; // 0xb8
        int32_t pain_train_id; // 0xbc

    };

    struct FYActivityAnalyticsEvent : FYBaseActivityStats //ScriptStruct Prospect.YActivityAnalyticsEvent
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYActivityType Activity; // 0xb8
        struct FString activitySubType; // 0xc0

    };

    struct FYUplinkActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YUplinkActivityStats
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t time_since_user_joined; // 0xb8
        int32_t last_state; // 0xbc
        struct FString item_rarity; // 0xc0
        struct FString uplink_name; // 0xd0

    };

    struct FYPowerUpActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YPowerUpActivityStats
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t power_up_step; // 0xb8
        struct FString power_up_id; // 0xc0
        bool contested; // 0xd0
        bool contested_long; // 0xd1
        bool dealt_damage; // 0xd2
        bool dealt_damage_long; // 0xd3
        int32_t time_since_user_joined; // 0xd4
        int32_t puzzle_variation; // 0xd8

    };

    struct FYMineralActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YMineralActivityStats
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString mineral_type; // 0xb8
        struct FString mineral_id; // 0xc8
        struct FString used_tool; // 0xd8
        int32_t remaining_segments; // 0xe8
        int32_t total_segment_count; // 0xec
        int32_t time_since_user_joined; // 0xf0
        int32_t time_spent; // 0xf4
        int32_t total_hit_count; // 0xf8
        bool contested; // 0xfc

    };

    struct FYMeteorActivityStats : FYBaseActivityStats //ScriptStruct Prospect.YMeteorActivityStats
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Status; // 0xb8
        int32_t player_position_x; // 0xbc
        int32_t player_position_y; // 0xc0
        int32_t player_position_z; // 0xc4
        int32_t time_since_user_joined; // 0xc8

    };

    struct FItemLockInfo //ScriptStruct Prospect.ItemLockInfo
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYCraftingUnavailableReason m_lockReason; // 0x0
        int32_t m_level; // 0x4
        struct FDataTableRowHandle m_contract; // 0x8

    };

    struct FYMenuCameraCustomizationCategoryAssociation //ScriptStruct Prospect.YMenuCameraCustomizationCategoryAssociation
    {
    //Children Prop Count (Fields): 11
    public:

        enum class EYCustomizationCategory m_category; // 0x0
        class AActor* m_cameraActor; // 0x8
        class AActor* m_pointOfInterest; // 0x10
        struct FVector m_startLocation; // 0x18
        struct FVector m_startTowardsPointOfInterest; // 0x24
        float m_angleRestriction; // 0x30
        float m_blendTime; // 0x34
        bool m_allowYawRotation; // 0x38
        bool m_allowPitchRotation; // 0x39
        enum class EYCameraIntentionType m_visualizationIntention; // 0x3a
        enum class EYCameraDistanceType m_distanceType; // 0x3b

    };

    struct FYCameraItemRow : FYDataTableRowBase //ScriptStruct Prospect.YCameraItemRow
    {
    //Children Prop Count (Fields): 7
    public:

        struct FVector m_bpLocation; // 0x10
        struct FVector m_bpRotation; // 0x1c
        struct FVector m_bpScale; // 0x28
        struct FVector m_meshLocation; // 0x34
        struct FVector m_meshRotation; // 0x40
        struct FDataTableRowHandle m_item; // 0x50
        struct FString m_cameraDefault; // 0x60

    };

    struct FYBagDataTableRow : FYItemDataTableRowBase //ScriptStruct Prospect.YBagDataTableRow
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_weightLimit; // 0x408
        struct FName m_socket; // 0x40c
        int32_t m_audioBagType; // 0x414

    };

    struct FYCameraTransitionData //ScriptStruct Prospect.YCameraTransitionData
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYPlayerStateBlueprint m_playerState; // 0x0
        enum class EYStateCancelationBehavior m_stateCancelBehavior; // 0x1
        float m_duration; // 0x4
        bool m_transitionTowardsFirstPerson; // 0x8
        bool m_clearTranslationOffsetOnCompletion; // 0x9

    };

    struct FYCloakRuntimeData //ScriptStruct Prospect.YCloakRuntimeData
    {
    //Children Prop Count (Fields): 2
    public:

        bool m_isActive; // 0x0
        struct FDataTableRowHandle m_rowHandle; // 0x8

    };

    struct FYCloakDataRow : FYDataTableRowBase //ScriptStruct Prospect.YCloakDataRow
    {
    //Children Prop Count (Fields): 2
    public:

        class UMaterialInterface* m_cloakMaterial; // 0x10
        struct FName m_midOptionalParameter; // 0x18

    };

    struct FYCloakMaterialsInfo //ScriptStruct Prospect.YCloakMaterialsInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UMaterialInterface*> m_materials; // 0x0
        class UMeshComponent* m_meshComponent; // 0x10

    };

    struct FYDeathAnimMontageInfo //ScriptStruct Prospect.YDeathAnimMontageInfo
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYDeathType m_deathType; // 0x0
        class UAnimMontage* m_montage; // 0x8
        bool m_deathToRagdoll; // 0x10
        float m_serverTimestamp; // 0x14
        struct FYDealtDamageData m_lastTimeDamagedData; // 0x18
        struct FGameplayTagContainer m_deathAnimationGameplayTags; // 0x130

    };

    struct FYSelectedEmote //ScriptStruct Prospect.YSelectedEmote
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_activeEmoteIndex; // 0x0
        int32_t m_selectedEmoteTimeStamp; // 0x4

    };

    struct FYLocationData : FYDataTableRowBase //ScriptStruct Prospect.YLocationData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FText m_locationName; // 0x10

    };

    struct FYStatusEffectRuntimeData //ScriptStruct Prospect.YStatusEffectRuntimeData
    {
    //Children Prop Count (Fields): 7
    public:

        float m_damagePerTick; // 0x0
        float m_damageTickFrequency; // 0x4
        float m_penetration; // 0x8
        struct FYDamageOriginInfo m_damageOriginInfo; // 0x10
        float m_lastDamageTickTimestamp; // 0x38
        struct TArray<struct TWeakObjectPtr<struct AActor>> m_actors; // 0x40
        struct TArray<struct FGuid> m_perkGuids; // 0x50

    };

    struct FYStatusEffectAreaRow : FYDataTableRowBase //ScriptStruct Prospect.YStatusEffectAreaRow
    {
    //Children Prop Count (Fields): 6
    public:

        float m_damagePerTick; // 0x10
        float m_damageTickFrequency; // 0x14
        float m_penetration; // 0x18
        struct TArray<struct FDataTableRowHandle> m_perksToApply; // 0x20
        struct FDataTableRowHandle m_damageInfoApplyRowHandle; // 0x30
        enum class EYGameplayContextType m_damageContext; // 0x40

    };

    struct FYCharacterExplicitCustomizationDataRow : FYVanityItemRowBase //ScriptStruct Prospect.YCharacterExplicitCustomizationDataRow
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYCustomizationBodyType m_bodyType; // 0x508
        struct TMap<enum class EYCustomizationCategory, struct FYCharacterArchetypeDefaultItemEntry> m_defaultItems; // 0x510
        struct FDataTableRowHandle m_randomItemSelection; // 0x560

    };

    struct FYNormalEmoteDataTableRow : FYCharacterCustomizationRowBase //ScriptStruct Prospect.YNormalEmoteDataTableRow
    {
    public:


    };

    struct FYDeathEmoteDataTableRow : FYCharacterCustomizationRowBase //ScriptStruct Prospect.YDeathEmoteDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FLinearColor m_characterFoamColor; // 0x5a0

    };

    struct FYMeleeVanityDataTableRow : FYCharacterCustomizationRowBase //ScriptStruct Prospect.YMeleeVanityDataTableRow
    {
    public:


    };

    struct FYCustomizationExplicitActorInitializationData //ScriptStruct Prospect.YCustomizationExplicitActorInitializationData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYActiveCustomizationData m_customizationData; // 0x0
        struct FYActiveGlobalRuntimeVanityData m_globalVanityData; // 0x28
        struct FYCharacterVisualizationRuntimeData m_visualizationData; // 0x50
        struct FYInventoryItem m_overrideWeaponHandle; // 0x58

    };

    struct FYCharacterVisualizationRuntimeData //ScriptStruct Prospect.YCharacterVisualizationRuntimeData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYCustomizationCategory m_category; // 0x0
        enum class EYVanityType m_vanityTypeToPreview; // 0x1

    };

    struct FYCharacterCustomizationSetRow : FYVanityItemRowBase //ScriptStruct Prospect.YCharacterCustomizationSetRow
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYCustomizationCategory m_customizationCategoryType; // 0x508
        struct TArray<struct TSoftObjectPtr<UTexture2D>> m_colorVariationIcons; // 0x510
        struct TArray<struct FYCharacterCustomizationSetItem> m_items; // 0x520
        struct TMap<enum class EYCustomizationCategory, struct FYCharacterArchetypeDefaultItemEntry> m_lockAndSetCustomizationCategorySlotsTo; // 0x530

    };

    struct FYCharacterCustomizationSetItem //ScriptStruct Prospect.YCharacterCustomizationSetItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<enum class EYCharacterCustomizationColorType> m_colorType; // 0x0
        struct FDataTableRowHandle m_rowHandle; // 0x10

    };

    struct FYCharacterCustomizationDefaultDataRow : FYDataTableRowBase //ScriptStruct Prospect.YCharacterCustomizationDefaultDataRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_defaultArchetype; // 0x10
        int32_t m_maxAmountOfSlots; // 0x20

    };

    struct FYCharacterCustomizationSlotRow : FYDataTableRowBase //ScriptStruct Prospect.YCharacterCustomizationSlotRow
    {
    //Children Prop Count (Fields): 6
    public:

        struct FText m_name; // 0x10
        struct TSoftObjectPtr<UTexture2D> m_icon; // 0x30
        enum class EYCustomizationCategory m_category; // 0x58
        struct FName m_defaultSocketAttachmentName; // 0x5c
        bool m_containColorSelection; // 0x64
        bool m_visualizedOnlyAtCustomizationItemPreview; // 0x65

    };

    struct FYMaterialVariationDataRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YMaterialVariationDataRowBase
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYCharacterCustomizationPieceCollection m_data; // 0x508
        struct FDataTableRowHandle m_basePreviewRow; // 0x558

    };

    struct FYCharacterRotationUpdateRequestData //ScriptStruct Prospect.YCharacterRotationUpdateRequestData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_deltaTime; // 0x0
        struct FVector2D m_rotationDelta; // 0x4
        bool m_resetRotation; // 0xc

    };

    struct FYUpdateBodyPartRequestData //ScriptStruct Prospect.YUpdateBodyPartRequestData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FDataTableRowHandle m_baseHandle; // 0x0
        int32_t m_materialIndex; // 0x10
        enum class EYCharacterItemColumnType m_requestType; // 0x14
        struct FString m_archetypeID; // 0x18
        bool m_forceIgnoreBackendDebug; // 0x28
        enum class EYCustomizationPreviewScreen m_sourceOfChange; // 0x29

    };

    struct FYJoinChannelRequestData //ScriptStruct Prospect.YJoinChannelRequestData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYChannelType m_type; // 0x0
        struct FString m_channelId; // 0x8

    };

    struct FYChatHistoryEntry //ScriptStruct Prospect.YChatHistoryEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYChatMessageInputData m_data; // 0x0
        float m_timeSent; // 0x30

    };

    struct FYChatMessageInputData //ScriptStruct Prospect.YChatMessageInputData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYMessage m_message; // 0x0
        bool m_propogateDataToChatAPI; // 0x28

    };

    struct FYChatSettingsDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YChatSettingsDataTableRow
    {
    //Children Prop Count (Fields): 6
    public:

        float m_mutingDuration; // 0x10
        int32_t m_amountOfUsersToTrackMessages; // 0x14
        int32_t m_amountOfChatMessageToSendAtReport; // 0x18
        float m_msPerAppliedIssueRequest; // 0x1c
        struct TMap<enum class EYChannelType, struct FYChannelSettings> m_channelSettings; // 0x20
        struct TMap<struct FString, struct FText> m_audioDeviceLocalizationMap; // 0x70

    };

    struct FYChannelSettings //ScriptStruct Prospect.YChannelSettings
    {
    //Children Prop Count (Fields): 12
    public:

        struct FString m_defaultChannelId; // 0x0
        struct FText m_channelText; // 0x10
        struct FString m_localizationShortName; // 0x30
        bool m_defaultHaveText; // 0x40
        bool m_defaultHaveAudio; // 0x41
        bool m_isGlobalChatChannel; // 0x42
        bool m_switchToChannelOnAddIfDesired; // 0x43
        bool m_alwaysSwitchToChannelOnAdd; // 0x44
        bool m_shouldCacheMessagesIfNotConnected; // 0x45
        int32_t m_amountOfAllowedMessagesGivenThreshold; // 0x48
        float m_messagesSpamIntervalCheck; // 0x4c
        struct FYChannelProximityChatSettings m_channelProximityChatSettings; // 0x50

    };

    struct FYChannelProximityChatSettings //ScriptStruct Prospect.YChannelProximityChatSettings
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_isProximityVoiceChatEnabled; // 0x0
        int32_t m_audibleDistance; // 0x4
        int32_t m_conversationalDistance; // 0x8
        float m_audioFadeIntensityByDistance; // 0xc
        enum class EYVivoxAudioFadeModel m_audioFadeModel; // 0x10

    };

    struct FYUpgradeDebugChange //ScriptStruct Prospect.YUpgradeDebugChange
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYInventoryItem m_desiredItem; // 0x0

    };

    struct FYCollectibleLootBucketRow : FYDataTableRowBase //ScriptStruct Prospect.YCollectibleLootBucketRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDataTableRowHandle> m_bucketItems; // 0x10

    };

    struct FYCollectibleLootPoolRow : FYDataTableRowBase //ScriptStruct Prospect.YCollectibleLootPoolRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYCollectibleLootBucket> m_lootBuckets; // 0x10

    };

    struct FYCollectibleLootBucket //ScriptStruct Prospect.YCollectibleLootBucket
    {
    //Children Prop Count (Fields): 2
    public:

        float m_weight; // 0x0
        struct FDataTableRowHandle m_bucketRowHandle; // 0x8

    };

    struct FYCollectibleRow : FYItemDataTableRowBase //ScriptStruct Prospect.YCollectibleRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x408

    };

    struct FYPlayerStuckSpotEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerStuckSpotEvent
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t stuck_spot_location_x; // 0xa8
        int32_t stuck_spot_location_y; // 0xac
        int32_t stuck_spot_location_z; // 0xb0
        int32_t reposition_location_x; // 0xb4
        int32_t reposition_location_y; // 0xb8
        int32_t reposition_location_z; // 0xbc

    };

    struct FYPlayerStatsAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerStatsAnalyticsEvent
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString stats; // 0xa8

    };

    struct FYRubberBandingAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YRubberBandingAnalyticsEvent
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t occurrences; // 0xa8
        float time_seconds; // 0xac
        float lifetime_seconds; // 0xb0

    };

    struct FYFunctionsUsedAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YFunctionsUsedAnalyticsEvent
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t tool_wheel; // 0xa8
        int32_t Map; // 0xac
        int32_t comm_wheel; // 0xb0
        int32_t used_sprint; // 0xb4

    };

    struct FYVideoSettingsAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YVideoSettingsAnalyticsEvent
    {
    //Children Prop Count (Fields): 25
    public:

        struct FString display_mode; // 0xa8
        struct FString Resolution; // 0xb8
        float resolution_quality; // 0xc8
        float max_fps; // 0xcc
        float FOV; // 0xd0
        float gamma; // 0xd4
        struct FString colorblind_type; // 0xd8
        float colorblind_intensity; // 0xe8
        float interface_scale; // 0xec
        bool auto_detect; // 0xf0
        struct FString video_quality; // 0xf8
        int32_t anti_aliasing; // 0x108
        int32_t draw_distance; // 0x10c
        int32_t shadow_quality; // 0x110
        int32_t post_process_quality; // 0x114
        int32_t texture_quality; // 0x118
        int32_t visual_effects_quality; // 0x11c
        int32_t foliage_quality; // 0x120
        bool vsync; // 0x124
        bool show_fps; // 0x125
        bool enable_multi_threaded_rendering; // 0x126
        bool enable_gpu_crash_debugging; // 0x127
        bool enable_dx_13; // 0x128
        bool enable_motion_blur; // 0x129
        float image_sharpening; // 0x12c

    };

    struct FYKeybindingAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YKeybindingAnalyticsEvent
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString input_name; // 0xa8
        struct FString primary_old; // 0xb8
        struct FString primary_new; // 0xc8
        struct FString secondary_old; // 0xd8
        struct FString secondary_new; // 0xe8

    };

    struct FYDurabilityAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YDurabilityAnalyticsEvent
    {
    //Children Prop Count (Fields): 10
    public:

        struct FString Status; // 0xa8
        struct FString item_id; // 0xb8
        struct FString item_instance_id; // 0xc8
        struct FString item_name; // 0xd8
        struct FString item_type; // 0xe8
        struct FString item_rarity; // 0xf8
        int32_t damage_taken; // 0x108
        int32_t used; // 0x10c
        int32_t current_durability; // 0x110
        int32_t max_durability; // 0x114

    };

    struct FYMeleeAttackBI : FYBaseAnalyticsEvent //ScriptStruct Prospect.YMeleeAttackBI
    {
    //Children Prop Count (Fields): 9
    public:

        int32_t attack_type; // 0xa8
        bool Hit; // 0xac
        bool backstab; // 0xad
        bool out_of_stamina; // 0xae
        int32_t damage_done; // 0xb0
        struct FString enemy_id; // 0xb8
        struct FString enemy_name; // 0xc8
        struct FString enemy_status; // 0xd8
        int32_t time_since_user_joined; // 0xe8

    };

    struct FYAccountLinking : FYBaseAnalyticsEvent //ScriptStruct Prospect.YAccountLinking
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString platform_user_id; // 0xa8
        struct FString user_name; // 0xb8
        struct FString linked_user_id; // 0xc8
        struct FString linked_platform_user_id; // 0xd8
        struct FString Error; // 0xe8

    };

    struct FYPopUpEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPopUpEvent
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString pop_up_name; // 0xa8
        struct FString action_type; // 0xb8
        struct FString player_action; // 0xc8
        struct FString Content; // 0xd8
        int32_t time_to_action; // 0xe8
        int32_t dont_show_again; // 0xec

    };

    struct FYFriendListBI : FYBaseAnalyticsEvent //ScriptStruct Prospect.YFriendListBI
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString target_user_id; // 0xa8
        struct FString action_name; // 0xb8
        struct FString screen; // 0xc8

    };

    struct FYPlayerQuartersLevelUpBI : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerQuartersLevelUpBI
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t quarters_level; // 0xa8

    };

    struct FYProspectorLevelUp : FYBaseAnalyticsEvent //ScriptStruct Prospect.YProspectorLevelUp
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t prospector_level; // 0xa8

    };

    struct FYProspectorLevelXpGained : FYBaseAnalyticsEvent //ScriptStruct Prospect.YProspectorLevelXpGained
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Amount; // 0xa8
        struct FString Source; // 0xb0
        int32_t prospector_level; // 0xc0

    };

    struct FYVanityUsage : FYBaseAnalyticsEvent //ScriptStruct Prospect.YVanityUsage
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t vanity_type; // 0xa8
        struct FString Location; // 0xb0
        struct FString item_id; // 0xc0
        struct FString item_name; // 0xd0
        int32_t time_since_match_start; // 0xe0

    };

    struct FYPurchaseFlowEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPurchaseFlowEvent
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString Action; // 0xa8
        struct FString Type; // 0xb8
        struct FString Price; // 0xc8
        struct FString package_id; // 0xd8
        struct FString package_content; // 0xe8
        struct FString Error; // 0xf8

    };

    struct FYButtonClickedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YButtonClickedEvent
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString button_name; // 0xa8
        struct FString parent_name; // 0xb8

    };

    struct FYStationInteractionEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YStationInteractionEvent
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString station_id; // 0xa8
        struct FString station_name; // 0xb8

    };

    struct FYStationMessage : FYBaseAnalyticsEvent //ScriptStruct Prospect.YStationMessage
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString message_id; // 0xa8
        struct FString message_name; // 0xb8
        bool Status; // 0xc8

    };

    struct FYChallengeCompletedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YChallengeCompletedEvent
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName quest_id; // 0xa8
        int32_t quest_category; // 0xb0
        int32_t season_xp; // 0xb4

    };

    struct FYChallengeProgressedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YChallengeProgressedEvent
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName quest_id; // 0xa8
        int32_t quest_category; // 0xb0
        int32_t progress_count; // 0xb4
        int32_t max_progress; // 0xb8

    };

    struct FYPlayerMutedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerMutedEvent
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString muted_user; // 0xa8
        int32_t Action; // 0xb8
        int32_t Location; // 0xbc
        struct FString muted_message; // 0xc0

    };

    struct FYDistanceTravelledAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YDistanceTravelledAnalyticsEvent
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t position_x; // 0xa8
        int32_t position_y; // 0xac
        int32_t time_since_match_start; // 0xb0
        int32_t time_since_user_joined; // 0xb4
        int32_t distance_travelled_total; // 0xb8
        float current_bag_weight; // 0xbc
        float max_bag_weight; // 0xc0
        float max_safe_weight; // 0xc4
        float current_safe_weight; // 0xc8
        float stamina_below_10_percent; // 0xcc
        float stamina_usage; // 0xd0
        struct FString loot_area_name; // 0xd8

    };

    struct FYCreditIncomeAnalyticsData : FYBaseAnalyticsEvent //ScriptStruct Prospect.YCreditIncomeAnalyticsData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString item_id; // 0xa8
        int32_t item_amount; // 0xb8
        int32_t credit_source; // 0xbc
        bool shared_income; // 0xc0
        int32_t location_x; // 0xc4
        int32_t location_y; // 0xc8
        int32_t time_since_match_start; // 0xcc
        struct FString instigator_tags; // 0xd0

    };

    struct FYLootCollectedAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YLootCollectedAnalyticsEvent
    {
    //Children Prop Count (Fields): 18
    public:

        struct FString item_id; // 0xa8
        struct FString item_name; // 0xb8
        int32_t pickup_location_X; // 0xc8
        int32_t pickup_location_Y; // 0xcc
        int32_t Source; // 0xd0
        int32_t item_amount; // 0xd4
        int32_t time_since_match_start; // 0xd8
        int32_t time_since_user_joined; // 0xdc
        struct FString instigator_tags; // 0xe0
        float current_bag_weight; // 0xf0
        float max_bag_weight; // 0xf4
        float max_safe_weight; // 0xf8
        float current_safe_weight; // 0xfc
        float weight; // 0x100
        struct FString Action; // 0x108
        struct FString item_rarity; // 0x118
        bool loot_area; // 0x128
        bool in_loot_container; // 0x129

    };

    struct FYPlayerCommWheelUse : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerCommWheelUse
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t time_since_match_start; // 0xa8
        struct FString command_name; // 0xb0
        int32_t player_location_x; // 0xc0
        int32_t player_location_y; // 0xc4
        int32_t player_location_z; // 0xc8

    };

    struct FYLatencySummaryEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YLatencySummaryEvent
    {
    //Children Prop Count (Fields): 20
    public:

        int32_t latency_average; // 0xa8
        int32_t latency_quantile_26; // 0xac
        int32_t latency_quantile_51; // 0xb0
        int32_t latency_quantile_76; // 0xb4
        int32_t latency_quantile_91; // 0xb8
        int32_t latency_quantile_96; // 0xbc
        int32_t latency_maximum; // 0xc0
        int32_t ue4_ping_average; // 0xc4
        int32_t ue4_ping_quantile_26; // 0xc8
        int32_t ue4_ping_quantile_51; // 0xcc
        int32_t ue4_ping_quantile_76; // 0xd0
        int32_t ue4_ping_quantile_91; // 0xd4
        int32_t ue4_ping_quantile_96; // 0xd8
        int32_t ue4_ping_maximum; // 0xdc
        float inPacketsLost; // 0xe0
        float outPacketsLost; // 0xe4
        int32_t InRate; // 0xe8
        int32_t OutRate; // 0xec
        float NetSaturated; // 0xf0
        struct FString server; // 0xf8

    };

    struct FYFPSMatchSummaryEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YFPSMatchSummaryEvent
    {
    //Children Prop Count (Fields): 44
    public:

        int32_t time_seconds; // 0xa8
        int32_t time_disregarded_seconds; // 0xac
        float fps_average; // 0xb0
        float fps_frametime_average; // 0xb4
        float fps_frametime_quantile_26; // 0xb8
        float fps_frametime_quantile_51; // 0xbc
        float fps_frametime_quantile_76; // 0xc0
        float fps_percent_missed_vsyncs_thirty; // 0xc4
        float fps_percent_missed_vsyncs_sixty; // 0xc8
        float thread_game_average; // 0xcc
        float thread_draw_average; // 0xd0
        float thread_gpu_average; // 0xd4
        float bound_percent_thread_game; // 0xd8
        float bound_percent_thread_draw; // 0xdc
        float bound_percent_thread_gpu; // 0xe0
        float fps_frametime_max; // 0xe4
        float fps_frametime_min; // 0xe8
        int32_t fps_limit; // 0xec
        int32_t hitchframecount_game; // 0xf0
        int32_t hitchframecount_draw; // 0xf4
        int32_t hitchframecount_gpu; // 0xf8
        uint32_t physical_memory_max; // 0xfc
        uint32_t virtual_memory_max; // 0x100
        float gc_time_avg; // 0x104
        float gc_time_max; // 0x108
        float gc_time_min; // 0x10c
        float gc_time_percent_over_budget; // 0x110
        struct FString game_resolution; // 0x118
        int32_t display_mode; // 0x128
        bool vsync; // 0x12c
        int32_t Preset; // 0x130
        bool auto_detect_preset; // 0x134
        int32_t resolution_quality; // 0x138
        int32_t viewDistance_quality; // 0x13c
        int32_t antialiasing_quality; // 0x140
        int32_t shadow_quality; // 0x144
        int32_t postprocess_quality; // 0x148
        int32_t texture_quality; // 0x14c
        int32_t effects_quality; // 0x150
        int32_t foliage_quality; // 0x154
        int32_t colorblind_type; // 0x158
        float colorblind_severity; // 0x15c
        bool colorblind_correct_deficiency; // 0x160
        bool colorblind_correction_with_deficiency; // 0x161

    };

    struct FYFPSMatchSummaryServerEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YFPSMatchSummaryServerEvent
    {
    //Children Prop Count (Fields): 21
    public:

        int32_t time_seconds; // 0xa8
        float frametime_average; // 0xac
        float frametime_quantile_26; // 0xb0
        float frametime_quantile_51; // 0xb4
        float frametime_quantile_76; // 0xb8
        float frametime_max; // 0xbc
        float frametime_min; // 0xc0
        int32_t fps_limit; // 0xc4
        uint32_t physical_memory_max; // 0xc8
        uint32_t virtual_memory_max; // 0xcc
        int32_t players_max; // 0xd0
        float players_avg; // 0xd4
        int32_t ai_max; // 0xd8
        float ai_avg; // 0xdc
        float gc_time_avg; // 0xe0
        float gc_time_max; // 0xe4
        float gc_time_min; // 0xe8
        float gc_time_percent_over_budget; // 0xec
        int32_t hitchframecount_game; // 0xf0
        int32_t hitchframecount_draw; // 0xf4
        int32_t hitchframecount_gpu; // 0xf8

    };

    struct FYCharacterCustomizationSelected : FYBaseAnalyticsEvent //ScriptStruct Prospect.YCharacterCustomizationSelected
    {
    //Children Prop Count (Fields): 13
    public:

        bool gender; // 0xa8
        struct FString head_id; // 0xb0
        int32_t head_color_index; // 0xc0
        struct FString boots_id; // 0xc8
        int32_t boots_color_index; // 0xd8
        struct FString chest_id; // 0xe0
        int32_t chest_color_index; // 0xf0
        struct FString gloves_id; // 0xf8
        int32_t gloves_color_index; // 0x108
        struct FString base_suit_id; // 0x110
        int32_t base_suit_color_index; // 0x120
        struct FString archetype_id; // 0x128
        int32_t slot_id; // 0x138

    };

    struct FYGenericEmptyBIEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YGenericEmptyBIEvent
    {
    public:


    };

    struct FYTimeInDebugMenus : FYBaseAnalyticsEvent //ScriptStruct Prospect.YTimeInDebugMenus
    {
    //Children Prop Count (Fields): 1
    public:

        float Time; // 0xa8

    };

    struct FYTutorialFunnelStats : FYBaseAnalyticsEvent //ScriptStruct Prospect.YTutorialFunnelStats
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString tutorial_id; // 0xa8
        int32_t time_in_match; // 0xb8
        struct FString step_name; // 0xc0
        int32_t step; // 0xd0
        float position_x; // 0xd4
        float position_y; // 0xd8
        float position_z; // 0xdc

    };

    struct FYWeaponAnalyticsEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YWeaponAnalyticsEvent
    {
    //Children Prop Count (Fields): 20
    public:

        struct FName weapon_id; // 0xa8
        struct FString weapon_name; // 0xb0
        struct FString item_rarity; // 0xc0
        int32_t pickup_time; // 0xd0
        int32_t pickup_time_since_user_joined; // 0xd4
        int32_t shots_fired; // 0xd8
        int32_t damage_to_player; // 0xdc
        int32_t damage_to_AI; // 0xe0
        int32_t hits; // 0xe4
        int32_t hits_pvp; // 0xe8
        int32_t weakspot_hits; // 0xec
        int32_t weakspot_hits_pvp; // 0xf0
        int32_t num_players_kill; // 0xf4
        int32_t num_AI_kill; // 0xf8
        int32_t out_of_ammo; // 0xfc
        int32_t ammo_left; // 0x100
        int32_t time_equipped; // 0x104
        struct FString attachments; // 0x108
        struct FString weapon_vanity; // 0x118
        struct FString weapon_charm; // 0x128

    };

    struct FYPlayerReportData : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerReportData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString reported_player_user_id; // 0xa8
        struct FString reported_player_name; // 0xb8
        struct FString location_parent; // 0xc8
        struct FString Category; // 0xd8

    };

    struct FYPlayerInitialConnectEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YPlayerInitialConnectEvent
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t time_loaded; // 0xa8
        struct FString country_code; // 0xb0
        struct FString client_version; // 0xc0

    };

    struct FYEndOfMatchEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YEndOfMatchEvent
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString eom_screen_name; // 0xa8
        int32_t time_spent; // 0xb8
        bool eom_type_evac; // 0xbc

    };

    struct FYCommWheelEntry : FTableRowBase //ScriptStruct Prospect.YCommWheelEntry
    {
    //Children Prop Count (Fields): 16
    public:

        struct FText m_displayName; // 0x8
        struct FText m_textMessageInChat; // 0x28
        struct FColor m_colorText; // 0x48
        class UTexture2D* m_iconTexture; // 0x50
        class UDataTable* m_subCommWheel; // 0x58
        struct FDataTableRowHandle m_voiceLine; // 0x60
        enum class EYActivityType m_associatedActivity; // 0x70
        bool m_onlyVisibleIfDBNO; // 0x71
        struct TArray<enum class EYPlayerStateBlueprint> m_onlyVisibleIfInPlayerStates; // 0x78
        bool m_onlyVisibleIfInATeam; // 0x88
        enum class EYCommWheelEntryTutorialSetting m_tutorialVisibility; // 0x89
        bool m_colorizeSocialActorWidgetIconByPlayerRole; // 0x8a
        struct FColor m_colorSocialActorWidget; // 0x8c
        float m_minSocialActorLifeSpan; // 0x90
        float m_maxSocialActorLifeSpan; // 0x94
        struct FDataTableRowHandle m_socialActorSpawnAudio; // 0x98

    };

    struct FYConfigurationRow : FYDataTableRowBase //ScriptStruct Prospect.YConfigurationRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString m_surveyLink; // 0x10

    };

    struct FYContractsBoardsSettingsRow : FYDataTableRowBase //ScriptStruct Prospect.YContractsBoardsSettingsRow
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_refreshHours24Utc; // 0x10
        int32_t m_maxNumOfActiveContracts; // 0x14

    };

    struct FYContractRewardUIData //ScriptStruct Prospect.YContractRewardUIData
    {
    //Children Prop Count (Fields): 3
    public:

        bool showDivider; // 0x0
        struct FYContractReward contractReward; // 0x8
        struct FString contractId; // 0x20

    };

    struct FYContractUiData //ScriptStruct Prospect.YContractUiData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYContractData m_contractData; // 0x0
        bool m_contractCanBeInteractedWith; // 0x38
        bool m_contractIsLocked; // 0x39

    };

    struct FYContractData //ScriptStruct Prospect.YContractData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_contractRowHandle; // 0x0
        struct FYContractDynamicData m_contractDynamicData; // 0x10

    };

    struct FYContractDynamicData //ScriptStruct Prospect.YContractDynamicData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_contractId; // 0x0
        struct TArray<int32_t> m_contractCurrentProgress; // 0x10
        enum class EYContractStatus m_contractStatus; // 0x20

    };

    struct FYAnnouncementRequestAysncLoadData //ScriptStruct Prospect.YAnnouncementRequestAysncLoadData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        struct FYAnnouncementPlaybackOptions m_playbackOptions; // 0x10

    };

    struct FYAudioOcclusionOutputData //ScriptStruct Prospect.YAudioOcclusionOutputData
    {
    public:


    };

    struct FYAudioOcclusionTraceData //ScriptStruct Prospect.YAudioOcclusionTraceData
    {
    //Children Prop Count (Fields): 1
    public:

        class UYOcclusionPluginSettings* m_occlusionPluginSettings; // 0x8

    };

    struct FYAudioOcclusionAudioMixOutputData //ScriptStruct Prospect.YAudioOcclusionAudioMixOutputData
    {
    public:


    };

    struct FYKeyOverrideColorData //ScriptStruct Prospect.YKeyOverrideColorData
    {
    //Children Prop Count (Fields): 10
    public:

        struct FLinearColor m_colorOverride; // 0x0
        int32_t m_handle; // 0x10
        int32_t m_isOverrideVisible; // 0x14
        int32_t m_lerpStartSign; // 0x18
        float m_deltaTime; // 0x1c
        float m_duration; // 0x20
        float m_interval; // 0x24
        float m_multiplier; // 0x28
        enum class EYLerpBehavior m_lerpBehavior; // 0x2c
        bool m_isActive; // 0x2d

    };

    struct FYKeyHighlight //ScriptStruct Prospect.YKeyHighlight
    {
    public:


    };

    struct FYStateInputFrameCachedData //ScriptStruct Prospect.YStateInputFrameCachedData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator m_inputRotation; // 0x0
        struct FRotator m_deltaRotation; // 0xc

    };

    struct FYTravelRequestData //ScriptStruct Prospect.YTravelRequestData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString m_context; // 0x0
        struct FString m_mapName; // 0x10
        enum class EYTravelInstanceType m_instanceType; // 0x20
        bool m_loadMapDirectly; // 0x21
        bool m_generatedRequest; // 0x22
        bool m_evaluateSessionState; // 0x23
        bool m_cancelExistingTravel; // 0x24
        bool m_waitForResources; // 0x25
        enum class EYMatchmakingDebugOption m_debugMatchmakingOption; // 0x26

    };

    struct FYCosmeticStringVisualizationRequest //ScriptStruct Prospect.YCosmeticStringVisualizationRequest
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString m_finalString; // 0x0
        int32_t m_iterationCount; // 0x10
        float m_iterationDelay; // 0x14
        int32_t m_handle; // 0x18
        int32_t m_charPerIteration; // 0x1c
        struct FString m_currentString; // 0x30
        int32_t m_currentIterationCount; // 0x40
        float m_currentIterationDelay; // 0x44
        bool m_isFinished; // 0x48

    };

    struct FYCurrencyRow : FYItemDataTableRowBase //ScriptStruct Prospect.YCurrencyRow
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EYCurrencyType m_currencyType; // 0x408
        struct FName m_currencyCode; // 0x40c
        int32_t m_newPlayerInitialDeposit; // 0x414
        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x418
        struct TSoftObjectPtr<UObject> m_mesh; // 0x440
        struct FRotator m_relativeMeshRotation; // 0x468
        struct FVector m_relativeMeshLocation; // 0x474
        struct FVector m_scale; // 0x480
        bool m_shouldUseMaterialRepresentation; // 0x48c
        int32_t m_upperCap; // 0x490

    };

    struct FYSceneCameraData //ScriptStruct Prospect.YSceneCameraData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FDataTableRowHandle> m_sceneRowHandles; // 0x0
        struct FString m_cameraPrefix; // 0x10
        bool m_ignoreSceneState; // 0x20

    };

    struct FYSceneCameraDataRuntimeData //ScriptStruct Prospect.YSceneCameraDataRuntimeData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYSceneCameraDataAssociation m_defaultDataAssociation; // 0x0
        struct FString m_desiredSuffix; // 0x10

    };

    struct FYSceneCameraDataAssociation //ScriptStruct Prospect.YSceneCameraDataAssociation
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYSceneCameraDataRuntimeEntry> m_runtimeEntries; // 0x0

    };

    struct FYSceneCameraDataRuntimeEntry //ScriptStruct Prospect.YSceneCameraDataRuntimeEntry
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* m_cameraActor; // 0x0
        enum class EYSceneState m_sceneState; // 0x8

    };

    struct FYCustomizationModeAssociation //ScriptStruct Prospect.YCustomizationModeAssociation
    {
    public:


    };

    struct FYControllerCustomizationState //ScriptStruct Prospect.YControllerCustomizationState
    {
    //Children Prop Count (Fields): 7
    public:

        struct FTransform m_worldTransform; // 0x0
        enum class EYCustomizationMode m_customizationMode; // 0x30
        enum class EYCustomizationCategory m_customizationCategory; // 0x31
        struct FString m_secondaryScreen; // 0x38
        bool m_rotationEnabled; // 0x48
        struct FString m_baseItemId; // 0x50
        struct FString m_customItemID; // 0x60

    };

    struct FYDamagePlayerTrackingData //ScriptStruct Prospect.YDamagePlayerTrackingData
    {
    //Children Prop Count (Fields): 4
    public:

        float m_lastTimeTakeDamageFromPlayer; // 0x0
        float m_timeStartedGettingKilledByPlayer; // 0x4
        float m_healthStartedKilledByPlayer; // 0x8
        float m_staminaStartedKilledByPlayer; // 0xc

    };

    struct FYHitflashData //ScriptStruct Prospect.YHitflashData
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<class UMeshComponent*> m_hitflashComponents; // 0x0
        struct FName m_scalarParameter; // 0x10
        struct FName m_scalarParameterWeakspot; // 0x18
        class UCurveFloat* m_hitflashCurve; // 0x20
        bool m_haveHitflashEnabled; // 0x28
        bool m_haveHitflashEnabledForAllDamage; // 0x29

    };

    struct FYDOTDamageEntry //ScriptStruct Prospect.YDOTDamageEntry
    {
    //Children Prop Count (Fields): 8
    public:

        class AActor* m_initiator; // 0x0
        float m_duration; // 0x8
        float m_deltaTime; // 0xc
        float m_damageInterval; // 0x10
        float m_timeStarted; // 0x14
        float m_damagePerInterval; // 0x18
        int32_t m_ticks; // 0x1c
        struct FYDamageOriginInfo m_dotAppliedFromOriginInfo; // 0x20

    };

    struct FYHitZoneDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YHitZoneDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> m_bones; // 0x10

    };

    struct FYFindActorDealDamageRequestData //ScriptStruct Prospect.YFindActorDealDamageRequestData
    {
    //Children Prop Count (Fields): 10
    public:

        class AActor* m_damageCauser; // 0x0
        struct FVector m_startLocation; // 0x8
        struct FDataTableRowHandle m_transportRowHandle; // 0x18
        float m_radius; // 0x28
        float m_capsuleHalfHeight; // 0x2c
        struct FVector m_CapsuleUpVector; // 0x30
        bool m_skipFindClosestBoneCheck; // 0x3c
        struct TArray<class AActor*> m_actorsIgnoreDamage; // 0x40
        bool m_skipTraceToVerifyHit; // 0x50
        enum class ECollisionChannel m_collisionChannel; // 0x51

    };

    struct FYRadialDamageEntry //ScriptStruct Prospect.YRadialDamageEntry
    {
    //Children Prop Count (Fields): 5
    public:

        class AActor* m_hitActor; // 0x0
        class UYDamageComponent* m_hitDamageComponent; // 0x8
        struct FVector m_hitLocation; // 0x10
        struct FHitResult m_hitResult; // 0x1c
        char m_surfaceType; // 0xa4

    };

    struct FYRadialDamageDealingData //ScriptStruct Prospect.YRadialDamageDealingData
    {
    //Children Prop Count (Fields): 36
    public:

        struct FVector m_origin; // 0x0
        struct FVector m_originDamageLineTraceCheckOverride; // 0xc
        struct FVector m_impactNormal; // 0x18
        float m_radius; // 0x24
        float m_capsuleRadius; // 0x28
        float m_capsuleHalfHeight; // 0x2c
        float m_falloffStartRange; // 0x30
        float m_falloffDamageMultiplier; // 0x34
        float m_playerDamageMultiplier; // 0x38
        float m_enemyDamageMultiplier; // 0x3c
        float m_damageSelfMultiplier; // 0x40
        float m_healthDamage; // 0x44
        struct FYDamageHelper m_damage; // 0x48
        class AActor* m_damageCauser; // 0x58
        class AActor* m_damageInstigator; // 0x60
        struct FName m_boneNameHit; // 0x68
        float m_stabilityDamage; // 0x70
        float m_radialDamageImpulse; // 0x74
        float m_stabilityDamageForDeathRagdoll; // 0x78
        struct TArray<class AActor*> m_ignoredActors; // 0x80
        bool m_ignorePawnsForDamagePreventionChecks; // 0x90
        struct FYActorArray m_ignoredActorsForDamage; // 0x98
        enum class ENetRole m_roleToReplicate; // 0xa8
        enum class ECollisionChannel m_damagePreventionChannel; // 0xa9
        bool m_ignoreDamagePrevention; // 0xaa
        bool m_canDamageSelf; // 0xab
        bool m_affectEnemyHitreaction; // 0xac
        bool m_useDamageCauserForImpactDirection; // 0xad
        bool m_damageIgnoreShield; // 0xae
        float m_penetration; // 0xb0
        bool m_isFriendlyFireAllowed; // 0xb4
        struct FGameplayTagContainer m_objectTypesAllowedToDamage; // 0xb8
        struct FYDamageOverTimeData m_dotData; // 0xd8
        enum class EYDamageApplication m_damageApplication; // 0xe4
        struct FYDamageOriginInfo m_damageOriginInfo; // 0xe8
        struct TArray<enum class EYTeam> m_teamsToIgnore; // 0x110

    };

    struct FYActorArray //ScriptStruct Prospect.YActorArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class AActor*> m_actors; // 0x0

    };

    struct FYDamageInfoRow : FYDataTableRowBase //ScriptStruct Prospect.YDamageInfoRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_displayName; // 0x10
        struct TSoftObjectPtr<UTexture2D> m_icon; // 0x30

    };

    struct FYDamageInfoApplyRow : FYDamageInfoRow //ScriptStruct Prospect.YDamageInfoApplyRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDataTableRowHandle m_uiImpactWarning; // 0x58

    };

    struct FYDamageInfoCauserRow : FYDamageInfoRow //ScriptStruct Prospect.YDamageInfoCauserRow
    {
    public:


    };

    struct FYRawDamageEventContainer //ScriptStruct Prospect.YRawDamageEventContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYDamageEvent> m_events; // 0x0
        int32_t m_index; // 0x10

    };

    struct FYGameplayTagMappingRow : FYDataTableRowBase //ScriptStruct Prospect.YGameplayTagMappingRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayTag m_gameplayTag; // 0x10
        struct FText m_tagDisplayText; // 0x18

    };

    struct FYProfanityTableRow : FTableRowBase //ScriptStruct Prospect.YProfanityTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName m_name; // 0x8

    };

    struct FYPlayFabStoreRowBase : FTableRowBase //ScriptStruct Prospect.YPlayFabStoreRowBase
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_isEnabled; // 0x8
        struct FText m_displayName; // 0x10
        enum class EYGamePlatform m_platform; // 0x30
        enum class EYPlayFabStoreCategory m_storeCategory; // 0x31

    };

    struct FYBundleDataTableRowBase : FYDataTableRowBase //ScriptStruct Prospect.YBundleDataTableRowBase
    {
    //Children Prop Count (Fields): 6
    public:

        bool m_isPlatformBundle; // 0x10
        struct FYStoreItemData m_storeData; // 0x18
        struct TArray<struct FYPlatformStoreEntry> m_platformStoresData; // 0xb0
        struct TArray<struct FYBundleEntry> m_itemCollection; // 0xc0
        struct TArray<struct FYItemMeshVisualization> m_itemMeshes; // 0xd0
        struct FYItemMeshVisualizationOverride m_itemVisOverride; // 0xe0

    };

    struct FYBundleEntry //ScriptStruct Prospect.YBundleEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_quantity; // 0x10

    };

    struct FYPlatformStoreEntry //ScriptStruct Prospect.YPlatformStoreEntry
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYGamePlatform m_platform; // 0x0
        bool m_isOneTimePurchase; // 0x1
        struct FString m_offerId; // 0x8
        struct FString m_entitlementId; // 0x18

    };

    struct FYVeteranPackDataTableRowBase : FYBundleDataTableRowBase //ScriptStruct Prospect.YVeteranPackDataTableRowBase
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t m_minimumVeteranPointsRequired; // 0x100

    };

    struct FYLoreItemRowBase : FYItemDataTableRowBase //ScriptStruct Prospect.YLoreItemRowBase
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_description; // 0x408
        struct FText m_lore; // 0x428
        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x448

    };

    struct FYMeshAttachment //ScriptStruct Prospect.YMeshAttachment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName m_socket; // 0x0
        struct TSoftObjectPtr<USkeletalMesh> m_mesh; // 0x8
        struct TSoftObjectPtr<UMaterialInterface> m_materialOverride; // 0x30

    };

    struct FYItemShopInfo //ScriptStruct Prospect.YItemShopInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYItemCraftingDataPerShop> m_factions; // 0x0

    };

    struct FYDeadDropLocationRow : FYDataTableRowBase //ScriptStruct Prospect.YDeadDropLocationRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FText m_name; // 0x10

    };

    struct FYDeveloperCreditsCategoriesDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YDeveloperCreditsCategoriesDataTableRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_categoryHeadline; // 0x10
        struct TArray<struct FString> m_developers; // 0x20

    };

    struct FYDurabilityAnalyticsPerPlayer //ScriptStruct Prospect.YDurabilityAnalyticsPerPlayer
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, struct FYDurabilityAnalyticsEvent> m_itemAnalytics; // 0x0

    };

    struct FYStatProperty //ScriptStruct Prospect.YStatProperty
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_propertyKey; // 0x0
        struct FString m_propertyName; // 0x10

    };

    struct FYExperienceRow : FYItemDataTableRowBase //ScriptStruct Prospect.YExperienceRow
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYExperienceType m_experienceType; // 0x408

    };

    struct FYLastAcknowledgedFactionProgress //ScriptStruct Prospect.YLastAcknowledgedFactionProgress
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_factionId; // 0x0
        int32_t m_factionLevel; // 0x10
        int32_t m_factionLevelXP; // 0x14

    };

    struct FYCraftingDiscountDataTableReference //ScriptStruct Prospect.YCraftingDiscountDataTableReference
    {
    //Children Prop Count (Fields): 2
    public:

        class UDataTable* m_dataTable; // 0x0
        struct FString m_sourceFileName; // 0x8

    };

    struct FYFactionUnlockRewards //ScriptStruct Prospect.YFactionUnlockRewards
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYUnlockedShopItem> m_unlockedShopItems; // 0x0
        struct TArray<struct FDataTableRowHandle> m_unlockedContracts; // 0x10

    };

    struct FYFactionProgressionReward //ScriptStruct Prospect.YFactionProgressionReward
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_currencyTableRowHandle; // 0x0
        int32_t m_amount; // 0x10

    };

    struct FYUpdateFactionProgressionLocal //ScriptStruct Prospect.YUpdateFactionProgressionLocal
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_faction; // 0x0
        int32_t m_factionProgression; // 0x10

    };

    struct FYFilterRuntimeSettings //ScriptStruct Prospect.YFilterRuntimeSettings
    {
    //Children Prop Count (Fields): 9
    public:

        struct FString m_archetypeID; // 0x0
        struct FString m_userId; // 0x10
        enum class EYCustomizationModelType m_modelState; // 0x20
        enum class EYSortingRequestType m_sortingRequest; // 0x21
        bool m_sortAlphabetical; // 0x22
        bool m_onlyShowReleasedItems; // 0x23
        bool m_checkItemStates; // 0x24
        bool m_onlyShowOwnedItems; // 0x25
        bool m_onlyShowItemsWithoutOwnershipRequirement; // 0x26

    };

    struct FYFilterItemEntry //ScriptStruct Prospect.YFilterItemEntry
    {
    //Children Prop Count (Fields): 7
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        struct FYVanityItemData m_vanityItem; // 0x10
        struct FYItemVisualAcquisitionData m_acquisitionState; // 0x28
        bool m_isEquippedTemporary; // 0x3c
        bool m_isEquippedPersistent; // 0x3d
        bool m_isOwned; // 0x3e
        bool m_shouldBePreselected; // 0x3f

    };

    struct FYItemVisualAcquisitionData //ScriptStruct Prospect.YItemVisualAcquisitionData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName m_seasonId; // 0x0
        char m_level; // 0x8
        bool m_paidPass; // 0x9
        struct FName m_shopOfferId; // 0xc

    };

    struct FYVanityItemData //ScriptStruct Prospect.YVanityItemData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_variation; // 0x10
        bool m_isHiddenForCustomization; // 0x14

    };

    struct FYFilterCategoriesDataEntry //ScriptStruct Prospect.YFilterCategoriesDataEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<enum class EYCustomizationCategory> m_customizationCategories; // 0x0
        struct TArray<enum class EYItemType> m_itemTypes; // 0x10
        struct TArray<enum class EYModificationSlotType> m_modSlotTypes; // 0x20
        struct TArray<enum class EYVanityType> m_vanityTypes; // 0x30
        bool m_filterForTools; // 0x40

    };

    struct FYFindDropLocationData //ScriptStruct Prospect.YFindDropLocationData
    {
    //Children Prop Count (Fields): 8
    public:

        class UObject* m_worldContextObject; // 0x0
        class AActor* m_actorContext; // 0x8
        struct FVector m_locationReachableFrom; // 0x10
        struct FVector m_preferredDropLocation; // 0x1c
        struct FVector m_choosenSuitableDropLocation; // 0x28
        int32_t m_navMeshRadius; // 0x34
        struct FString m_contextInfo; // 0x38
        struct TArray<struct FYDebugFindDropLocationVectorInfo> m_additionalDebugInfo; // 0x48

    };

    struct FYDebugFindDropLocationVectorInfo //ScriptStruct Prospect.YDebugFindDropLocationVectorInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector m_locationContextOrigin; // 0x0
        struct FVector m_location; // 0xc
        struct FString m_description; // 0x18
        struct FColor m_color; // 0x28

    };

    struct FYCurrentlyOverlappingFoliage //ScriptStruct Prospect.YCurrentlyOverlappingFoliage
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EPhysicalSurface m_surface; // 0x0
        class UAudioComponent* m_audioComponent; // 0x8
        struct FDataTableRowHandle m_effect; // 0x10
        float m_timeElapsed; // 0x20

    };

    struct FYFortunaPassAction : FYDataTableRowBase //ScriptStruct Prospect.YFortunaPassAction
    {
    //Children Prop Count (Fields): 9
    public:

        bool m_isEnabled; // 0x10
        enum class EYActionType m_actionType; // 0x11
        struct FYActionBaseConditions m_actionBaseConditions; // 0x18
        struct FYActionKillConditions m_actionKillConditions; // 0x28
        struct FYActionContractConditions m_actionContractConditions; // 0x70
        struct FYUIFortunaPassActionData m_uiData; // 0x78
        int32_t m_seasonGrantedXP; // 0xb8
        int32_t m_dailyCapXP; // 0xbc
        int32_t m_xpGrantFrequency; // 0xc0

    };

    struct FYUIFortunaPassActionData //ScriptStruct Prospect.YUIFortunaPassActionData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_name; // 0x0
        struct FText m_description; // 0x20

    };

    struct FYActionContractConditions //ScriptStruct Prospect.YActionContractConditions
    {
    //Children Prop Count (Fields): 2
    public:

        bool m_filterByContractDifficulty; // 0x0
        enum class EYContractDifficulty m_contractDifficultyCondition; // 0x1

    };

    struct FYCurrentNextLevelData //ScriptStruct Prospect.YCurrentNextLevelData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t currentLevel; // 0x0
        int32_t currentLevelXp; // 0x4
        int32_t nextLevelXp; // 0x8

    };

    struct FYFortunaPassLevel : FYDataTableRowBase //ScriptStruct Prospect.YFortunaPassLevel
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYFortunaPassLevelUnlockData m_fortunaPassLevelUnlockData; // 0x10
        struct FYFortunaPassReward m_fortunaPassReward; // 0x30

    };

    struct FYFortunaPassReward //ScriptStruct Prospect.YFortunaPassReward
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_isPremium; // 0x0
        struct FYUIFortunaPassRewardData m_uiData; // 0x8
        struct FDataTableRowHandle m_itemToReward; // 0x70
        int32_t m_itemToRewardAmount; // 0x80
        int32_t m_xpBonusPercentIncrease; // 0x84

    };

    struct FYUIFortunaPassRewardData //ScriptStruct Prospect.YUIFortunaPassRewardData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TSoftObjectPtr<UTexture2D> m_bigImage; // 0x0
        struct FText m_rewardName; // 0x28
        struct FText m_rewardDescription; // 0x48

    };

    struct FYFortunaPassLevelUnlockData //ScriptStruct Prospect.YFortunaPassLevelUnlockData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_unlockXPRelPreviousLevels; // 0x0
        struct FYCostEntryRow m_skipLevelCost; // 0x8

    };

    struct FYDebugFortunaPassSkipNextLevelResult //ScriptStruct Prospect.YDebugFortunaPassSkipNextLevelResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYDebugSetFortunaPassPremiumUnlockResult //ScriptStruct Prospect.YDebugSetFortunaPassPremiumUnlockResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10

    };

    struct FYFullscreenScopeData //ScriptStruct Prospect.YFullscreenScopeData
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* m_widgetClass; // 0x0

    };

    struct FYClientDisconnectedEvent : FYBaseAnalyticsEvent //ScriptStruct Prospect.YClientDisconnectedEvent
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString GameVersion; // 0xa8
        struct FString FailureType; // 0xb8
        struct FString errorString; // 0xc8
        struct FString lastRoomId; // 0xd8
        struct FString lastState; // 0xe8

    };

    struct FYChatLog //ScriptStruct Prospect.YChatLog
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_sender; // 0x0
        struct FString m_message; // 0x10

    };

    struct FYPlayerSlot //ScriptStruct Prospect.YPlayerSlot
    {
    //Children Prop Count (Fields): 2
    public:

        struct FUniqueNetIdRepl m_uniqueId; // 0x0
        struct FString m_playerName; // 0x28

    };

    struct FYPlayerStartCluster //ScriptStruct Prospect.YPlayerStartCluster
    {
    //Children Prop Count (Fields): 4
    public:

        struct FGuid m_guid; // 0x0
        struct TArray<class AActor*> m_locations; // 0x10
        struct FVector m_centroid; // 0x20
        float m_unlockTime; // 0x2c

    };

    struct FYPlayerStartScoreRule //ScriptStruct Prospect.YPlayerStartScoreRule
    {
    //Children Prop Count (Fields): 2
    public:

        float m_radius; // 0x0
        int32_t m_scorePerPlayerInRadius; // 0x4

    };

    struct FYSelectPlayerStart //ScriptStruct Prospect.YSelectPlayerStart
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_incommingName; // 0x0
        class UObject* m_defaultPawnClass; // 0x10
        class UWorld* m_world; // 0x18
        class AController* Player; // 0x20

    };

    struct FYGameModeTuning : FYDataTableRowBase //ScriptStruct Prospect.YGameModeTuning
    {
    //Children Prop Count (Fields): 27
    public:

        struct FGameplayTagContainer m_gameplayTagsModifiedXP; // 0x10
        float m_xpModificationOnGameplayTagsMultiplier; // 0x30
        int32_t m_questVictoryConditionQuestList; // 0x34
        float m_addQuestTimerDelay; // 0x38
        int32_t m_amountOfHardQuests; // 0x3c
        int32_t m_amountOfMediumQuests; // 0x40
        float m_scoreSharingMultiplier; // 0x44
        float m_currencySharingMultiplier; // 0x48
        float m_xpSharingMultiplier; // 0x4c
        float m_pactBreakInteractionTime; // 0x50
        bool m_heatmapEnabled; // 0x54
        float m_ownPlayerHeatScore; // 0x58
        float m_pactMateHeatScore; // 0x5c
        float m_nonPlayerHeatScore; // 0x60
        float m_playerHeatScore; // 0x64
        float m_vehicleHeatScore; // 0x68
        float m_recentlyDealtDamageScore; // 0x6c
        float m_recentlyDealDamageHeatMapTimeSpan; // 0x70
        float m_sessionTimeoutCallbackRewards; // 0x74
        bool m_sessionManagesResources; // 0x78
        float m_interactionMultiplier; // 0x7c
        float m_interactionTraceSphere; // 0x80
        bool m_checkRecursiveTrace; // 0x84
        bool m_prioritizeNonPlayerCharacters; // 0x85
        bool m_useSessionTimerShutdown; // 0x86
        float m_damageOutlineHostilePlayersDuration; // 0x88
        int32_t m_DBNOCharges; // 0x8c

    };

    struct FYGameModeUIData : FYDataTableRowBase //ScriptStruct Prospect.YGameModeUIData
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EYMatchmakeGameModeType m_matchmakingGameModeType; // 0x10
        bool m_isRanked; // 0x11
        bool m_isTournamentMode; // 0x12
        struct FText m_gameModeName; // 0x18
        struct FText m_gameModeDescription; // 0x38
        struct TSoftObjectPtr<UTexture2D> m_gameModeIcon; // 0x58
        struct TSoftObjectPtr<UTexture2D> m_gameModeImage; // 0x80
        struct TSoftObjectPtr<UTexture2D> m_gameModeBackgroundImage; // 0xa8
        struct TSoftObjectPtr<UTexture2D> m_gameModeSelectedBackgroundImageOverride; // 0xd0
        struct TSoftObjectPtr<UTexture2D> m_gameModeHoverBackgroundImageOverride; // 0xf8

    };

    struct FYGamePingEntry //ScriptStruct Prospect.YGamePingEntry
    {
    //Children Prop Count (Fields): 3
    public:

        class UPingIP* m_pinger; // 0x20
        int32_t m_ping; // 0x28
        int32_t m_numberOfPings; // 0x2c

    };

    struct FYEquippedPlayerLoadout //ScriptStruct Prospect.YEquippedPlayerLoadout
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_weapon; // 0x0
        struct TArray<struct FDataTableRowHandle> m_abilities; // 0x10

    };

    struct FYSetServerLoadingFinishedRequest : FYGameServerRequest //ScriptStruct Prospect.YSetServerLoadingFinishedRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x10
        bool finishedLoading; // 0x20

    };

    struct FYPlayerShardData //ScriptStruct Prospect.YPlayerShardData
    {
    //Children Prop Count (Fields): 1
    public:

        class AActor* m_actor; // 0x0

    };

    struct FYItemDetailOverviewData //ScriptStruct Prospect.YItemDetailOverviewData
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_isItemBlueprint; // 0x0
        struct FDataTableRowHandle m_itemRowHandle; // 0x8
        enum class EYItemRarityType m_itemRarity; // 0x18
        struct FString m_shopItemBelongsTo; // 0x20

    };

    struct FYVanityItem //ScriptStruct Prospect.YVanityItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_vanityHandle; // 0x0
        int32_t m_amount; // 0x10

    };

    struct FYUIDailyCrateTimerInfo //ScriptStruct Prospect.YUIDailyCrateTimerInfo
    {
    //Children Prop Count (Fields): 2
    public:

        bool m_generatorRewardCanBeCollected; // 0x0
        struct FTimespan m_timeUntilNextReward; // 0x8

    };

    struct FYDailyCrateGeneratorInfo //ScriptStruct Prospect.YDailyCrateGeneratorInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYGeneratorInfo m_generatorInfo; // 0x0
        int32_t m_crateLevel; // 0x10
        struct TArray<struct FYRewardDataTableRow> m_crateItems; // 0x18

    };

    struct FYRewardDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YRewardDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYRewardType m_rewardType; // 0x10
        struct FName m_rewardId; // 0x14
        int32_t m_amount; // 0x1c
        float m_weight; // 0x20

    };

    struct FYGeneratorInfo //ScriptStruct Prospect.YGeneratorInfo
    {
    //Children Prop Count (Fields): 3
    public:

        float m_currentAmount; // 0x0
        float m_maxAmount; // 0x4
        struct FName m_generatorId; // 0x8

    };

    struct FYGeneratorRow : FYDataTableRowBase //ScriptStruct Prospect.YGeneratorRow
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName m_generatorId; // 0x10
        struct FText m_generatorName; // 0x18
        enum class EYPassiveGeneratorRewardType m_generatorType; // 0x38
        int32_t m_baseGenIntervalMinutes; // 0x3c
        int32_t m_baseGenRate; // 0x40
        int32_t m_baseCap; // 0x44
        enum class EYTechTreeNodePerkType m_capPerkEffector; // 0x48
        enum class EYTechTreeNodePerkType m_genRatePerkEffector; // 0x49

    };

    struct FYGenericDebuggerShapeEntry //ScriptStruct Prospect.YGenericDebuggerShapeEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector m_start; // 0x0
        struct FVector m_end; // 0xc
        float m_thickness; // 0x18
        struct FColor m_color; // 0x1c
        struct FString m_info; // 0x20

    };

    struct FYGenericIDDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YGenericIDDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString m_id; // 0x10

    };

    struct FYSecondEntry //ScriptStruct Prospect.YSecondEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYInventoryItem> m_inventoryItemsToTrack; // 0x0
        struct TArray<struct FGuid> m_highlightGuids; // 0x10

    };

    struct FYHighlightAssociationEntry //ScriptStruct Prospect.YHighlightAssociationEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<enum class EYItemType> m_itemTypesToTrack; // 0x0
        bool m_forceOnlyTool; // 0x10
        struct TArray<struct FYInventoryItem> m_sourceItems; // 0x18
        struct TArray<struct FGuid> m_highlightGuids; // 0x28
        struct FGuid m_associationGuid; // 0x38

    };

    struct FYHighlightStateReplicationData //ScriptStruct Prospect.YHighlightStateReplicationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYHighlightStateData m_stateData; // 0x0
        int32_t m_predictionKey; // 0x120

    };

    struct FYWrapperCallbackHighlightData //ScriptStruct Prospect.YWrapperCallbackHighlightData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDelegate> m_delegates; // 0x0

    };

    struct FYImpactData //ScriptStruct Prospect.YImpactData
    {
    //Children Prop Count (Fields): 14
    public:

        struct FDataTableRowHandle m_fxCategoryRowHandle; // 0x0
        class UObject* m_worldContextObject; // 0x10
        class AActor* m_actorHitOptional; // 0x18
        class USceneComponent* m_componentHit; // 0x20
        struct FVector m_location; // 0x28
        struct FVector m_impactSurfaceNormal; // 0x34
        struct FVector m_direction; // 0x40
        float m_damageReduction; // 0x4c
        enum class EPhysicalSurface m_surfaceType; // 0x50
        struct FDataTableRowHandle m_impactEffectPerSurfaceTypeRow; // 0x58
        struct FYWeaponImpactEffectsAssociation m_defaultEffect; // 0x68
        struct FYDamageOriginInfo m_damageOriginInfo; // 0xf8
        class AActor* m_soundOwningActor; // 0x120
        struct FVector m_visualOriginTrailLocation; // 0x128

    };

    struct FYWeaponImpactEffectsAssociation //ScriptStruct Prospect.YWeaponImpactEffectsAssociation
    {
    //Children Prop Count (Fields): 13
    public:

        struct FYWeaponDecalData m_impactDecal; // 0x0
        class UParticleSystem* m_impactVfx; // 0x20
        class UParticleSystem* m_additionalImpactVfx; // 0x28
        bool m_attachImpactVfx; // 0x30
        bool m_playImpactVfxOnLocallyControlledPawn; // 0x31
        float m_slerpMaxImpactDirectionValue; // 0x34
        float m_slerpMinImpactDirectionValue; // 0x38
        float m_maxRandomImpactDirectionConeAngle; // 0x3c
        struct FYWeaponDecalData m_takeDamageDecal; // 0x40
        bool m_playImpactSfxOnOwner; // 0x60
        struct FDataTableRowHandle m_impactSfxHandle; // 0x68
        struct FDataTableRowHandle m_hitMarkerSfxHandle; // 0x78
        bool m_tryProjectImpactLocationOnSkeletalMesh; // 0x88

    };

    struct FYWeaponDecalData //ScriptStruct Prospect.YWeaponDecalData
    {
    //Children Prop Count (Fields): 6
    public:

        class UMaterialInterface* m_impactMaterial; // 0x0
        float m_decalSize; // 0x8
        float m_lifeSpan; // 0xc
        float m_startDelay; // 0x10
        float m_fadeOutDuration; // 0x14
        float m_fadeScreenSize; // 0x18

    };

    struct FYImpactEffectsRow : FYDataTableRowBase //ScriptStruct Prospect.YImpactEffectsRow
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_enableFallbackToGenericRow; // 0x10
        bool m_alwaysUseDefaultSurfaceType; // 0x11
        struct TMap<enum class EPhysicalSurface, struct FYWeaponImpactEffectsAssociation> m_effects; // 0x18

    };

    struct FYOverrideImpactEffectsRow : FYImpactEffectsRow //ScriptStruct Prospect.YOverrideImpactEffectsRow
    {
    public:


    };

    struct FYImpactEffectReceiverData //ScriptStruct Prospect.YImpactEffectReceiverData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYFXCategoryMaterialParemeterEntry> m_fxVectorParameters; // 0x0
        struct TArray<struct FYFXCategoryMaterialFloatParemeterEntry> m_fxFloatParameters; // 0x10

    };

    struct FYFXCategoryMaterialFloatParemeterEntry //ScriptStruct Prospect.YFXCategoryMaterialFloatParemeterEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float m_floatParameter; // 0x0
        struct FName m_name; // 0x4

    };

    struct FYFXCategoryMaterialParemeterEntry //ScriptStruct Prospect.YFXCategoryMaterialParemeterEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector m_vectorParameter; // 0x0
        struct FName m_name; // 0xc

    };

    struct FYBaseFXCategoryRow : FYDataTableRowBase //ScriptStruct Prospect.YBaseFXCategoryRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FYFXCategoryMaterialParemeterEntry> m_materialParameters; // 0x10
        struct TArray<struct FYFXCategoryMaterialFloatParemeterEntry> m_materialFloatParameters; // 0x20
        struct FDataTableRowHandle m_impactEffectsDataTableRow; // 0x30
        struct FYWeaponImpactEffectsAssociation m_defaultEffect; // 0x40

    };

    struct FYFXCategoryRow : FYBaseFXCategoryRow //ScriptStruct Prospect.YFXCategoryRow
    {
    //Children Prop Count (Fields): 20
    public:

        struct FName m_trailTargetParameter; // 0xd0
        class UParticleSystem* m_trailFX; // 0xd8
        bool m_playTrailVFXEmitterForProjectiles; // 0xe0
        struct FYWeaponParticleSystemSelector m_trailVFXEmitter; // 0xe8
        class UParticleSystem* m_defaultBeamFX; // 0x110
        class UParticleSystem* m_defaultSpinupFx; // 0x118
        class UParticleSystem* m_projectileParticleSystem; // 0x120
        struct FYWeaponParticleSystemSelector m_projectileVFXEmitter; // 0x128
        struct FName m_muzzleSocketName; // 0x150
        struct FYWeaponParticleSystemSelector m_muzzleVFXEmitter; // 0x158
        struct FYWeaponParticleSystemSelector m_muzzleVFXEmitter3rdPerson; // 0x180
        struct FName m_shellEjectSocketName; // 0x1a8
        struct FYWeaponParticleSystemSelector m_shellEjectVFXEmitter; // 0x1b0
        struct FName m_beamEndPointParameter; // 0x1d8
        bool m_playImpactEffectOnAutonomous; // 0x1e0
        bool m_fireFxIsLooping; // 0x1e1
        bool m_fireFxIsBeamEndPoint; // 0x1e2
        class UCameraShakeBase* m_impactCameraShake; // 0x1e8
        float m_impactShakeInnerRadius; // 0x1f0
        float m_impactShakeOuterRadius; // 0x1f4

    };

    struct FYWeaponParticleSystemSelector //ScriptStruct Prospect.YWeaponParticleSystemSelector
    {
    //Children Prop Count (Fields): 3
    public:

        class UParticleSystem* m_defaultPS; // 0x0
        struct TArray<struct FYWeaponParticleSystemOverrideByWeaponType> m_overridePsByWeaponType; // 0x8
        struct TArray<struct FYWeaponParticleSystemOverrideByDataRowHandle> m_overridePsByDataRowHandle; // 0x18

    };

    struct FYWeaponParticleSystemOverrideByDataRowHandle //ScriptStruct Prospect.YWeaponParticleSystemOverrideByDataRowHandle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_weaponDataTableRowHandle; // 0x0
        class UParticleSystem* m_particleSystem; // 0x10

    };

    struct FYWeaponParticleSystemOverrideByWeaponType //ScriptStruct Prospect.YWeaponParticleSystemOverrideByWeaponType
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYVFX_WeaponType m_weaponType; // 0x0
        class UParticleSystem* m_particleSystem; // 0x8

    };

    struct FYProjectileImpact //ScriptStruct Prospect.YProjectileImpact
    {
    //Children Prop Count (Fields): 11
    public:

        struct FGuid m_shotGuid; // 0x0
        struct FVector_NetQuantize m_startLocation; // 0x10
        struct FVector_NetQuantize m_impactLocation; // 0x1c
        struct FVector_NetQuantizeNormal m_impactNormal; // 0x28
        class USceneComponent* m_hitComponent; // 0x38
        class AActor* m_hitActor; // 0x40
        char m_surfaceType; // 0x48
        int16_t m_boneIndexHit; // 0x4a
        float m_payload_a; // 0x4c
        float m_payload_b; // 0x50
        struct FString m_context; // 0x58

    };

    struct FYImpactDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YImpactDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDataTableRowHandle m_fxDefaultDataTableRow; // 0x10

    };

    struct FYWeaponImpactDataTableRow : FYImpactDataTableRow //ScriptStruct Prospect.YWeaponImpactDataTableRow
    {
    //Children Prop Count (Fields): 9
    public:

        enum class EYImpactActorRotation m_actorSpawnRotation; // 0x20
        struct FDataTableRowHandle m_tuningDataTableRow; // 0x28
        struct FDataTableRowHandle m_spawnedActorAssociatedRow; // 0x38
        struct FSoftClassProperty m_replicatedActorToSpawn; // 0x48
        class AActor* m_nonReplicatedActorToSpawn; // 0x70
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesToAddOnImpact; // 0x78
        bool m_shouldHaveFxCategory; // 0x88
        struct FDataTableRowHandle m_aiSenseTriggerRowHandle; // 0x90
        bool m_useOwnerAsInstigatorForSenseTrigger; // 0xa0

    };

    struct FYInsuranceOffer //ScriptStruct Prospect.YInsuranceOffer
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t m_costSoftCurrency; // 0x0
        int32_t m_costPremiumCurrency; // 0x4
        int32_t m_costInsuranceCurrency; // 0x8
        struct FYInsurancePayoutPackage m_payout; // 0x10
        bool m_purchasable; // 0x38
        bool m_notEnoughSoftCurrency; // 0x39
        bool m_notEnoughPremiumCurrency; // 0x3a
        bool m_maxClaimsReached; // 0x3b

    };

    struct FYInventoryInsuranceDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YInventoryInsuranceDataTableRow
    {
    //Children Prop Count (Fields): 5
    public:

        struct FYBasicInsuranceData m_basic; // 0x10
        struct FYPremiumInsuranceData m_premium; // 0x18
        struct TArray<enum class EYItemType> m_ignoredItemTypes; // 0x20
        int32_t m_payoutDelayMinutes; // 0x30
        int32_t m_maxActiveClaims; // 0x34

    };

    struct FYPremiumInsuranceData //ScriptStruct Prospect.YPremiumInsuranceData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_initialSlotCost; // 0x0
        float m_compoundingSlotCostScalar; // 0x4

    };

    struct FYBasicInsuranceData //ScriptStruct Prospect.YBasicInsuranceData
    {
    //Children Prop Count (Fields): 2
    public:

        float m_costScalar; // 0x0
        float m_payoutScalar; // 0x4

    };

    struct FYPlayerLoadingData //ScriptStruct Prospect.YPlayerLoadingData
    {
    //Children Prop Count (Fields): 7
    public:

        struct FYTravelData m_travelData; // 0x0
        char m_interruptionCauseBitMask; // 0x30
        float m_timeStartedInitialization; // 0x34
        bool m_initializationCompleted; // 0x38
        float m_timeTakenToInitialize; // 0x3c
        struct TArray<enum class EYPlayerInitializationType> m_requiredInitializationTypes; // 0x40
        struct TArray<struct FYPlayerInitializationData> m_playerInitializationData; // 0x50

    };

    struct FYPlayerInitializationData //ScriptStruct Prospect.YPlayerInitializationData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYPlayerInitializationType m_initializationType; // 0x0
        float m_timeTakenToInitialize; // 0x4

    };

    struct FYTravelData //ScriptStruct Prospect.YTravelData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_map; // 0x0
        struct FString m_fullURL; // 0x10
        float m_loadTime; // 0x20
        float m_timeJoinedMap; // 0x24
        float m_timeSpendInMap; // 0x28

    };

    struct FYInventoryLink //ScriptStruct Prospect.YInventoryLink
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_id; // 0x0
        class UYStateInventoryComponent* m_inventoryComponent; // 0x8

    };

    struct FYItemIncrementData //ScriptStruct Prospect.YItemIncrementData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, int32_t> m_idToIncrement; // 0x0

    };

    struct FYMatchInventoryUpdate //ScriptStruct Prospect.YMatchInventoryUpdate
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FString> m_idsToRemove; // 0x0
        struct TArray<struct FYInventoryItem> m_itemsToUpdate; // 0x10
        struct TArray<struct FYInventoryItem> m_itemsToAdd; // 0x20

    };

    struct FYDefaultInventoryInfoRow : FYDataTableRowBase //ScriptStruct Prospect.YDefaultInventoryInfoRow
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_inventoryStashLimit; // 0x10
        int32_t m_inventoryBagLimit; // 0x14
        int32_t m_inventorySafeLimit; // 0x18

    };

    struct FYInventorySnapshot //ScriptStruct Prospect.YInventorySnapshot
    {
    //Children Prop Count (Fields): 5
    public:

        struct FYInventoryInfo m_inventoryInfo; // 0x0
        struct FYPlayerInventory m_playerInventory; // 0x18
        struct FYPlayerInventory m_playerStash; // 0x30
        struct FYPlayerDataSet m_playerSet; // 0x48
        struct FYPlayerVanityInventory m_playerVanityItems; // 0x70

    };

    struct FYPlayerVanityInventory //ScriptStruct Prospect.YPlayerVanityInventory
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYInventoryItem> m_ownedVanityItems; // 0x0

    };

    struct FYPlayerDataSet //ScriptStruct Prospect.YPlayerDataSet
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_permutationIndex; // 0x0
        struct FString m_id; // 0x8
        struct TArray<struct FYPlayerItemEntry> m_setItems; // 0x18

    };

    struct FYPlayerItemEntry //ScriptStruct Prospect.YPlayerItemEntry
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYPlayerSetType m_setType; // 0x0
        struct FString m_id; // 0x8

    };

    struct FYInventoryInfo //ScriptStruct Prospect.YInventoryInfo
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t m_inventoryLimit; // 0x0
        int32_t m_stashLimit; // 0x4
        int32_t m_safeLimit; // 0x8
        int32_t m_baseStashLimit; // 0xc
        int32_t m_baseSafeLimit; // 0x10

    };

    struct FYNetPlayerInventoryUpdate //ScriptStruct Prospect.YNetPlayerInventoryUpdate
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FYInventoryItem> m_itemsToAdd; // 0x0
        struct TArray<struct FYInventoryItem> m_itemsToUpdate; // 0x10
        struct TArray<struct FString> m_itemsToRemove; // 0x20

    };

    struct FYBagItems //ScriptStruct Prospect.YBagItems
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> m_bagItemsIds; // 0x0

    };

    struct FYLootListAssetPath //ScriptStruct Prospect.YLootListAssetPath
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName m_gameModeName; // 0x0
        struct FSoftObjectPath m_listDefinitionsDTAssetPath; // 0x8

    };

    struct FYItemSetUIData //ScriptStruct Prospect.YItemSetUIData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FText m_name; // 0x0
        struct FText m_description; // 0x20
        struct FText m_flavorDescription; // 0x40
        struct TSoftObjectPtr<UTexture2D> m_largeIcon; // 0x60
        struct TSoftObjectPtr<UTexture2D> m_smallIcon; // 0x88

    };

    struct FYItemPickUpLightData //ScriptStruct Prospect.YItemPickUpLightData
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_isLightEnabled; // 0x0
        float m_intensity; // 0x4
        float m_attenuationRadius; // 0x8
        struct FVector m_relativeTranslationOffset; // 0xc
        struct FColor m_color; // 0x18

    };

    struct FYItemScrapingRow : FYDataTableRowBase //ScriptStruct Prospect.YItemScrapingRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FYScrapingResultRow> m_scrapingResults; // 0x10
        struct TArray<struct FYScrapingResultRow> m_currencyRewards; // 0x20
        float m_factionReward; // 0x30

    };

    struct FYScrapingResultRow : FYDataTableRowBase //ScriptStruct Prospect.YScrapingResultRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_material; // 0x10
        float m_percentageInReturn; // 0x20

    };

    struct FYItemStatsSettingsRow : FYDataTableRowBase //ScriptStruct Prospect.YItemStatsSettingsRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYItemStatsCategory, struct FYItemStatsAssociationCollection> m_statsDefinitions; // 0x10

    };

    struct FYItemStatsAssociationCollection //ScriptStruct Prospect.YItemStatsAssociationCollection
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSoftClassProperty m_defaultItemContainer; // 0x0
        struct TArray<struct FYItemStatsAssociationEntry> m_data; // 0x28
        struct TArray<enum class EYItemStatsType> m_detailedStatisticsTypes; // 0x38
        bool m_wantsToShowDetailStatistics; // 0x48

    };

    struct FYItemStatsAssociationEntry //ScriptStruct Prospect.YItemStatsAssociationEntry
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYItemStatsType m_type; // 0x0
        float m_maxValue; // 0x4
        float m_minValue; // 0x8
        bool m_inversePercent; // 0xc
        class UCurveFloat* m_curveTranspose; // 0x10

    };

    struct FYStatTypeEntryAssociation //ScriptStruct Prospect.YStatTypeEntryAssociation
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<enum class EYGameplayAttribute> m_attributes; // 0x0
        float m_baseValue; // 0x10

    };

    struct FYDetailedStatisticsDataSettingData //ScriptStruct Prospect.YDetailedStatisticsDataSettingData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FYStatsTypeDataEntry> m_entires; // 0x0
        struct FDataTableRowHandle m_rowHandle; // 0x10
        enum class EYItemStatsCategory m_category; // 0x20

    };

    struct FYStatsTypeDataEntry //ScriptStruct Prospect.YStatsTypeDataEntry
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYItemStatsType m_type; // 0x0
        struct FText m_name; // 0x8
        float m_baseValue; // 0x28
        float m_modifiedValue; // 0x2c
        float m_difference; // 0x30

    };

    struct FYItemTooltipData //ScriptStruct Prospect.YItemTooltipData
    {
    //Children Prop Count (Fields): 15
    public:

        enum class EYItemTooltipType m_itemTooltipType; // 0x0
        struct FName m_baseItemId; // 0x4
        struct FText m_itemName; // 0x10
        struct FText m_itemType; // 0x30
        struct FText m_itemSubType; // 0x50
        struct FText m_itemDescription; // 0x70
        struct FText m_itemFlavorText; // 0x90
        struct TSoftObjectPtr<UTexture2D> m_itemImage; // 0xb0
        struct TSoftObjectPtr<UTexture2D> m_itemImageBig; // 0xd8
        int32_t m_itemPrice; // 0x100
        int32_t m_itemAmount; // 0x104
        struct FYStoredModData m_mods; // 0x108
        struct TArray<enum class EYModificationSlotType> m_modSlots; // 0x118
        struct FYWeaponTooltipData m_weaponTooltipData; // 0x128
        bool m_isCompatibleMod; // 0x140

    };

    struct FYWeaponTooltipData //ScriptStruct Prospect.YWeaponTooltipData
    {
    //Children Prop Count (Fields): 2
    public:

        float m_weaponDamage; // 0x0
        struct TArray<struct FName> m_weaponMods; // 0x8

    };

    struct FYKeybindings //ScriptStruct Prospect.YKeybindings
    {
    //Children Prop Count (Fields): 5
    public:

        struct TMap<struct FName, struct FYKeybindingData> Keybindings; // 0x0
        bool HasUpdates; // 0x50
        bool IsNew; // 0x51
        struct TArray<struct FYKeybindingData> m_addedKeybindings; // 0x58
        struct TArray<struct FYKeybindingData> m_removedKeybindings; // 0x68

    };

    struct FYKeyPlatformData : FYDataTableRowBase //ScriptStruct Prospect.YKeyPlatformData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FKey Key; // 0x10
        struct TMap<enum class EYKeybindingInputDeviceType, struct TSoftObjectPtr<UTexture2D>> Icons; // 0x28

    };

    struct FYMaterialRow : FYItemDataTableRowBase //ScriptStruct Prospect.YMaterialRow
    {
    //Children Prop Count (Fields): 5
    public:

        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x408
        struct FYActorUIWidgetData m_uiWidgetData; // 0x430
        struct FText m_materialLocationDescription; // 0x4e0
        struct FYItemPickUpLightData m_pickUpLightData; // 0x500
        struct FDataTableRowHandle m_pickUpSoundRowHandle; // 0x520

    };

    struct FYKeyDataTableRow : FYMaterialRow //ScriptStruct Prospect.YKeyDataTableRow
    {
    public:


    };

    struct FYConnectionLatencyData //ScriptStruct Prospect.YConnectionLatencyData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_totalSamplesNetSaturated; // 0x0
        struct TArray<float> m_ue4ExactPing; // 0x8
        struct TArray<float> m_latencySamples; // 0x18

    };

    struct FYPlayerLeaningData //ScriptStruct Prospect.YPlayerLeaningData
    {
    //Children Prop Count (Fields): 7
    public:

        float m_leanAngleFirstPerson; // 0x0
        float m_leanAngleThirdPerson; // 0x4
        float m_leaningTranslationFirstPerson; // 0x8
        float m_leaningTranslationThirdPerson; // 0xc
        float m_leaningMaxAngleFirstPerson; // 0x10
        float m_leaningMaxAngleThirdPerson; // 0x14
        bool m_isLeaning; // 0x18

    };

    struct FYLootContainerDefinitionRow : FYAssetVariationDefinitionRow //ScriptStruct Prospect.YLootContainerDefinitionRow
    {
    //Children Prop Count (Fields): 8
    public:

        struct FText m_containerName; // 0x10
        struct TSoftObjectPtr<USoundBase> m_soundOpen; // 0x30
        struct TSoftObjectPtr<USoundBase> m_soundClose; // 0x58
        struct TSoftObjectPtr<USkeletalMesh> m_skeletalMesh; // 0x80
        struct TArray<struct TSoftObjectPtr<UMaterialInterface>> m_skeletalMeshMaterialOverrides; // 0xa8
        struct TSoftObjectPtr<UAnimSequenceBase> m_openAnimation; // 0xb8
        int32_t m_weightLimit; // 0xe0
        struct TMap<enum class EYLootContainerTier, struct FDataTableRowHandle> m_lootTiers; // 0xe8

    };

    struct FYLootItemAmountRow : FYDataTableRowBase //ScriptStruct Prospect.YLootItemAmountRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_itemRowHandle; // 0x10
        int32_t m_amountMin; // 0x20
        int32_t m_amountMax; // 0x24

    };

    struct FYLootItemAmount //ScriptStruct Prospect.YLootItemAmount
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_amount; // 0x10

    };

    struct FYLootCountRow : FYDataTableRowBase //ScriptStruct Prospect.YLootCountRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYLootCountData> m_lootRolls; // 0x10

    };

    struct FYLootCountData //ScriptStruct Prospect.YLootCountData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        int32_t m_rollCount; // 0x10

    };

    struct FYLootRollRow : FYDataTableRowBase //ScriptStruct Prospect.YLootRollRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYWeightedRowHandle> m_rowHandles; // 0x10

    };

    struct FYWeightedRowHandle //ScriptStruct Prospect.YWeightedRowHandle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        float m_spawnWeight; // 0x10
        float m_spawnChanceInPercent; // 0x14

    };

    struct FYLootTuningRow : FYDataTableRowBase //ScriptStruct Prospect.YLootTuningRow
    {
    //Children Prop Count (Fields): 15
    public:

        struct TMap<enum class EYLootSourceType, struct FYDespawnPickUpInfo> m_pickUpTypesToDestroyWhenNoPlayerIsClose; // 0x10
        float m_serverPickUpDestructionSafeTime; // 0x60
        float m_pickUpInteractionTimeDefault; // 0x64
        float m_pickUpInteractionTimeWeapon; // 0x68
        float m_pickUpInteractionTimeAbility; // 0x6c
        struct TMap<enum class EYLootSourceType, float> m_exclusivePickUpTimes; // 0x70
        int32_t m_autoPickupRadius; // 0xc0
        struct FDataTableRowHandle m_moneyDropRow; // 0xc8
        struct TMap<enum class EYPickupType, class UParticleSystem*> m_highlightParticles; // 0xd8
        struct TMap<enum class EYPickupType, class UParticleSystem*> m_legendaryHighlightParticles; // 0x128
        struct TMap<enum class EYPickupType, struct FDataTableRowHandle> m_scannableRows; // 0x178
        struct TSoftObjectPtr<UStaticMesh> m_defaultAbilityLootMesh; // 0x1c8
        struct FSoftClassProperty m_widgetClass; // 0x1f0
        int32_t m_navMeshRandomPointInRadiusForLootDrops; // 0x218
        struct TMap<enum class EYLootVelocityType, struct FYRarityLootVelocitySettings> m_lootVelocitySettings; // 0x220

    };

    struct FYRarityLootVelocitySettings //ScriptStruct Prospect.YRarityLootVelocitySettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYItemRarityType, struct FYLootVelocitySettings> m_rarityVelocitySettings; // 0x0

    };

    struct FYLootVelocitySettings //ScriptStruct Prospect.YLootVelocitySettings
    {
    //Children Prop Count (Fields): 3
    public:

        float m_maxLootSpeed; // 0x0
        float m_minLootSpeed; // 0x4
        float m_lootSpawnAngleDegrees; // 0x8

    };

    struct FYDespawnPickUpInfo //ScriptStruct Prospect.YDespawnPickUpInfo
    {
    //Children Prop Count (Fields): 2
    public:

        float m_minAlivePickUpTime; // 0x0
        float m_minPlayerDistance; // 0x4

    };

    struct FYLootTierMappingRow : FYDataTableRowBase //ScriptStruct Prospect.YLootTierMappingRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYLootTier, struct FDataTableRowHandle> m_rarityLoot; // 0x10

    };

    struct FYLootItemDataTableRow : FYItemDataTableRowBase //ScriptStruct Prospect.YLootItemDataTableRow
    {
    //Children Prop Count (Fields): 12
    public:

        enum class EYPickupType m_type; // 0x408
        struct FSoftClassProperty m_pickupActorClass; // 0x410
        struct FDataTableRowHandle m_additionalRowHandle; // 0x438
        bool m_disableAfterInteractionCompleted; // 0x448
        bool m_showInteractionWidget; // 0x449
        bool m_showNotificationMessage; // 0x44a
        bool m_displayItemAmount; // 0x44b
        bool m_showActorUIComponent; // 0x44c
        struct FSoftClassProperty m_widgetClass; // 0x450
        struct FYActorUIWidgetData m_uiWidgetData; // 0x478
        bool m_blockMovementWhileInteracting; // 0x528
        struct FDataTableRowHandle m_pickUpSoundRowHandle; // 0x530

    };

    struct FYGameplayTagToLootPoolAssociation //ScriptStruct Prospect.YGameplayTagToLootPoolAssociation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGameplayTag m_gameplayTag; // 0x0
        struct TArray<struct FString> m_lootTags; // 0x8

    };

    struct FYContractChainProgressInfo //ScriptStruct Prospect.YContractChainProgressInfo
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_progressCurrent; // 0x0
        int32_t m_progressMax; // 0x4

    };

    struct FYMapInfoRow : FTableRowBase //ScriptStruct Prospect.YMapInfoRow
    {
    //Children Prop Count (Fields): 10
    public:

        struct FText m_name; // 0x8
        struct FText m_description; // 0x28
        struct FText m_tooltip; // 0x48
        bool m_isVisible; // 0x68
        struct TSoftObjectPtr<UTexture2D> m_image; // 0x70
        struct TSoftObjectPtr<UTexture2D> m_mapSelectionImage; // 0x98
        struct TSoftObjectPtr<UObject> m_persistentMap; // 0xc0
        enum class EYMatchMapDifficulty m_difficulty; // 0xe8
        struct TSoftObjectPtr<UMaterialInterface> m_hologramMaterial; // 0xf0
        struct FYVFXNiagaraMapInfo m_VFXNiagaraMapInfo; // 0x118

    };

    struct FYVFXNiagaraMapInfo //ScriptStruct Prospect.YVFXNiagaraMapInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector StormOccusionCenter01; // 0x0
        float StormOcclusionRadius01; // 0xc
        struct FVector StormOccusionCenter02; // 0x10
        float StormOcclusionRadius02; // 0x1c

    };

    struct FYMatchmakingSetupRow : FTableRowBase //ScriptStruct Prospect.YMatchmakingSetupRow
    {
    //Children Prop Count (Fields): 13
    public:

        struct FYMatchmakingSetupEntry stationSetup; // 0x8
        struct TArray<struct FYMatchmakingSetupMatchEntry> matchSetups; // 0x38
        enum class EYMatchmakingMapOptions matchMapChoiceOption; // 0x48
        struct FYMatchmakingBeginnerFlagSetup beginnerFlagRules; // 0x4c
        int32_t rejoinOnDeathCooldownMinutes; // 0x5c
        bool enableJoinConcurrencyTempLock; // 0x60
        int32_t maxPlayersPerStationShard; // 0x64
        int32_t maxServersToCreatePerUpdate; // 0x68
        int32_t pendingMatchmakingRequestTimeoutTime; // 0x6c
        bool removeSessionsNotInPlayfab; // 0x70
        struct TArray<struct FString> playFabErrorCodesCausingSessionRemoval; // 0x78
        struct FYMatchmakingRegionSetup regionsSetup; // 0x88
        struct FYMatchmakingNVRSetup nvrSetup; // 0xb8

    };

    struct FYMatchmakingNVRSetup //ScriptStruct Prospect.YMatchmakingNVRSetup
    {
    //Children Prop Count (Fields): 9
    public:

        bool Enabled; // 0x0
        int32_t userNVRSamples; // 0x4
        struct TArray<float> nvrSquadMultipliers; // 0x8
        struct TArray<float> nvrBrackets; // 0x18
        struct TArray<float> minSquadNVRs; // 0x28
        float sessionFillRatioThreshold; // 0x38
        int32_t decayIntervalDays; // 0x3c
        float decayEffectPerInterval; // 0x40
        struct TArray<float> postMatchNvrInflationMultipliers; // 0x48

    };

    struct FYMatchmakingRegionSetup //ScriptStruct Prospect.YMatchmakingRegionSetup
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString defaultRegion; // 0x0
        struct TArray<struct FYMatchmakingRegionSetupEntry> regionOverrides; // 0x10
        struct TArray<struct FYMatchmakingCountrySetupEntry> countryOverrides; // 0x20

    };

    struct FYMatchmakingCountrySetupEntry //ScriptStruct Prospect.YMatchmakingCountrySetupEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString countryCode; // 0x0
        enum class EYMatchmakingCountryOverrideOptions Option; // 0x10
        struct FString redirect; // 0x18

    };

    struct FYMatchmakingRegionSetupEntry //ScriptStruct Prospect.YMatchmakingRegionSetupEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Region; // 0x0
        enum class EYMatchmakingRegionOverrideOptions Option; // 0x10
        struct FString redirect; // 0x18

    };

    struct FYMatchmakingBeginnerFlagSetup //ScriptStruct Prospect.YMatchmakingBeginnerFlagSetup
    {
    //Children Prop Count (Fields): 4
    public:

        bool Enabled; // 0x0
        int32_t matchesPlayedThreshold; // 0x4
        int32_t evacsThreshold; // 0x8
        int32_t consecutiveDeathsThreshold; // 0xc

    };

    struct FYMatchmakingSetupEntry //ScriptStruct Prospect.YMatchmakingSetupEntry
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t maxAmountOfPlayers; // 0x0
        int32_t maxAmountOfPlayersBeginner; // 0x4
        bool hasBeginnerBracket; // 0x8
        enum class EYMatchmakingUsersAmountOptions usersAmountOption; // 0x9
        int32_t m_sessionTotalLengthUntilShutdown; // 0xc
        int32_t m_sessionUntilNoMatchmaking; // 0x10
        struct TArray<struct FYSessionClientWarningStep> m_sessionClientWarningSteps; // 0x18
        int32_t m_sessionNoPlayerConnectServerShutdown; // 0x28

    };

    struct FYSessionClientWarningStep //ScriptStruct Prospect.YSessionClientWarningStep
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_time; // 0x0
        struct FDataTableRowHandle m_notificationRow; // 0x8

    };

    struct FYMatchmakingSetupMatchEntry : FYMatchmakingSetupEntry //ScriptStruct Prospect.YMatchmakingSetupMatchEntry
    {
    //Children Prop Count (Fields): 2
    public:

        bool Enabled; // 0x30
        struct FString fullMapName; // 0x38

    };

    struct FYSetAllowJoinRequest : FYGameServerRequest //ScriptStruct Prospect.YSetAllowJoinRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SessionId; // 0x10
        bool allowJoin; // 0x20

    };

    struct FYMatchPhaseData //ScriptStruct Prospect.YMatchPhaseData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_matchFlowRowHandle; // 0x0
        struct FDataTableRowHandle m_matchPhaseDefinitionRowHandle; // 0x10
        int32_t m_visualVariationIndex; // 0x20
        bool m_shouldForcePhaseTransition; // 0x24

    };

    struct FYMatchPhaseDefinitionRow : FYDataTableRowBase //ScriptStruct Prospect.YMatchPhaseDefinitionRow
    {
    //Children Prop Count (Fields): 3
    public:

        float m_phaseDuration; // 0x10
        struct TArray<struct FYMatchPhaseVisualVariation> m_visualVariations; // 0x18
        struct FDataTableRowHandle m_gameplayRowHandle; // 0x28

    };

    struct FYMatchPhaseVisualVariation //ScriptStruct Prospect.YMatchPhaseVisualVariation
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_visualDefinition; // 0x0
        struct FGameplayTag m_variationTheme; // 0x10
        float m_selectionWeight; // 0x18
        float m_chanceToEndThemeAfterPhase; // 0x1c

    };

    struct FYMatchPhaseGameplayRow : FYDataTableRowBase //ScriptStruct Prospect.YMatchPhaseGameplayRow
    {
    //Children Prop Count (Fields): 11
    public:

        bool m_isStormActive; // 0x10
        float m_cycleSpikeSpawnProbability; // 0x14
        bool m_isPlayerSpawningEnabled; // 0x18
        float m_isPlayerSpawningEnabledDelay; // 0x1c
        bool m_isEscapeActivityEnabled; // 0x20
        bool m_isAIUsingStormLoot; // 0x21
        bool m_useAIStormSquads; // 0x22
        bool m_isStormMineralsActivityActive; // 0x23
        bool m_isStormDepositActive; // 0x24
        bool m_isPowerUpResetAllowed; // 0x25
        struct TArray<struct FDataTableRowHandle> m_activeLightingTypes; // 0x28

    };

    struct FYMatchPhaseVisualRow : FYDataTableRowBase //ScriptStruct Prospect.YMatchPhaseVisualRow
    {
    //Children Prop Count (Fields): 43
    public:

        float m_blendingDuration; // 0x10
        float m_normalizedWindIntensity; // 0x14
        float m_exponentialHeightFog_FogDensity; // 0x18
        float m_exponentialHeightFog_MaxOpacity; // 0x1c
        float m_exponentialHeightFog_ExtinctionScale; // 0x20
        float m_exponentialHeightFog_HeightFalloff; // 0x24
        struct FLinearColor m_exponentialHeightFog_InscatteringColor; // 0x28
        struct FLinearColor m_exponentialHeightFog_DirectionalInscatteringColor; // 0x38
        struct FLinearColor m_exponentialHeightFog_Albedo; // 0x48
        float m_directionalLight_Intensity; // 0x58
        struct FLinearColor m_directionalLight_LightColor; // 0x5c
        struct FLinearColor m_directionalLight_BloomColor; // 0x6c
        float m_directionalLight_BloomScale; // 0x7c
        float m_directionalLight_SourceSoftAngle; // 0x80
        struct FLinearColor m_directionalLight_CloudScatteredLuminanceScale; // 0x84
        float m_skyLight_Intensity; // 0x94
        float m_skyLight_OcclusionExponent; // 0x98
        struct FLinearColor m_skyLight_LightColor; // 0x9c
        struct FLinearColor m_skyLight_LowerHemisphereColor; // 0xac
        class UTextureCube* m_skyLight_Cubemap; // 0xc0
        struct FLinearColor m_skyAtmosphere_MieScattering; // 0xc8
        float m_skyAtmosphere_MieScatteringScale; // 0xd8
        float m_skyAtmosphere_HeightFogContribution; // 0xdc
        float m_postProcess_ColorGradingLUTIntensity; // 0xe0
        float m_postProcess_GrainIntensity; // 0xe4
        float m_postProcess_LensFlareIntensity; // 0xe8
        float m_postProcess_ExposureCompensation; // 0xec
        float m_postProcess_ExposureMinBrightness; // 0xf0
        float m_postProcess_BloomIntensity; // 0xf4
        float m_postProcess_ChromaticAberrationIntensity; // 0xf8
        struct FLinearColor m_postProcess_IndirectLightingColor; // 0xfc
        float m_cloudManager_CloudAnim; // 0x10c
        float m_cloudManager_LightningAmount; // 0x110
        float m_rainManager_NormalizedRainAmount; // 0x114
        float m_rainManager_Opacity; // 0x118
        float m_stormAmbientManager_NormalizedAtmosphereSpawnRate; // 0x11c
        float m_stormAmbientManager_NormalizedDebrisSpawnRate; // 0x120
        float m_stormLightning_DistantLightningSpawnRate; // 0x124
        float m_mpc_normalizedStormIntensity; // 0x128
        float m_mpc_normalizedStormEmissiveIntensity; // 0x12c
        float m_mpc_normalizedWetnessAmount; // 0x130
        float m_mpc_skyBackgroundObjectsOpacity; // 0x134
        float m_mpc_globalTimeMultiplier; // 0x138

    };

    struct FYMatchFlowRow : FYDataTableRowBase //ScriptStruct Prospect.YMatchFlowRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDataTableRowHandle> m_matchFlow; // 0x10

    };

    struct FYEndOfMatchStateRow : FYDataTableRowBase //ScriptStruct Prospect.YEndOfMatchStateRow
    {
    //Children Prop Count (Fields): 2
    public:

        class UUserWidget* m_matchStateWidget; // 0x10
        enum class EYEndOfMatchWidgetType m_widgetType; // 0x18

    };

    struct FYTrackedMessageUser //ScriptStruct Prospect.YTrackedMessageUser
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_userId; // 0x0
        float m_lastTimeSentMessage; // 0x10

    };

    struct FYMetaDataTableRowSettings : FYDataTableRowBase //ScriptStruct Prospect.YMetaDataTableRowSettings
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_maximumGenericAwaredSoftCurrency; // 0x10
        struct FDataTableRowHandle m_defaultScrappingRow; // 0x18
        float m_softCurrencyRerollCost; // 0x28

    };

    struct FYMineralDefinitionRow : FYAssetVariationDefinitionRow //ScriptStruct Prospect.YMineralDefinitionRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct TSoftObjectPtr<UDestructibleMesh> m_destructibleMesh; // 0x10
        struct FDataTableRowHandle m_scannableRowHandle; // 0x38
        struct TArray<struct TSoftObjectPtr<UMaterialInterface>> m_destructibleMaterialOverrides; // 0x48
        struct TMap<enum class EYMineralTier, struct FDataTableRowHandle> m_lootListRoll; // 0x58

    };

    struct FYMissionDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YMissionDataTableRow
    {
    //Children Prop Count (Fields): 5
    public:

        class UYOnboardingPlayerInstanceComponent* m_missionObject; // 0x10
        struct FText m_missionName; // 0x18
        struct TArray<struct FYMissionRuntimeData> m_missionStepEntriesData; // 0x38
        struct FDataTableRowHandle m_rewards; // 0x48
        struct FDataTableRowHandle m_nextMissionRow; // 0x58

    };

    struct FYMissionInitializationData //ScriptStruct Prospect.YMissionInitializationData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_missionStepDescription; // 0x0
        struct FText m_missionStepNpcText; // 0x20
        class UYOnboardingPlayerInstanceComponent* m_metaQuestInstanceComponent; // 0x40

    };

    struct FYMissionRuntimeInitializationData //ScriptStruct Prospect.YMissionRuntimeInitializationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYMissionState m_missionState; // 0x0
        int32_t m_progress; // 0x28

    };

    struct FYMissionStepEntry : FYDataTableRowBase //ScriptStruct Prospect.YMissionStepEntry
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYMissionInitializationData m_missionInitData; // 0x10

    };

    struct FYMissionStepProgressEntry //ScriptStruct Prospect.YMissionStepProgressEntry
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_stepHandle; // 0x0
        enum class EYMissionResultType m_result; // 0x4

    };

    struct FYOnboardingRewardRow : FYDataTableRowBase //ScriptStruct Prospect.YOnboardingRewardRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYOnboardingRewardEntry> m_rewards; // 0x10

    };

    struct FYOnboardingRewardEntry //ScriptStruct Prospect.YOnboardingRewardEntry
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYRewardType m_rewardType; // 0x0
        struct FDataTableRowHandle m_rewardRowHandle; // 0x8
        int32_t m_amount; // 0x18

    };

    struct FYOnboardingBlockedFeaturesDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YOnboardingBlockedFeaturesDataTableRow
    {
    //Children Prop Count (Fields): 5
    public:

        struct FText m_featureName; // 0x10
        struct FText m_headerText; // 0x30
        struct FText m_bodyText; // 0x50
        struct FDataTableRowHandle m_relatedScene; // 0x70
        struct FDataTableRowHandle m_sceneToShow; // 0x80

    };

    struct FYQuestDataDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YQuestDataDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_questName; // 0x10
        struct TArray<struct FDataTableRowHandle> m_questTaskData; // 0x30
        struct FDataTableRowHandle m_reward; // 0x40
        struct FDataTableRowHandle m_followQuest; // 0x50

    };

    struct FYQuestTaskDataDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YQuestTaskDataDataTableRow
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYOnboardingQuestType m_questType; // 0x10
        struct FText m_questTaskText; // 0x18
        struct FString customData; // 0x38
        int32_t currentProgress; // 0x48
        int32_t maxProgress; // 0x4c

    };

    struct FYUIMissionLineStepInfo //ScriptStruct Prospect.YUIMissionLineStepInfo
    {
    //Children Prop Count (Fields): 12
    public:

        struct FString m_stepId; // 0x0
        struct FText m_title; // 0x10
        struct FText m_stepTitle; // 0x30
        struct FText m_popupDescription; // 0x50
        struct FText m_missionStepNpcText; // 0x70
        struct FDataTableRowHandle m_stepEntry; // 0x90
        int32_t m_startProgress; // 0xa0
        int32_t m_maxProgress; // 0xa4
        class UTexture2D* m_stepIcon; // 0xa8
        bool shouldShowPopup; // 0xb0
        bool m_initialized; // 0xb1
        bool m_ismissionCompletedEntry; // 0xb2

    };

    struct FYMockAIWorldWrapper //ScriptStruct Prospect.YMockAIWorldWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        class UWorld* m_world; // 0x0

    };

    struct FYMockPlayerActor_Test //ScriptStruct Prospect.YMockPlayerActor_Test
    {
    //Children Prop Count (Fields): 1
    public:

        class UWorld* m_world; // 0x0

    };

    struct FYModSettingsDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YModSettingsDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYModificationSlotType, struct FYModSettingsEntry> m_modSettings; // 0x10

    };

    struct FYModSettingsEntry //ScriptStruct Prospect.YModSettingsEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UTexture2D> m_icon; // 0x0
        struct FDataTableRowHandle m_noDataTableRowHandle; // 0x28

    };

    struct FYItemStatAndPossibleRange //ScriptStruct Prospect.YItemStatAndPossibleRange
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYItemStatsType m_itemStatType; // 0x0
        float m_currentVal; // 0x4
        float m_worstVal; // 0x8
        float m_bestVal; // 0xc

    };

    struct FYCraftedItemModsData //ScriptStruct Prospect.YCraftedItemModsData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> modsIds; // 0x0
        struct TArray<struct FString> modsRoll; // 0x10

    };

    struct FYModEntryRollEntry //ScriptStruct Prospect.YModEntryRollEntry
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_modRollValue; // 0x0
        enum class EYItemRarityType m_modRollRarity; // 0x4

    };

    struct FYBaseModRow : FYItemDataTableRowBase //ScriptStruct Prospect.YBaseModRow
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYModificationSlotType m_modType; // 0x408
        struct FDataTableRowHandle m_perkRowHandle; // 0x410
        struct FYOverridenModInstanceData m_defaultModInstanceData; // 0x420
        struct TArray<struct FYOverridenModInstanceData> m_perHandlePropertyDefinition; // 0x4b0
        int32_t m_shortModId; // 0x4c0

    };

    struct FYOverridenModInstanceData //ScriptStruct Prospect.YOverridenModInstanceData
    {
    //Children Prop Count (Fields): 9
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        struct TArray<struct FYModAttachEntry> m_meshAttachments; // 0x10
        struct TArray<struct FYGameplayAttributeModifier> m_attributeMods; // 0x20
        struct FDataTableRowHandle m_fxCategoryHandle; // 0x30
        struct FDataTableRowHandle m_transportHandle; // 0x40
        class UCurveFloat* m_overridenRecoilCurve; // 0x50
        struct FYFullscreenCrosshairData m_crosshairData; // 0x58
        bool m_shouldOffsetScope; // 0x88
        float m_scopeOffset; // 0x8c

    };

    struct FYFullscreenCrosshairData //ScriptStruct Prospect.YFullscreenCrosshairData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSoftClassProperty m_widget; // 0x0
        enum class EYOverrideShowWeapon m_weaponVisibilityWhileTargetingOverride; // 0x28

    };

    struct FYModAttachEntry //ScriptStruct Prospect.YModAttachEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_mesh; // 0x0
        struct FName m_socketAttachmentName; // 0x28

    };

    struct FYUpgradeRow : FYBaseModRow //ScriptStruct Prospect.YUpgradeRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<enum class EYItemRarityType, struct FYRaritySettingsEntry> m_raritySettings; // 0x4c8
        struct FYDataTableRowBase m_modTuningDataTableRow; // 0x518

    };

    struct FYRaritySettingsEntry //ScriptStruct Prospect.YRaritySettingsEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float m_seedChance; // 0x0
        struct TArray<struct FYRarityItemRoll> m_rarityItemRolls; // 0x8

    };

    struct FYRarityItemRoll //ScriptStruct Prospect.YRarityItemRoll
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYGameplayAttribute m_attribute; // 0x0
        enum class EYGPAModifierType m_modifierType; // 0x1
        float m_minValue; // 0x4
        float m_maxValue; // 0x8
        int32_t m_randomizationSteps; // 0xc

    };

    struct FYModRow : FYBaseModRow //ScriptStruct Prospect.YModRow
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FDataTableRowHandle> m_scopeTuningRow; // 0x4c8
        struct FGameplayTagContainer m_modCompatibilityTags; // 0x4d8
        bool m_isFlashlight; // 0x4f8
        struct FName m_socketLocation; // 0x4fc
        struct TArray<struct FDataTableRowHandle> m_scannableRowHandles; // 0x508

    };

    struct FYModAttachmentInfo //ScriptStruct Prospect.YModAttachmentInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FYModAttachEntry m_modAttachEntryInfo; // 0x0
        bool m_isDefaultAttachment; // 0x30

    };

    struct FYNotificiationDataRequest //ScriptStruct Prospect.YNotificiationDataRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FText m_message; // 0x0
        float m_duration; // 0x20
        struct FSlateColor m_color; // 0x28
        enum class EYNotificationType m_type; // 0x50
        enum class EYNotificationPlacement m_placement; // 0x51

    };

    struct FYNotificationsRow : FYDataTableRowBase //ScriptStruct Prospect.YNotificationsRow
    {
    //Children Prop Count (Fields): 10
    public:

        enum class EYNotificationsPriority m_priority; // 0x10
        enum class EYNotificationsCategory m_category; // 0x11
        enum class EYNotificationsDisplayType m_displayType; // 0x12
        struct TSoftObjectPtr<UTexture2D> m_icon; // 0x18
        struct FText m_headline; // 0x40
        struct FText m_message; // 0x60
        struct FText m_centerText; // 0x80
        float m_timeToLive; // 0xa0
        float m_centerNotificationTimeToLive; // 0xa4
        class UYNotificationController* m_controller; // 0xa8

    };

    struct FYNotificationCollection //ScriptStruct Prospect.YNotificationCollection
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYNotificationDescription> notifications; // 0x0

    };

    struct FYNotificationsReadRequest //ScriptStruct Prospect.YNotificationsReadRequest
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FString> notifications; // 0x0
        struct TArray<struct FString> accountNotifications; // 0x10

    };

    struct FYNotificationRequest //ScriptStruct Prospect.YNotificationRequest
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString notificationRowName; // 0x0
        bool showOnLogin; // 0x10
        bool isAccountLevelNotification; // 0x11
        struct TMap<struct FString, struct FString> textParameters; // 0x18
        struct TMap<struct FString, struct FString> localizedParameters; // 0x68

    };

    struct FYSpawnNPCRequestData //ScriptStruct Prospect.YSpawnNPCRequestData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTransform m_baseTransform; // 0x0
        class AActor* m_owner; // 0x30
        struct FDataTableRowHandle m_rowHandle; // 0x38
        struct FDataTableRowHandle m_animationHandle; // 0x48

    };

    struct FYNPCDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YNPCDataTableRow
    {
    //Children Prop Count (Fields): 18
    public:

        struct FDataTableRowHandle m_sceneToSpawn; // 0x10
        struct FSoftClassProperty m_classToSpawn; // 0x20
        struct FDataTableRowHandle m_customizationRowHandle; // 0x48
        bool m_randomizeCustomization; // 0x58
        bool m_canBeToggledForPerfomance; // 0x59
        int32_t m_interactionDistance; // 0x5c
        struct FText m_name; // 0x60
        struct FText m_title; // 0x80
        struct FYActorPlateWidgetCreationData m_plateWidgetData; // 0xa0
        struct TSoftObjectPtr<UTexture2D> m_minimapIcon; // 0x138
        bool m_canInteractWith; // 0x160
        bool m_haveMinimapIcon; // 0x161
        struct FDataTableRowHandle m_shopRowHandle; // 0x168
        struct FDataTableRowHandle m_speaker; // 0x178
        struct FDataTableRowHandle m_firstTimeGreetingVoiceOver; // 0x188
        struct FDataTableRowHandle m_interactVoiceOver; // 0x198
        struct FDataTableRowHandle m_interactFinishedVoiceOver; // 0x1a8
        float m_baseTranslationOffset; // 0x1b8

    };

    struct FYActorPlateWidgetCreationData //ScriptStruct Prospect.YActorPlateWidgetCreationData
    {
    //Children Prop Count (Fields): 2
    public:

        class UYWidget_ActorPlate* m_widgetClass; // 0x0
        struct FYWidgetActorPlateInitializationData m_initializationData; // 0x8

    };

    struct FYWidgetActorPlateInitializationData //ScriptStruct Prospect.YWidgetActorPlateInitializationData
    {
    //Children Prop Count (Fields): 15
    public:

        struct FVector m_offsetToActorLocation; // 0x0
        float m_maxRenderDistance; // 0xc
        float m_widgetScaleDistance; // 0x10
        float m_dotProduct; // 0x14
        float m_dotStartRangeDistanceScale; // 0x18
        float m_dotScalingDistancePerMeterMultiplier; // 0x1c
        float m_dotMaxmimumThreshold; // 0x20
        float m_damageTakenVisibilityTime; // 0x24
        float m_forceNonVisibileDurationOnTeleport; // 0x28
        float m_minScaleValue; // 0x2c
        float m_healthBarShowThreshold; // 0x30
        struct FName m_socket; // 0x34
        struct FText m_NPCName; // 0x40
        struct TSoftObjectPtr<UTexture2D> m_NPCIcon; // 0x60
        bool m_alwaysShowLabel; // 0x88

    };

    struct FYNPCAnimationAssetDataRow : FYDataTableRowBase //ScriptStruct Prospect.YNPCAnimationAssetDataRow
    {
    //Children Prop Count (Fields): 2
    public:

        bool m_randomizeEmoteAnimation; // 0x10
        struct TArray<struct FSingleAnimationPlayData> m_animationPlayData; // 0x18

    };

    struct FSingleAnimationPlayData //ScriptStruct Engine.SingleAnimationPlayData
    {
    //Children Prop Count (Fields): 5
    public:

        class UAnimationAsset* AnimToPlay; // 0x0
        char bSavedLooping; // 0x8
        char bSavedPlaying; // 0x8
        float SavedPosition; // 0xc
        float SavedPlayRate; // 0x10

    };

    struct FYRotationObjectEntry //ScriptStruct Prospect.YRotationObjectEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator m_originalRotation; // 0x0
        class USceneComponent* m_component; // 0x10

    };

    struct FYOcclusionSystemSettings : FYDataTableRowBase //ScriptStruct Prospect.YOcclusionSystemSettings
    {
    //Children Prop Count (Fields): 7
    public:

        float m_maximumFrameMs; // 0x10
        float m_soundMaxDistanceThresholdMultiplier; // 0x14
        int32_t m_maxAsyncTraceCount; // 0x18
        int32_t m_maxSyncTraceCount; // 0x1c
        bool m_considerSyncTracesForMaxAsyncCount; // 0x20
        float m_listenerSize; // 0x24
        struct TMap<class UPhysicalMaterial*, struct FYOcclusionPhysMatAbsorptionData> m_physmatAbsorptionMap; // 0x28

    };

    struct FYOcclusionPhysMatAbsorptionData //ScriptStruct Prospect.YOcclusionPhysMatAbsorptionData
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t m_priority; // 0x0
        float m_absorptionAmount; // 0x4
        bool m_useLowPassCutoffFrequency; // 0x8
        float m_occlusionLowPassCutoffFrequency; // 0xc
        bool m_useHighPassCutoffFrequency; // 0x10
        float m_occlusionHighPassCutoffFrequency; // 0x14

    };

    struct FYPerformanceTuningRow : FYDataTableRowBase //ScriptStruct Prospect.YPerformanceTuningRow
    {
    //Children Prop Count (Fields): 10
    public:

        int32_t m_maxServerTickRate; // 0x10
        int32_t m_playerUpdateFrequency; // 0x14
        float m_serverGCInterval; // 0x18
        float m_serverGCBudget; // 0x1c
        float m_clientGCInterval; // 0x20
        float m_clientGCBudget; // 0x24
        float m_initialAsyncLevelStreamingTimeout; // 0x28
        float m_initialPriorityAsyncLoadingExtraTime; // 0x2c
        float m_initialPriorityLevelStreamingActorsUpdateExtraTime; // 0x30
        struct TMap<struct FName, struct FYPreloadEntry> m_nameToPreloadClass; // 0x38

    };

    struct FYPreloadEntry //ScriptStruct Prospect.YPreloadEntry
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_isServer; // 0x0
        bool m_isClient; // 0x1
        struct FSoftClassProperty m_class; // 0x8

    };

    struct FYPerkActivationData //ScriptStruct Prospect.YPerkActivationData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector m_contextLocation; // 0x0
        class UYGameplayAttributesComponent* m_gpaComponent; // 0x10
        class AActor* m_contextActor; // 0x18
        class AActor* m_instigator; // 0x20
        enum class EYGameplayContextType m_contextType; // 0x28

    };

    struct FYPlayerAwarenessTuningDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YPlayerAwarenessTuningDataTableRow
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t m_maxNotificationDistance; // 0x10
        int32_t m_targetingMaxNotificationDistance; // 0x14
        float m_dotProduct; // 0x18
        float m_dotScalingDistancePerMeterMultiplier; // 0x1c
        float m_dotMaxmimumThreshold; // 0x20
        float m_requiredAimAtDuration; // 0x24
        float m_requiredAimAtDurationTargeting; // 0x28

    };

    struct FYPlayerAwarenessNotificationDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YPlayerAwarenessNotificationDataTableRow
    {
    //Children Prop Count (Fields): 7
    public:

        bool m_ignoreLocallyControlled; // 0x10
        enum class EYPlayerAwarenessNotificationType m_notficationType; // 0x11
        bool m_shouldPlayVo; // 0x12
        struct FDataTableRowHandle m_notificationVoRowHandle; // 0x18
        bool m_shouldPlaySound; // 0x28
        struct FDataTableRowHandle m_notificationSoundRowHandle; // 0x30
        float m_notificationCooldown; // 0x40

    };

    struct FYPlayerAwarenessNotificationData //ScriptStruct Prospect.YPlayerAwarenessNotificationData
    {
    //Children Prop Count (Fields): 5
    public:

        bool m_isAuthorityTriggered; // 0x0
        bool m_shouldPlayVo; // 0x1
        bool m_shouldPlaySound; // 0x2
        enum class EYPlayerAwarenessNotificationType m_notficationType; // 0x3
        struct TWeakObjectPtr<struct AYPlayerCharacter> m_playerCharacterContext; // 0x4

    };

    struct FYSetViewTargetData //ScriptStruct Prospect.YSetViewTargetData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TWeakObjectPtr<struct AActor> m_newViewTarget; // 0x0
        struct FViewTargetTransitionParams m_newTargetTransitionParams; // 0x8
        float m_lockTime; // 0x18

    };

    struct FYLedgeClimbingData //ScriptStruct Prospect.YLedgeClimbingData
    {
    //Children Prop Count (Fields): 7
    public:

        bool m_isClimbing; // 0x0
        float m_normalizedAlpha_01; // 0x4
        float m_normalizedAlpha_02; // 0x8
        float m_normalizedAlpha_03; // 0xc
        enum class EYClimbingStateInternal m_climbingStateInternal; // 0x10
        enum class EYMoveType m_moveType; // 0x11
        enum class EYObstacleType m_obstacleType; // 0x12

    };

    struct FYAdditiveMovementData //ScriptStruct Prospect.YAdditiveMovementData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector2D m_lastMovementInput; // 0x0
        struct FRotator m_maxAdditiveRotation; // 0x8
        struct FVector m_maxAdditiveTranslation; // 0x14
        float m_additiveMovementInterpSpeed; // 0x20

    };

    struct FYPlayerEquippedWeaponData //ScriptStruct Prospect.YPlayerEquippedWeaponData
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EYEquipedWeaponPoseType m_equippedWeaponPoseType; // 0x0
        enum class EYEquipedAnimationWeaponType m_equippedAnimationWeaponType; // 0x1
        enum class EYDeviceCategory m_equippedDeviceCategory; // 0x2

    };

    struct FYPlayerTargetingData //ScriptStruct Prospect.YPlayerTargetingData
    {
    //Children Prop Count (Fields): 4
    public:

        bool m_isTargeting; // 0x0
        bool m_isPendingTargeting; // 0x1
        bool m_isAiming; // 0x2
        float m_scopeOffset; // 0x4

    };

    struct FYPlayerAimDirectionData //ScriptStruct Prospect.YPlayerAimDirectionData
    {
    //Children Prop Count (Fields): 17
    public:

        struct FRotator m_aimRotation; // 0x0
        struct FRotator m_capsuleRotation; // 0xc
        struct FRotator m_actorRotation; // 0x18
        bool m_isTargeting; // 0x24
        bool m_isPendingTargeting; // 0x25
        float m_aimPitchRaw; // 0x28
        float m_aimPitchSmooth; // 0x2c
        float m_aimPitchSmoothNormalized; // 0x30
        float m_deltaAimPitch; // 0x34
        float m_interpDeltaAimPitch; // 0x38
        float m_aimYawRaw; // 0x3c
        float m_aimYawSmooth; // 0x40
        float m_aimYawSmoothNormalized; // 0x44
        float m_deltaAimYaw; // 0x48
        float m_interpDeltaAimYaw; // 0x4c
        float m_direction; // 0x50
        bool m_doRotationReset; // 0x54

    };

    struct FYPlayerMovementData //ScriptStruct Prospect.YPlayerMovementData
    {
    //Children Prop Count (Fields): 15
    public:

        bool m_isSprinting; // 0x0
        bool m_isCrouching; // 0x1
        bool m_isSliding; // 0x2
        bool m_isProning; // 0x3
        bool m_isFalling; // 0x4
        bool m_isIdle; // 0x5
        bool m_isJumping; // 0x6
        bool m_doJump; // 0x7
        float m_jumpTime; // 0x8
        struct FVector m_velocity; // 0xc
        float m_speed; // 0x18
        float m_deltaSpeed; // 0x1c
        float m_jumpSpeedZ; // 0x20
        struct FVector m_lastInputVector; // 0x24
        struct FVector m_actorForwardVector; // 0x30

    };

    struct FYStateDebugData //ScriptStruct Prospect.YStateDebugData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_output; // 0x0
        struct FColor m_color; // 0x10
        bool m_isActive; // 0x14

    };

    struct FYStateChangedData //ScriptStruct Prospect.YStateChangedData
    {
    //Children Prop Count (Fields): 2
    public:

        int64_t m_state; // 0x0
        int64_t m_eventCounter; // 0x8

    };

    struct FYAuthorithyPlayerState //ScriptStruct Prospect.YAuthorithyPlayerState
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<int64_t> m_acknowledgedPredictedEventCounters; // 0x0
        struct TArray<int64_t> m_serverEventAuthorithyCounter; // 0x10
        int64_t m_stateBitmask; // 0x20
        int64_t m_lastStateChangeWasInterrupted; // 0x28

    };

    struct FYPlayerCharacterStateDelegateBinding //ScriptStruct Prospect.YPlayerCharacterStateDelegateBinding
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMulticastInlineDelegate OnStateDeActivated; // 0x0
        struct FMulticastInlineDelegate OnStateActivated; // 0x10
        struct TArray<struct FDelegate> m_activationDelegates; // 0x20
        struct TArray<struct FDelegate> m_deactivationDelegates; // 0x30

    };

    struct FYPlayerCharacterState //ScriptStruct Prospect.YPlayerCharacterState
    {
    public:


    };

    struct FYEventArray //ScriptStruct Prospect.YEventArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> m_entries; // 0x0

    };

    struct FYRegisteredStackInput //ScriptStruct Prospect.YRegisteredStackInput
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FYInputStackRuntimeContext> m_runtimeMinorStack; // 0x0
        enum class EYInputUIStackType m_stackType; // 0x10
        bool m_isActive; // 0x11

    };

    struct FYInputStackRuntimeContext //ScriptStruct Prospect.YInputStackRuntimeContext
    {
    //Children Prop Count (Fields): 6
    public:

        class UWidget* m_widget; // 0x0
        struct FDataTableRowHandle m_rowHandleAssociation; // 0x8
        bool m_uiOnly; // 0x18
        bool m_showCursor; // 0x19
        bool m_isActive; // 0x1a
        bool m_needToBeForcedClosed; // 0x1b

    };

    struct FYInputWidget //ScriptStruct Prospect.YInputWidget
    {
    //Children Prop Count (Fields): 5
    public:

        struct TWeakObjectPtr<struct UWidget> m_widget; // 0x0
        struct FString m_context; // 0x8
        bool m_showCursor; // 0x18
        bool m_uiOnly; // 0x19
        bool m_hideCursorDuringCapture; // 0x1a

    };

    struct FYMovementGroundAttackInfo //ScriptStruct Prospect.YMovementGroundAttackInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector m_impactLocation; // 0x0
        struct FVector m_impactDirection; // 0xc
        struct FVector m_impactNormal; // 0x18

    };

    struct FYMovementImpulseData //ScriptStruct Prospect.YMovementImpulseData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector m_impulseToApply; // 0x0
        bool m_isActive; // 0xc

    };

    struct FYMovementStateData //ScriptStruct Prospect.YMovementStateData
    {
    //Children Prop Count (Fields): 5
    public:

        float m_currentSpeedReductionPerSecond; // 0x0
        float m_cooldown; // 0x4
        bool m_isActive; // 0x8
        bool m_wantToBeActive; // 0x9
        bool m_haveBeenReset; // 0xa

    };

    struct FYRewardEntry //ScriptStruct Prospect.YRewardEntry
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYRewardType m_rewardType; // 0x0
        enum class EYPlayerRewardSource m_rewardSource; // 0x1
        struct FText m_displayText; // 0x8
        struct FName m_rewardId; // 0x28
        int32_t m_amount; // 0x30
        int32_t m_fromAmount; // 0x34

    };

    struct FSupportTicketRequestBody //ScriptStruct Prospect.SupportTicketRequestBody
    {
    //Children Prop Count (Fields): 5
    public:

        struct FSupportTicketComment Comment; // 0x0
        struct FString Subject; // 0x10
        struct FSupportTicketRequester Requester; // 0x20
        struct FString Priority; // 0x40
        struct FSupportTicketCustomFields CustomFields; // 0x50

    };

    struct FSupportTicketCustomFields //ScriptStruct Prospect.SupportTicketCustomFields
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString PlayFabId; // 0x0
        struct FString DisplayName; // 0x10
        struct FString Language; // 0x20
        struct FString ChatLog; // 0x30
        struct FString ReportedPlayerId; // 0x40
        struct FString ReportedPlayerName; // 0x50

    };

    struct FSupportTicketRequester //ScriptStruct Prospect.SupportTicketRequester
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FString Email; // 0x10

    };

    struct FSupportTicketComment //ScriptStruct Prospect.SupportTicketComment
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Body; // 0x0

    };

    struct FYPlayerTuningDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YPlayerTuningDataTableRow
    {
    //Children Prop Count (Fields): 318
    public:

        float m_distanceLevelStreamingFailsafe; // 0x10
        struct TArray<struct FString> m_levelStreamingFailsafeFilter; // 0x18
        class UCurveFloat* m_initialPickUpScaling; // 0x28
        class UCameraShakeBase* m_cameraLootContainerInteractionShake; // 0x30
        class USoundBase* m_lootContainerInteractionSound; // 0x38
        struct FYBattleLogTuning m_battleLogTuning; // 0x40
        float m_wheelSelectionTapTime; // 0xa0
        float m_wheelMouseMoveDelay; // 0xa4
        struct FDataTableRowHandle m_damageInfoApplyForDamageSelf; // 0xa8
        struct FDataTableRowHandle m_weaponCharmRowHandle; // 0xb8
        int32_t m_amountOfToolSlots; // 0xc8
        bool m_cancelReloadWhenStartSprinting; // 0xcc
        int32_t m_heatMapMaxPositionElement; // 0xd0
        float m_durationDamagePlayerCountsa; // 0xd4
        float m_walkSpeedMaximum; // 0xd8
        float m_sprintSpeedModifier; // 0xdc
        float m_walkSpeedMaximumInStation; // 0xe0
        float m_sprintSpeedModifierInStation; // 0xe4
        float m_sprintDashSpeedModifier; // 0xe8
        bool m_switchToToolState; // 0xec
        bool m_switchBackAutomatically; // 0xed
        float m_onlyFallingVelocityZReduction; // 0xf0
        float m_dotTresholdConsideredSprinting; // 0xf4
        float m_doubleTapTimeMoveKeys; // 0xf8
        struct TMap<enum class EYPlayerStateBlueprint, struct FYMovementCosmeticDataPerState> m_stateChangedCosmeticData; // 0x100
        bool m_canStartSlidingFromFalling; // 0x150
        float m_slideVelocityReduction; // 0x154
        float m_minSlideSpeed; // 0x158
        float m_maxSlideSpeed; // 0x15c
        float m_startSlideSpeed; // 0x160
        float m_startSlideSpeedFatgiued; // 0x164
        float m_slideFatgiueDuration; // 0x168
        class UCurveFloat* m_slideVelocityChangeBasedOnSlope; // 0x170
        float m_slideStrafeInputMultiplier; // 0x178
        float m_slideCooldown; // 0x17c
        float m_slideSlopeEffect; // 0x180
        float m_slideBufferTime; // 0x184
        bool m_cameraTraceComplexCollision; // 0x188
        float m_cameraBoxThirdPersonCollision; // 0x18c
        float m_climbingVerticalDistance; // 0x190
        float m_climbingHorizontalDistance; // 0x194
        float m_climbingMaxWallDistance; // 0x198
        float m_climbingDesiredWallDistance; // 0x19c
        float m_additionalEndLocationZOffset; // 0x1a0
        float m_additionalVerticalLocationZOffset; // 0x1a4
        float m_additionalViewDirectionOffset; // 0x1a8
        float m_colliderRadiusScalarDuringMove; // 0x1ac
        float m_colliderHeightScalarDuringMove; // 0x1b0
        struct TMap<enum class EYClimbingStateInternal, struct FYClimbingCosmeticDataPerState> m_climbingCosmeticsPerState; // 0x1b8
        struct TMap<enum class EYObstacleType, float> m_obstacleHeightData; // 0x208
        float m_climbingDefaultSpeed; // 0x258
        struct TMap<enum class EYClimbingStateInternal, float> m_climbingSpeedPerState; // 0x260
        struct TMap<enum class EYClimbingStateInternal, float> m_vaultingSpeedPerState; // 0x2b0
        class UCurveFloat* m_movementSpeedMultiplierByVelocity; // 0x300
        class UCurveFloat* m_movementLerpCurve; // 0x308
        float m_climbingStaminaEmptyMovementMultiplier; // 0x310
        float m_climbingCooldownTime; // 0x314
        float m_climbingDotThreshold; // 0x318
        float m_climbingSurfaceSteepnessDotThreshold; // 0x31c
        float m_climbingCancelStateDotThreshold; // 0x320
        bool m_climbingCancelStateBasedOnDotThreshold; // 0x324
        float m_ledgeClimbingFallDistanceMultiplier; // 0x328
        float m_maxFallingDistance; // 0x32c
        struct TArray<struct FName> m_excludedTags; // 0x330
        bool m_lockViewDirection; // 0x340
        bool m_softLockViewDirection; // 0x341
        float m_softLockToleranceAngle; // 0x344
        bool m_vaultingEnabled; // 0x348
        float m_vaultingVerticalDistance; // 0x34c
        bool m_vaultingRequiresGround; // 0x350
        bool m_vaultingApplyDownVelocity; // 0x351
        float m_vaultingAnimationZOffset; // 0x354
        float m_maxLeaningAngleFirstPerson; // 0x358
        float m_maxLeaningAngleThirdPerson; // 0x35c
        float m_maxLeaningTranslationFirstPerson; // 0x360
        float m_maxLeaningTranslationThirdPerson; // 0x364
        struct TArray<enum class EYPlayerStateBlueprint> m_leaningCancelStates; // 0x368
        bool m_leaningLerpMethod; // 0x378
        float m_leaningRotationSpeed; // 0x37c
        class UCurveFloat* m_leaningLerpMapping; // 0x380
        bool m_leaningVelocityMethod; // 0x388
        float m_leaningMaxVelocity; // 0x38c
        float m_leaningAcceleration; // 0x390
        class UCurveFloat* m_leaningMaxVelocityCurve; // 0x398
        bool m_leaningEnabledCollisionCheck; // 0x3a0
        float m_leaningTraceHeight; // 0x3a4
        float m_leaningTraceDistance; // 0x3a8
        float m_leaningSphereTraceRadius; // 0x3ac
        float m_leaningAngleOffset; // 0x3b0
        float m_minFOV; // 0x3b4
        float m_maxFOV; // 0x3b8
        float m_cameraSprintingFOV; // 0x3bc
        float m_cameraSprintDashFOV; // 0x3c0
        float m_cameraSlideFOV; // 0x3c4
        float m_cameraDefaultFOV; // 0x3c8
        float m_backwardMovementSpeedReduction; // 0x3cc
        float m_sideMovementSpeedMultiplier; // 0x3d0
        float m_cameraInterpolationTargetingReturnFOVSpeed; // 0x3d4
        float m_cameraInterpolationSprintingReturnFOVSpeed; // 0x3d8
        float m_cameraInterpolationSprintDashReturnFOVSpeed; // 0x3dc
        float m_cameraInterpolationSlideReturnFOVSpeed; // 0x3e0
        float m_cameraInterpolationSprintingFOVSpeed; // 0x3e4
        float m_cameraInterpolationSprintDashFOVSpeed; // 0x3e8
        float m_cameraInterpolationTargetingFOVSpeed; // 0x3ec
        float m_cameraInterpolationSlideFOVSpeed; // 0x3f0
        float m_cameraInterpolationDefaultFOVSpeed; // 0x3f4
        float m_defaultFOVAdjustmentSpeed; // 0x3f8
        float m_TurnInputMultiplierSprinting; // 0x3fc
        float m_TurnInputMultiplierSprintDashing; // 0x400
        float m_fireInputBufferTime; // 0x404
        float m_firstPersonWeaponFOVDefaultType; // 0x408
        int32_t m_numWeaponSlots; // 0x40c
        bool m_isAutomaticReloadEnabled; // 0x410
        struct TSoftObjectPtr<USkeletalMesh> m_meleeAttackSkeletalMesh; // 0x418
        struct FName m_meleeFirstPersonSocketAttachName; // 0x440
        struct FName m_meleeThirdPersonSocketAttachName; // 0x448
        struct FName m_meleeWeaponCosmeticAttachmentName; // 0x450
        struct FName m_meleeWeaponSocketAttackPointName; // 0x458
        struct FYPlayerMeleeData m_normalMeleeData; // 0x460
        float m_interactionDamageInterupTime; // 0x480
        float m_interactionTraceDistance; // 0x484
        float m_interactionLeewayServerValidation; // 0x488
        int32_t m_maxTeamSize; // 0x48c
        int32_t m_socialInviteSpamCount; // 0x490
        float m_socialInviteMaxDistance; // 0x494
        float m_socialInviteCounterDecrementTime; // 0x498
        float m_pactCancellationSafeTimer; // 0x49c
        float m_pactInviteExpireTime; // 0x4a0
        float m_pactBetrayalSwitchTime; // 0x4a4
        float m_teamPactDuration; // 0x4a8
        float m_pactInviteTraceDistance; // 0x4ac
        float m_pactInvitePlayerSphereRadius; // 0x4b0
        float m_pactInviteMaxAngle; // 0x4b4
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesSolo; // 0x4b8
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesInPact; // 0x4c8
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesInPrePact; // 0x4d8
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesInSquad; // 0x4e8
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesReload; // 0x4f8
        struct TArray<struct FYGameplayAttributeModifier> m_gameplayAttributesToApplyInRevive; // 0x508
        struct FDataTableRowHandle m_dbnoAbility; // 0x518
        float m_timeBetweenEachAnnouncement; // 0x528
        class UYDefaultInventoryDataAsset* m_defaultPIEinventoryDataAsset; // 0x530
        class UYDefaultInventoryDataAsset* m_tutorialInventory; // 0x538
        int32_t m_maxAbilityUpgrades; // 0x540
        struct FVector m_localSpaceThirdPersonCameraOffset; // 0x544
        struct FVector m_overridenTestTHirdPersonCameraOffset; // 0x550
        float m_defaultTimeMoveToThirdPersonCamera; // 0x55c
        struct FVector m_localSpaceCrouchOffset; // 0x560
        struct FVector m_meshOffset; // 0x56c
        struct FVector m_meshOffsetCrouched; // 0x578
        struct FDataTableRowHandle m_defaultHealthRow; // 0x588
        float m_cameraDeathOffset; // 0x598
        float m_spectateDistanceStep; // 0x59c
        float m_minSpectateDistance; // 0x5a0
        float m_maxSpectateDistance; // 0x5a4
        struct FVector m_cameraSpectate3rdPersonViewOffset; // 0x5a8
        struct FDataTableRowHandle m_leavingMatchDamageInfoRowHandle; // 0x5b8
        class UCurveFloat* m_fallingDamageCurve; // 0x5c8
        struct FDataTableRowHandle m_fallingDamageInfoApplyRowHandle; // 0x5d0
        bool m_fallingDamageIgnoresShield; // 0x5e0
        float m_hardLandingFallingDistanceMin; // 0x5e4
        float m_hardLandingStateActiveDuration; // 0x5e8
        float m_hardLandingResetCameraPitchAndRollTime; // 0x5ec
        class UCurveVector* m_hardLandingMovementAndLookSpeedCurve; // 0x5f0
        class UCurveVector* m_mediumLandingMovementAndLookSpeedCurve; // 0x5f8
        float m_mediumLandingFallingDistanceMin; // 0x600
        class UMatineeCameraShake* m_mediumLandingCameraShake; // 0x608
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifierDBMO; // 0x610
        struct FYGameplayAttributeModifier m_attributeModifierWhileGettingExexcuted; // 0x620
        float m_DBNODuration; // 0x690
        float m_DBNODurationPact; // 0x694
        float m_healthPercentAfterDBNO; // 0x698
        float m_reviveDurationBase; // 0x69c
        float m_reviveDurationCameraTransition; // 0x6a0
        float m_reviveBlockMovementDuration; // 0x6a4
        float m_reviveCameraTransitionHeadSafeZoneRadius; // 0x6a8
        float m_dbnoShieldMaxHealth; // 0x6ac
        float m_recoilCompensationPitchValueDeadzone; // 0x6b0
        float m_recoilCompensationYawValueDeadzone; // 0x6b4
        float m_timeToRevealPlayersExecuted; // 0x6b8
        float m_timeToTeleportDBNO; // 0x6bc
        float m_DBNOCooldownUsedTeleport; // 0x6c0
        float m_DBNOTeleportBlackScreenDuration; // 0x6c4
        float m_DBNOTeleportFadeFromBlackDuration; // 0x6c8
        float m_spectateDeadPawnTime; // 0x6cc
        float m_spectateRotationAnimationTime; // 0x6d0
        float m_spectateRotationAnimationRadius; // 0x6d4
        float m_spectateRotationAnimationStartZOffset; // 0x6d8
        float m_specateEaseOutTime; // 0x6dc
        float m_spectateEaseOutMultiplier; // 0x6e0
        float m_socialActorTraceDistance; // 0x6e4
        float m_pingableActorMaxAngle; // 0x6e8
        int32_t m_commWheelMaxEvents; // 0x6ec
        float m_commWheelRecuceEventCountSpamDuration; // 0x6f0
        struct FSlateColor m_teamMateNotificationDiedColor; // 0x6f8
        struct FSlateColor m_teamMateNotificationLeftColor; // 0x720
        struct FSlateColor m_teamMateNotificationCancelledColor; // 0x748
        struct FSlateColor m_pickupItemNotificationColor; // 0x770
        struct FSlateColor m_gearStorePurchaseNotificationColor; // 0x798
        float m_damageNumberLocationZOffset; // 0x7c0
        struct FYPlayerUIHealthBarDeltaSettings m_uiHealthBarAdjustmentDeltaSettings; // 0x7c4
        float m_disableSkippingForUpgradeThreshold; // 0x7f4
        class AYPlacementActor* m_placementActorVisualization; // 0x7f8
        struct TArray<struct FYWeaponFireDelayStateData> m_fireDelaysAfterStateTransitions; // 0x800
        float m_damageOverTimeAccumulativeMultiplier; // 0x810
        class UPhysicsAsset* m_thirdPersonBasePhysicsAsset; // 0x818
        class UObject* m_thirdPersonAnimationClass; // 0x820
        class UObject* m_stationAnimationClass; // 0x828
        class UObject* m_alternativeAnimationClass; // 0x830
        class UPhysicsAsset* m_firstPersonBasePhysicsAsset; // 0x838
        class USkeleton* m_baseSkeletonToUse; // 0x840
        class UObject* m_firstPersonAnimationClass; // 0x848
        float m_cameraCustomizationRotatingAngleRotatingSpeed; // 0x850
        float m_cameraCustomizationRotationMomentumSlowdown; // 0x854
        float m_cameraCustomizationAutoRotationSpeed; // 0x858
        int32_t m_maxDamageEventsToStore; // 0x85c
        int32_t m_timeToLookBackForDamageEvents; // 0x860
        int32_t m_maxNumEventsToUseForDamageRecap; // 0x864
        int32_t m_maxNumCondensedEventsToShow; // 0x868
        int32_t m_maxNumDetailsEntriesToShow; // 0x86c
        float m_maxHealthPercentWipeData; // 0x870
        struct FText m_damageRecapDoTSuffix; // 0x878
        int32_t m_timeToLookBackForDamageEventsDebug; // 0x898
        int32_t m_maxNumEventsToUseForDamageRecapDebug; // 0x89c
        float m_findFloorWhileInAirTraceOffsetZEnd; // 0x8a0
        float m_findFloorForPreferredDropLocationOffsetZStart; // 0x8a4
        float m_findFloorForPreferredDropLocationOffsetZEnd; // 0x8a8
        float m_findFloorForDropsOffsetZStart; // 0x8ac
        float m_findFloorForDropsOffsetZEnd; // 0x8b0
        float m_offsetZNavMeshProjectedReachableCheck; // 0x8b4
        float m_vehicleMoveToThirdPersonPerspectiveTime; // 0x8b8
        float m_vehicleMoveBackToFirstPersonTime; // 0x8bc
        float m_vehicleLeavingTime; // 0x8c0
        float m_vehicleBoostFOV; // 0x8c4
        float m_vehicleMovingFOV; // 0x8c8
        float m_vehicleSpeedFOV; // 0x8cc
        float m_vehicleIdleFOV; // 0x8d0
        float m_vehicleHeightAlignmentRollAngleMax; // 0x8d4
        float m_vehicleHeightAlignmentPitchAngleMax; // 0x8d8
        float m_vehicleInterpRotationSpeed; // 0x8dc
        float m_boostDuration; // 0x8e0
        float m_boostCooldown; // 0x8e4
        float m_vehicleMaxPitch; // 0x8e8
        struct FDataTableRowHandle m_boostLackingCooldownSound; // 0x8f0
        struct FSoftClassProperty m_defaultVehicleAsset; // 0x900
        struct FRotator m_vehicleCustomizationRotation; // 0x928
        float m_vehicleStopMovementAtPossession; // 0x934
        float m_lootMovementSpeedStart; // 0x938
        float m_lootMovementSpeedIncreasePerSecond; // 0x93c
        float m_lootDistanceCollectDistance; // 0x940
        float m_maxDistanceLootingContainerBeforeCancel; // 0x944
        bool m_blockPlayerMovementInputWhileLootingContainer; // 0x948
        bool m_blockPlayerLookInputWhileLootingContainer; // 0x949
        float m_durationInBannerState; // 0x94c
        float m_timeToSpawnBanner; // 0x950
        class AYBannerActor* m_bannerPlacementActor; // 0x958
        class AYVehicle* m_vehiclePlacementActor; // 0x960
        struct FVector m_bannerPlacementOffsetLocalSpace; // 0x968
        float m_bannerTransitionBackTime; // 0x974
        float m_bannerTransitionBackDuration; // 0x978
        float m_bannerSpawnCooldownTimer; // 0x97c
        class AYMeleeActor* m_meleePlacementActor; // 0x980
        float m_spraySpawnCooldownTimer; // 0x988
        class AYSprayActor* m_sprayPlacementActor; // 0x990
        float m_sprayDistance; // 0x998
        int32_t m_amountOfSpraysToPlace; // 0x99c
        float m_emoteTransitionBackToFirstPersonDuration; // 0x9a0
        struct FName m_meshSocketAttachBanner; // 0x9a4
        class UCurveFloat* m_recoilCompensationEaseIn; // 0x9b0
        struct FLinearColor m_defaultControllerKeyboardLighting; // 0x9b8
        int32_t m_numRandomizedMissions; // 0x9c8
        int32_t m_numMissionShowedUpAsTracked; // 0x9cc
        struct FName m_firstPersonWeaponAttachmentName; // 0x9d0
        struct FName m_thirdPersonWeaponAttachmentName; // 0x9d8
        struct FName m_thirdPersonCosmeticSocketAttachNameDefault; // 0x9e0
        struct FName m_thirdPersonCosmeticSecondaryWeaponDefault; // 0x9e8
        struct FName m_firstPersonCarryingItemAttachmentName; // 0x9f0
        struct FName m_thirdPersonCarryingItemAttachmentName; // 0x9f8
        float m_spawnOffsetMagnitude; // 0xa00
        struct FVector m_heightOffsetSpawn; // 0xa04
        float m_fadeInDurationAtSpawn; // 0xa10
        float m_playerStartClusterRadius; // 0xa14
        float m_playerStartClusterCooldown; // 0xa18
        struct TArray<struct FYPlayerStartScoreRule> m_playerStartScoreRules; // 0xa20
        float m_seamlessTravelTimeout; // 0xa30
        float m_transitionToMapCosmeticFadeTime; // 0xa34
        float m_timeoutStationSingleplayerNoConnect; // 0xa38
        float m_timeoutServerNoConnection; // 0xa3c
        float m_timeoutNoMatchmakingSignalRResponse; // 0xa40
        struct FString m_defaultSeamlessMatchMap; // 0xa48
        struct FString m_defaultStationMap; // 0xa58
        struct FString m_defaultOutpostMap; // 0xa68
        struct FString m_defaultTutorialMap; // 0xa78
        struct FString m_defaultCharacterSelectionMap; // 0xa88
        struct FString m_tutorialIdentifier; // 0xa98
        struct FString m_characterSelectionIdentifier; // 0xaa8
        struct TArray<struct FString> m_tutorialAdditionalURLOptions; // 0xab8
        struct FDataTableRowHandle m_quickMatchInfoHandle; // 0xac8
        struct FDataTableRowHandle m_missionSelectionSceneHandle; // 0xad8
        struct FDataTableRowHandle m_inboxSelectionSceneHandle; // 0xae8
        struct FViewTargetTransitionParams m_stationViewTargetParameter; // 0xaf8
        struct FViewTargetTransitionParams m_stationQuickMathInfoViewParameter; // 0xb08
        float m_minImpulseZ; // 0xb18
        float m_defaultAbilityPlacementVisualizationTraceDistance; // 0xb1c
        float m_abilityStateDuration; // 0xb20
        struct TArray<enum class EYPlayerStateBlueprint> m_statesAllowedInStation; // 0xb28
        class UYWidget* m_transitionClass; // 0xb38
        int32_t m_consumableSlotAmount; // 0xb40
        struct TMap<enum class EYContractObjectiveType, struct FText> m_defaultContractObjectiveTexts; // 0xb48
        struct FRotator m_maxAdditiveRotation; // 0xb98
        struct FVector m_maxAdditiveTranslation; // 0xba4
        float m_additiveMovementInterpSpeed; // 0xbb0
        struct TArray<struct FDataTableRowHandle> m_permanentToolRowHandles; // 0xbb8
        class AYPreviewManagerActor* m_previewActorClass; // 0xbc8
        float m_enemySearchRadius; // 0xbd0
        float m_capsuleSightOriginOffset; // 0xbd4
        int32_t m_meleeServerHitEntriesLimit; // 0xbd8
        float m_itemWheelInputHoldDelay; // 0xbdc

    };

    struct FYWeaponFireDelayStateData //ScriptStruct Prospect.YWeaponFireDelayStateData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_fireDelay; // 0x0
        enum class EYPlayerStateBlueprint m_playerState; // 0x4
        enum class EYGameplayAttribute m_gameplayAttribute; // 0x5

    };

    struct FYPlayerUIHealthBarDeltaSettings //ScriptStruct Prospect.YPlayerUIHealthBarDeltaSettings
    {
    //Children Prop Count (Fields): 4
    public:

        struct FYPlayerUIHealthBarDeltaSettingsDetails m_healthOwn; // 0x0
        struct FYPlayerUIHealthBarDeltaSettingsDetails m_shieldOwn; // 0xc
        struct FYPlayerUIHealthBarDeltaSettingsDetails m_healthOnCharacterPlates; // 0x18
        struct FYPlayerUIHealthBarDeltaSettingsDetails m_shieldOnCharacterPlates; // 0x24

    };

    struct FYPlayerUIHealthBarDeltaSettingsDetails //ScriptStruct Prospect.YPlayerUIHealthBarDeltaSettingsDetails
    {
    //Children Prop Count (Fields): 3
    public:

        float m_deltaAdjustmentSpeed; // 0x0
        float m_deltaAdjustmentInitialDelay; // 0x4
        int32_t m_segmentSize; // 0x8

    };

    struct FYPlayerMeleeData //ScriptStruct Prospect.YPlayerMeleeData
    {
    //Children Prop Count (Fields): 4
    public:

        float m_attackDuration; // 0x0
        float m_meleeAttackStrikeTime; // 0x4
        struct FDataTableRowHandle m_meleeTransportHandle; // 0x8
        enum class EYGameplayContextType m_damageContextType; // 0x18

    };

    struct FYClimbingCosmeticDataPerState //ScriptStruct Prospect.YClimbingCosmeticDataPerState
    {
    //Children Prop Count (Fields): 1
    public:

        class UMatineeCameraShake* m_cameraShakeStateStarted; // 0x0

    };

    struct FYMovementCosmeticDataPerState //ScriptStruct Prospect.YMovementCosmeticDataPerState
    {
    //Children Prop Count (Fields): 2
    public:

        class UMatineeCameraShake* m_cameraShakeStateActivated; // 0x0
        class UMatineeCameraShake* m_cameraShakeStateDeactivated; // 0x8

    };

    struct FYProjectileInititalizationData //ScriptStruct Prospect.YProjectileInititalizationData
    {
    //Children Prop Count (Fields): 14
    public:

        struct FYDamageOriginInfo m_damageOriginInfo; // 0x0
        struct FVector m_initialVelocity; // 0x28
        struct FVector m_spawnPosition; // 0x34
        struct FDataTableRowHandle m_impactHandleRow; // 0x40
        struct FDataTableRowHandle m_transportHandleRow; // 0x50
        struct FDataTableRowHandle m_fxHandleRow; // 0x60
        float m_overrideGravity; // 0x70
        int32_t m_transportHandle; // 0x74
        class USceneComponent* m_homingToComponet; // 0x78
        float m_armingTime; // 0x80
        bool m_clientSideProjectile; // 0x84
        bool m_isTargeting; // 0x85
        struct FVector m_visualOriginTrailLocation; // 0x88
        struct FGuid m_shotGuid; // 0x94

    };

    struct FYScoreData //ScriptStruct Prospect.YScoreData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_placement; // 0x0
        int32_t m_victoryPoints; // 0x4

    };

    struct FYGameDebugState //ScriptStruct Prospect.YGameDebugState
    {
    //Children Prop Count (Fields): 6
    public:

        bool m_infiniteAmmo; // 0x0
        bool m_hitboxDebug; // 0x1
        bool m_hitscanDebug; // 0x2
        bool m_infiniteAbilityActive; // 0x3
        bool m_haveGodmodeEnabled; // 0x4
        bool m_haveInfiniteClipEnabled; // 0x5

    };

    struct FYProspectorBadgeRow : FYItemDataTableRowBase //ScriptStruct Prospect.YProspectorBadgeRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x408

    };

    struct FYProspectorLevelProgressionDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YProspectorLevelProgressionDataTableRow
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t m_forLevel; // 0x10
        int32_t m_xpIncrement; // 0x14
        struct FDataTableRowHandle m_baseRewardRow; // 0x18
        struct FDataTableRowHandle m_evacRewardRow; // 0x28
        struct FDataTableRowHandle m_baseXPPerMinuteRewardRow; // 0x38

    };

    struct FYProspectorLevelRewardsDataTableRow : FYVanityItemRowBase //ScriptStruct Prospect.YProspectorLevelRewardsDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_startLevel; // 0x508
        struct FText m_title; // 0x510
        struct TSoftObjectPtr<UTexture2D> m_borderPath; // 0x530
        struct TSoftObjectPtr<UTexture2D> m_iconPath; // 0x558

    };

    struct FYQuestItemRow : FYItemDataTableRowBase //ScriptStruct Prospect.YQuestItemRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<UTexture2D> m_hudIconBig; // 0x408

    };

    struct FYItemRarityDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YItemRarityDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYItemRarityType, struct FYRarityVisualizationData> m_visualizationData; // 0x10

    };

    struct FYRarityVisualizationData //ScriptStruct Prospect.YRarityVisualizationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UTexture2D> m_texture; // 0x0
        struct FSlateColor m_color; // 0x28

    };

    struct FYRebindableInputAction : FYDataTableRowBase //ScriptStruct Prospect.YRebindableInputAction
    {
    //Children Prop Count (Fields): 7
    public:

        enum class EYInputKeyType m_keyType; // 0x10
        struct FName m_axisNegativeInputAction; // 0x14
        bool m_isRebindable; // 0x1c
        bool m_isRequired; // 0x1d
        enum class EYInputBindingCategory m_inputBindingCategory; // 0x1e
        struct FText m_keyBindingText; // 0x20
        struct FText m_keyBindingTextAxisNegative; // 0x40

    };

    struct FYRelevantPlayerControllersData //ScriptStruct Prospect.YRelevantPlayerControllersData
    {
    //Children Prop Count (Fields): 3
    public:

        class APawn* m_pawn; // 0x0
        struct TArray<class APlayerController*> m_relevantPlayerControllers; // 0x8
        float m_lastTimeProcessedTimeStamp; // 0x18

    };

    struct FYReplayMarker //ScriptStruct Prospect.YReplayMarker
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString m_nameID; // 0x0
        int32_t m_timeInSeconds; // 0x10
        struct FVector m_cameraLocation; // 0x14
        struct FRotator m_cameraRotation; // 0x20

    };

    struct FYResourceSessionRequestData //ScriptStruct Prospect.YResourceSessionRequestData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYSessionResourceUserEntry m_sessionUserEntry; // 0x0
        bool m_clearResources; // 0x20
        bool m_forceRefreshEvaluateState; // 0x21

    };

    struct FYSessionResourceUserEntry //ScriptStruct Prospect.YSessionResourceUserEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_userId; // 0x0
        struct FGuid m_instanceId; // 0x10

    };

    struct FYResourceManagementState //ScriptStruct Prospect.YResourceManagementState
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EYResourceAtomicState m_state; // 0x18

    };

    struct FYCachedPreloadData //ScriptStruct Prospect.YCachedPreloadData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName m_name; // 0x0
        class UObject* m_instance; // 0x8
        class UObject* m_class; // 0x10

    };

    struct FYResourceSpawnActorRequest //ScriptStruct Prospect.YResourceSpawnActorRequest
    {
    //Children Prop Count (Fields): 6
    public:

        struct FSoftClassProperty m_actorClass; // 0x0
        struct FTransform m_transform; // 0x30
        class AActor* m_owner; // 0x60
        struct FYInventoryItem m_inventoryItem; // 0x68
        struct TArray<struct FDataTableRowHandle> m_rowHandles; // 0x140
        class UObject* m_specificClass; // 0x150

    };

    struct FYResourceManagerRequestEntry //ScriptStruct Prospect.YResourceManagerRequestEntry
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t m_handle; // 0x0

    };

    struct FYRetentionBonusRequest //ScriptStruct Prospect.YRetentionBonusRequest
    {
    public:


    };

    struct FYRetentionBonusResult //ScriptStruct Prospect.YRetentionBonusResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString UserId; // 0x0
        struct FString Error; // 0x10
        struct FYRetentionProgress playerData; // 0x20

    };

    struct FYRetentionBonusRow : FYDataTableRowBase //ScriptStruct Prospect.YRetentionBonusRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYRetentionBonusEntry> m_rewards; // 0x10
        bool m_active; // 0x20

    };

    struct FYRetentionBonusEntry //ScriptStruct Prospect.YRetentionBonusEntry
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYRetentionBonusEntryType m_rewardType; // 0x0
        struct FDataTableRowHandle m_rewardHandle; // 0x8
        struct TArray<struct FDataTableRowHandle> m_rewardHandles; // 0x18
        bool m_persistent; // 0x28

    };

    struct FYGeneratorCrateLevelToRewardsDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YGeneratorCrateLevelToRewardsDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_rewardsPackageName; // 0x10
        int32_t m_level; // 0x30
        struct TSoftObjectPtr<UDataTable> m_rewardsDropTablePath; // 0x38
        struct TArray<struct FYRewardsPoolGrantTupleRow> m_rewardsGrants; // 0x60

    };

    struct FYRewardsPoolGrantTupleRow : FTableRowBase //ScriptStruct Prospect.YRewardsPoolGrantTupleRow
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYRewardType m_rewardType; // 0x8
        int32_t m_grantAmount; // 0xc

    };

    struct FYLeaderboardPlacementToRewardsDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YLeaderboardPlacementToRewardsDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_rewardsPackageName; // 0x10
        int32_t m_leaderboardRank; // 0x30
        struct TSoftObjectPtr<UDataTable> m_rewardsDropTablePath; // 0x38
        struct TSoftObjectPtr<UDataTable> m_prospectorLevelVprewardsTablePath; // 0x60

    };

    struct FYVPToRewarsdDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YVPToRewarsdDataTableRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_rewardsPackageName; // 0x10
        int32_t m_vpThreshold; // 0x30
        struct TSoftObjectPtr<UDataTable> m_rewardsDropTablePath; // 0x38

    };

    struct FYLeadboardPlacementRewardDropTableEntry //ScriptStruct Prospect.YLeadboardPlacementRewardDropTableEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_rewardsPackageName; // 0x0
        int32_t m_leaderboardRank; // 0x20
        class UDataTable* m_rewardsDT; // 0x28
        class UDataTable* m_prospectorLevelVPRewardsDT; // 0x30

    };

    struct FYRewardDropTableEntry //ScriptStruct Prospect.YRewardDropTableEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText m_rewardsPackageName; // 0x0
        int32_t m_vpThreshold; // 0x20
        class UDataTable* m_rewardsDT; // 0x28

    };

    struct FRichHyperlinkRow : FTableRowBase //ScriptStruct Prospect.RichHyperlinkRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FHyperlinkStyle HyperlinkStyle; // 0x8

    };

    struct FHyperlinkStyle : FSlateWidgetStyle //ScriptStruct SlateCore.HyperlinkStyle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FButtonStyle UnderlineStyle; // 0x8
        struct FTextBlockStyle TextStyle; // 0x280
        struct FMargin Padding; // 0x4f0

    };

    struct FYScanParameters //ScriptStruct Prospect.YScanParameters
    {
    //Children Prop Count (Fields): 3
    public:

        class UObject* m_worldContextObject; // 0x0
        struct FVector m_scanLocation; // 0x8
        struct TArray<struct FDataTableRowHandle> m_exclusiveScanTypes; // 0x18

    };

    struct FYScannableRow : FYDataTableRowBase //ScriptStruct Prospect.YScannableRow
    {
    //Children Prop Count (Fields): 4
    public:

        float m_minScanDistance; // 0x10
        float m_maxScanDistance; // 0x14
        struct FString m_debugString; // 0x18
        struct FColor m_color; // 0x28

    };

    struct FYSceneCompleteInitializationData //ScriptStruct Prospect.YSceneCompleteInitializationData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYSceneRuntimeInitializationData m_runtimeInitializationData; // 0x0
        struct FYSceneRuntimeData m_runtimeData; // 0x90
        int32_t m_uidHandle; // 0xa0

    };

    struct FYSceneRuntimeData //ScriptStruct Prospect.YSceneRuntimeData
    {
    public:


    };

    struct FYSceneRuntimeInitializationData //ScriptStruct Prospect.YSceneRuntimeInitializationData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FDataTableRowHandle m_rowHandle; // 0x0
        struct FYSceneSetupData m_setupData; // 0x10
        struct FViewTargetTransitionParams m_viewTargetParameters; // 0x28
        bool m_requireTransitionOverlay; // 0x38
        struct FTransform m_baseDetailTransformData; // 0x40
        bool m_doCameraTransition; // 0x70
        enum class EYSceneState m_startingSceneState; // 0x71
        struct FString m_contextActivationString; // 0x78

    };

    struct FYSceneSetupData //ScriptStruct Prospect.YSceneSetupData
    {
    //Children Prop Count (Fields): 3
    public:

        class ACameraActor* m_detailCameraActor; // 0x0
        class ACameraActor* m_cameraActor; // 0x8
        class AActor* m_customizationPlacementLocation; // 0x10

    };

    struct FYSceneDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YSceneDataTableRow
    {
    //Children Prop Count (Fields): 8
    public:

        class AYScene* m_bpClass; // 0x10
        struct FSoftClassProperty m_widgetClass; // 0x18
        struct FSoftClassProperty m_alternativeWidgetClass; // 0x40
        struct FName m_preloadDataWidgetName; // 0x68
        bool m_doNotActivateNonVisibleWidget; // 0x70
        bool m_wantTransitionStateChange; // 0x71
        bool m_wantTransitionChangeOnClearing; // 0x72
        bool m_hideCharacterOnTransition; // 0x73

    };

    struct FYSendInfoRequest : FYGameServerRequest //ScriptStruct Prospect.YSendInfoRequest
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString SessionId; // 0x10
        struct FString Info; // 0x20
        struct FYFPSMatchSummaryServerEvent m_performanceEvent; // 0x30

    };

    struct FYDoTimeoutUsersCheckRequest : FYGameServerRequest //ScriptStruct Prospect.YDoTimeoutUsersCheckRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString SessionId; // 0x10

    };

    struct FYServerPerformanceData //ScriptStruct Prospect.YServerPerformanceData
    {
    //Children Prop Count (Fields): 12
    public:

        float m_frameTime; // 0x0
        float m_idleTime; // 0x4
        float m_frameTimeHighest; // 0x8
        uint32_t m_memory; // 0xc
        uint32_t m_memoryHighest; // 0x10
        uint32_t m_numPlayers; // 0x14
        uint32_t m_numAIs; // 0x18
        float m_serverLifetime; // 0x1c
        int32_t m_inPacketLoss; // 0x20
        int32_t m_outPacketLoss; // 0x24
        int32_t m_inBytesPerSecond; // 0x28
        int32_t m_outBytesPerSecond; // 0x2c

    };

    struct FYGameSessionSettings : FYDataTableRowBase //ScriptStruct Prospect.YGameSessionSettings
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t m_sessionLengthSeconds; // 0x10
        int32_t m_sessionUntilWarning; // 0x14

    };

    struct FYFetchEntitlementsResponse //ScriptStruct Prospect.YFetchEntitlementsResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> ownedEntitlements; // 0x0

    };

    struct FYFetchEGSEntitlementsRequest //ScriptStruct Prospect.YFetchEGSEntitlementsRequest
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString epicAccessToken; // 0x0

    };

    struct FYReportShopPurchaseRequest //ScriptStruct Prospect.YReportShopPurchaseRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FYReportShopPurchaseItem> Items; // 0x0
        struct FString bundleOrItemId; // 0x10
        int32_t Price; // 0x20
        bool isRealMoneyPurchase; // 0x24

    };

    struct FYReportShopPurchaseItem //ScriptStruct Prospect.YReportShopPurchaseItem
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString ID; // 0x0
        struct FString instanceId; // 0x10
        struct FString Name; // 0x20
        struct FString Type; // 0x30

    };

    struct FYWeaponShopRow : FYDataTableRowBase //ScriptStruct Prospect.YWeaponShopRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FDataTableRowHandle m_factionRowHandle; // 0x10

    };

    struct FYUiPopupItemSuccessfulTunedPreviewData //ScriptStruct Prospect.YUiPopupItemSuccessfulTunedPreviewData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FDataTableRowHandle m_blueprintHandle; // 0x0
        enum class EYItemRarityType m_itemRarity; // 0x10
        struct FString m_itemBackendId; // 0x18
        struct FString m_baseItemId; // 0x28
        int32_t m_oldValue; // 0x38
        int32_t m_newValue; // 0x3c

    };

    struct FYUiPopupItemSuccessfulActionPreviewData //ScriptStruct Prospect.YUiPopupItemSuccessfulActionPreviewData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FDataTableRowHandle m_blueprintHandle; // 0x0
        enum class EYItemRarityType m_itemRarity; // 0x10
        struct FString m_itemBackendId; // 0x18
        struct FString m_baseItemId; // 0x28
        struct FString m_shopItemBelongsTo; // 0x38
        int32_t m_repeatTimes; // 0x48

    };

    struct FYCraftSuccessfulPopupText //ScriptStruct Prospect.YCraftSuccessfulPopupText
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_itemName; // 0x0
        struct FText m_deviceTypeText; // 0x20

    };

    struct FYCraftingStationItemDetailOverviewData //ScriptStruct Prospect.YCraftingStationItemDetailOverviewData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYItemRarityType m_itemRarity; // 0x0
        struct FString m_bpName; // 0x8

    };

    struct FYButtonAudio //ScriptStruct Prospect.YButtonAudio
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_pressedDTSound; // 0x0
        struct FDataTableRowHandle m_releasedDTSound; // 0x10
        struct FDataTableRowHandle m_hoveredDTSound; // 0x20
        struct FDataTableRowHandle m_unhoveredDTSound; // 0x30

    };

    struct FYSocialActionRequestEntry //ScriptStruct Prospect.YSocialActionRequestEntry
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_useLocalUID; // 0x0
        struct FString m_overwriteUID; // 0x8
        struct TArray<struct FYFriendAction> m_actions; // 0x18

    };

    struct FYQueryFriendsListResponse //ScriptStruct Prospect.YQueryFriendsListResponse
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPlayFabFriendWithState> Friends; // 0x0

    };

    struct FYPlayerActionHistoryData //ScriptStruct Prospect.YPlayerActionHistoryData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TMap<struct FString, int32_t> m_timeSameActionTowardsUser; // 0x0
        int32_t m_currentTimeMuted; // 0x50
        int32_t m_amountOfTimesMuted; // 0x54
        bool m_currentlyMuted; // 0x58
        float m_lastTimeTracked; // 0x5c

    };

    struct FYFriendActionMuteSettings //ScriptStruct Prospect.YFriendActionMuteSettings
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_maxActionTowardsUser; // 0x0
        int32_t m_minActionCount; // 0x4
        float m_timeAllowanceAdditionalAction; // 0x8
        float m_resetActionTracking; // 0xc

    };

    struct FYNotificationItemDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YNotificationItemDataTableRow
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EYNotificationMessageType m_messageType; // 0x10
        float m_duration; // 0x14
        struct TSoftObjectPtr<UTexture2D> m_textureToShow; // 0x18
        struct FText m_message; // 0x40

    };

    struct FYRecentPlayedEntry //ScriptStruct Prospect.YRecentPlayedEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct FYPlatformEntry m_platformEntry; // 0x0
        struct FYOutpostFriendInfo m_friendInfo; // 0x18
        int64_t m_timeRegistered; // 0xa8
        bool m_friendInfoPending; // 0xb0
        bool m_isDebugEntry; // 0xb1

    };

    struct FYSocialItemRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YSocialItemRowBase
    {
    public:


    };

    struct FYSortingVanityRequest //ScriptStruct Prospect.YSortingVanityRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FYVanityItemData> m_vanityItems; // 0x0
        struct FString m_userId; // 0x10
        enum class EYSortingRequestType m_type; // 0x20
        bool m_sortAlphabetical; // 0x21

    };

    struct FYSortingRequest //ScriptStruct Prospect.YSortingRequest
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FDataTableRowHandle> m_items; // 0x0
        struct FString m_userId; // 0x10
        enum class EYSortingRequestType m_type; // 0x20
        bool m_sortAlphabetical; // 0x21

    };

    struct FYSoundNodeInteriorTransitionData //ScriptStruct Prospect.YSoundNodeInteriorTransitionData
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_wasInInterior; // 0x0
        float m_currentInteriorTransitionTime; // 0x4
        bool m_transitioningTowardsInterior; // 0x8

    };

    struct FYModulatorContinuousParams //ScriptStruct Prospect.YModulatorContinuousParams
    {
    //Children Prop Count (Fields): 3
    public:

        bool m_enableDebugLogging; // 0x0
        struct FModulatorContinuousParams m_parameter; // 0x4
        struct FRuntimeFloatCurve m_optionalParameterValueTransformCurve; // 0x28

    };

    struct FModulatorContinuousParams //ScriptStruct Engine.ModulatorContinuousParams
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName ParameterName; // 0x0
        float Default; // 0x8
        float MinInput; // 0xc
        float MaxInput; // 0x10
        float MinOutput; // 0x14
        float MaxOutput; // 0x18
        enum class ModulationParamMode ParamMode; // 0x1c

    };

    struct FYSpawnActivityActorTokenData //ScriptStruct Prospect.YSpawnActivityActorTokenData
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EYActivityType m_activityType; // 0x0
        class AYActivityLocation* m_activityLocation; // 0x8
        class AYActivityActorManager* m_activityActorManager; // 0x10
        class AActor* m_actorClass; // 0x18
        class UYActivityRegisterComponent* m_registerComponentOverride; // 0x20

    };

    struct FYReplicatedMovementData //ScriptStruct Prospect.YReplicatedMovementData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_serverDistance; // 0x0
        float m_serverSpeed; // 0x4
        float m_predictedServerSpeed; // 0x8

    };

    struct FYReplicatedMovementActor //ScriptStruct Prospect.YReplicatedMovementActor
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* m_actorBase; // 0x0
        float m_actorOffset; // 0x8

    };

    struct FYSquadInfo //ScriptStruct Prospect.YSquadInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class AYPlayerState*> m_members; // 0x0
        struct TArray<struct FString> m_deadMemberUserIds; // 0x10
        struct FString m_squadId; // 0x20
        int32_t m_size; // 0x30

    };

    struct FYPlayerUITeamInfo //ScriptStruct Prospect.YPlayerUITeamInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FColor m_teamColorID; // 0x0
        int32_t m_teamID; // 0x4

    };

    struct FYStabilityData //ScriptStruct Prospect.YStabilityData
    {
    //Children Prop Count (Fields): 4
    public:

        float m_currentStabilityValue; // 0x0
        float m_lastTimeTriggered; // 0x4
        float m_lastTimeValueIncreased; // 0x8
        float m_lastTimeValueDecreased; // 0xc

    };

    struct FYStaminaDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YStaminaDataTableRow
    {
    //Children Prop Count (Fields): 19
    public:

        float m_maxStamina; // 0x10
        float m_regenerationRate; // 0x14
        class UCurveFloat* m_regenerationGrowthCurve; // 0x18
        float m_regenerationDelay; // 0x20
        struct TArray<struct FYStaminaStateOverrides> m_stateOverrides; // 0x28
        struct FYStaminaRegenerationMovementData m_staminaRegenerationMovementData; // 0x38
        float m_jumpConsumption; // 0x44
        float m_jumpNoStaminaScalar; // 0x48
        float m_sprintConsumptionRate; // 0x4c
        float m_sprintDashConsumptionRate; // 0x50
        float m_sprintMinStamina; // 0x54
        float m_sprintDashMinStamina; // 0x58
        float m_slideConsumptionRate; // 0x5c
        float m_slideMinStamina; // 0x60
        float m_climbingInstantConsumption; // 0x64
        float m_climbingDegenerationRate; // 0x68
        bool m_allowMeleeWithoutStamina; // 0x6c
        bool m_allowMeleeHeavyWithoutStamina; // 0x6d
        float m_StaminaReducedOnTakingHit; // 0x70

    };

    struct FYStaminaRegenerationMovementData //ScriptStruct Prospect.YStaminaRegenerationMovementData
    {
    //Children Prop Count (Fields): 3
    public:

        float m_walkingRegenerationRateScalar; // 0x0
        float m_stationaryRegenerationRateScalar; // 0x4
        float m_jumpingRegenerationRateScalar; // 0x8

    };

    struct FYStaminaStateOverrides //ScriptStruct Prospect.YStaminaStateOverrides
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<enum class EYPlayerStateBlueprint> m_states; // 0x0
        float m_regenerationRateScalar; // 0x10

    };

    struct FYStaminaMeleeMontageData //ScriptStruct Prospect.YStaminaMeleeMontageData
    {
    //Children Prop Count (Fields): 4
    public:

        class UAnimMontage* m_weakenedMeleeMissMontageTPP; // 0x0
        class UAnimMontage* m_weakenedMeleeMissMontageFPP; // 0x8
        class UAnimMontage* m_weakenedMeleeImpactMontageTPP; // 0x10
        class UAnimMontage* m_weakenedMeleeImpactMontageFPP; // 0x18

    };

    struct FYRuntimeInventoryWeightInfo //ScriptStruct Prospect.YRuntimeInventoryWeightInfo
    {
    //Children Prop Count (Fields): 4
    public:

        float m_maxBagContainerWeight; // 0x0
        float m_currentBagContainerWeight; // 0x4
        float m_maxSafeContainerWeight; // 0x8
        float m_currentSafeContainerWeight; // 0xc

    };

    struct FYContractItemUnlocks //ScriptStruct Prospect.YContractItemUnlocks
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYContractUnlockReward> m_itemUnlocks; // 0x0

    };

    struct FYContractUnlockReward //ScriptStruct Prospect.YContractUnlockReward
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_itemRowHandle; // 0x0
        bool m_shouldBeDisplayedAsEndOfChainReward; // 0x10

    };

    struct FYCachedFactionLevel //ScriptStruct Prospect.YCachedFactionLevel
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYUnlockedShopItem> m_unlockedShopItems; // 0x0
        struct TArray<struct FDataTableRowHandle> m_unlockedContracts; // 0x10

    };

    struct FYPlayerLeaderBoardData //ScriptStruct Prospect.YPlayerLeaderBoardData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYMatchmakeGameModeType, struct FYPlayerRankDataEntry> m_playerRankData; // 0x0

    };

    struct FYPlayerRankDataEntry //ScriptStruct Prospect.YPlayerRankDataEntry
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString m_userId; // 0x0
        struct FString m_playerName; // 0x10
        enum class EYMatchmakeGameModeType m_gameModeType; // 0x20
        int32_t m_rank; // 0x24
        int32_t m_highestRank; // 0x28
        bool m_isLocalPlayer; // 0x2c

    };

    struct FYLeaderBoardData //ScriptStruct Prospect.YLeaderBoardData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYLeaderBoardDataPerGameMode> m_leaderBoardDataPerGameMode; // 0x0

    };

    struct FYLeaderBoardDataPerGameMode //ScriptStruct Prospect.YLeaderBoardDataPerGameMode
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYMatchmakeGameModeType m_gameModeType; // 0x0
        struct FYRankEntries m_leaderBoardData; // 0x8

    };

    struct FYRankEntries //ScriptStruct Prospect.YRankEntries
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYPlayerRankDataEntry> m_rankEntries; // 0x0

    };

    struct FYUiHofData //ScriptStruct Prospect.YUiHofData
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EYMatchmakeGameModeType m_gameModeToShow; // 0x0
        struct TMap<struct FString, struct FYRankEntries> m_gameModeTopPlayersPerSeasons; // 0x8

    };

    struct FYUIRankedSeasonData //ScriptStruct Prospect.YUIRankedSeasonData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_seasonName; // 0x0
        struct TMap<enum class EYMatchmakeGameModeType, struct FYRankEntries> m_rankDataPerGameMode; // 0x10

    };

    struct FYReplicatedRankData //ScriptStruct Prospect.YReplicatedRankData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_rank; // 0x0
        int32_t m_prevRank; // 0x4
        bool m_unplaced; // 0x8
        bool m_receivedBackendData; // 0x9

    };

    struct FYRankCalculationInitData //ScriptStruct Prospect.YRankCalculationInitData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class AYPlayerState*> m_playerStates; // 0x0

    };

    struct FYRankedSeasonData //ScriptStruct Prospect.YRankedSeasonData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString m_rankedSeasonName; // 0x0
        struct FDateTime m_endDateTime; // 0x10
        struct FTimespan m_remainingTime; // 0x18
        bool m_isValidData; // 0x20
        struct FName m_rowName; // 0x24

    };

    struct FYProspectorRankRow : FYDataTableRowBase //ScriptStruct Prospect.YProspectorRankRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_rankAsText; // 0x10
        int32_t m_startRank; // 0x30

    };

    struct FYRankedSeasonRow : FYDataTableRowBase //ScriptStruct Prospect.YRankedSeasonRow
    {
    //Children Prop Count (Fields): 6
    public:

        struct FText m_rankedSeasonName; // 0x10
        struct FString m_startDateTime; // 0x30
        struct FString m_endDateTime; // 0x40
        int64_t m_utcStartDateTimeTicks; // 0x50
        int64_t m_utcEndDateTimeTicks; // 0x58
        struct TArray<struct FYEndOfSeasonReward> m_endSeasonRewards; // 0x60

    };

    struct FYEndOfSeasonReward //ScriptStruct Prospect.YEndOfSeasonReward
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_messageId; // 0x0
        struct TArray<struct FDataTableRowHandle> m_grants; // 0x10

    };

    struct FYStatWidgets //ScriptStruct Prospect.YStatWidgets
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UYWidget*> m_widgets; // 0x0

    };

    struct FYStatCombinationData : FYEOSStatData //ScriptStruct Prospect.YStatCombinationData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FYStatCombinationPair> m_statCalculation; // 0x38
        bool m_anyGameMode; // 0x48
        bool m_anyActivity; // 0x49
        enum class EYMatchmakeGameModeType m_gameModeType; // 0x4a
        enum class EYActivityType m_activityType; // 0x4b

    };

    struct FYStatCombinationPair //ScriptStruct Prospect.YStatCombinationPair
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDataTableRowHandle m_statRowHandle; // 0x0
        enum class EYMatchmakeGameModeType m_gameMode; // 0x10
        enum class EYActivityType m_activityType; // 0x11
        enum class EYStatOperator m_statOperator; // 0x12

    };

    struct FYTechTreeUIData //ScriptStruct Prospect.YTechTreeUIData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYTechTreeNodeType> columnNodes; // 0x0
        int32_t nodeAmount; // 0x10

    };

    struct FYTechTreeNodeType : FYDataTableRowBase //ScriptStruct Prospect.YTechTreeNodeType
    {
    //Children Prop Count (Fields): 11
    public:

        struct FText m_perkName; // 0x10
        struct FText m_perkDescription; // 0x30
        struct TSoftObjectPtr<UTexture2D> m_nodeIcon; // 0x50
        struct FText m_nodeBonusDescription; // 0x78
        struct FName m_nodeId; // 0x98
        struct TArray<enum class EYTechtreeCategoryType> m_categories; // 0xa0
        int32_t m_playerQuarterLevelRequired; // 0xb0
        int32_t m_tier; // 0xb4
        enum class EYTechTreeNodePerkType m_nodePerkType; // 0xb8
        struct TArray<struct FYTechTreeNodeUpgradeLevelRow> m_perkLevels; // 0xc0
        struct TArray<struct FYTechTreeNodeUpgradeDependencyRow> m_upgradeDependencies; // 0xd0

    };

    struct FYTechTreeNodeUpgradeDependencyRow : FTableRowBase //ScriptStruct Prospect.YTechTreeNodeUpgradeDependencyRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle m_relatedDependencyRowHandle; // 0x8
        int32_t m_requiredLevel; // 0x18

    };

    struct FYTechTreeNodeUpgradeLevelRow : FTableRowBase //ScriptStruct Prospect.YTechTreeNodeUpgradeLevelRow
    {
    //Children Prop Count (Fields): 5
    public:

        float m_perkAmount; // 0x8
        struct TArray<struct FYCostEntryRow> m_upgradeCosts; // 0x10
        int32_t m_upgradeSeconds; // 0x20
        struct TArray<struct FYCostEntryRow> m_initialRushCosts; // 0x28
        struct TArray<struct FYCostEntryRow> m_optionalRushCosts; // 0x38

    };

    struct FYTechTreeCategory : FYDataTableRowBase //ScriptStruct Prospect.YTechTreeCategory
    {
    //Children Prop Count (Fields): 5
    public:

        struct TSoftObjectPtr<UTexture2D> m_categoryNodeIcon; // 0x10
        struct FText m_categoryNodeName; // 0x38
        enum class EYTechtreeCategoryType m_category; // 0x58
        int32_t m_amountOfNodes; // 0x5c
        struct TArray<enum class EYTechTreeNodePerkType> m_perkTypeOrder; // 0x60

    };

    struct FYPlayerQuarterUpgradeType : FYDataTableRowBase //ScriptStruct Prospect.YPlayerQuarterUpgradeType
    {
    //Children Prop Count (Fields): 9
    public:

        struct FText m_name; // 0x10
        struct FText m_description; // 0x30
        int32_t m_level; // 0x50
        int32_t m_nodeUpgradesRequired; // 0x54
        struct TArray<struct FYCostEntryRow> m_costs; // 0x58
        int32_t m_upgradeTimeSeconds; // 0x68
        int32_t m_upgradeTimeMinute; // 0x6c
        struct TArray<struct FYCostEntryRow> m_initialRushCosts; // 0x70
        struct TArray<struct FYCostEntryRow> m_optionalRushCosts; // 0x80

    };

    struct FYTransitionRuntimeData //ScriptStruct Prospect.YTransitionRuntimeData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FYTransitionRequestData m_initData; // 0x0

    };

    struct FYTransitionRequestData //ScriptStruct Prospect.YTransitionRequestData
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYTransitionRequest m_requestType; // 0x0
        class AActor* m_viewTarget; // 0x8
        struct FViewTargetTransitionParams m_viewTargetParams; // 0x10
        float m_lockTime; // 0x20
        bool m_withViewTargetParams; // 0x24
        bool m_withTransition; // 0x25

    };

    struct FYGfxQualityData //ScriptStruct Prospect.YGfxQualityData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_label; // 0x0
        enum class EYGfxQualityPreset m_gfxQuality; // 0x20

    };

    struct FYDefaultDirectXVersion //ScriptStruct Prospect.YDefaultDirectXVersion
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_label; // 0x0
        struct FString m_defaultDirectXVersion; // 0x20

    };

    struct FYItemUsingVanityInfo //ScriptStruct Prospect.YItemUsingVanityInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_baseItemId; // 0x0
        struct FString m_customItemID; // 0x10

    };

    struct FYPetVanityItemRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YPetVanityItemRowBase
    {
    public:


    };

    struct FYWeaponCharmVanityItemRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YWeaponCharmVanityItemRowBase
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_weaponCharmMesh; // 0x508

    };

    struct FYSprayVanityItemRowBase : FYVanityItemRowBase //ScriptStruct Prospect.YSprayVanityItemRowBase
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<USoundBase> m_sound; // 0x508

    };

    struct FYDroppodDataTableRow : FYVanityItemRowBase //ScriptStruct Prospect.YDroppodDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FSoftClassProperty m_desiredDroppodPath; // 0x508

    };

    struct FYVehicleVanityDataTableRow : FYVanityItemRowBase //ScriptStruct Prospect.YVehicleVanityDataTableRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle m_overrideVehicleMovementAudioSoundQueue; // 0x508
        struct FDataTableRowHandle m_overrideVehicleBoostAudioSoundQueue; // 0x518
        struct FSoftClassProperty m_overridenVehicleSubclass; // 0x528

    };

    struct FYGlobalVanityDefaultsData : FYDataTableRowBase //ScriptStruct Prospect.YGlobalVanityDefaultsData
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t m_maxAmountOfActiveVanity; // 0x10
        struct FDataTableRowHandle m_defaultBanner; // 0x18
        struct FDataTableRowHandle m_defaultNormalEmote; // 0x28
        struct FDataTableRowHandle m_defaultDroppod; // 0x38
        struct FDataTableRowHandle m_defaultSpray; // 0x48

    };

    struct FYVehicleRowBase : FYItemDataTableRowBase //ScriptStruct Prospect.YVehicleRowBase
    {
    //Children Prop Count (Fields): 45
    public:

        struct FDataTableRowHandle m_healthRow; // 0x408
        float m_lifetimeAfterDeath; // 0x418
        float m_MovementSpeedBackwardsMovement; // 0x41c
        float m_vehicleSideDirectionFrictionDirection; // 0x420
        float m_vehicleBackwardFrictionDirection; // 0x424
        float m_vehicleBackwardSpeedMultiplierAccel; // 0x428
        float m_angularAccelerationMultiplierLeft; // 0x42c
        float m_vehicleSideMovementSpeedMultiplierAccel; // 0x430
        float m_vehicleTurnSpeedMultiplier; // 0x434
        float m_vehicleAdditionalMovementSpeedBank; // 0x438
        float m_MovementSpeedSideMovement; // 0x43c
        float m_vehicleRotationMaxSpeed; // 0x440
        float m_vehicleGlobalAccelerationModifier; // 0x444
        float m_vehicleFriction; // 0x448
        float m_vehicleBreaking; // 0x44c
        float m_vehicleRotationIncrementSpeed; // 0x450
        float m_vehicleDecrementRotationRate; // 0x454
        float m_vehicleDeltaPitchRollRotationRate; // 0x458
        float m_vehicleMovementSpeedBackwardsMovement; // 0x45c
        float m_vehicleMovementSpeedSideMovement; // 0x460
        float m_vehicleMovementSpeedAccelerationBackwardsMovement; // 0x464
        float m_vehicleMovementSpeedAccelerationSideMovement; // 0x468
        float m_vehicleMovementSpeed; // 0x46c
        float m_vehicleBoostMovementSpeed; // 0x470
        float m_vehicleStandaloneBackwardsFriction; // 0x474
        float m_vehicleStandaloneMaxSpeed; // 0x478
        float m_vehicleStandaloneJumpOffVelocityMultiplier; // 0x47c
        float m_vehicleDamageAtDestruction; // 0x480
        float m_vehicleRadiusDamageAtDestruction; // 0x484
        float m_vehicleRadiusDamageFallofStartRange; // 0x488
        float m_vehicleRadiusDamageFalloffMultiplier; // 0x48c
        float m_vehicleOwnedInteractionTimeMultiplier; // 0x490
        float m_vehicleNotOwnedInteractionTimeMultiplier; // 0x494
        struct FVector m_vehicleIdleBaseLocationOffset; // 0x498
        struct FVector m_vehiclePossedLocationOffset; // 0x4a4
        struct FName m_vehicleAttachSocketName; // 0x4b0
        struct FDataTableRowHandle m_vehicleImpactRow; // 0x4b8
        float m_minVelocityMaxSpeedInterpDealDamage; // 0x4c8
        float m_damageVelocityStartInterpolate; // 0x4cc
        float m_damageVelocityMaxInterpolate; // 0x4d0
        float m_minimumPerDamageIntervalTime; // 0x4d4
        float m_vehicleTurnBoostSpeedModifier; // 0x4d8
        float m_vehicleJumpVelocity; // 0x4dc
        struct FDataTableRowHandle m_movementAudioSoundQueue; // 0x4e0
        struct FDataTableRowHandle m_boostAudioSoundQueue; // 0x4f0

    };

    struct FYWeaponModsConvertHelper //ScriptStruct Prospect.YWeaponModsConvertHelper
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> m_mods; // 0x0

    };

    struct FYDropWeaponAnalyticsPerPlayer : FYBaseAnalyticsEvent //ScriptStruct Prospect.YDropWeaponAnalyticsPerPlayer
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName weapon_id; // 0xa8
        struct FString weapon_name; // 0xb0
        int32_t time_since_match_start; // 0xc0
        int32_t drop_location_X; // 0xc4
        int32_t drop_location_Y; // 0xc8
        int32_t Source; // 0xcc

    };

    struct FYWeaponAnalyticsPerPlayer //ScriptStruct Prospect.YWeaponAnalyticsPerPlayer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<struct FName, struct FYWeaponAnalyticsEvent> m_weaponAnalytics; // 0x0
        struct FDataTableRowHandle m_previousEquippedWeapon; // 0xa0

    };

    struct FYDetailCamera //ScriptStruct Prospect.YDetailCamera
    {
    //Children Prop Count (Fields): 2
    public:

        class UChildActorComponent* m_childActorComponent; // 0x0
        class AActor* m_spawnedCameraActor; // 0x8

    };

    struct FYCustomizationVisualizationState //ScriptStruct Prospect.YCustomizationVisualizationState
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString m_baseWeaponID; // 0x0
        struct FString m_customWeaponID; // 0x10
        struct FYActiveWeaponCharacterInitializationData m_initializationData; // 0x20

    };

    struct FYMeleeWeaponDataTableRow : FYWeaponDataTableBase //ScriptStruct Prospect.YMeleeWeaponDataTableRow
    {
    public:


    };

    struct FYScopeTuningRow : FYDataTableRowBase //ScriptStruct Prospect.YScopeTuningRow
    {
    //Children Prop Count (Fields): 6
    public:

        enum class EYScopeType m_scopeType; // 0x10
        bool ShouldCreateGlint; // 0x11
        bool m_shouldReticleTrackSocket; // 0x12
        bool m_disableNightVisionOnTargeting; // 0x13
        bool m_shootAtCenterWhenADS; // 0x14
        struct TArray<struct FYGameplayAttributeModifier> m_attributeMods; // 0x18

    };

    struct FYWeaponTuningDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YWeaponTuningDataTableRow
    {
    //Children Prop Count (Fields): 163
    public:

        bool m_useFireInputAsTargetingAsWell; // 0x10
        struct FDataTableRowHandle m_AISenseTriggeredOnFire; // 0x18
        float m_staminaConsumptionPerFire; // 0x28
        float m_minNegativeRecoilX; // 0x2c
        float m_maxNegativeRecoilX; // 0x30
        float m_minPositiveRecoilX; // 0x34
        float m_maxPositiveRecoilX; // 0x38
        float m_minRecoilY; // 0x3c
        float m_maxRecoilY; // 0x40
        float m_CameraRecoilCompensationSpeedX; // 0x44
        float m_cameraRecoilCompensationSpeedY; // 0x48
        float m_automaticFireCrosshairRecoilCompensationSpeedX; // 0x4c
        float m_automaticFireCrosshairRecoilCompensationSpeedY; // 0x50
        float m_targetingRecoilCompensationSpeedMultiplier; // 0x54
        float m_singleFireRecoilMultiplierX; // 0x58
        float m_singleFireRecoilMultiplierY; // 0x5c
        bool m_useRecoilCompensation; // 0x60
        float m_recoilCompensationStartTime; // 0x64
        class UCameraShakeBase* m_firingCameraShake; // 0x68
        float m_fireWeaponDelay; // 0x70
        bool m_stopFireAnimationWhenInterrupted; // 0x74
        float m_unequipTime; // 0x78
        float m_equipTime; // 0x7c
        float m_animationEquipTime; // 0x80
        float m_defaultWeaponSpread; // 0x84
        float m_weaponSpreadIncreaseSpeed; // 0x88
        float m_weaponSpreadDecreaseSpeed; // 0x8c
        float m_weaponSpreadMax; // 0x90
        struct FDataTableRowHandle m_scopeTuningRow; // 0x98
        float m_targetingTime; // 0xa8
        float m_untargetingTimeMultiplier; // 0xac
        float m_retargetingMinimumNormalizedTime; // 0xb0
        float m_targetingSpreadDefault; // 0xb4
        float m_targetingWeaponSpreadMax; // 0xb8
        float m_targetingSpreadIncrease; // 0xbc
        float m_inAirSpreadMultiplier; // 0xc0
        float m_targetingSpreadInAirModifier; // 0xc4
        float m_targetingMovementSpeedMultiplier; // 0xc8
        float m_crouchSpreadDefaultMultiplier; // 0xcc
        float m_movementSpreadDefaultMultiplier; // 0xd0
        float m_movementSpreadTargetingModifier; // 0xd4
        float m_sprintingMovementSpreadDefaultMultiplier; // 0xd8
        float m_crouchSpreadIncreaseMultiplier; // 0xdc
        class UCurveFloat* m_spreadCurve; // 0xe0
        float m_spreadCurveIncreasePerShot; // 0xe8
        float m_spreadCurveDecreasePerSecond; // 0xec
        float m_targetingRecoilMultiplier; // 0xf0
        float m_crouchingRecoilMultiplier; // 0xf4
        float m_fireInAirRecoilMultiplier; // 0xf8
        float m_reloadAddAmmoTime; // 0xfc
        float m_reloadTime; // 0x100
        float m_animationReloadTime; // 0x104
        float m_ammoConsumptionPerShot; // 0x108
        bool m_useSingleReload; // 0x10c
        float m_reloadAddFirstAmmoStateTime; // 0x110
        float m_reloadAddFirstAmmoTime; // 0x114
        float m_reloadAddLoopAmmoTime; // 0x118
        float m_animationReloadAddFirstAmmoTime; // 0x11c
        float m_animationReloadAddLoopAmmoTime; // 0x120
        float m_refireTime; // 0x124
        float m_targetingRefireTime; // 0x128
        float m_weakAreaDamageMultiplier; // 0x12c
        float m_weakAreaDamageMultiplierEnemy; // 0x130
        float m_penetration; // 0x134
        float m_directDamage; // 0x138
        float m_targetingDirectDamage; // 0x13c
        float m_directDamagePlayerMultiplier; // 0x140
        float m_directDamageEnemyMultiplier; // 0x144
        float m_directDamageImpulse; // 0x148
        float m_stabilityDamageForDeathRagdoll; // 0x14c
        float m_stabilityDamage; // 0x150
        float m_radialDamage; // 0x154
        float m_radialDamagePlayerMultiplier; // 0x158
        float m_radialDamageEnemyMultiplier; // 0x15c
        float m_radialDamageImpulse; // 0x160
        bool m_damageIgnoreShield; // 0x164
        float m_radialDamageFalloffStartRange; // 0x168
        float m_radialDamageFalloffMultiplier; // 0x16c
        float m_radialDamageRadius; // 0x170
        float m_radialDamageCapsuleRadius; // 0x174
        float m_radialDamageCapsuleHalfHeight; // 0x178
        float m_directDamageFalloffStartRange; // 0x17c
        float m_directDamageFalloffEndRange; // 0x180
        float m_directDamageFalloffMultiplier; // 0x184
        float m_damageSelfMultiplier; // 0x188
        enum class EYDamageApplication m_damageApplication; // 0x18c
        bool m_useDamageCauserForImpactDirection; // 0x18d
        float m_spinDownTimeRate; // 0x190
        bool m_canSpinUpDuringInventory; // 0x194
        float m_projectileAdjustDirectionImpactRange; // 0x198
        float m_weaponSpreadDecreaseSinceLastShotTime; // 0x19c
        float m_easeOutMagnitudeRecoilStart; // 0x1a0
        class UCurveFloat* m_recoilCurve; // 0x1a8
        class UCurveFloat* m_targetingRecoil; // 0x1b0
        class UCurveFloat* m_overridenEaseInRecoil; // 0x1b8
        class UCurveFloat* m_easeOutRecoil; // 0x1c0
        class UCurveFloat* m_cameraRecoilCompensationSpeedMultiplierCurve; // 0x1c8
        class UCurveVector* m_automaticFireWeaponRecoilVector; // 0x1d0
        float m_automaticFireRecoilResetTime; // 0x1d8
        bool m_burstFireUseCompensationStartTime; // 0x1dc
        float m_cameraAffectMultiplierX; // 0x1e0
        float m_cameraAffectMultiplierY; // 0x1e4
        float m_crossHairAffectMultiplierX; // 0x1e8
        float m_crossHairAffectMultiplierY; // 0x1ec
        float m_cameraAffectMultiplierWhileTargetingX; // 0x1f0
        float m_cameraAffectMultiplierWhileTargetingY; // 0x1f4
        float m_crossHairAffectMultiplierWhileTargetingX; // 0x1f8
        float m_crossHairAffectMultiplierWhileTargetingY; // 0x1fc
        bool m_shootAtSocketWhenTargeting; // 0x200
        bool m_rotateReticleViaSocket; // 0x201
        struct FName m_socketNameShootAtSocketWhenTargeting; // 0x204
        float m_burstInterval; // 0x20c
        int32_t m_amountOfBurst; // 0x210
        int32_t m_amountOfImmediateFires; // 0x214
        bool m_immediateFireIncreasesSpread; // 0x218
        float m_movementSpeedMultiplier; // 0x21c
        struct TArray<struct FYGameplayAttributeModifier> m_attributeModifier; // 0x220
        float m_firingMovementSpeedMultiplier; // 0x230
        float m_firingTurnSpeedMultiplier; // 0x234
        float m_targetingTurnSpeedMultiplier; // 0x238
        float m_weaponFOVInterpSpeed; // 0x23c
        float m_weaponFOVStartInterp; // 0x240
        float m_weaponTargetingInterp; // 0x244
        int32_t m_startAmmo; // 0x248
        int32_t m_ammoInClip; // 0x24c
        bool m_haveInfiniteAmmo; // 0x250
        struct FDataTableRowHandle m_ammoTypeToUse; // 0x258
        int32_t m_useCooldownTime; // 0x268
        int32_t m_useActionTime; // 0x26c
        int32_t m_healAmount; // 0x270
        enum class EYWeaponSlotType m_slotType; // 0x274
        bool m_canUse; // 0x275
        bool m_useRandomSeed; // 0x276
        bool m_isLooping; // 0x277
        bool m_canEverRefire; // 0x278
        bool m_stopSpinupOnInputRelease; // 0x279
        bool m_spinupUntilRelease; // 0x27a
        bool m_instantlyFireOnTimeThresholdReached; // 0x27b
        bool m_fireSpinupTimeRegadlessOfDuration; // 0x27c
        bool m_clearAllTimeWhenSpinupDone; // 0x27d
        bool m_spinupForUse; // 0x27e
        bool m_alwaysStopAnimationSpinup; // 0x27f
        bool m_stopAnimationOnSpinupInterupt; // 0x280
        bool m_spinUpStopAfterFullDuration; // 0x281
        bool m_useFireWeaponDelayAtCachedTransform; // 0x282
        bool m_ignoreDamagePrevention; // 0x283
        bool m_canDamageSelf; // 0x284
        bool m_fireAtRelease; // 0x285
        struct FGameplayTagContainer m_objectTypesAllowedToDamage; // 0x288
        float m_requiredInputTimeForHeavyAttack; // 0x2a8
        float m_lightAttackRecoveryTime; // 0x2ac
        float m_lowStaminaLightAttackRecoveryTime; // 0x2b0
        float m_lightAttackStaminaConsumption; // 0x2b4
        float m_heavyAttackRecoveryTime; // 0x2b8
        float m_lowStaminaHeavyAttackRecoveryTime; // 0x2bc
        float m_heavyAttackStaminaConsumption; // 0x2c0
        struct FName m_socketLocation; // 0x2c4
        struct FDataTableRowHandle m_lightAttackWeaponTransportHandle; // 0x2d0
        struct FDataTableRowHandle m_lightAttackLowStaminaTransportHandle; // 0x2e0
        struct FDataTableRowHandle m_heavyAttackWeaponTransportHandle; // 0x2f0
        struct FDataTableRowHandle m_heavyAttackLowStaminaTransportHandle; // 0x300
        float m_spinupTime; // 0x310
        struct TArray<struct FDataTableRowHandle> m_scannableRowHandles; // 0x318

    };

    struct FYFireTransportEntry //ScriptStruct Prospect.YFireTransportEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid m_shotGuid; // 0x0
        struct FVector_NetQuantize m_location; // 0x10
        struct FVector_NetQuantizeNormal m_direction; // 0x1c

    };

    struct FYWeaponAnimations //ScriptStruct Prospect.YWeaponAnimations
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYWeaponPlayState, struct FYWeaponAnimationStaticData> m_weaponAnimationAssociation; // 0x0

    };

    struct FYWeaponAnimationStaticData //ScriptStruct Prospect.YWeaponAnimationStaticData
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<class UAnimMontage*> m_weaponAnimationVariations; // 0x0
        struct TArray<class UAnimMontage*> m_playerAnimationThirdPersonVariations; // 0x10
        struct TArray<class UAnimMontage*> m_playerAnimationFirstPersonVariations; // 0x20
        struct TArray<class UAnimMontage*> m_weaponThirdPersonPlayerAnimationVariations; // 0x30
        struct TArray<class UAnimMontage*> m_playerAnimationFirstPersonLowStaminaVariations; // 0x40
        struct TArray<class UAnimMontage*> m_playerAnimationThirdPersonLowStaminaVariations; // 0x50
        float m_desiredTuningPlayDuration; // 0x60
        float m_animationRateScaleOverride; // 0x64

    };

    struct FYWeaponDamageRelevantValues //ScriptStruct Prospect.YWeaponDamageRelevantValues
    {
    //Children Prop Count (Fields): 20
    public:

        int32_t m_amountOfBursts; // 0x0
        int32_t m_numBursts; // 0x4
        int32_t m_amountOfImmediateFires; // 0x8
        int32_t m_numFiresPerCompleteBurst; // 0xc
        int32_t m_numImpactsPerImmediateFire; // 0x10
        int32_t m_numImpactsPerCompleteBurst; // 0x14
        float m_directDamage; // 0x18
        float m_radialDamage; // 0x1c
        float m_totalDamagePerImpact; // 0x20
        float m_totalDamageCompleteBurst; // 0x24
        float m_spinupTime; // 0x28
        float m_durationBurst; // 0x2c
        float m_burstInterval; // 0x30
        float m_durationOfCompleteBurstIncludingRefireTime; // 0x34
        float m_refireTime; // 0x38
        float m_numCompleteBurstWithRefireTimePerSecond; // 0x3c
        float m_damagePerSecond; // 0x40
        float m_numBurstsIncludeRefireTimePerMinute; // 0x44
        float m_roundsPerMinute; // 0x48
        float m_totalDamagePerFire; // 0x4c

    };

    struct FYWeaponTransportDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YWeaponTransportDataTableRow
    {
    //Children Prop Count (Fields): 20
    public:

        struct FName m_muzzleSocketName; // 0x10
        struct FDataTableRowHandle m_impactDataTableRow; // 0x18
        bool m_clientSideProjectile; // 0x28
        struct FYWeaponTransportHitscanData m_hitscanData; // 0x2c
        struct FYWeaponTransportProjectileData m_projectileData; // 0x40
        struct FYWeaponTransportPhysicActorData m_pysicActorData; // 0x90
        struct FYWeaponTransportSphereData m_sphereData; // 0xa0
        struct FYWeaponTransportCapsuleData m_capsuleData; // 0xb0
        struct TArray<struct FYWeaponLocationOffsetData> m_startLocationOffset; // 0xc8
        struct FDataTableRowHandle m_defaultFXCategoryDataTableRow; // 0xd8
        struct FVector m_shootingOffsetDefaultDirection; // 0xe8
        float m_scaleOffsetDirection; // 0xf4
        bool m_shouldHaveFxCategory; // 0xf8
        bool m_useShootingOffsetRandomization; // 0xf9
        bool m_shootTroughDynamicObjects; // 0xfa
        bool m_produceImpactRegadlessOfHit; // 0xfb
        enum class EYWeaponTransportType m_transportType; // 0xfc
        enum class ECollisionChannel m_transportCollisionTraceChannel; // 0xfd
        bool m_supportsObjectPooling; // 0xfe
        struct FDataTableRowHandle m_damageInfoApplyRowHandle; // 0x100

    };

    struct FYWeaponLocationOffsetData //ScriptStruct Prospect.YWeaponLocationOffsetData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector m_offsetLocaton; // 0x0
        struct FVector m_overrideDirectionMovement; // 0xc

    };

    struct FYWeaponTransportCapsuleData //ScriptStruct Prospect.YWeaponTransportCapsuleData
    {
    //Children Prop Count (Fields): 5
    public:

        float m_radius; // 0x0
        float m_halfHeight; // 0x4
        bool m_skipTraceToVerifyHit; // 0x8
        float m_minDot2DThreshold; // 0xc
        bool m_verifyLineOfSight; // 0x10

    };

    struct FYWeaponTransportSphereData //ScriptStruct Prospect.YWeaponTransportSphereData
    {
    //Children Prop Count (Fields): 4
    public:

        float m_radius; // 0x0
        bool m_skipTraceToVerifyHit; // 0x4
        float m_minDot2DThreshold; // 0x8
        bool m_verifyLineOfSight; // 0xc

    };

    struct FYWeaponTransportPhysicActorData //ScriptStruct Prospect.YWeaponTransportPhysicActorData
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* m_actorClass; // 0x0
        float m_initialActorSpeed; // 0x8
        float m_initialActorOffset; // 0xc

    };

    struct FYWeaponTransportProjectileData //ScriptStruct Prospect.YWeaponTransportProjectileData
    {
    //Children Prop Count (Fields): 19
    public:

        class AYProjectile* m_projectileClass; // 0x0
        float m_gravityScale; // 0x8
        float m_bounciniess; // 0xc
        bool m_shouldBeArmed; // 0x10
        float m_armingTime; // 0x14
        float m_friction; // 0x18
        bool m_returnPhysMaterialOnMove; // 0x1c
        float m_initialProjectileSpeed; // 0x20
        float m_acceleration; // 0x24
        float m_accelerationApplyDelayTime; // 0x28
        float m_applyAccelerationAdditionalMaxSpeed; // 0x2c
        float m_homingAccelerationMagnitude; // 0x30
        float m_maxSpeed; // 0x34
        bool m_bounce; // 0x38
        float m_collisionRadius; // 0x3c
        float m_maxAllowedDotProductToTurnWhenHoming; // 0x40
        float m_projectileLifetime; // 0x44
        float m_particleAdditionalLifetimeOnImpact; // 0x48
        bool m_playClientSideProjectile; // 0x4c

    };

    struct FYWeaponTransportHitscanData //ScriptStruct Prospect.YWeaponTransportHitscanData
    {
    //Children Prop Count (Fields): 8
    public:

        float m_maxTraceDistance; // 0x0
        bool m_traceGroundWhenMaxDistanceHit; // 0x4
        bool m_traceGround; // 0x5
        bool m_traceComplexCollision; // 0x6
        enum class EYTraceShapeType m_traceType; // 0x7
        float m_capsuleRadius; // 0x8
        float m_capsuleHalfHeight; // 0xc
        float m_collisionShapeMultiplierForGroundTrace; // 0x10

    };

    struct FYMulticastHitscanReplicationData //ScriptStruct Prospect.YMulticastHitscanReplicationData
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FYHitscanTraceEntry> m_traceEntries; // 0x0
        struct FDataTableRowHandle m_transportDataTableRow; // 0x10
        struct FDataTableRowHandle m_impactDataTableRow; // 0x20
        struct FDataTableRowHandle m_damageOriginTableRow; // 0x30
        class AActor* m_owner; // 0x40

    };

    struct FYTransportRuntimeInitializationData //ScriptStruct Prospect.YTransportRuntimeInitializationData
    {
    //Children Prop Count (Fields): 22
    public:

        struct FYDamageOriginInfo m_damageOriginInfo; // 0x0
        struct FVector m_startLocation; // 0x28
        struct FVector m_direction; // 0x34
        struct FDataTableRowHandle m_transportDataTableRow; // 0x40
        struct FDataTableRowHandle m_impactDataTableRow; // 0x50
        struct FDataTableRowHandle m_fxCategoryDataTableRow; // 0x60
        struct FDataTableRowHandle m_dataTableRowHandleContext; // 0x70
        class AActor* m_owner; // 0x80
        int32_t m_transportHandle; // 0x88
        float m_overrideGravity; // 0x8c
        float m_overrideLaunchVelocity; // 0x90
        class USceneComponent* m_homingToComponet; // 0x98
        enum class ECollisionChannel m_collisionChannelTrace; // 0xa0
        struct TArray<class AActor*> m_actorsToIgnore; // 0xa8
        bool m_replicateSkipAutonomous; // 0xb8
        bool m_skipFindClosestBoneCheck; // 0xb9
        bool m_clientSideProjectile; // 0xba
        bool m_isTargeting; // 0xbb
        bool m_normalizeDirectionVector; // 0xbc
        int32_t m_randomSeed; // 0xc0
        struct FVector m_visualOriginTrailLocation; // 0xc4
        struct FGuid m_shotGuid; // 0xd0

    };

    struct FYWeaponRarityUpgradesModCollectionEntry //ScriptStruct Prospect.YWeaponRarityUpgradesModCollectionEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FDataTableRowHandle> m_unlockedMods; // 0x0
        struct TArray<struct FDataTableRowHandle> m_potentialUpgrades; // 0x10

    };

    struct FYWeaponAttachmentEntry //ScriptStruct Prospect.YWeaponAttachmentEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<USkeletalMesh> m_skeletalMesh; // 0x0
        struct FName m_socketName; // 0x28

    };

    struct FYWeaponCompleteAnimationRuntimeDataSet //ScriptStruct Prospect.YWeaponCompleteAnimationRuntimeDataSet
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EYWeaponPlayState, struct FYWeaponAnimationPlayRuntimeData> m_runtimeData; // 0x0

    };

    struct FYWeaponAnimationPlayRuntimeData //ScriptStruct Prospect.YWeaponAnimationPlayRuntimeData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FYWeaponAnimationStaticData m_staticData; // 0x0
        struct TArray<class UAnimMontage*> m_weaponAnimationsStack; // 0x68
        struct TArray<class UAnimMontage*> m_playerFirstPersonStack; // 0x78
        struct TArray<class UAnimMontage*> m_thirdPersonStack; // 0x88
        struct TArray<class UAnimMontage*> m_thirdPersonWeaponStack; // 0x98

    };

    struct FYWeaponAnimationData //ScriptStruct Prospect.YWeaponAnimationData
    {
    //Children Prop Count (Fields): 6
    public:

        class UAnimMontage* m_weaponAnimation; // 0x0
        class UAnimMontage* m_weaponAnimationThirdPerson; // 0x8
        class UAnimMontage* m_playerAnimationFirstPerson; // 0x10
        class UAnimMontage* m_playerAnimationThirdPerson; // 0x18
        float m_desiredTuningPlayDuration; // 0x20
        float m_animationRateScaleOverride; // 0x24

    };

    struct FYWeaponInitializationData //ScriptStruct Prospect.YWeaponInitializationData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FYInventoryItem> m_inventoryWeapons; // 0x0
        int32_t m_activeWeaponInstance; // 0x10

    };

    struct FYWeaponVanityRow : FYVanityItemRowBase //ScriptStruct Prospect.YWeaponVanityRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<struct FName, struct TSoftObjectPtr<UMaterialInterface>> m_defaultAttachmentMaterials; // 0x508
        struct TArray<struct FYWeaponVanityMeshAttachment> m_overrideVanityMeshAttachments; // 0x558

    };

    struct FYChatWindowStyles //ScriptStruct Prospect.YChatWindowStyles
    {
    //Children Prop Count (Fields): 4
    public:

        struct FButtonStyle Buttonlook; // 0x0
        struct FSlateBrush ChatBackground; // 0x278
        struct FSlateBrush InputBackground; // 0x300
        struct FSlateBrush ChatUserMenuBackground; // 0x388

    };

    struct FYBaseWheelEntry : FTableRowBase //ScriptStruct Prospect.YBaseWheelEntry
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_displayName; // 0x8
        enum class EYWheelType m_wheelItemType; // 0x28
        struct FDataTableRowHandle m_uniqueRowHandleReference; // 0x30
        struct TSoftObjectPtr<UTexture2D> m_iconWheelTexture; // 0x40

    };

    struct FYTotalGainedCurrencyData //ScriptStruct Prospect.YTotalGainedCurrencyData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t m_startAmount; // 0x0
        enum class EYCurrencyType m_currencyType; // 0x4
        int32_t m_endAmount; // 0x8
        struct TArray<struct FYRewardEntry> m_perEntryReward; // 0x10

    };

    struct FYDamageNumberEntry //ScriptStruct Prospect.YDamageNumberEntry
    {
    //Children Prop Count (Fields): 1
    public:

        class UYWidget_DamageNumber* m_widget; // 0x0

    };

    struct FYPopupWidgetRow : FYDataTableRowBase //ScriptStruct Prospect.YPopupWidgetRow
    {
    //Children Prop Count (Fields): 3
    public:

        struct FSoftClassProperty m_associatedWidgetBP; // 0x10
        struct FString m_startDateTime; // 0x38
        struct FString m_endDateTime; // 0x48

    };

    struct FYFpsData //ScriptStruct Prospect.YFpsData
    {
    //Children Prop Count (Fields): 1
    public:

        float m_fps; // 0x0

    };

    struct FYCarrouselData //ScriptStruct Prospect.YCarrouselData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UTexture2D> m_texture; // 0x0
        struct FText m_headline; // 0x28

    };

    struct FYUIItemCachedData //ScriptStruct Prospect.YUIItemCachedData
    {
    //Children Prop Count (Fields): 2
    public:

        class UYWidget_ItemContainer* m_itemContainerWidget; // 0x0
        int32_t m_previousAmount; // 0x8

    };

    struct FLanguageSelectionData //ScriptStruct Prospect.LanguageSelectionData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString m_cultureAberration; // 0x0
        struct FText m_cultureLabel; // 0x10

    };

    struct FYUnlocksPopupUiData //ScriptStruct Prospect.YUnlocksPopupUiData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString factionId; // 0x0
        struct FText factionName; // 0x10
        int32_t NewLevel; // 0x30
        bool unlockedShopItemsAvailable; // 0x34
        bool unlockedContractsAvailable; // 0x35

    };

    struct FYVanityItemSelectionInitializationData //ScriptStruct Prospect.YVanityItemSelectionInitializationData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FYItemVisualAcquisitionData m_acqusitionData; // 0x0
        struct FDataTableRowHandle m_associatedHandle; // 0x18
        bool m_isOwned; // 0x28

    };

    struct FYAvailableVanity //ScriptStruct Prospect.YAvailableVanity
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> m_vanityItemIds; // 0x0

    };

    struct FYWidgetPoolData //ScriptStruct Prospect.YWidgetPoolData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FYWidgetPoolItem> PoolItems; // 0x0

    };

    struct FYWidgetPoolItem //ScriptStruct Prospect.YWidgetPoolItem
    {
    //Children Prop Count (Fields): 1
    public:

        class UUserWidget* Widget; // 0x0

    };

    struct FYAbilityUIData //ScriptStruct Prospect.YAbilityUIData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FYInventoryItem m_inventoryItem; // 0x0
        int32_t m_chargeAmount; // 0xd8
        float m_timeRatio; // 0xdc
        float m_remainingTime; // 0xe0
        enum class EYAbilityState m_abilityState; // 0xe4

    };

    struct FYOptionsMenuData //ScriptStruct Prospect.YOptionsMenuData
    {
    //Children Prop Count (Fields): 1
    public:

        class UYNavigationCommand* m_commandClass; // 0x0

    };

    struct FYWidgetUpdateInitializeData //ScriptStruct Prospect.YWidgetUpdateInitializeData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t m_zOrder; // 0x0
        class AActor* m_actorToInitializeFor; // 0x8
        class UUserWidget* m_widgetClass; // 0x10

    };

    struct FYSettingEntryDescriptionDataTableRow : FYDataTableRowBase //ScriptStruct Prospect.YSettingEntryDescriptionDataTableRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText m_description; // 0x10
        struct TSoftObjectPtr<UTexture2D> m_image; // 0x30

    };

    struct FCompositeFont //ScriptStruct SlateCore.CompositeFont
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTypeface DefaultTypeface; // 0x0
        struct FCompositeFallbackFont FallbackTypeface; // 0x10
        struct TArray<struct FCompositeSubFont> SubTypefaces; // 0x28

    };

    struct FCompositeFallbackFont //ScriptStruct SlateCore.CompositeFallbackFont
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTypeface Typeface; // 0x0
        float ScalingFactor; // 0x10

    };

    struct FTypeface //ScriptStruct SlateCore.Typeface
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FTypefaceEntry> Fonts; // 0x0

    };

    struct FTypefaceEntry //ScriptStruct SlateCore.TypefaceEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        struct FFontData Font; // 0x8

    };

    struct FFontData //ScriptStruct SlateCore.FontData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString FontFilename; // 0x0
        enum class EFontHinting Hinting; // 0x10
        enum class EFontLoadingPolicy LoadingPolicy; // 0x11
        int32_t SubFaceIndex; // 0x14
        class UObject* FontFaceAsset; // 0x18

    };

    struct FCompositeSubFont : FCompositeFallbackFont //ScriptStruct SlateCore.CompositeSubFont
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FInt32Range> CharacterRanges; // 0x18
        struct FString Cultures; // 0x28

    };

    struct FCaptureLostEvent //ScriptStruct SlateCore.CaptureLostEvent
    {
    public:


    };

    struct FWindowStyle : FSlateWidgetStyle //ScriptStruct SlateCore.WindowStyle
    {
    //Children Prop Count (Fields): 14
    public:

        struct FButtonStyle MinimizeButtonStyle; // 0x8
        struct FButtonStyle MaximizeButtonStyle; // 0x280
        struct FButtonStyle RestoreButtonStyle; // 0x4f8
        struct FButtonStyle CloseButtonStyle; // 0x770
        struct FTextBlockStyle TitleTextStyle; // 0x9e8
        struct FSlateBrush ActiveTitleBrush; // 0xc58
        struct FSlateBrush InactiveTitleBrush; // 0xce0
        struct FSlateBrush FlashTitleBrush; // 0xd68
        struct FSlateColor BackgroundColor; // 0xdf0
        struct FSlateBrush OutlineBrush; // 0xe18
        struct FSlateColor OutlineColor; // 0xea0
        struct FSlateBrush BorderBrush; // 0xec8
        struct FSlateBrush BackgroundBrush; // 0xf50
        struct FSlateBrush ChildBackgroundBrush; // 0xfd8

    };

    struct FScrollBorderStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ScrollBorderStyle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSlateBrush TopShadowBrush; // 0x8
        struct FSlateBrush BottomShadowBrush; // 0x90

    };

    struct FScrollBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ScrollBoxStyle
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSlateBrush TopShadowBrush; // 0x8
        struct FSlateBrush BottomShadowBrush; // 0x90
        struct FSlateBrush LeftShadowBrush; // 0x118
        struct FSlateBrush RightShadowBrush; // 0x1a0

    };

    struct FDockTabStyle : FSlateWidgetStyle //ScriptStruct SlateCore.DockTabStyle
    {
    //Children Prop Count (Fields): 12
    public:

        struct FButtonStyle CloseButtonStyle; // 0x8
        struct FSlateBrush NormalBrush; // 0x280
        struct FSlateBrush ActiveBrush; // 0x308
        struct FSlateBrush ColorOverlayTabBrush; // 0x390
        struct FSlateBrush ColorOverlayIconBrush; // 0x418
        struct FSlateBrush ForegroundBrush; // 0x4a0
        struct FSlateBrush HoveredBrush; // 0x528
        struct FSlateBrush ContentAreaBrush; // 0x5b0
        struct FSlateBrush TabWellBrush; // 0x638
        struct FMargin TabPadding; // 0x6c0
        float OverlapWidth; // 0x6d0
        struct FSlateColor FlashColor; // 0x6d8

    };

    struct FHeaderRowStyle : FSlateWidgetStyle //ScriptStruct SlateCore.HeaderRowStyle
    {
    //Children Prop Count (Fields): 5
    public:

        struct FTableColumnHeaderStyle ColumnStyle; // 0x8
        struct FTableColumnHeaderStyle LastColumnStyle; // 0x4d8
        struct FSplitterStyle ColumnSplitterStyle; // 0x9a8
        struct FSlateBrush BackgroundBrush; // 0xac0
        struct FSlateColor ForegroundColor; // 0xb48

    };

    struct FSplitterStyle : FSlateWidgetStyle //ScriptStruct SlateCore.SplitterStyle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSlateBrush HandleNormalBrush; // 0x8
        struct FSlateBrush HandleHighlightBrush; // 0x90

    };

    struct FTableColumnHeaderStyle : FSlateWidgetStyle //ScriptStruct SlateCore.TableColumnHeaderStyle
    {
    //Children Prop Count (Fields): 9
    public:

        struct FSlateBrush SortPrimaryAscendingImage; // 0x8
        struct FSlateBrush SortPrimaryDescendingImage; // 0x90
        struct FSlateBrush SortSecondaryAscendingImage; // 0x118
        struct FSlateBrush SortSecondaryDescendingImage; // 0x1a0
        struct FSlateBrush NormalBrush; // 0x228
        struct FSlateBrush HoveredBrush; // 0x2b0
        struct FSlateBrush MenuDropdownImage; // 0x338
        struct FSlateBrush MenuDropdownNormalBorderBrush; // 0x3c0
        struct FSlateBrush MenuDropdownHoveredBorderBrush; // 0x448

    };

    struct FInlineTextImageStyle : FSlateWidgetStyle //ScriptStruct SlateCore.InlineTextImageStyle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSlateBrush Image; // 0x8
        int16_t Baseline; // 0x90

    };

    struct FVolumeControlStyle : FSlateWidgetStyle //ScriptStruct SlateCore.VolumeControlStyle
    {
    //Children Prop Count (Fields): 6
    public:

        struct FSliderStyle SliderStyle; // 0x8
        struct FSlateBrush HighVolumeImage; // 0x348
        struct FSlateBrush MidVolumeImage; // 0x3d0
        struct FSlateBrush LowVolumeImage; // 0x458
        struct FSlateBrush NoVolumeImage; // 0x4e0
        struct FSlateBrush MutedImage; // 0x568

    };

    struct FSliderStyle : FSlateWidgetStyle //ScriptStruct SlateCore.SliderStyle
    {
    //Children Prop Count (Fields): 7
    public:

        struct FSlateBrush NormalBarImage; // 0x8
        struct FSlateBrush HoveredBarImage; // 0x90
        struct FSlateBrush DisabledBarImage; // 0x118
        struct FSlateBrush NormalThumbImage; // 0x1a0
        struct FSlateBrush HoveredThumbImage; // 0x228
        struct FSlateBrush DisabledThumbImage; // 0x2b0
        float BarThickness; // 0x338

    };

    struct FSearchBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.SearchBoxStyle
    {
    //Children Prop Count (Fields): 8
    public:

        struct FEditableTextBoxStyle TextBoxStyle; // 0x8
        struct FSlateFontInfo ActiveFontInfo; // 0x800
        struct FSlateBrush UpArrowImage; // 0x858
        struct FSlateBrush DownArrowImage; // 0x8e0
        struct FSlateBrush GlassImage; // 0x968
        struct FSlateBrush ClearImage; // 0x9f0
        struct FMargin ImagePadding; // 0xa78
        bool bLeftAlignButtons; // 0xa88

    };

    struct FExpandableAreaStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ExpandableAreaStyle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FSlateBrush CollapsedImage; // 0x8
        struct FSlateBrush ExpandedImage; // 0x90
        float RolloutAnimationSeconds; // 0x118

    };

    struct FProgressBarStyle : FSlateWidgetStyle //ScriptStruct SlateCore.ProgressBarStyle
    {
    //Children Prop Count (Fields): 3
    public:

        struct FSlateBrush BackgroundImage; // 0x8
        struct FSlateBrush FillImage; // 0x90
        struct FSlateBrush MarqueeImage; // 0x118

    };

    struct FInlineEditableTextBlockStyle : FSlateWidgetStyle //ScriptStruct SlateCore.InlineEditableTextBlockStyle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FEditableTextBoxStyle EditableTextBoxStyle; // 0x8
        struct FTextBlockStyle TextStyle; // 0x800

    };

    struct FCheckBoxStyle : FSlateWidgetStyle //ScriptStruct SlateCore.CheckBoxStyle
    {
    //Children Prop Count (Fields): 16
    public:

        enum class ESlateCheckBoxType CheckBoxType; // 0x8
        struct FSlateBrush UncheckedImage; // 0x10
        struct FSlateBrush UncheckedHoveredImage; // 0x98
        struct FSlateBrush UncheckedPressedImage; // 0x120
        struct FSlateBrush CheckedImage; // 0x1a8
        struct FSlateBrush CheckedHoveredImage; // 0x230
        struct FSlateBrush CheckedPressedImage; // 0x2b8
        struct FSlateBrush UndeterminedImage; // 0x340
        struct FSlateBrush UndeterminedHoveredImage; // 0x3c8
        struct FSlateBrush UndeterminedPressedImage; // 0x450
        struct FMargin Padding; // 0x4d8
        struct FSlateColor ForegroundColor; // 0x4e8
        struct FSlateColor BorderBackgroundColor; // 0x510
        struct FSlateSound CheckedSlateSound; // 0x538
        struct FSlateSound UncheckedSlateSound; // 0x550
        struct FSlateSound HoveredSlateSound; // 0x568

    };

    struct FCustomizedToolMenu //ScriptStruct Slate.CustomizedToolMenu
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x0
        struct TMap<struct FName, struct FCustomizedToolMenuEntry> entries; // 0x8
        struct TMap<struct FName, struct FCustomizedToolMenuSection> Sections; // 0x58
        struct TMap<struct FName, struct FCustomizedToolMenuNameArray> EntryOrder; // 0xa8
        struct TArray<struct FName> SectionOrder; // 0xf8

    };

    struct FCustomizedToolMenuNameArray //ScriptStruct Slate.CustomizedToolMenuNameArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> Names; // 0x0

    };

    struct FCustomizedToolMenuSection //ScriptStruct Slate.CustomizedToolMenuSection
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ECustomizedToolMenuVisibility Visibility; // 0x0

    };

    struct FCustomizedToolMenuEntry //ScriptStruct Slate.CustomizedToolMenuEntry
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ECustomizedToolMenuVisibility Visibility; // 0x0

    };

    struct FImageWriteOptions //ScriptStruct ImageWriteQueue.ImageWriteOptions
    {
    //Children Prop Count (Fields): 5
    public:

        enum class EDesiredImageFormat Format; // 0x0
        struct FDelegate OnComplete; // 0x4
        int32_t CompressionQuality; // 0x14
        bool bOverwriteFile; // 0x18
        bool bAsync; // 0x19

    };

    struct FMaterialQualityOverrides //ScriptStruct MaterialShaderQualitySettings.MaterialQualityOverrides
    {
    //Children Prop Count (Fields): 9
    public:

        bool bDiscardQualityDuringCook; // 0x0
        bool bEnableOverride; // 0x1
        bool bForceFullyRough; // 0x2
        bool bForceNonMetal; // 0x3
        bool bForceDisableLMDirectionality; // 0x4
        bool bForceLQReflections; // 0x5
        bool bForceDisablePreintegratedGF; // 0x6
        bool bDisableMaterialNormalCalculation; // 0x7
        enum class EMobileShadowQuality MobileShadowQuality; // 0x8

    };

    struct FEyeTrackerStereoGazeData //ScriptStruct EyeTracker.EyeTrackerStereoGazeData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector LeftEyeOrigin; // 0x0
        struct FVector LeftEyeDirection; // 0xc
        struct FVector RightEyeOrigin; // 0x18
        struct FVector RightEyeDirection; // 0x24
        struct FVector FixationPoint; // 0x30
        float ConfidenceValue; // 0x3c

    };

    struct FEyeTrackerGazeData //ScriptStruct EyeTracker.EyeTrackerGazeData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector GazeOrigin; // 0x0
        struct FVector GazeDirection; // 0xc
        struct FVector FixationPoint; // 0x18
        float ConfidenceValue; // 0x24

    };

    struct FLightPropagationVolumeSettings //ScriptStruct Renderer.LightPropagationVolumeSettings
    {
    //Children Prop Count (Fields): 28
    public:

        char bOverride_LPVIntensity; // 0x0
        char bOverride_LPVDirectionalOcclusionIntensity; // 0x0
        char bOverride_LPVDirectionalOcclusionRadius; // 0x0
        char bOverride_LPVDiffuseOcclusionExponent; // 0x0
        char bOverride_LPVSpecularOcclusionExponent; // 0x0
        char bOverride_LPVDiffuseOcclusionIntensity; // 0x0
        char bOverride_LPVSpecularOcclusionIntensity; // 0x0
        char bOverride_LPVSize; // 0x0
        char bOverride_LPVSecondaryOcclusionIntensity; // 0x1
        char bOverride_LPVSecondaryBounceIntensity; // 0x1
        char bOverride_LPVGeometryVolumeBias; // 0x1
        char bOverride_LPVVplInjectionBias; // 0x1
        char bOverride_LPVEmissiveInjectionIntensity; // 0x1
        float LPVIntensity; // 0x4
        float LPVVplInjectionBias; // 0x8
        float LPVSize; // 0xc
        float LPVSecondaryOcclusionIntensity; // 0x10
        float LPVSecondaryBounceIntensity; // 0x14
        float LPVGeometryVolumeBias; // 0x18
        float LPVEmissiveInjectionIntensity; // 0x1c
        float LPVDirectionalOcclusionIntensity; // 0x20
        float LPVDirectionalOcclusionRadius; // 0x24
        float LPVDiffuseOcclusionExponent; // 0x28
        float LPVSpecularOcclusionExponent; // 0x2c
        float LPVDiffuseOcclusionIntensity; // 0x30
        float LPVSpecularOcclusionIntensity; // 0x34
        float LPVFadeRange; // 0x38
        float LPVDirectionalOcclusionFadeRange; // 0x3c

    };

    struct FAutoCompleteCommand //ScriptStruct EngineSettings.AutoCompleteCommand
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Command; // 0x0
        struct FString Desc; // 0x10

    };

    struct FGameModeName //ScriptStruct EngineSettings.GameModeName
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FSoftClassPath GameMode; // 0x10

    };

    struct FChaosSolverConfiguration //ScriptStruct Chaos.ChaosSolverConfiguration
    {
    //Children Prop Count (Fields): 18
    public:

        int32_t Iterations; // 0x0
        int32_t CollisionPairIterations; // 0x4
        int32_t PushOutIterations; // 0x8
        int32_t CollisionPushOutPairIterations; // 0xc
        float CollisionMarginFraction; // 0x10
        float CollisionMarginMax; // 0x14
        float CollisionCullDistance; // 0x18
        int32_t JointPairIterations; // 0x1c
        int32_t JointPushOutPairIterations; // 0x20
        float ClusterConnectionFactor; // 0x24
        enum class EClusterUnionMethod ClusterUnionConnectionType; // 0x28
        bool bGenerateCollisionData; // 0x29
        struct FSolverCollisionFilterSettings CollisionFilterSettings; // 0x2c
        bool bGenerateBreakData; // 0x3c
        struct FSolverBreakingFilterSettings BreakingFilterSettings; // 0x40
        bool bGenerateTrailingData; // 0x50
        struct FSolverTrailingFilterSettings TrailingFilterSettings; // 0x54
        bool bGenerateContactGraph; // 0x64

    };

    struct FSolverTrailingFilterSettings //ScriptStruct Chaos.SolverTrailingFilterSettings
    {
    //Children Prop Count (Fields): 4
    public:

        bool FilterEnabled; // 0x0
        float MinMass; // 0x4
        float MinSpeed; // 0x8
        float MinVolume; // 0xc

    };

    struct FSolverBreakingFilterSettings //ScriptStruct Chaos.SolverBreakingFilterSettings
    {
    //Children Prop Count (Fields): 4
    public:

        bool FilterEnabled; // 0x0
        float MinMass; // 0x4
        float MinSpeed; // 0x8
        float MinVolume; // 0xc

    };

    struct FSolverCollisionFilterSettings //ScriptStruct Chaos.SolverCollisionFilterSettings
    {
    //Children Prop Count (Fields): 4
    public:

        bool FilterEnabled; // 0x0
        float MinMass; // 0x4
        float MinSpeed; // 0x8
        float MinImpulse; // 0xc

    };

    struct FRecordedTransformTrack //ScriptStruct Chaos.RecordedTransformTrack
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRecordedFrame> Records; // 0x0

    };

    struct FRecordedFrame //ScriptStruct Chaos.RecordedFrame
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FTransform> Transforms; // 0x0
        struct TArray<int32_t> TransformIndices; // 0x10
        struct TArray<int32_t> PreviousTransformIndices; // 0x20
        struct TArray<bool> DisabledFlags; // 0x30
        struct TArray<struct FSolverCollisionData> Collisions; // 0x40
        struct TArray<struct FSolverBreakingData> Breakings; // 0x50
        struct TSet<struct FSolverTrailingData> Trailings; // 0x60
        float Timestamp; // 0xb0

    };

    struct FSolverTrailingData //ScriptStruct Chaos.SolverTrailingData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Location; // 0x0
        struct FVector Velocity; // 0xc
        struct FVector AngularVelocity; // 0x18
        float Mass; // 0x24
        int32_t ParticleIndex; // 0x28
        int32_t ParticleIndexMesh; // 0x2c

    };

    struct FSolverBreakingData //ScriptStruct Chaos.SolverBreakingData
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Location; // 0x0
        struct FVector Velocity; // 0xc
        struct FVector AngularVelocity; // 0x18
        float Mass; // 0x24
        int32_t ParticleIndex; // 0x28
        int32_t ParticleIndexMesh; // 0x2c

    };

    struct FSolverCollisionData //ScriptStruct Chaos.SolverCollisionData
    {
    //Children Prop Count (Fields): 13
    public:

        struct FVector Location; // 0x0
        struct FVector AccumulatedImpulse; // 0xc
        struct FVector Normal; // 0x18
        struct FVector Velocity1; // 0x24
        struct FVector Velocity2; // 0x30
        struct FVector AngularVelocity1; // 0x3c
        struct FVector AngularVelocity2; // 0x48
        float Mass1; // 0x54
        float Mass2; // 0x58
        int32_t ParticleIndex; // 0x5c
        int32_t LevelsetIndex; // 0x60
        int32_t ParticleIndexMesh; // 0x64
        int32_t LevelsetIndexMesh; // 0x68

    };

    struct FMRMeshConfiguration //ScriptStruct MRMesh.MRMeshConfiguration
    {
    public:


    };

    struct FTrackedGeometryGroup //ScriptStruct AugmentedReality.TrackedGeometryGroup
    {
    //Children Prop Count (Fields): 3
    public:

        class AARActor* ARActor; // 0x0
        class UARComponent* ARComponent; // 0x8
        class UARTrackedGeometry* TrackedGeometry; // 0x10

    };

    struct FARGeoAnchorUpdatePayload //ScriptStruct AugmentedReality.ARGeoAnchorUpdatePayload
    {
    //Children Prop Count (Fields): 7
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FTransform WorldTransform; // 0x20
        float Longitude; // 0x50
        float Latitude; // 0x54
        float AltitudeMeters; // 0x58
        enum class EARAltitudeSource AltitudeSource; // 0x5c
        struct FString AnchorName; // 0x60

    };

    struct FARSessionPayload //ScriptStruct AugmentedReality.ARSessionPayload
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ConfigFlags; // 0x0
        class UMaterialInterface* DefaultMeshMaterial; // 0x8
        class UMaterialInterface* DefaultWireframeMeshMaterial; // 0x10

    };

    struct FARMeshUpdatePayload //ScriptStruct AugmentedReality.ARMeshUpdatePayload
    {
    //Children Prop Count (Fields): 3
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FTransform WorldTransform; // 0x20
        enum class EARObjectClassification ObjectClassification; // 0x50

    };

    struct FARObjectUpdatePayload //ScriptStruct AugmentedReality.ARObjectUpdatePayload
    {
    //Children Prop Count (Fields): 1
    public:

        struct FTransform WorldTransform; // 0x0

    };

    struct FAREnvironmentProbeUpdatePayload //ScriptStruct AugmentedReality.AREnvironmentProbeUpdatePayload
    {
    //Children Prop Count (Fields): 1
    public:

        struct FTransform WorldTransform; // 0x0

    };

    struct FARPoseUpdatePayload //ScriptStruct AugmentedReality.ARPoseUpdatePayload
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform WorldTransform; // 0x0
        struct TArray<struct FTransform> JointTransforms; // 0x30

    };

    struct FARQRCodeUpdatePayload //ScriptStruct AugmentedReality.ARQRCodeUpdatePayload
    {
    //Children Prop Count (Fields): 4
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FTransform WorldTransform; // 0x20
        struct FVector Extents; // 0x50
        struct FString QRCode; // 0x60

    };

    struct FARImageUpdatePayload //ScriptStruct AugmentedReality.ARImageUpdatePayload
    {
    //Children Prop Count (Fields): 4
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FTransform WorldTransform; // 0x20
        class UARCandidateImage* DetectedImage; // 0x50
        struct FVector2D EstimatedSize; // 0x58

    };

    struct FARFaceUpdatePayload //ScriptStruct AugmentedReality.ARFaceUpdatePayload
    {
    //Children Prop Count (Fields): 4
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FVector LeftEyePosition; // 0x18
        struct FVector RightEyePosition; // 0x24
        struct FVector LookAtTarget; // 0x30

    };

    struct FARPointUpdatePayload //ScriptStruct AugmentedReality.ARPointUpdatePayload
    {
    public:


    };

    struct FARPlaneUpdatePayload //ScriptStruct AugmentedReality.ARPlaneUpdatePayload
    {
    //Children Prop Count (Fields): 6
    public:

        struct FARSessionPayload SessionPayload; // 0x0
        struct FTransform WorldTransform; // 0x20
        struct FVector Center; // 0x50
        struct FVector Extents; // 0x5c
        struct TArray<struct FVector> BoundaryVertices; // 0x68
        enum class EARObjectClassification ObjectClassification; // 0x78

    };

    struct FARSharedWorldReplicationState //ScriptStruct AugmentedReality.ARSharedWorldReplicationState
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t PreviewImageOffset; // 0x0
        int32_t ARWorldOffset; // 0x4

    };

    struct FARTraceResult //ScriptStruct AugmentedReality.ARTraceResult
    {
    //Children Prop Count (Fields): 4
    public:

        float DistanceFromCamera; // 0x0
        enum class EARLineTraceChannels TraceChannel; // 0x4
        struct FTransform LocalTransform; // 0x10
        class UARTrackedGeometry* TrackedGeometry; // 0x40

    };

    struct FARCameraIntrinsics //ScriptStruct AugmentedReality.ARCameraIntrinsics
    {
    //Children Prop Count (Fields): 3
    public:

        struct FIntPoint ImageResolution; // 0x0
        struct FVector2D FocalLength; // 0x8
        struct FVector2D PrincipalPoint; // 0x10

    };

    struct FARPose3D //ScriptStruct AugmentedReality.ARPose3D
    {
    //Children Prop Count (Fields): 4
    public:

        struct FARSkeletonDefinition SkeletonDefinition; // 0x0
        struct TArray<struct FTransform> JointTransforms; // 0x28
        struct TArray<bool> IsJointTracked; // 0x38
        enum class EARJointTransformSpace JointTransformSpace; // 0x48

    };

    struct FARSkeletonDefinition //ScriptStruct AugmentedReality.ARSkeletonDefinition
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t NumJoints; // 0x0
        struct TArray<struct FName> JointNames; // 0x8
        struct TArray<int32_t> ParentIndices; // 0x18

    };

    struct FARPose2D //ScriptStruct AugmentedReality.ARPose2D
    {
    //Children Prop Count (Fields): 3
    public:

        struct FARSkeletonDefinition SkeletonDefinition; // 0x0
        struct TArray<struct FVector2D> JointLocations; // 0x28
        struct TArray<bool> IsJointTracked; // 0x38

    };

    struct FARVideoFormat //ScriptStruct AugmentedReality.ARVideoFormat
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t FPS; // 0x0
        int32_t Width; // 0x4
        int32_t Height; // 0x8

    };

    struct FARSessionStatus //ScriptStruct AugmentedReality.ARSessionStatus
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString AdditionalInfo; // 0x0
        enum class EARSessionStatus Status; // 0x10

    };

    struct FXRMotionControllerData //ScriptStruct HeadMountedDisplay.XRMotionControllerData
    {
    //Children Prop Count (Fields): 14
    public:

        bool bValid; // 0x0
        struct FName DeviceName; // 0x4
        struct FGuid ApplicationInstanceID; // 0xc
        enum class EXRVisualType DeviceVisualType; // 0x1c
        enum class EControllerHand HandIndex; // 0x1d
        enum class ETrackingStatus TrackingStatus; // 0x1e
        struct FVector GripPosition; // 0x20
        struct FQuat GripRotation; // 0x30
        struct FVector AimPosition; // 0x40
        struct FQuat AimRotation; // 0x50
        struct TArray<struct FVector> HandKeyPositions; // 0x60
        struct TArray<struct FQuat> HandKeyRotations; // 0x70
        struct TArray<float> HandKeyRadii; // 0x80
        bool bIsGrasped; // 0x90

    };

    struct FXRHMDData //ScriptStruct HeadMountedDisplay.XRHMDData
    {
    //Children Prop Count (Fields): 6
    public:

        bool bValid; // 0x0
        struct FName DeviceName; // 0x4
        struct FGuid ApplicationInstanceID; // 0xc
        enum class ETrackingStatus TrackingStatus; // 0x1c
        struct FVector Position; // 0x20
        struct FQuat Rotation; // 0x30

    };

    struct FXRDeviceId //ScriptStruct HeadMountedDisplay.XRDeviceId
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName SystemName; // 0x0
        int32_t DeviceID; // 0x8

    };

    struct FXRGestureConfig //ScriptStruct HeadMountedDisplay.XRGestureConfig
    {
    //Children Prop Count (Fields): 6
    public:

        bool bTap; // 0x0
        bool bHold; // 0x1
        enum class ESpatialInputGestureAxis AxisGesture; // 0x2
        bool bNavigationAxisX; // 0x3
        bool bNavigationAxisY; // 0x4
        bool bNavigationAxisZ; // 0x5

    };

    struct FFileManifestData //ScriptStruct BuildPatchServices.FileManifestData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString Filename; // 0x0
        struct FSHAHashData FileHash; // 0x10
        struct TArray<struct FChunkPartData> FileChunkParts; // 0x28
        struct TArray<struct FString> InstallTags; // 0x38
        bool bIsUnixExecutable; // 0x48
        struct FString SymlinkTarget; // 0x50
        bool bIsReadOnly; // 0x60
        bool bIsCompressed; // 0x61

    };

    struct FChunkPartData //ScriptStruct BuildPatchServices.ChunkPartData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid Guid; // 0x0
        uint32_t Offset; // 0x10
        uint32_t Size; // 0x14

    };

    struct FSHAHashData //ScriptStruct BuildPatchServices.SHAHashData
    {
    //Children Prop Count (Fields): 1
    public:

        char Hash; // 0x0

    };

    struct FChunkInfoData //ScriptStruct BuildPatchServices.ChunkInfoData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FGuid Guid; // 0x0
        uint64_t Hash; // 0x10
        struct FSHAHashData ShaHash; // 0x18
        int64_t FileSize; // 0x30
        char GroupNumber; // 0x38

    };

    struct FCustomFieldData //ScriptStruct BuildPatchServices.CustomFieldData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Key; // 0x0
        struct FString Value; // 0x10

    };

    struct FFoliageVertexColorChannelMask //ScriptStruct Foliage.FoliageVertexColorChannelMask
    {
    //Children Prop Count (Fields): 3
    public:

        char UseMask; // 0x0
        float MaskThreshold; // 0x4
        char InvertMask; // 0x8

    };

    struct FFoliageTypeObject //ScriptStruct Foliage.FoliageTypeObject
    {
    //Children Prop Count (Fields): 4
    public:

        class UObject* FoliageTypeObject; // 0x0
        class UFoliageType* TypeInstance; // 0x8
        bool bIsAsset; // 0x10
        class UFoliageType_InstancedStaticMesh* Type; // 0x18

    };

    struct FProceduralFoliageInstance //ScriptStruct Foliage.ProceduralFoliageInstance
    {
    //Children Prop Count (Fields): 6
    public:

        struct FQuat Rotation; // 0x0
        struct FVector Location; // 0x10
        float Age; // 0x1c
        struct FVector Normal; // 0x20
        float Scale; // 0x2c
        class UFoliageType* Type; // 0x30

    };

    struct FLandscapeLayer //ScriptStruct Landscape.LandscapeLayer
    {
    //Children Prop Count (Fields): 9
    public:

        struct FGuid Guid; // 0x0
        struct FName Name; // 0x10
        bool bVisible; // 0x18
        bool bLocked; // 0x19
        float HeightmapAlpha; // 0x1c
        float WeightmapAlpha; // 0x20
        enum class ELandscapeBlendMode BlendMode; // 0x24
        struct TArray<struct FLandscapeLayerBrush> Brushes; // 0x28
        struct TMap<class ULandscapeLayerInfoObject*, bool> WeightmapLayerAllocationBlend; // 0x38

    };

    struct FLandscapeLayerBrush //ScriptStruct Landscape.LandscapeLayerBrush
    {
    public:


    };

    struct FLandscapeLayerComponentData //ScriptStruct Landscape.LandscapeLayerComponentData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FHeightmapData HeightmapData; // 0x0
        struct FWeightmapData WeightmapData; // 0x8

    };

    struct FWeightmapData //ScriptStruct Landscape.WeightmapData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class UTexture2D*> Textures; // 0x0
        struct TArray<struct FWeightmapLayerAllocationInfo> LayerAllocations; // 0x10
        struct TArray<class ULandscapeWeightmapUsage*> TextureUsages; // 0x20

    };

    struct FWeightmapLayerAllocationInfo //ScriptStruct Landscape.WeightmapLayerAllocationInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class ULandscapeLayerInfoObject* LayerInfo; // 0x0
        char WeightmapTextureIndex; // 0x8
        char WeightmapTextureChannel; // 0x9

    };

    struct FHeightmapData //ScriptStruct Landscape.HeightmapData
    {
    //Children Prop Count (Fields): 1
    public:

        class UTexture2D* Texture; // 0x0

    };

    struct FLandscapeComponentMaterialOverride //ScriptStruct Landscape.LandscapeComponentMaterialOverride
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPerPlatformInt LODIndex; // 0x0
        class UMaterialInterface* Material; // 0x8

    };

    struct FLandscapeEditToolRenderData //ScriptStruct Landscape.LandscapeEditToolRenderData
    {
    //Children Prop Count (Fields): 9
    public:

        class UMaterialInterface* ToolMaterial; // 0x0
        class UMaterialInterface* GizmoMaterial; // 0x8
        int32_t SelectedType; // 0x10
        int32_t DebugChannelR; // 0x14
        int32_t DebugChannelG; // 0x18
        int32_t DebugChannelB; // 0x1c
        class UTexture2D* DataTexture; // 0x20
        class UTexture2D* LayerContributionTexture; // 0x28
        class UTexture2D* DirtyTexture; // 0x30

    };

    struct FGizmoSelectData //ScriptStruct Landscape.GizmoSelectData
    {
    public:


    };

    struct FGrassVariety //ScriptStruct Landscape.GrassVariety
    {
    //Children Prop Count (Fields): 19
    public:

        class UStaticMesh* GrassMesh; // 0x0
        struct TArray<class UMaterialInterface*> OverrideMaterials; // 0x8
        struct FPerPlatformFloat GrassDensity; // 0x18
        bool bUseGrid; // 0x1c
        float PlacementJitter; // 0x20
        struct FPerPlatformInt StartCullDistance; // 0x24
        struct FPerPlatformInt EndCullDistance; // 0x28
        int32_t MinLOD; // 0x2c
        enum class EGrassScaling Scaling; // 0x30
        struct FFloatInterval ScaleX; // 0x34
        struct FFloatInterval ScaleY; // 0x3c
        struct FFloatInterval ScaleZ; // 0x44
        bool RandomRotation; // 0x4c
        bool AlignToSurface; // 0x4d
        bool bUseLandscapeLightmap; // 0x4e
        struct FLightingChannels LightingChannels; // 0x4f
        bool bReceivesDecals; // 0x50
        bool bCastDynamicShadow; // 0x51
        bool bKeepInstanceBufferCPUCopy; // 0x52

    };

    struct FLandscapeInfoLayerSettings //ScriptStruct Landscape.LandscapeInfoLayerSettings
    {
    //Children Prop Count (Fields): 2
    public:

        class ULandscapeLayerInfoObject* LayerInfoObj; // 0x0
        struct FName LayerName; // 0x8

    };

    struct FLandscapeMaterialTextureStreamingInfo //ScriptStruct Landscape.LandscapeMaterialTextureStreamingInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName TextureName; // 0x0
        float TexelFactor; // 0x8

    };

    struct FLandscapeProxyMaterialOverride //ScriptStruct Landscape.LandscapeProxyMaterialOverride
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPerPlatformInt LODIndex; // 0x0
        class UMaterialInterface* Material; // 0x8

    };

    struct FLandscapeImportLayerInfo //ScriptStruct Landscape.LandscapeImportLayerInfo
    {
    public:


    };

    struct FLandscapeLayerStruct //ScriptStruct Landscape.LandscapeLayerStruct
    {
    //Children Prop Count (Fields): 1
    public:

        class ULandscapeLayerInfoObject* LayerInfoObj; // 0x0

    };

    struct FLandscapeEditorLayerSettings //ScriptStruct Landscape.LandscapeEditorLayerSettings
    {
    public:


    };

    struct FLandscapeSplineConnection //ScriptStruct Landscape.LandscapeSplineConnection
    {
    //Children Prop Count (Fields): 2
    public:

        class ULandscapeSplineSegment* Segment; // 0x0
        char End; // 0x8

    };

    struct FForeignWorldSplineData //ScriptStruct Landscape.ForeignWorldSplineData
    {
    public:


    };

    struct FForeignSplineSegmentData //ScriptStruct Landscape.ForeignSplineSegmentData
    {
    public:


    };

    struct FForeignControlPointData //ScriptStruct Landscape.ForeignControlPointData
    {
    public:


    };

    struct FLandscapeSplineMeshEntry //ScriptStruct Landscape.LandscapeSplineMeshEntry
    {
    //Children Prop Count (Fields): 9
    public:

        class UStaticMesh* Mesh; // 0x0
        struct TArray<class UMaterialInterface*> MaterialOverrides; // 0x8
        char bCenterH; // 0x18
        struct FVector2D CenterAdjust; // 0x1c
        char bScaleToWidth; // 0x24
        struct FVector Scale; // 0x28
        enum class LandscapeSplineMeshOrientation Orientation; // 0x34
        enum class ESplineMeshAxis ForwardAxis; // 0x35
        enum class ESplineMeshAxis UpAxis; // 0x36

    };

    struct FLandscapeSplineSegmentConnection //ScriptStruct Landscape.LandscapeSplineSegmentConnection
    {
    //Children Prop Count (Fields): 3
    public:

        class ULandscapeSplineControlPoint* ControlPoint; // 0x0
        float TangentLen; // 0x8
        struct FName SocketName; // 0xc

    };

    struct FLandscapeSplineInterpPoint //ScriptStruct Landscape.LandscapeSplineInterpPoint
    {
    //Children Prop Count (Fields): 10
    public:

        struct FVector Center; // 0x0
        struct FVector Left; // 0xc
        struct FVector Right; // 0x18
        struct FVector FalloffLeft; // 0x24
        struct FVector FalloffRight; // 0x30
        struct FVector LayerLeft; // 0x3c
        struct FVector LayerRight; // 0x48
        struct FVector LayerFalloffLeft; // 0x54
        struct FVector LayerFalloffRight; // 0x60
        float StartEndFalloff; // 0x6c

    };

    struct FGrassInput //ScriptStruct Landscape.GrassInput
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        class ULandscapeGrassType* GrassType; // 0x8
        struct FExpressionInput Input; // 0x10

    };

    struct FLayerBlendInput //ScriptStruct Landscape.LayerBlendInput
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName LayerName; // 0x0
        enum class ELandscapeLayerBlendType BlendType; // 0x8
        struct FExpressionInput LayerInput; // 0xc
        struct FExpressionInput HeightInput; // 0x20
        float PreviewWeight; // 0x34
        struct FVector ConstLayerInput; // 0x38
        float ConstHeightInput; // 0x44

    };

    struct FPhysicalMaterialInput //ScriptStruct Landscape.PhysicalMaterialInput
    {
    //Children Prop Count (Fields): 2
    public:

        class UPhysicalMaterial* PhysicalMaterial; // 0x0
        struct FExpressionInput Input; // 0x8

    };

    struct FTimedDataInputEvaluationData //ScriptStruct TimeManagement.TimedDataInputEvaluationData
    {
    //Children Prop Count (Fields): 2
    public:

        float DistanceToNewestSampleSeconds; // 0x0
        float DistanceToOldestSampleSeconds; // 0x4

    };

    struct FTimedDataChannelSampleTime //ScriptStruct TimeManagement.TimedDataChannelSampleTime
    {
    public:


    };

    struct FTrackInstanceInputComponent //ScriptStruct MovieScene.TrackInstanceInputComponent
    {
    //Children Prop Count (Fields): 2
    public:

        class UMovieSceneSection* Section; // 0x0
        int32_t OutputIndex; // 0x8

    };

    struct FMovieSceneEvaluationHookComponent //ScriptStruct MovieScene.MovieSceneEvaluationHookComponent
    {
    //Children Prop Count (Fields): 1
    public:

        struct TScriptInterface<IMovieSceneEvaluationHook> Interface; // 0x0

    };

    struct FMovieSceneTrackInstanceComponent //ScriptStruct MovieScene.MovieSceneTrackInstanceComponent
    {
    //Children Prop Count (Fields): 2
    public:

        class UMovieSceneSection* Owner; // 0x0
        class UMovieSceneTrackInstance* TrackInstanceClass; // 0x8

    };

    struct FEasingComponentData //ScriptStruct MovieScene.EasingComponentData
    {
    //Children Prop Count (Fields): 1
    public:

        class UMovieSceneSection* Section; // 0x0

    };

    struct FMovieSceneDeterminismData //ScriptStruct MovieScene.MovieSceneDeterminismData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FFrameTime> Fences; // 0x0
        bool bParentSequenceRequiresLowerFence; // 0x10
        bool bParentSequenceRequiresUpperFence; // 0x11

    };

    struct FMovieSceneSectionGroup //ScriptStruct MovieScene.MovieSceneSectionGroup
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct TWeakObjectPtr<struct UMovieSceneSection>> Sections; // 0x0

    };

    struct FMovieSceneObjectBindingIDs //ScriptStruct MovieScene.MovieSceneObjectBindingIDs
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FMovieSceneObjectBindingID> ids; // 0x0

    };

    struct FMovieSceneTrackLabels //ScriptStruct MovieScene.MovieSceneTrackLabels
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> Strings; // 0x0

    };

    struct FMovieSceneEditorData //ScriptStruct MovieScene.MovieSceneEditorData
    {
    //Children Prop Count (Fields): 9
    public:

        struct TMap<struct FString, struct FMovieSceneExpansionState> ExpansionStates; // 0x0
        struct TArray<struct FString> PinnedNodes; // 0x50
        double ViewStart; // 0x60
        double ViewEnd; // 0x68
        double WorkStart; // 0x70
        double WorkEnd; // 0x78
        struct TSet<struct FFrameNumber> MarkedFrames; // 0x80
        struct FFloatRange WorkingRange; // 0xd0
        struct FFloatRange ViewRange; // 0xe0

    };

    struct FMovieSceneExpansionState //ScriptStruct MovieScene.MovieSceneExpansionState
    {
    //Children Prop Count (Fields): 1
    public:

        bool bExpanded; // 0x0

    };

    struct FMovieSceneMarkedFrame //ScriptStruct MovieScene.MovieSceneMarkedFrame
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFrameNumber FrameNumber; // 0x0
        struct FString Label; // 0x8
        bool bIsDeterminismFence; // 0x18

    };

    struct FMovieSceneTimecodeSource //ScriptStruct MovieScene.MovieSceneTimecodeSource
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTimecode Timecode; // 0x0
        struct FFrameNumber DeltaFrame; // 0x14

    };

    struct FMovieSceneBinding //ScriptStruct MovieScene.MovieSceneBinding
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid ObjectGuid; // 0x0
        struct FString BindingName; // 0x10
        struct TArray<class UMovieSceneTrack*> Tracks; // 0x20

    };

    struct FMovieSceneBindingOverrideData //ScriptStruct MovieScene.MovieSceneBindingOverrideData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneObjectBindingID ObjectBindingID; // 0x0
        struct TWeakObjectPtr<struct UObject> Object; // 0x18
        bool bOverridesDefault; // 0x20

    };

    struct FOptionalMovieSceneBlendType //ScriptStruct MovieScene.OptionalMovieSceneBlendType
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EMovieSceneBlendType BlendType; // 0x0
        bool bIsValid; // 0x1

    };

    struct FMovieSceneCompiledSequenceFlagStruct //ScriptStruct MovieScene.MovieSceneCompiledSequenceFlagStruct
    {
    //Children Prop Count (Fields): 2
    public:

        char bParentSequenceRequiresLowerFence; // 0x0
        char bParentSequenceRequiresUpperFence; // 0x0

    };

    struct FMovieSceneSequenceCompilerMaskStruct //ScriptStruct MovieScene.MovieSceneSequenceCompilerMaskStruct
    {
    //Children Prop Count (Fields): 4
    public:

        char bHierarchy; // 0x0
        char bEvaluationTemplate; // 0x0
        char bEvaluationTemplateField; // 0x0
        char bEntityComponentField; // 0x0

    };

    struct FMovieSceneEntitySystemGraph //ScriptStruct MovieScene.MovieSceneEntitySystemGraph
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneEntitySystemGraphNodes nodes; // 0x80

    };

    struct FMovieSceneEntitySystemGraphNodes //ScriptStruct MovieScene.MovieSceneEntitySystemGraphNodes
    {
    public:


    };

    struct FMovieSceneEntitySystemGraphNode //ScriptStruct MovieScene.MovieSceneEntitySystemGraphNode
    {
    //Children Prop Count (Fields): 1
    public:

        class UMovieSceneEntitySystem* System; // 0x20

    };

    struct FMovieSceneEvalTemplatePtr //ScriptStruct MovieScene.MovieSceneEvalTemplatePtr
    {
    public:


    };

    struct FMovieSceneEmptyStruct //ScriptStruct MovieScene.MovieSceneEmptyStruct
    {
    public:


    };

    struct FMovieSceneEvaluationField //ScriptStruct MovieScene.MovieSceneEvaluationField
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FMovieSceneFrameRange> Ranges; // 0x0
        struct TArray<struct FMovieSceneEvaluationGroup> Groups; // 0x10
        struct TArray<struct FMovieSceneEvaluationMetaData> MetaData; // 0x20

    };

    struct FMovieSceneEvaluationMetaData //ScriptStruct MovieScene.MovieSceneEvaluationMetaData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FMovieSceneSequenceID> ActiveSequences; // 0x0
        struct TArray<struct FMovieSceneOrderedEvaluationKey> ActiveEntities; // 0x10

    };

    struct FMovieSceneOrderedEvaluationKey //ScriptStruct MovieScene.MovieSceneOrderedEvaluationKey
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneEvaluationKey Key; // 0x0
        uint16_t SetupIndex; // 0xc
        uint16_t TearDownIndex; // 0xe

    };

    struct FMovieSceneEvaluationKey //ScriptStruct MovieScene.MovieSceneEvaluationKey
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneSequenceID SequenceID; // 0x0
        struct FMovieSceneTrackIdentifier TrackIdentifier; // 0x4
        uint32_t SectionIndex; // 0x8

    };

    struct FMovieSceneTrackIdentifier //ScriptStruct MovieScene.MovieSceneTrackIdentifier
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t Value; // 0x0

    };

    struct FMovieSceneEvaluationGroup //ScriptStruct MovieScene.MovieSceneEvaluationGroup
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FMovieSceneEvaluationGroupLUTIndex> LUTIndices; // 0x0
        struct TArray<struct FMovieSceneFieldEntry_EvaluationTrack> TrackLUT; // 0x10
        struct TArray<struct FMovieSceneFieldEntry_ChildTemplate> SectionLUT; // 0x20

    };

    struct FMovieSceneFieldEntry_ChildTemplate //ScriptStruct MovieScene.MovieSceneFieldEntry_ChildTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        uint16_t ChildIndex; // 0x0
        enum class ESectionEvaluationFlags Flags; // 0x2
        struct FFrameNumber ForcedTime; // 0x4

    };

    struct FMovieSceneFieldEntry_EvaluationTrack //ScriptStruct MovieScene.MovieSceneFieldEntry_EvaluationTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneEvaluationFieldTrackPtr TrackPtr; // 0x0
        uint16_t NumChildren; // 0x8

    };

    struct FMovieSceneEvaluationFieldTrackPtr //ScriptStruct MovieScene.MovieSceneEvaluationFieldTrackPtr
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneSequenceID SequenceID; // 0x0
        struct FMovieSceneTrackIdentifier TrackIdentifier; // 0x4

    };

    struct FMovieSceneEvaluationGroupLUTIndex //ScriptStruct MovieScene.MovieSceneEvaluationGroupLUTIndex
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t NumInitPtrs; // 0x0
        int32_t NumEvalPtrs; // 0x4

    };

    struct FMovieSceneFrameRange //ScriptStruct MovieScene.MovieSceneFrameRange
    {
    public:


    };

    struct FMovieSceneEvaluationFieldSegmentPtr : FMovieSceneEvaluationFieldTrackPtr //ScriptStruct MovieScene.MovieSceneEvaluationFieldSegmentPtr
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneSegmentIdentifier SegmentId; // 0x8

    };

    struct FMovieSceneSegmentIdentifier //ScriptStruct MovieScene.MovieSceneSegmentIdentifier
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t IdentifierIndex; // 0x0

    };

    struct FMovieSceneEntityComponentField //ScriptStruct MovieScene.MovieSceneEntityComponentField
    {
    //Children Prop Count (Fields): 5
    public:

        struct FMovieSceneEvaluationFieldEntityTree PersistentEntityTree; // 0x0
        struct FMovieSceneEvaluationFieldEntityTree OneShotEntityTree; // 0x60
        struct TArray<struct FMovieSceneEvaluationFieldEntity> Entities; // 0xc0
        struct TArray<struct FMovieSceneEvaluationFieldEntityMetaData> EntityMetaData; // 0xd0
        struct TArray<struct FMovieSceneEvaluationFieldSharedEntityMetaData> SharedMetaData; // 0xe0

    };

    struct FMovieSceneEvaluationFieldSharedEntityMetaData //ScriptStruct MovieScene.MovieSceneEvaluationFieldSharedEntityMetaData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FGuid ObjectBindingID; // 0x0

    };

    struct FMovieSceneEvaluationFieldEntityMetaData //ScriptStruct MovieScene.MovieSceneEvaluationFieldEntityMetaData
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString OverrideBoundPropertyPath; // 0x0
        struct FFrameNumber ForcedTime; // 0x10
        enum class ESectionEvaluationFlags Flags; // 0x18
        char bEvaluateInSequencePreRoll; // 0x19
        char bEvaluateInSequencePostRoll; // 0x19

    };

    struct FMovieSceneEvaluationFieldEntity //ScriptStruct MovieScene.MovieSceneEvaluationFieldEntity
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneEvaluationFieldEntityKey Key; // 0x0
        int32_t SharedMetaDataIndex; // 0xc

    };

    struct FMovieSceneEvaluationFieldEntityKey //ScriptStruct MovieScene.MovieSceneEvaluationFieldEntityKey
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct UObject> EntityOwner; // 0x0
        uint32_t EntityID; // 0x8

    };

    struct FMovieSceneEvaluationFieldEntityTree //ScriptStruct MovieScene.MovieSceneEvaluationFieldEntityTree
    {
    public:


    };

    struct FMovieSceneEvaluationInstanceKey //ScriptStruct MovieScene.MovieSceneEvaluationInstanceKey
    {
    public:


    };

    struct FMovieSceneEvaluationHookEventContainer //ScriptStruct MovieScene.MovieSceneEvaluationHookEventContainer
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FMovieSceneEvaluationHookEvent> Events; // 0x0

    };

    struct FMovieSceneEvaluationHookEvent //ScriptStruct MovieScene.MovieSceneEvaluationHookEvent
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneEvaluationHookComponent Hook; // 0x0

    };

    struct FMovieSceneEvaluationTemplate //ScriptStruct MovieScene.MovieSceneEvaluationTemplate
    {
    //Children Prop Count (Fields): 4
    public:

        struct TMap<struct FMovieSceneTrackIdentifier, struct FMovieSceneEvaluationTrack> Tracks; // 0x0
        struct FGuid SequenceSignature; // 0xa0
        struct FMovieSceneEvaluationTemplateSerialNumber TemplateSerialNumber; // 0xb0
        struct FMovieSceneTemplateGenerationLedger TemplateLedger; // 0xb8

    };

    struct FMovieSceneTemplateGenerationLedger //ScriptStruct MovieScene.MovieSceneTemplateGenerationLedger
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneTrackIdentifier LastTrackIdentifier; // 0x0
        struct TMap<struct FGuid, struct FMovieSceneTrackIdentifier> TrackSignatureToTrackIdentifier; // 0x8
        struct TMap<struct FGuid, struct FMovieSceneFrameRange> SubSectionRanges; // 0x58

    };

    struct FMovieSceneEvaluationTemplateSerialNumber //ScriptStruct MovieScene.MovieSceneEvaluationTemplateSerialNumber
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t Value; // 0x0

    };

    struct FMovieSceneEvaluationTrack //ScriptStruct MovieScene.MovieSceneEvaluationTrack
    {
    //Children Prop Count (Fields): 10
    public:

        struct FGuid ObjectBindingID; // 0x0
        uint16_t EvaluationPriority; // 0x10
        enum class EEvaluationMethod EvaluationMethod; // 0x12
        struct TWeakObjectPtr<struct UMovieSceneTrack> SourceTrack; // 0x14
        struct TArray<struct FMovieSceneEvalTemplatePtr> ChildTemplates; // 0x20
        struct FMovieSceneTrackImplementationPtr TrackTemplate; // 0x30
        struct FName EvaluationGroup; // 0x68
        char bEvaluateInPreroll; // 0x70
        char bEvaluateInPostroll; // 0x70
        char bTearDownPriority; // 0x70

    };

    struct FMovieSceneTrackImplementationPtr //ScriptStruct MovieScene.MovieSceneTrackImplementationPtr
    {
    public:


    };

    struct FMovieSceneSubSectionData //ScriptStruct MovieScene.MovieSceneSubSectionData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TWeakObjectPtr<struct UMovieSceneSubSection> Section; // 0x0
        struct FGuid ObjectBindingID; // 0x8
        enum class ESectionEvaluationFlags Flags; // 0x18

    };

    struct FMovieSceneRootEvaluationTemplateInstance //ScriptStruct MovieScene.MovieSceneRootEvaluationTemplateInstance
    {
    //Children Prop Count (Fields): 4
    public:

        struct TWeakObjectPtr<struct UMovieSceneSequence> WeakRootSequence; // 0x0
        class UMovieSceneCompiledDataManager* CompiledDataManager; // 0x8
        class UMovieSceneEntitySystemLinker* EntitySystemLinker; // 0x18
        struct TMap<struct FMovieSceneSequenceID, class UObject*> DirectorInstances; // 0x90

    };

    struct FMovieSceneKeyStruct //ScriptStruct MovieScene.MovieSceneKeyStruct
    {
    public:


    };

    struct FMovieSceneKeyTimeStruct : FMovieSceneKeyStruct //ScriptStruct MovieScene.MovieSceneKeyTimeStruct
    {
    //Children Prop Count (Fields): 1
    public:

        struct FFrameNumber Time; // 0x8

    };

    struct FGeneratedMovieSceneKeyStruct //ScriptStruct MovieScene.GeneratedMovieSceneKeyStruct
    {
    public:


    };

    struct FMovieSceneObjectPathChannel : FMovieSceneChannel //ScriptStruct MovieScene.MovieSceneObjectPathChannel
    {
    //Children Prop Count (Fields): 4
    public:

        class UObject* PropertyClass; // 0x8
        struct TArray<struct FFrameNumber> Times; // 0x10
        struct TArray<struct FMovieSceneObjectPathChannelKeyValue> Values; // 0x20
        struct FMovieSceneObjectPathChannelKeyValue DefaultValue; // 0x30

    };

    struct FMovieSceneObjectPathChannelKeyValue //ScriptStruct MovieScene.MovieSceneObjectPathChannelKeyValue
    {
    //Children Prop Count (Fields): 2
    public:

        struct TSoftObjectPtr<UObject> SoftPtr; // 0x0
        class UObject* HardPtr; // 0x28

    };

    struct FMovieScenePossessable //ScriptStruct MovieScene.MovieScenePossessable
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FName> Tags; // 0x0
        struct FGuid Guid; // 0x10
        struct FString Name; // 0x20
        class UObject* PossessedObjectClass; // 0x30
        struct FGuid ParentGuid; // 0x38

    };

    struct FMovieSceneEasingSettings //ScriptStruct MovieScene.MovieSceneEasingSettings
    {
    //Children Prop Count (Fields): 8
    public:

        int32_t AutoEaseInDuration; // 0x0
        int32_t AutoEaseOutDuration; // 0x4
        struct TScriptInterface<IMovieSceneEasingFunction> EaseIn; // 0x8
        bool bManualEaseIn; // 0x18
        int32_t ManualEaseInDuration; // 0x1c
        struct TScriptInterface<IMovieSceneEasingFunction> EaseOut; // 0x20
        bool bManualEaseOut; // 0x30
        int32_t ManualEaseOutDuration; // 0x34

    };

    struct FMovieSceneSectionEvalOptions //ScriptStruct MovieScene.MovieSceneSectionEvalOptions
    {
    //Children Prop Count (Fields): 2
    public:

        bool bCanEditCompletionMode; // 0x0
        enum class EMovieSceneCompletionMode CompletionMode; // 0x1

    };

    struct FMovieSceneSectionParameters //ScriptStruct MovieScene.MovieSceneSectionParameters
    {
    //Children Prop Count (Fields): 9
    public:

        struct FFrameNumber StartFrameOffset; // 0x0
        bool bCanLoop; // 0x4
        struct FFrameNumber EndFrameOffset; // 0x8
        struct FFrameNumber FirstLoopStartFrameOffset; // 0xc
        float TimeScale; // 0x10
        int32_t HierarchicalBias; // 0x14
        float StartOffset; // 0x18
        float PrerollTime; // 0x1c
        float PostrollTime; // 0x20

    };

    struct FMovieSceneSegment //ScriptStruct MovieScene.MovieSceneSegment
    {
    public:


    };

    struct FSectionEvaluationData //ScriptStruct MovieScene.SectionEvaluationData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ImplIndex; // 0x0
        struct FFrameNumber ForcedTime; // 0x4
        enum class ESectionEvaluationFlags Flags; // 0x8

    };

    struct FMovieSceneSequenceHierarchy //ScriptStruct MovieScene.MovieSceneSequenceHierarchy
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMovieSceneSequenceHierarchyNode RootNode; // 0x0
        struct FMovieSceneSubSequenceTree Tree; // 0x18
        struct TMap<struct FMovieSceneSequenceID, struct FMovieSceneSubSequenceData> SubSequences; // 0x78
        struct TMap<struct FMovieSceneSequenceID, struct FMovieSceneSequenceHierarchyNode> Hierarchy; // 0xc8

    };

    struct FMovieSceneSequenceHierarchyNode //ScriptStruct MovieScene.MovieSceneSequenceHierarchyNode
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneSequenceID ParentID; // 0x0
        struct TArray<struct FMovieSceneSequenceID> Children; // 0x8

    };

    struct FMovieSceneSubSequenceData //ScriptStruct MovieScene.MovieSceneSubSequenceData
    {
    //Children Prop Count (Fields): 19
    public:

        struct FSoftObjectPath Sequence; // 0x0
        struct FMovieSceneSequenceTransform OuterToInnerTransform; // 0x18
        struct FMovieSceneSequenceTransform RootToSequenceTransform; // 0x38
        struct FFrameRate TickResolution; // 0x58
        struct FMovieSceneSequenceID DeterministicSequenceID; // 0x60
        struct FMovieSceneFrameRange ParentPlayRange; // 0x64
        struct FFrameNumber ParentStartFrameOffset; // 0x74
        struct FFrameNumber ParentEndFrameOffset; // 0x78
        struct FFrameNumber ParentFirstLoopStartFrameOffset; // 0x7c
        bool bCanLoop; // 0x80
        struct FMovieSceneFrameRange PlayRange; // 0x84
        struct FMovieSceneFrameRange FullPlayRange; // 0x94
        struct FMovieSceneFrameRange UnwarpedPlayRange; // 0xa4
        struct FMovieSceneFrameRange PreRollRange; // 0xb4
        struct FMovieSceneFrameRange PostRollRange; // 0xc4
        int16_t HierarchicalBias; // 0xd4
        bool bHasHierarchicalEasing; // 0xd6
        struct FMovieSceneSequenceInstanceDataPtr InstanceData; // 0xd8
        struct FGuid SubSectionSignature; // 0xf8

    };

    struct FMovieSceneSequenceInstanceDataPtr //ScriptStruct MovieScene.MovieSceneSequenceInstanceDataPtr
    {
    public:


    };

    struct FMovieSceneSequenceTransform //ScriptStruct MovieScene.MovieSceneSequenceTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneTimeTransform LinearTransform; // 0x0
        struct TArray<struct FMovieSceneNestedSequenceTransform> NestedTransforms; // 0x10

    };

    struct FMovieSceneNestedSequenceTransform //ScriptStruct MovieScene.MovieSceneNestedSequenceTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneTimeTransform LinearTransform; // 0x0
        struct FMovieSceneTimeWarping Warping; // 0xc

    };

    struct FMovieSceneTimeWarping //ScriptStruct MovieScene.MovieSceneTimeWarping
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumber Start; // 0x0
        struct FFrameNumber End; // 0x4

    };

    struct FMovieSceneTimeTransform //ScriptStruct MovieScene.MovieSceneTimeTransform
    {
    //Children Prop Count (Fields): 2
    public:

        float TimeScale; // 0x0
        struct FFrameTime Offset; // 0x4

    };

    struct FMovieSceneSubSequenceTree //ScriptStruct MovieScene.MovieSceneSubSequenceTree
    {
    public:


    };

    struct FMovieSceneSubSequenceTreeEntry //ScriptStruct MovieScene.MovieSceneSubSequenceTreeEntry
    {
    public:


    };

    struct FMovieSceneSequencePlaybackParams //ScriptStruct MovieScene.MovieSceneSequencePlaybackParams
    {
    //Children Prop Count (Fields): 5
    public:

        struct FFrameTime Frame; // 0x0
        float Time; // 0x8
        struct FString MarkedFrame; // 0x10
        enum class EMovieScenePositionType PositionType; // 0x20
        enum class EUpdatePositionMethod UpdateMethod; // 0x21

    };

    struct FMovieSceneSequencePlaybackSettings //ScriptStruct MovieScene.MovieSceneSequencePlaybackSettings
    {
    //Children Prop Count (Fields): 12
    public:

        char bAutoPlay; // 0x0
        struct FMovieSceneSequenceLoopCount LoopCount; // 0x4
        float PlayRate; // 0x8
        float StartTime; // 0xc
        char bRandomStartTime; // 0x10
        char bRestoreState; // 0x10
        char bDisableMovementInput; // 0x10
        char bDisableLookAtInput; // 0x10
        char bHidePlayer; // 0x10
        char bHideHud; // 0x10
        char bDisableCameraCuts; // 0x10
        char bPauseAtEnd; // 0x10

    };

    struct FMovieSceneSequenceLoopCount //ScriptStruct MovieScene.MovieSceneSequenceLoopCount
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Value; // 0x0

    };

    struct FMovieSceneSequenceReplProperties //ScriptStruct MovieScene.MovieSceneSequenceReplProperties
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFrameTime LastKnownPosition; // 0x0
        enum class EMovieScenePlayerStatus LastKnownStatus; // 0x8
        int32_t LastKnownNumLoops; // 0xc

    };

    struct FMovieSceneSequenceActorPointers //ScriptStruct MovieScene.MovieSceneSequenceActorPointers
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* SequenceActor; // 0x0
        struct TScriptInterface<IMovieSceneSequenceActor> SequenceActorInterface; // 0x8

    };

    struct FMovieSceneWarpCounter //ScriptStruct MovieScene.MovieSceneWarpCounter
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<uint32_t> WarpCounts; // 0x0

    };

    struct FMovieSceneSpawnable //ScriptStruct MovieScene.MovieSceneSpawnable
    {
    //Children Prop Count (Fields): 11
    public:

        struct FTransform SpawnTransform; // 0x0
        struct TArray<struct FName> Tags; // 0x30
        bool bContinuouslyRespawn; // 0x40
        bool bNetAddressableName; // 0x41
        bool bEvaluateTracksWhenNotSpawned; // 0x42
        struct FGuid Guid; // 0x44
        struct FString Name; // 0x58
        class UObject* ObjectTemplate; // 0x68
        struct TArray<struct FGuid> ChildPossessables; // 0x70
        enum class ESpawnOwnership Ownership; // 0x80
        struct FName LevelName; // 0x84

    };

    struct FTestMovieSceneEvalTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieScene.TestMovieSceneEvalTemplate
    {
    public:


    };

    struct FMovieSceneTrackDisplayOptions //ScriptStruct MovieScene.MovieSceneTrackDisplayOptions
    {
    //Children Prop Count (Fields): 1
    public:

        char bShowVerticalFrames; // 0x0

    };

    struct FMovieSceneTrackEvalOptions //ScriptStruct MovieScene.MovieSceneTrackEvalOptions
    {
    //Children Prop Count (Fields): 5
    public:

        char bCanEvaluateNearestSection; // 0x0
        char bEvalNearestSection; // 0x0
        char bEvaluateInPreroll; // 0x0
        char bEvaluateInPostroll; // 0x0
        char bEvaluateNearestSection; // 0x0

    };

    struct FMovieSceneTrackEvaluationField //ScriptStruct MovieScene.MovieSceneTrackEvaluationField
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FMovieSceneTrackEvaluationFieldEntry> entries; // 0x0

    };

    struct FMovieSceneTrackEvaluationFieldEntry //ScriptStruct MovieScene.MovieSceneTrackEvaluationFieldEntry
    {
    //Children Prop Count (Fields): 5
    public:

        class UMovieSceneSection* Section; // 0x0
        struct FFrameNumberRange Range; // 0x8
        struct FFrameNumber ForcedTime; // 0x18
        enum class ESectionEvaluationFlags Flags; // 0x1c
        int16_t LegacySortOrder; // 0x1e

    };

    struct FMovieSceneTrackInstanceInput //ScriptStruct MovieScene.MovieSceneTrackInstanceInput
    {
    //Children Prop Count (Fields): 1
    public:

        class UMovieSceneSection* Section; // 0x0

    };

    struct FMovieSceneTrackInstanceEntry //ScriptStruct MovieScene.MovieSceneTrackInstanceEntry
    {
    //Children Prop Count (Fields): 2
    public:

        class UObject* BoundObject; // 0x0
        class UMovieSceneTrackInstance* TrackInstance; // 0x8

    };

    struct FAxis //ScriptStruct AnimationCore.Axis
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Axis; // 0x0
        bool bInLocalSpace; // 0xc

    };

    struct FConstraintDescriptionEx //ScriptStruct AnimationCore.ConstraintDescriptionEx
    {
    //Children Prop Count (Fields): 1
    public:

        struct FFilterOptionPerAxis AxesFilterOption; // 0x8

    };

    struct FAimConstraintDescription : FConstraintDescriptionEx //ScriptStruct AnimationCore.AimConstraintDescription
    {
    //Children Prop Count (Fields): 4
    public:

        struct FAxis LookAt_Axis; // 0x10
        struct FAxis LookUp_Axis; // 0x20
        bool bUseLookUp; // 0x30
        struct FVector LookUpTarget; // 0x34

    };

    struct FTransformConstraintDescription : FConstraintDescriptionEx //ScriptStruct AnimationCore.TransformConstraintDescription
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ETransformConstraintType TransformType; // 0x10

    };

    struct FNodeChain //ScriptStruct AnimationCore.NodeChain
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> nodes; // 0x0

    };

    struct FTransformNoScale //ScriptStruct AnimationCore.TransformNoScale
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Location; // 0x0
        struct FQuat Rotation; // 0x10

    };

    struct FAnimNode_AssetPlayerBase : FAnimNode_Base //ScriptStruct Engine.AnimNode_AssetPlayerBase
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName GroupName; // 0x10
        enum class EAnimGroupRole GroupRole; // 0x18
        enum class EAnimSyncGroupScope GroupScope; // 0x19
        bool bIgnoreForRelevancyTest; // 0x1a
        float BlendWeight; // 0x1c
        float InternalTimeAccumulator; // 0x20

    };

    struct FAnimNode_BlendSpacePlayer : FAnimNode_AssetPlayerBase //ScriptStruct AnimGraphRuntime.AnimNode_BlendSpacePlayer
    {
    //Children Prop Count (Fields): 9
    public:

        float X; // 0x38
        float Y; // 0x3c
        float Z; // 0x40
        float PlayRate; // 0x44
        bool bLoop; // 0x48
        bool bResetPlayTimeWhenBlendSpaceChanges; // 0x49
        float StartPosition; // 0x4c
        class UBlendSpaceBase* BlendSpace; // 0x50
        class UBlendSpaceBase* PreviousBlendSpace; // 0xe0

    };

    struct FAnimNode_AimOffsetLookAt : FAnimNode_BlendSpacePlayer //ScriptStruct AnimGraphRuntime.AnimNode_AimOffsetLookAt
    {
    //Children Prop Count (Fields): 7
    public:

        struct FPoseLink BasePose; // 0x150
        int32_t LODThreshold; // 0x160
        struct FName SourceSocketName; // 0x164
        struct FName PivotSocketName; // 0x16c
        struct FVector LookAtLocation; // 0x174
        struct FVector SocketAxis; // 0x180
        float Alpha; // 0x18c

    };

    struct FAnimNode_AnimDynamics : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_AnimDynamics
    {
    //Children Prop Count (Fields): 38
    public:

        float LinearDampingOverride; // 0xc8
        float AngularDampingOverride; // 0xcc
        struct FBoneReference RelativeSpaceBone; // 0x130
        struct FBoneReference BoundBone; // 0x140
        struct FBoneReference ChainEnd; // 0x150
        struct FVector BoxExtents; // 0x160
        struct FVector LocalJointOffset; // 0x16c
        float GravityScale; // 0x178
        struct FVector GravityOverride; // 0x17c
        float LinearSpringConstant; // 0x188
        float AngularSpringConstant; // 0x18c
        float WindScale; // 0x190
        struct FVector ComponentLinearAccScale; // 0x194
        struct FVector ComponentLinearVelScale; // 0x1a0
        struct FVector ComponentAppliedLinearAccClamp; // 0x1ac
        float AngularBiasOverride; // 0x1b8
        int32_t NumSolverIterationsPreUpdate; // 0x1bc
        int32_t NumSolverIterationsPostUpdate; // 0x1c0
        struct FAnimPhysConstraintSetup ConstraintSetup; // 0x1c4
        struct TArray<struct FAnimPhysSphericalLimit> SphericalLimits; // 0x210
        float SphereCollisionRadius; // 0x220
        struct FVector ExternalForce; // 0x224
        struct TArray<struct FAnimPhysPlanarLimit> PlanarLimits; // 0x230
        enum class AnimPhysCollisionType CollisionType; // 0x240
        enum class AnimPhysSimSpaceType SimulationSpace; // 0x241
        char bUseSphericalLimits; // 0x244
        char bUsePlanarLimit; // 0x244
        char bDoUpdate; // 0x244
        char bDoEval; // 0x244
        char bOverrideLinearDamping; // 0x244
        char bOverrideAngularBias; // 0x244
        char bOverrideAngularDamping; // 0x244
        char bEnableWind; // 0x244
        char bUseGravityOverride; // 0x245
        char bLinearSpring; // 0x245
        char bAngularSpring; // 0x245
        char bChain; // 0x245
        struct FRotationRetargetingInfo RetargetingSettings; // 0x250

    };

    struct FRotationRetargetingInfo //ScriptStruct AnimGraphRuntime.RotationRetargetingInfo
    {
    //Children Prop Count (Fields): 15
    public:

        bool bEnabled; // 0x0
        struct FTransform Source; // 0x10
        struct FTransform Target; // 0x40
        enum class ERotationComponent RotationComponent; // 0x70
        struct FVector TwistAxis; // 0x74
        bool bUseAbsoluteAngle; // 0x80
        float SourceMinimum; // 0x84
        float SourceMaximum; // 0x88
        float TargetMinimum; // 0x8c
        float TargetMaximum; // 0x90
        enum class EEasingFuncType EasingType; // 0x94
        struct FRuntimeFloatCurve CustomCurve; // 0x98
        bool bFlipEasing; // 0x120
        float EasingWeight; // 0x124
        bool bClamp; // 0x128

    };

    struct FAnimPhysPlanarLimit //ScriptStruct AnimGraphRuntime.AnimPhysPlanarLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference DrivingBone; // 0x0
        struct FTransform PlaneTransform; // 0x10

    };

    struct FAnimPhysSphericalLimit //ScriptStruct AnimGraphRuntime.AnimPhysSphericalLimit
    {
    //Children Prop Count (Fields): 4
    public:

        struct FBoneReference DrivingBone; // 0x0
        struct FVector SphereLocalOffset; // 0x10
        float LimitRadius; // 0x1c
        enum class ESphericalLimitType LimitType; // 0x20

    };

    struct FAnimPhysConstraintSetup //ScriptStruct AnimGraphRuntime.AnimPhysConstraintSetup
    {
    //Children Prop Count (Fields): 12
    public:

        enum class AnimPhysLinearConstraintType LinearXLimitType; // 0x0
        enum class AnimPhysLinearConstraintType LinearYLimitType; // 0x1
        enum class AnimPhysLinearConstraintType LinearZLimitType; // 0x2
        struct FVector LinearAxesMin; // 0x4
        struct FVector LinearAxesMax; // 0x10
        enum class AnimPhysAngularConstraintType AngularConstraintType; // 0x1c
        enum class AnimPhysTwistAxis TwistAxis; // 0x1d
        enum class AnimPhysTwistAxis AngularTargetAxis; // 0x1e
        float ConeAngle; // 0x20
        struct FVector AngularLimitsMin; // 0x24
        struct FVector AngularLimitsMax; // 0x30
        struct FVector AngularTarget; // 0x3c

    };

    struct FAnimNode_ApplyAdditive : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_ApplyAdditive
    {
    //Children Prop Count (Fields): 10
    public:

        struct FPoseLink Base; // 0x10
        struct FPoseLink Additive; // 0x20
        float Alpha; // 0x30
        struct FInputScaleBias AlphaScaleBias; // 0x34
        int32_t LODThreshold; // 0x3c
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x40
        struct FName AlphaCurveName; // 0x88
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x90
        enum class EAnimAlphaInputType AlphaInputType; // 0xc4
        bool bAlphaBoolEnabled; // 0xc5

    };

    struct FAnimNode_ApplyLimits : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_ApplyLimits
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FAngularRangeLimit> AngularRangeLimits; // 0xc8
        struct TArray<struct FVector> AngularOffsets; // 0xd8

    };

    struct FAngularRangeLimit //ScriptStruct AnimGraphRuntime.AngularRangeLimit
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector LimitMin; // 0x0
        struct FVector LimitMax; // 0xc
        struct FBoneReference Bone; // 0x18

    };

    struct FAnimNode_BlendBoneByChannel : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_BlendBoneByChannel
    {
    //Children Prop Count (Fields): 6
    public:

        struct FPoseLink A; // 0x10
        struct FPoseLink B; // 0x20
        struct TArray<struct FBlendBoneByChannelEntry> BoneDefinitions; // 0x30
        float Alpha; // 0x50
        struct FInputScaleBias AlphaScaleBias; // 0x58
        enum class EBoneControlSpace TransformsSpace; // 0x60

    };

    struct FBlendBoneByChannelEntry //ScriptStruct AnimGraphRuntime.BlendBoneByChannelEntry
    {
    //Children Prop Count (Fields): 5
    public:

        struct FBoneReference SourceBone; // 0x0
        struct FBoneReference TargetBone; // 0x10
        bool bBlendTranslation; // 0x20
        bool bBlendRotation; // 0x21
        bool bBlendScale; // 0x22

    };

    struct FAnimNode_BlendListBase : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_BlendListBase
    {
    //Children Prop Count (Fields): 7
    public:

        struct TArray<struct FPoseLink> BlendPose; // 0x10
        struct TArray<float> BlendTime; // 0x20
        enum class EBlendListTransitionType TransitionType; // 0x30
        enum class EAlphaBlendOption BlendType; // 0x31
        bool bResetChildOnActivation; // 0x32
        class UCurveFloat* CustomBlendCurve; // 0x38
        class UBlendProfile* BlendProfile; // 0x40

    };

    struct FAnimNode_BlendListByBool : FAnimNode_BlendListBase //ScriptStruct AnimGraphRuntime.AnimNode_BlendListByBool
    {
    //Children Prop Count (Fields): 1
    public:

        bool bActiveValue; // 0x98

    };

    struct FAnimNode_BlendListByEnum : FAnimNode_BlendListBase //ScriptStruct AnimGraphRuntime.AnimNode_BlendListByEnum
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<int32_t> EnumToPoseIndex; // 0x98
        char ActiveEnumValue; // 0xa8

    };

    struct FAnimNode_BlendListByInt : FAnimNode_BlendListBase //ScriptStruct AnimGraphRuntime.AnimNode_BlendListByInt
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t ActiveChildIndex; // 0x98

    };

    struct FAnimNode_BlendSpaceEvaluator : FAnimNode_BlendSpacePlayer //ScriptStruct AnimGraphRuntime.AnimNode_BlendSpaceEvaluator
    {
    //Children Prop Count (Fields): 1
    public:

        float NormalizedTime; // 0xe8

    };

    struct FAnimNode_BoneDrivenController : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_BoneDrivenController
    {
    //Children Prop Count (Fields): 22
    public:

        struct FBoneReference SourceBone; // 0xc8
        class UCurveFloat* DrivingCurve; // 0xd8
        float Multiplier; // 0xe0
        float RangeMin; // 0xe4
        float RangeMax; // 0xe8
        float RemappedMin; // 0xec
        float RemappedMax; // 0xf0
        struct FName ParameterName; // 0xf4
        struct FBoneReference TargetBone; // 0xfc
        enum class EDrivenDestinationMode DestinationMode; // 0x10c
        enum class EDrivenBoneModificationMode ModificationMode; // 0x10d
        enum class EComponentType SourceComponent; // 0x10e
        char bUseRange; // 0x10f
        char bAffectTargetTranslationX; // 0x10f
        char bAffectTargetTranslationY; // 0x10f
        char bAffectTargetTranslationZ; // 0x10f
        char bAffectTargetRotationX; // 0x10f
        char bAffectTargetRotationY; // 0x10f
        char bAffectTargetRotationZ; // 0x10f
        char bAffectTargetScaleX; // 0x10f
        char bAffectTargetScaleY; // 0x110
        char bAffectTargetScaleZ; // 0x110

    };

    struct FAnimNode_CCDIK : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_CCDIK
    {
    //Children Prop Count (Fields): 10
    public:

        struct FVector EffectorLocation; // 0xc8
        enum class EBoneControlSpace EffectorLocationSpace; // 0xd4
        struct FBoneSocketTarget EffectorTarget; // 0xe0
        struct FBoneReference TipBone; // 0x140
        struct FBoneReference RootBone; // 0x150
        float Precision; // 0x160
        int32_t MaxIterations; // 0x164
        bool bStartFromTail; // 0x168
        bool bEnableRotationLimit; // 0x169
        struct TArray<float> RotationLimitPerJoints; // 0x170

    };

    struct FBoneSocketTarget //ScriptStruct AnimGraphRuntime.BoneSocketTarget
    {
    //Children Prop Count (Fields): 3
    public:

        bool bUseSocket; // 0x0
        struct FBoneReference BoneReference; // 0x4
        struct FSocketReference SocketReference; // 0x20

    };

    struct FSocketReference //ScriptStruct AnimGraphRuntime.SocketReference
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName SocketName; // 0x30

    };

    struct FAnimNode_Constraint : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_Constraint
    {
    //Children Prop Count (Fields): 3
    public:

        struct FBoneReference BoneToModify; // 0xc8
        struct TArray<struct FConstraint> ConstraintSetup; // 0xd8
        struct TArray<float> ConstraintWeights; // 0xe8

    };

    struct FConstraint //ScriptStruct AnimGraphRuntime.Constraint
    {
    //Children Prop Count (Fields): 4
    public:

        struct FBoneReference TargetBone; // 0x0
        enum class EConstraintOffsetOption OffsetOption; // 0x10
        enum class ETransformConstraintType TransformType; // 0x11
        struct FFilterOptionPerAxis PerAxis; // 0x12

    };

    struct FAnimNode_CopyBone : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_CopyBone
    {
    //Children Prop Count (Fields): 6
    public:

        struct FBoneReference SourceBone; // 0xc8
        struct FBoneReference TargetBone; // 0xd8
        bool bCopyTranslation; // 0xe8
        bool bCopyRotation; // 0xe9
        bool bCopyScale; // 0xea
        enum class EBoneControlSpace ControlSpace; // 0xeb

    };

    struct FAnimNode_CopyBoneDelta : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_CopyBoneDelta
    {
    //Children Prop Count (Fields): 9
    public:

        struct FBoneReference SourceBone; // 0xc8
        struct FBoneReference TargetBone; // 0xd8
        bool bCopyTranslation; // 0xe8
        bool bCopyRotation; // 0xe9
        bool bCopyScale; // 0xea
        enum class CopyBoneDeltaMode CopyMode; // 0xeb
        float TranslationMultiplier; // 0xec
        float RotationMultiplier; // 0xf0
        float ScaleMultiplier; // 0xf4

    };

    struct FAnimNode_CopyPoseFromMesh : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_CopyPoseFromMesh
    {
    //Children Prop Count (Fields): 6
    public:

        struct TWeakObjectPtr<struct USkeletalMeshComponent> SourceMeshComponent; // 0x10
        char bUseAttachedParent; // 0x18
        char bCopyCurves; // 0x18
        bool bCopyCustomAttributes; // 0x19
        char bUseMeshPose; // 0x1a
        struct FName RootBoneToCopy; // 0x1c

    };

    struct FAnimNode_CurveSource : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_CurveSource
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPoseLink SourcePose; // 0x10
        struct FName SourceBinding; // 0x20
        float Alpha; // 0x28
        struct TScriptInterface<ICurveSourceInterface> CurveSource; // 0x30

    };

    struct FAnimNode_Fabrik : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_Fabrik
    {
    //Children Prop Count (Fields): 8
    public:

        struct FTransform EffectorTransform; // 0xd0
        struct FBoneSocketTarget EffectorTarget; // 0x100
        struct FBoneReference TipBone; // 0x160
        struct FBoneReference RootBone; // 0x170
        float Precision; // 0x180
        int32_t MaxIterations; // 0x184
        enum class EBoneControlSpace EffectorTransformSpace; // 0x188
        enum class EBoneRotationSource EffectorRotationSource; // 0x189

    };

    struct FAnimNode_HandIKRetargeting : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_HandIKRetargeting
    {
    //Children Prop Count (Fields): 6
    public:

        struct FBoneReference RightHandFK; // 0xc8
        struct FBoneReference LeftHandFK; // 0xd8
        struct FBoneReference RightHandIK; // 0xe8
        struct FBoneReference LeftHandIK; // 0xf8
        struct TArray<struct FBoneReference> IKBonesToMove; // 0x108
        float HandFKWeight; // 0x118

    };

    struct FAnimNode_LayeredBoneBlend : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_LayeredBoneBlend
    {
    //Children Prop Count (Fields): 12
    public:

        struct FPoseLink BasePose; // 0x10
        struct TArray<struct FPoseLink> BlendPoses; // 0x20
        struct TArray<struct FInputBlendPose> LayerSetup; // 0x30
        struct TArray<float> BlendWeights; // 0x40
        bool bMeshSpaceRotationBlend; // 0x50
        bool bMeshSpaceScaleBlend; // 0x51
        enum class ECurveBlendOption CurveBlendOption; // 0x52
        bool bBlendRootMotionBasedOnRootBone; // 0x53
        int32_t LODThreshold; // 0x58
        struct TArray<struct FPerBoneBlendWeight> PerBoneBlendWeights; // 0x60
        struct FGuid SkeletonGuid; // 0x70
        struct FGuid VirtualBoneGuid; // 0x80

    };

    struct FPerBoneBlendWeight //ScriptStruct Engine.PerBoneBlendWeight
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t SourceIndex; // 0x0
        float BlendWeight; // 0x4

    };

    struct FAnimNode_LegIK : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_LegIK
    {
    //Children Prop Count (Fields): 3
    public:

        float ReachPrecision; // 0xc8
        int32_t MaxIterations; // 0xcc
        struct TArray<struct FAnimLegIKDefinition> LegsDefinition; // 0xd0

    };

    struct FAnimLegIKDefinition //ScriptStruct AnimGraphRuntime.AnimLegIKDefinition
    {
    //Children Prop Count (Fields): 8
    public:

        struct FBoneReference IKFootBone; // 0x0
        struct FBoneReference FKFootBone; // 0x10
        int32_t NumBonesInLimb; // 0x20
        float MinRotationAngle; // 0x24
        enum class EAxis FootBoneForwardAxis; // 0x28
        enum class EAxis HingeRotationAxis; // 0x29
        bool bEnableRotationLimit; // 0x2a
        bool bEnableKneeTwistCorrection; // 0x2b

    };

    struct FAnimLegIKData //ScriptStruct AnimGraphRuntime.AnimLegIKData
    {
    public:


    };

    struct FIKChain //ScriptStruct AnimGraphRuntime.IKChain
    {
    public:


    };

    struct FIKChainLink //ScriptStruct AnimGraphRuntime.IKChainLink
    {
    public:


    };

    struct FAnimNode_LookAt : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_LookAt
    {
    //Children Prop Count (Fields): 10
    public:

        struct FBoneReference BoneToModify; // 0xc8
        struct FBoneSocketTarget LookAtTarget; // 0xe0
        struct FVector LookAtLocation; // 0x140
        struct FAxis LookAt_Axis; // 0x14c
        bool bUseLookUpAxis; // 0x15c
        enum class EInterpolationBlend InterpolationType; // 0x15d
        struct FAxis LookUp_Axis; // 0x160
        float LookAtClamp; // 0x170
        float InterpolationTime; // 0x174
        float InterpolationTriggerThreashold; // 0x178

    };

    struct FAnimNode_MakeDynamicAdditive : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_MakeDynamicAdditive
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPoseLink Base; // 0x10
        struct FPoseLink Additive; // 0x20
        bool bMeshSpaceAdditive; // 0x30

    };

    struct FAnimNode_ModifyBone : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_ModifyBone
    {
    //Children Prop Count (Fields): 10
    public:

        struct FBoneReference BoneToModify; // 0xc8
        struct FVector Translation; // 0xd8
        struct FRotator Rotation; // 0xe4
        struct FVector Scale; // 0xf0
        enum class EBoneModificationMode TranslationMode; // 0xfc
        enum class EBoneModificationMode RotationMode; // 0xfd
        enum class EBoneModificationMode ScaleMode; // 0xfe
        enum class EBoneControlSpace TranslationSpace; // 0xff
        enum class EBoneControlSpace RotationSpace; // 0x100
        enum class EBoneControlSpace ScaleSpace; // 0x101

    };

    struct FAnimNode_ModifyCurve : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_ModifyCurve
    {
    //Children Prop Count (Fields): 5
    public:

        struct FPoseLink SourcePose; // 0x10
        struct TArray<float> CurveValues; // 0x20
        struct TArray<struct FName> CurveNames; // 0x30
        float Alpha; // 0x50
        enum class EModifyCurveApplyMode ApplyMode; // 0x54

    };

    struct FAnimNode_MultiWayBlend : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_MultiWayBlend
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FPoseLink> Poses; // 0x10
        struct TArray<float> DesiredAlphas; // 0x20
        struct FInputScaleBias AlphaScaleBias; // 0x40
        bool bAdditiveNode; // 0x48
        bool bNormalizeAlpha; // 0x49

    };

    struct FAnimNode_ObserveBone : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_ObserveBone
    {
    //Children Prop Count (Fields): 6
    public:

        struct FBoneReference BoneToObserve; // 0xc8
        enum class EBoneControlSpace DisplaySpace; // 0xd8
        bool bRelativeToRefPose; // 0xd9
        struct FVector Translation; // 0xdc
        struct FRotator Rotation; // 0xe8
        struct FVector Scale; // 0xf4

    };

    struct FAnimNode_PoseHandler : FAnimNode_AssetPlayerBase //ScriptStruct AnimGraphRuntime.AnimNode_PoseHandler
    {
    //Children Prop Count (Fields): 1
    public:

        class UPoseAsset* PoseAsset; // 0x38

    };

    struct FAnimNode_PoseBlendNode : FAnimNode_PoseHandler //ScriptStruct AnimGraphRuntime.AnimNode_PoseBlendNode
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPoseLink SourcePose; // 0x80
        enum class EAlphaBlendOption BlendOption; // 0x90
        class UCurveFloat* CustomCurve; // 0x98

    };

    struct FAnimNode_PoseByName : FAnimNode_PoseHandler //ScriptStruct AnimGraphRuntime.AnimNode_PoseByName
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName PoseName; // 0x80
        float PoseWeight; // 0x88

    };

    struct FAnimNode_PoseDriver : FAnimNode_PoseHandler //ScriptStruct AnimGraphRuntime.AnimNode_PoseDriver
    {
    //Children Prop Count (Fields): 10
    public:

        struct FPoseLink SourcePose; // 0x80
        struct TArray<struct FBoneReference> SourceBones; // 0x90
        struct TArray<struct FBoneReference> OnlyDriveBones; // 0xa0
        struct TArray<struct FPoseDriverTarget> PoseTargets; // 0xb0
        struct FBoneReference EvalSpaceBone; // 0xf0
        struct FRBFParams RBFParams; // 0x100
        enum class EPoseDriverSource DriveSource; // 0x12c
        enum class EPoseDriverOutput DriveOutput; // 0x12d
        char bOnlyDriveSelectedBones; // 0x12e
        int32_t LODThreshold; // 0x130

    };

    struct FRBFParams //ScriptStruct AnimGraphRuntime.RBFParams
    {
    //Children Prop Count (Fields): 12
    public:

        int32_t TargetDimensions; // 0x0
        enum class ERBFSolverType SolverType; // 0x4
        float Radius; // 0x8
        bool bAutomaticRadius; // 0xc
        enum class ERBFFunctionType Function; // 0xd
        enum class ERBFDistanceMethod DistanceMethod; // 0xe
        enum class EBoneAxis TwistAxis; // 0xf
        float WeightThreshold; // 0x10
        enum class ERBFNormalizeMethod NormalizeMethod; // 0x14
        struct FVector MedianReference; // 0x18
        float MedianMin; // 0x24
        float MedianMax; // 0x28

    };

    struct FPoseDriverTarget //ScriptStruct AnimGraphRuntime.PoseDriverTarget
    {
    //Children Prop Count (Fields): 9
    public:

        struct TArray<struct FPoseDriverTransform> BoneTransforms; // 0x0
        struct FRotator TargetRotation; // 0x10
        float TargetScale; // 0x1c
        enum class ERBFDistanceMethod DistanceMethod; // 0x20
        enum class ERBFFunctionType FunctionType; // 0x21
        bool bApplyCustomCurve; // 0x22
        struct FRichCurve CustomCurve; // 0x28
        struct FName DrivenName; // 0xa8
        bool bIsHidden; // 0xb8

    };

    struct FPoseDriverTransform //ScriptStruct AnimGraphRuntime.PoseDriverTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector TargetTranslation; // 0x0
        struct FRotator TargetRotation; // 0xc

    };

    struct FAnimNode_PoseSnapshot : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_PoseSnapshot
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName SnapshotName; // 0x10
        struct FPoseSnapshot Snapshot; // 0x18
        enum class ESnapshotSourceMode Mode; // 0x50

    };

    struct FPoseSnapshot //ScriptStruct Engine.PoseSnapshot
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FTransform> LocalTransforms; // 0x0
        struct TArray<struct FName> BoneNames; // 0x10
        struct FName SkeletalMeshName; // 0x20
        struct FName SnapshotName; // 0x28
        bool bIsValid; // 0x30

    };

    struct FAnimNode_RandomPlayer : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_RandomPlayer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FRandomPlayerSequenceEntry> entries; // 0x10
        bool bShuffleMode; // 0x70

    };

    struct FRandomPlayerSequenceEntry //ScriptStruct AnimGraphRuntime.RandomPlayerSequenceEntry
    {
    //Children Prop Count (Fields): 7
    public:

        class UAnimSequence* Sequence; // 0x0
        float ChanceToPlay; // 0x8
        int32_t MinLoopCount; // 0xc
        int32_t MaxLoopCount; // 0x10
        float MinPlayRate; // 0x14
        float MaxPlayRate; // 0x18
        struct FAlphaBlend BlendIn; // 0x20

    };

    struct FAnimNode_MeshSpaceRefPose : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_MeshSpaceRefPose
    {
    public:


    };

    struct FAnimNode_RefPose : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_RefPose
    {
    //Children Prop Count (Fields): 1
    public:

        enum class ERefPoseType RefPoseType; // 0x10

    };

    struct FAnimNode_ResetRoot : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_ResetRoot
    {
    public:


    };

    struct FAnimNode_RigidBody : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_RigidBody
    {
    //Children Prop Count (Fields): 19
    public:

        class UPhysicsAsset* OverridePhysicsAsset; // 0xc8
        struct FVector OverrideWorldGravity; // 0x168
        struct FVector ExternalForce; // 0x174
        struct FVector ComponentLinearAccScale; // 0x180
        struct FVector ComponentLinearVelScale; // 0x18c
        struct FVector ComponentAppliedLinearAccClamp; // 0x198
        struct FSimSpaceSettings SimSpaceSettings; // 0x1a4
        float CachedBoundsScale; // 0x1e4
        struct FBoneReference BaseBoneRef; // 0x1e8
        enum class ECollisionChannel OverlapChannel; // 0x1f8
        enum class ESimulationSpace SimulationSpace; // 0x1f9
        bool bForceDisableCollisionBetweenConstraintBodies; // 0x1fa
        char bEnableWorldGeometry; // 0x1fc
        char bOverrideWorldGravity; // 0x1fc
        char bTransferBoneVelocities; // 0x1fc
        char bFreezeIncomingPoseOnStart; // 0x1fc
        char bClampLinearTranslationLimitToRefPose; // 0x1fc
        float WorldSpaceMinimumScale; // 0x200
        float EvaluationResetTime; // 0x204

    };

    struct FSimSpaceSettings //ScriptStruct AnimGraphRuntime.SimSpaceSettings
    {
    //Children Prop Count (Fields): 10
    public:

        float MasterAlpha; // 0x0
        float VelocityScaleZ; // 0x4
        float MaxLinearVelocity; // 0x8
        float MaxAngularVelocity; // 0xc
        float MaxLinearAcceleration; // 0x10
        float MaxAngularAcceleration; // 0x14
        float ExternalLinearDrag; // 0x18
        struct FVector ExternalLinearDragV; // 0x1c
        struct FVector ExternalLinearVelocity; // 0x28
        struct FVector ExternalAngularVelocity; // 0x34

    };

    struct FAnimNode_RotateRootBone : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_RotateRootBone
    {
    //Children Prop Count (Fields): 6
    public:

        struct FPoseLink BasePose; // 0x10
        float Pitch; // 0x20
        float Yaw; // 0x24
        struct FInputScaleBiasClamp PitchScaleBiasClamp; // 0x28
        struct FInputScaleBiasClamp YawScaleBiasClamp; // 0x58
        struct FRotator MeshToComponent; // 0x88

    };

    struct FAnimNode_RotationMultiplier : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_RotationMultiplier
    {
    //Children Prop Count (Fields): 5
    public:

        struct FBoneReference TargetBone; // 0xc8
        struct FBoneReference SourceBone; // 0xd8
        float Multiplier; // 0xe8
        enum class EBoneAxis RotationAxisToRefer; // 0xec
        bool bIsAdditive; // 0xed

    };

    struct FAnimNode_RotationOffsetBlendSpace : FAnimNode_BlendSpacePlayer //ScriptStruct AnimGraphRuntime.AnimNode_RotationOffsetBlendSpace
    {
    //Children Prop Count (Fields): 9
    public:

        struct FPoseLink BasePose; // 0xe8
        int32_t LODThreshold; // 0xf8
        float Alpha; // 0xfc
        struct FInputScaleBias AlphaScaleBias; // 0x100
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x108
        struct FName AlphaCurveName; // 0x150
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x158
        enum class EAnimAlphaInputType AlphaInputType; // 0x18c
        bool bAlphaBoolEnabled; // 0x18d

    };

    struct FAnimNode_ScaleChainLength : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_ScaleChainLength
    {
    //Children Prop Count (Fields): 8
    public:

        struct FPoseLink InputPose; // 0x10
        float DefaultChainLength; // 0x20
        struct FBoneReference ChainStartBone; // 0x24
        struct FBoneReference ChainEndBone; // 0x34
        struct FVector TargetLocation; // 0x44
        float Alpha; // 0x50
        struct FInputScaleBias AlphaScaleBias; // 0x58
        enum class EScaleChainInitialLength ChainInitialLength; // 0x60

    };

    struct FAnimNode_SequenceEvaluator : FAnimNode_AssetPlayerBase //ScriptStruct AnimGraphRuntime.AnimNode_SequenceEvaluator
    {
    //Children Prop Count (Fields): 7
    public:

        class UAnimSequenceBase* Sequence; // 0x38
        float ExplicitTime; // 0x40
        float NormalizedTime; // 0x44
        bool bShouldLoop; // 0x48
        bool bTeleportToExplicitTime; // 0x49
        enum class ESequenceEvalReinit ReinitializationBehavior; // 0x4a
        float StartPosition; // 0x4c

    };

    struct FAnimNode_Slot : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_Slot
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPoseLink Source; // 0x10
        struct FName SlotName; // 0x20
        bool bAlwaysUpdateSourcePose; // 0x28

    };

    struct FAnimNode_SplineIK : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_SplineIK
    {
    //Children Prop Count (Fields): 12
    public:

        struct FBoneReference StartBone; // 0xc8
        struct FBoneReference EndBone; // 0xd8
        enum class ESplineBoneAxis BoneAxis; // 0xe8
        bool bAutoCalculateSpline; // 0xe9
        int32_t PointCount; // 0xec
        struct TArray<struct FTransform> ControlPoints; // 0xf0
        float Roll; // 0x100
        float TwistStart; // 0x104
        float TwistEnd; // 0x108
        struct FAlphaBlend TwistBlend; // 0x110
        float Stretch; // 0x140
        float Offset; // 0x144

    };

    struct FSplineIKCachedBoneData //ScriptStruct AnimGraphRuntime.SplineIKCachedBoneData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference Bone; // 0x0
        int32_t RefSkeletonIndex; // 0x10

    };

    struct FAnimNode_SpringBone : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_SpringBone
    {
    //Children Prop Count (Fields): 12
    public:

        struct FBoneReference SpringBone; // 0xc8
        float MaxDisplacement; // 0xd8
        float SpringStiffness; // 0xdc
        float SpringDamping; // 0xe0
        float ErrorResetThresh; // 0xe4
        char bLimitDisplacement; // 0x124
        char bTranslateX; // 0x124
        char bTranslateY; // 0x124
        char bTranslateZ; // 0x124
        char bRotateX; // 0x124
        char bRotateY; // 0x124
        char bRotateZ; // 0x124

    };

    struct FAnimNode_Root : FAnimNode_Base //ScriptStruct Engine.AnimNode_Root
    {
    //Children Prop Count (Fields): 3
    public:

        struct FPoseLink Result; // 0x10
        struct FName Name; // 0x20
        struct FName Group; // 0x28

    };

    struct FAnimNode_StateResult : FAnimNode_Root //ScriptStruct AnimGraphRuntime.AnimNode_StateResult
    {
    public:


    };

    struct FAnimNode_Trail : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_Trail
    {
    //Children Prop Count (Fields): 20
    public:

        struct FBoneReference TrailBone; // 0x100
        int32_t ChainLength; // 0x110
        enum class EAxis ChainBoneAxis; // 0x114
        char bInvertChainBoneAxis; // 0x115
        char bLimitStretch; // 0x115
        char bLimitRotation; // 0x115
        char bUsePlanarLimit; // 0x115
        char bActorSpaceFakeVel; // 0x115
        char bReorientParentToChild; // 0x115
        float MaxDeltaTime; // 0x118
        float RelaxationSpeedScale; // 0x11c
        struct FRuntimeFloatCurve TrailRelaxationSpeed; // 0x120
        struct FInputScaleBiasClamp RelaxationSpeedScaleInputProcessor; // 0x1a8
        struct TArray<struct FRotationLimit> RotationLimits; // 0x1d8
        struct TArray<struct FVector> RotationOffsets; // 0x1e8
        struct TArray<struct FAnimPhysPlanarLimit> PlanarLimits; // 0x1f8
        float StretchLimit; // 0x208
        struct FVector FakeVelocity; // 0x20c
        struct FBoneReference BaseJoint; // 0x218
        float LastBoneRotationAnimAlphaBlend; // 0x228

    };

    struct FRotationLimit //ScriptStruct AnimGraphRuntime.RotationLimit
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector LimitMin; // 0x0
        struct FVector LimitMax; // 0xc

    };

    struct FAnimNode_TwistCorrectiveNode : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_TwistCorrectiveNode
    {
    //Children Prop Count (Fields): 7
    public:

        struct FReferenceBoneFrame BaseFrame; // 0xc8
        struct FReferenceBoneFrame TwistFrame; // 0xe8
        struct FAxis TwistPlaneNormalAxis; // 0x108
        float RangeMax; // 0x118
        float RemappedMin; // 0x11c
        float RemappedMax; // 0x120
        struct FAnimCurveParam Curve; // 0x124

    };

    struct FAnimCurveParam //ScriptStruct Engine.AnimCurveParam
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName Name; // 0x0

    };

    struct FReferenceBoneFrame //ScriptStruct AnimGraphRuntime.ReferenceBoneFrame
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference Bone; // 0x0
        struct FAxis Axis; // 0x10

    };

    struct FAnimNode_TwoBoneIK : FAnimNode_SkeletalControlBase //ScriptStruct AnimGraphRuntime.AnimNode_TwoBoneIK
    {
    //Children Prop Count (Fields): 14
    public:

        struct FBoneReference IKBone; // 0xc8
        float StartStretchRatio; // 0xd8
        float MaxStretchScale; // 0xdc
        struct FVector EffectorLocation; // 0xe0
        struct FBoneSocketTarget EffectorTarget; // 0xf0
        struct FVector JointTargetLocation; // 0x150
        struct FBoneSocketTarget JointTarget; // 0x160
        struct FAxis TwistAxis; // 0x1c0
        enum class EBoneControlSpace EffectorLocationSpace; // 0x1d0
        enum class EBoneControlSpace JointTargetLocationSpace; // 0x1d1
        char bAllowStretching; // 0x1d2
        char bTakeRotationFromEffectorSpace; // 0x1d2
        char bMaintainEffectorRelRot; // 0x1d2
        char bAllowTwist; // 0x1d2

    };

    struct FAnimNode_TwoWayBlend : FAnimNode_Base //ScriptStruct AnimGraphRuntime.AnimNode_TwoWayBlend
    {
    //Children Prop Count (Fields): 10
    public:

        struct FPoseLink A; // 0x10
        struct FPoseLink B; // 0x20
        enum class EAnimAlphaInputType AlphaInputType; // 0x30
        char bAlphaBoolEnabled; // 0x31
        char bResetChildOnActivation; // 0x31
        float Alpha; // 0x34
        struct FInputScaleBias AlphaScaleBias; // 0x38
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x40
        struct FName AlphaCurveName; // 0x88
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x90

    };

    struct FPositionHistory //ScriptStruct AnimGraphRuntime.PositionHistory
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FVector> Positions; // 0x0
        float Range; // 0x10

    };

    struct FRBFEntry //ScriptStruct AnimGraphRuntime.RBFEntry
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<float> Values; // 0x0

    };

    struct FRBFTarget : FRBFEntry //ScriptStruct AnimGraphRuntime.RBFTarget
    {
    //Children Prop Count (Fields): 5
    public:

        float ScaleFactor; // 0x10
        bool bApplyCustomCurve; // 0x14
        struct FRichCurve CustomCurve; // 0x18
        enum class ERBFDistanceMethod DistanceMethod; // 0x98
        enum class ERBFFunctionType FunctionType; // 0x99

    };

    struct FCachedPropertyPath //ScriptStruct PropertyPath.CachedPropertyPath
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FPropertyPathSegment> Segments; // 0x0
        class UFunction* CachedFunction; // 0x18

    };

    struct FPropertyPathSegment //ScriptStruct PropertyPath.PropertyPathSegment
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        int32_t ArrayIndex; // 0x8
        class UStruct* Struct; // 0x10

    };

    struct FMovieScene3DPathSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieScene3DPathSectionTemplate
    {
    //Children Prop Count (Fields): 7
    public:

        struct FMovieSceneObjectBindingID PathBindingID; // 0x20
        struct FMovieSceneFloatChannel TimingCurve; // 0x38
        enum class MovieScene3DPathSection_Axis FrontAxisEnum; // 0xd8
        enum class MovieScene3DPathSection_Axis UpAxisEnum; // 0xd9
        char bFollow; // 0xdc
        char bReverse; // 0xdc
        char bForceUpright; // 0xdc

    };

    struct FMovieSceneTransformMask //ScriptStruct MovieSceneTracks.MovieSceneTransformMask
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t Mask; // 0x0

    };

    struct FMovieScene3DTransformKeyStruct : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieScene3DTransformKeyStruct
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Location; // 0x8
        struct FRotator Rotation; // 0x14
        struct FVector Scale; // 0x20
        struct FFrameNumber Time; // 0x2c

    };

    struct FMovieScene3DScaleKeyStruct : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieScene3DScaleKeyStruct
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Scale; // 0x8
        struct FFrameNumber Time; // 0x14

    };

    struct FMovieScene3DRotationKeyStruct : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieScene3DRotationKeyStruct
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRotator Rotation; // 0x8
        struct FFrameNumber Time; // 0x14

    };

    struct FMovieScene3DLocationKeyStruct : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieScene3DLocationKeyStruct
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Location; // 0x8
        struct FFrameNumber Time; // 0x14

    };

    struct FMovieSceneActorReferenceData : FMovieSceneChannel //ScriptStruct MovieSceneTracks.MovieSceneActorReferenceData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FFrameNumber> KeyTimes; // 0x8
        struct FMovieSceneActorReferenceKey DefaultValue; // 0x18
        struct TArray<struct FMovieSceneActorReferenceKey> KeyValues; // 0x40

    };

    struct FMovieSceneActorReferenceKey //ScriptStruct MovieSceneTracks.MovieSceneActorReferenceKey
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneObjectBindingID Object; // 0x0
        struct FName ComponentName; // 0x18
        struct FName SocketName; // 0x20

    };

    struct FMovieSceneActorReferenceSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneActorReferenceSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieScenePropertySectionData PropertyData; // 0x20
        struct FMovieSceneActorReferenceData ActorReferenceData; // 0x38

    };

    struct FMovieSceneAudioSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneAudioSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        class UMovieSceneAudioSection* AudioSection; // 0x20

    };

    struct FMovieSceneCameraAnimSectionData //ScriptStruct MovieSceneTracks.MovieSceneCameraAnimSectionData
    {
    //Children Prop Count (Fields): 6
    public:

        class UCameraAnim* CameraAnim; // 0x0
        float PlayRate; // 0x8
        float PlayScale; // 0xc
        float BlendInTime; // 0x10
        float BlendOutTime; // 0x14
        bool bLooping; // 0x18

    };

    struct FMovieSceneCameraAnimSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneCameraAnimSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneCameraAnimSectionData SourceData; // 0x20
        struct FFrameNumber SectionStartTime; // 0x40

    };

    struct FMovieSceneCameraShakeSectionData //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSectionData
    {
    //Children Prop Count (Fields): 4
    public:

        class UCameraShakeBase* ShakeClass; // 0x0
        float PlayScale; // 0x8
        enum class ECameraShakePlaySpace PlaySpace; // 0xc
        struct FRotator UserDefinedPlaySpace; // 0x10

    };

    struct FMovieSceneCameraShakeSourceShakeSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSourceShakeSectionTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneCameraShakeSectionData SourceData; // 0x20
        struct FFrameNumber SectionStartTime; // 0x40
        struct FFrameNumber SectionEndTime; // 0x44

    };

    struct FMovieSceneCameraShakeSourceTriggerChannel : FMovieSceneChannel //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSourceTriggerChannel
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FFrameNumber> KeyTimes; // 0x8
        struct TArray<struct FMovieSceneCameraShakeSourceTrigger> KeyValues; // 0x18

    };

    struct FMovieSceneCameraShakeSourceTrigger //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSourceTrigger
    {
    //Children Prop Count (Fields): 4
    public:

        class UCameraShakeBase* ShakeClass; // 0x0
        float PlayScale; // 0x8
        enum class ECameraShakePlaySpace PlaySpace; // 0xc
        struct FRotator UserDefinedPlaySpace; // 0x10

    };

    struct FMovieSceneCameraShakeSourceTriggerSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSourceTriggerSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FFrameNumber> TriggerTimes; // 0x20
        struct TArray<struct FMovieSceneCameraShakeSourceTrigger> TriggerValues; // 0x30

    };

    struct FMovieSceneCameraShakeSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneCameraShakeSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneCameraShakeSectionData SourceData; // 0x20
        struct FFrameNumber SectionStartTime; // 0x40

    };

    struct FMovieSceneColorKeyStruct : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieSceneColorKeyStruct
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLinearColor Color; // 0x8
        struct FFrameNumber Time; // 0x18

    };

    struct FMovieSceneColorSectionTemplate : FMovieScenePropertySectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneColorSectionTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneFloatChannel Curves; // 0x38
        enum class EMovieSceneBlendType BlendType; // 0x2b8

    };

    struct FMovieSceneEvent //ScriptStruct MovieSceneTracks.MovieSceneEvent
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneEventPtrs Ptrs; // 0x0

    };

    struct FMovieSceneEventPtrs //ScriptStruct MovieSceneTracks.MovieSceneEventPtrs
    {
    //Children Prop Count (Fields): 2
    public:

        class UFunction* Function; // 0x0
        struct TFieldPath<FProperty> BoundObjectProperty; // 0x8

    };

    struct FMovieSceneEventPayloadVariable //ScriptStruct MovieSceneTracks.MovieSceneEventPayloadVariable
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Value; // 0x0

    };

    struct FMovieSceneEventChannel : FMovieSceneChannel //ScriptStruct MovieSceneTracks.MovieSceneEventChannel
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FFrameNumber> KeyTimes; // 0x8
        struct TArray<struct FMovieSceneEvent> KeyValues; // 0x18

    };

    struct FMovieSceneEventSectionData : FMovieSceneChannel //ScriptStruct MovieSceneTracks.MovieSceneEventSectionData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FFrameNumber> Times; // 0x8
        struct TArray<struct FEventPayload> KeyValues; // 0x18

    };

    struct FEventPayload //ScriptStruct MovieSceneTracks.EventPayload
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName EventName; // 0x0
        struct FMovieSceneEventParameters Parameters; // 0x8

    };

    struct FMovieSceneEventParameters //ScriptStruct MovieSceneTracks.MovieSceneEventParameters
    {
    public:


    };

    struct FMovieSceneEventTriggerData //ScriptStruct MovieSceneTracks.MovieSceneEventTriggerData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FMovieSceneEventPtrs Ptrs; // 0x0
        struct FGuid ObjectBindingID; // 0x28

    };

    struct FMovieSceneEventSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneEventSectionTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneEventSectionData eventData; // 0x20
        char bFireEventsWhenForwards; // 0xa8
        char bFireEventsWhenBackwards; // 0xa8

    };

    struct FMovieSceneFadeSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneFadeSectionTemplate
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMovieSceneFloatChannel FadeCurve; // 0x20
        struct FLinearColor FadeColor; // 0xc0
        char bFadeAudio; // 0xd0

    };

    struct FMovieSceneMaterialParameterCollectionTemplate : FMovieSceneParameterSectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneMaterialParameterCollectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        class UMaterialParameterCollection* MPC; // 0x80

    };

    struct FMovieSceneObjectPropertyTemplate : FMovieScenePropertySectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneObjectPropertyTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneObjectPathChannel ObjectChannel; // 0x38

    };

    struct FMovieSceneComponentMaterialSectionTemplate : FMovieSceneParameterSectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneComponentMaterialSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t MaterialIndex; // 0x80

    };

    struct FMovieSceneParticleParameterSectionTemplate : FMovieSceneParameterSectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneParticleParameterSectionTemplate
    {
    public:


    };

    struct FMovieSceneParticleChannel : FMovieSceneByteChannel //ScriptStruct MovieSceneTracks.MovieSceneParticleChannel
    {
    public:


    };

    struct FMovieSceneParticleSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneParticleSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneParticleChannel ParticleKeys; // 0x20

    };

    struct FMovieScenePrimitiveMaterialTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieScenePrimitiveMaterialTemplate
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t MaterialIndex; // 0x20
        struct FMovieSceneObjectPathChannel MaterialChannel; // 0x28

    };

    struct FMovieSceneStringPropertySectionTemplate : FMovieScenePropertySectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneStringPropertySectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneStringChannel StringCurve; // 0x38

    };

    struct FMovieSceneBoolPropertySectionTemplate : FMovieScenePropertySectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneBoolPropertySectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneBoolChannel BoolCurve; // 0x38

    };

    struct FMovieSceneSkeletalAnimationParams //ScriptStruct MovieSceneTracks.MovieSceneSkeletalAnimationParams
    {
    //Children Prop Count (Fields): 12
    public:

        class UAnimSequenceBase* Animation; // 0x0
        struct FFrameNumber FirstLoopStartFrameOffset; // 0x8
        struct FFrameNumber StartFrameOffset; // 0xc
        struct FFrameNumber EndFrameOffset; // 0x10
        float PlayRate; // 0x14
        char bReverse; // 0x18
        struct FName SlotName; // 0x1c
        struct FMovieSceneFloatChannel weight; // 0x28
        bool bSkipAnimNotifiers; // 0xc8
        bool bForceCustomMode; // 0xc9
        float StartOffset; // 0xcc
        float EndOffset; // 0xd0

    };

    struct FMovieSceneSkeletalAnimationSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneSkeletalAnimationSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneSkeletalAnimationSectionTemplateParameters Params; // 0x20

    };

    struct FMovieSceneSkeletalAnimationSectionTemplateParameters : FMovieSceneSkeletalAnimationParams //ScriptStruct MovieSceneTracks.MovieSceneSkeletalAnimationSectionTemplateParameters
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameNumber SectionStartTime; // 0xd8
        struct FFrameNumber SectionEndTime; // 0xdc

    };

    struct FMovieSceneSkeletalAnimRootMotionTrackParams //ScriptStruct MovieSceneTracks.MovieSceneSkeletalAnimRootMotionTrackParams
    {
    public:


    };

    struct FMovieSceneSlomoSectionTemplate : FMovieSceneEvalTemplate //ScriptStruct MovieSceneTracks.MovieSceneSlomoSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMovieSceneFloatChannel SlomoCurve; // 0x20

    };

    struct FLevelVisibilityComponentData //ScriptStruct MovieSceneTracks.LevelVisibilityComponentData
    {
    //Children Prop Count (Fields): 1
    public:

        class UMovieSceneLevelVisibilitySection* Section; // 0x0

    };

    struct FMovieSceneVectorKeyStructBase : FMovieSceneKeyStruct //ScriptStruct MovieSceneTracks.MovieSceneVectorKeyStructBase
    {
    //Children Prop Count (Fields): 1
    public:

        struct FFrameNumber Time; // 0x8

    };

    struct FMovieSceneVector4KeyStruct : FMovieSceneVectorKeyStructBase //ScriptStruct MovieSceneTracks.MovieSceneVector4KeyStruct
    {
    //Children Prop Count (Fields): 1
    public:

        struct FVector4 Vector; // 0x30

    };

    struct FMovieSceneVectorKeyStruct : FMovieSceneVectorKeyStructBase //ScriptStruct MovieSceneTracks.MovieSceneVectorKeyStruct
    {
    //Children Prop Count (Fields): 1
    public:

        struct FVector Vector; // 0x28

    };

    struct FMovieSceneVector2DKeyStruct : FMovieSceneVectorKeyStructBase //ScriptStruct MovieSceneTracks.MovieSceneVector2DKeyStruct
    {
    //Children Prop Count (Fields): 1
    public:

        struct FVector2D Vector; // 0x28

    };

    struct FMovieSceneVisibilitySectionTemplate : FMovieSceneBoolPropertySectionTemplate //ScriptStruct MovieSceneTracks.MovieSceneVisibilitySectionTemplate
    {
    public:


    };

    struct FAnchorData //ScriptStruct UMG.AnchorData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMargin Offsets; // 0x0
        struct FAnchors Anchors; // 0x10
        struct FVector2D Alignment; // 0x20

    };

    struct FDynamicPropertyPath : FCachedPropertyPath //ScriptStruct UMG.DynamicPropertyPath
    {
    public:


    };

    struct FMovieScene2DTransformMask //ScriptStruct UMG.MovieScene2DTransformMask
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t Mask; // 0x0

    };

    struct FMovieSceneWidgetMaterialSectionTemplate : FMovieSceneParameterSectionTemplate //ScriptStruct UMG.MovieSceneWidgetMaterialSectionTemplate
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> BrushPropertyNamePath; // 0x80

    };

    struct FRadialBoxSettings //ScriptStruct UMG.RadialBoxSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float StartingAngle; // 0x0
        bool bDistributeItemsEvenly; // 0x4
        float AngleBetweenItems; // 0x8
        float SectorCentralAngle; // 0xc

    };

    struct FRichTextStyleRow : FTableRowBase //ScriptStruct UMG.RichTextStyleRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FTextBlockStyle TextStyle; // 0x8

    };

    struct FRichImageRow : FTableRowBase //ScriptStruct UMG.RichImageRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct FSlateBrush Brush; // 0x8

    };

    struct FSlateMeshVertex //ScriptStruct UMG.SlateMeshVertex
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector2D Position; // 0x0
        struct FColor Color; // 0x8
        struct FVector2D UV0; // 0xc
        struct FVector2D UV1; // 0x14
        struct FVector2D UV2; // 0x1c
        struct FVector2D UV3; // 0x24
        struct FVector2D UV4; // 0x2c
        struct FVector2D UV5; // 0x34

    };

    struct FSlateChildSize //ScriptStruct UMG.SlateChildSize
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x0
        enum class ESlateSizeRule SizeRule; // 0x4

    };

    struct FUserWidgetPool //ScriptStruct UMG.UserWidgetPool
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<class UUserWidget*> ActiveWidgets; // 0x0
        struct TArray<class UUserWidget*> InactiveWidgets; // 0x10

    };

    struct FWidgetAnimationBinding //ScriptStruct UMG.WidgetAnimationBinding
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName WidgetName; // 0x0
        struct FName SlotWidgetName; // 0x8
        struct FGuid AnimationGuid; // 0x10
        bool bIsRootWidget; // 0x20

    };

    struct FBlueprintWidgetAnimationDelegateBinding //ScriptStruct UMG.BlueprintWidgetAnimationDelegateBinding
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EWidgetAnimationEvent Action; // 0x0
        struct FName AnimationToBind; // 0x4
        struct FName FunctionNameToBind; // 0xc
        struct FName UserTag; // 0x14

    };

    struct FDelegateRuntimeBinding //ScriptStruct UMG.DelegateRuntimeBinding
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ObjectName; // 0x0
        struct FName PropertyName; // 0x10
        struct FName FunctionName; // 0x18
        struct FDynamicPropertyPath SourcePath; // 0x20
        enum class EBindingKind Kind; // 0x48

    };

    struct FActorComponentInstanceData //ScriptStruct Engine.ActorComponentInstanceData
    {
    //Children Prop Count (Fields): 8
    public:

        class UObject* SourceComponentTemplate; // 0x8
        enum class EComponentCreationMethod SourceComponentCreationMethod; // 0x10
        int32_t SourceComponentTypeSerializedIndex; // 0x14
        struct TArray<char> SavedProperties; // 0x18
        struct FActorComponentDuplicatedObjectData UniqueTransientPackage; // 0x28
        struct TArray<struct FActorComponentDuplicatedObjectData> DuplicatedObjects; // 0x38
        struct TArray<class UObject*> ReferencedObjects; // 0x48
        struct TArray<struct FName> ReferencedNames; // 0x58

    };

    struct FActorComponentDuplicatedObjectData //ScriptStruct Engine.ActorComponentDuplicatedObjectData
    {
    public:


    };

    struct FSceneComponentInstanceData : FActorComponentInstanceData //ScriptStruct Engine.SceneComponentInstanceData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<class USceneComponent*, struct FTransform> AttachedInstanceComponents; // 0x68

    };

    struct FWidgetComponentInstanceData : FSceneComponentInstanceData //ScriptStruct UMG.WidgetComponentInstanceData
    {
    public:


    };

    struct FWidgetNavigationData //ScriptStruct UMG.WidgetNavigationData
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EUINavigationRule Rule; // 0x0
        struct FName WidgetToFocus; // 0x4
        struct TWeakObjectPtr<struct UWidget> Widget; // 0xc
        struct FDelegate CustomDelegate; // 0x14

    };

    struct FCameraLookatTrackingSettings //ScriptStruct CinematicCamera.CameraLookatTrackingSettings
    {
    //Children Prop Count (Fields): 6
    public:

        char bEnableLookAtTracking; // 0x0
        char bDrawDebugLookAtTrackingPosition; // 0x0
        float LookAtTrackingInterpSpeed; // 0x4
        struct TSoftObjectPtr<AActor> ActorToTrack; // 0x18
        struct FVector RelativeOffset; // 0x40
        char bAllowRoll; // 0x4c

    };

    struct FCameraFocusSettings //ScriptStruct CinematicCamera.CameraFocusSettings
    {
    //Children Prop Count (Fields): 8
    public:

        enum class ECameraFocusMethod FocusMethod; // 0x0
        float ManualFocusDistance; // 0x4
        struct FCameraTrackingFocusSettings TrackingFocusSettings; // 0x8
        char bDrawDebugFocusPlane; // 0x40
        struct FColor DebugFocusPlaneColor; // 0x44
        char bSmoothFocusChanges; // 0x48
        float FocusSmoothingInterpSpeed; // 0x4c
        float FocusOffset; // 0x50

    };

    struct FCameraTrackingFocusSettings //ScriptStruct CinematicCamera.CameraTrackingFocusSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct TSoftObjectPtr<AActor> ActorToTrack; // 0x0
        struct FVector RelativeOffset; // 0x28
        char bDrawDebugTrackingFocusPoint; // 0x34

    };

    struct FNamedLensPreset //ScriptStruct CinematicCamera.NamedLensPreset
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FCameraLensSettings LensSettings; // 0x10

    };

    struct FCameraLensSettings //ScriptStruct CinematicCamera.CameraLensSettings
    {
    //Children Prop Count (Fields): 6
    public:

        float MinFocalLength; // 0x0
        float MaxFocalLength; // 0x4
        float MinFStop; // 0x8
        float MaxFStop; // 0xc
        float MinimumFocusDistance; // 0x10
        int32_t DiaphragmBladeCount; // 0x14

    };

    struct FNamedFilmbackPreset //ScriptStruct CinematicCamera.NamedFilmbackPreset
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FCameraFilmbackSettings FilmbackSettings; // 0x10

    };

    struct FCameraFilmbackSettings //ScriptStruct CinematicCamera.CameraFilmbackSettings
    {
    //Children Prop Count (Fields): 3
    public:

        float SensorWidth; // 0x0
        float SensorHeight; // 0x4
        float SensorAspectRatio; // 0x8

    };

    struct FPlatformRuntimeAudioCompressionOverrides //ScriptStruct AudioPlatformConfiguration.PlatformRuntimeAudioCompressionOverrides
    {
    //Children Prop Count (Fields): 4
    public:

        bool bOverrideCompressionTimes; // 0x0
        float DurationThreshold; // 0x4
        int32_t MaxNumRandomBranches; // 0x8
        int32_t SoundCueQualityIndex; // 0xc

    };

    struct FSubmixEffectDynamicsProcessorSettings //ScriptStruct AudioMixer.SubmixEffectDynamicsProcessorSettings
    {
    //Children Prop Count (Fields): 21
    public:

        enum class ESubmixEffectDynamicsProcessorType DynamicsProcessorType; // 0x0
        enum class ESubmixEffectDynamicsPeakMode PeakMode; // 0x1
        enum class ESubmixEffectDynamicsChannelLinkMode LinkMode; // 0x2
        float InputGainDb; // 0x4
        float ThresholdDb; // 0x8
        float Ratio; // 0xc
        float KneeBandwidthDb; // 0x10
        float LookAheadMsec; // 0x14
        float AttackTimeMsec; // 0x18
        float ReleaseTimeMsec; // 0x1c
        enum class ESubmixEffectDynamicsKeySource KeySource; // 0x20
        class UAudioBus* ExternalAudioBus; // 0x28
        class USoundSubmix* ExternalSubmix; // 0x30
        char bChannelLinked; // 0x38
        char bAnalogMode; // 0x38
        char bBypass; // 0x38
        char bKeyAudition; // 0x38
        float KeyGainDb; // 0x3c
        float OutputGainDb; // 0x40
        struct FSubmixEffectDynamicProcessorFilterSettings KeyHighshelf; // 0x44
        struct FSubmixEffectDynamicProcessorFilterSettings KeyLowshelf; // 0x50

    };

    struct FSubmixEffectDynamicProcessorFilterSettings //ScriptStruct AudioMixer.SubmixEffectDynamicProcessorFilterSettings
    {
    //Children Prop Count (Fields): 3
    public:

        char bEnabled; // 0x0
        float Cutoff; // 0x4
        float GainDb; // 0x8

    };

    struct FSubmixEffectSubmixEQSettings //ScriptStruct AudioMixer.SubmixEffectSubmixEQSettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FSubmixEffectEQBand> EQBands; // 0x0

    };

    struct FSubmixEffectEQBand //ScriptStruct AudioMixer.SubmixEffectEQBand
    {
    //Children Prop Count (Fields): 4
    public:

        float Frequency; // 0x0
        float Bandwidth; // 0x4
        float GainDb; // 0x8
        char bEnabled; // 0xc

    };

    struct FSubmixEffectReverbSettings //ScriptStruct AudioMixer.SubmixEffectReverbSettings
    {
    //Children Prop Count (Fields): 16
    public:

        bool bBypassEarlyReflections; // 0x0
        float ReflectionsDelay; // 0x4
        float GainHF; // 0x8
        float ReflectionsGain; // 0xc
        bool bBypassLateReflections; // 0x10
        float LateDelay; // 0x14
        float DecayTime; // 0x18
        float Density; // 0x1c
        float Diffusion; // 0x20
        float AirAbsorptionGainHF; // 0x24
        float DecayHFRatio; // 0x28
        float LateGain; // 0x2c
        float Gain; // 0x30
        float WetLevel; // 0x34
        float DryLevel; // 0x38
        bool bBypass; // 0x3c

    };

    struct FNetAnalyticsDataConfig //ScriptStruct NetCore.NetAnalyticsDataConfig
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName DataName; // 0x0
        bool bEnabled; // 0x8

    };

    struct FTagAndValue //ScriptStruct AssetRegistry.TagAndValue
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Tag; // 0x0
        struct FString Value; // 0x8

    };

    struct FAssetRegistryDependencyOptions //ScriptStruct AssetRegistry.AssetRegistryDependencyOptions
    {
    //Children Prop Count (Fields): 5
    public:

        bool bIncludeSoftPackageReferences; // 0x0
        bool bIncludeHardPackageReferences; // 0x1
        bool bIncludeSearchableNames; // 0x2
        bool bIncludeSoftManagementReferences; // 0x3
        bool bIncludeHardManagementReferences; // 0x4

    };

    struct FEngineServiceNotification //ScriptStruct EngineMessages.EngineServiceNotification
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Text; // 0x0
        double TimeSeconds; // 0x10

    };

    struct FEngineServiceTerminate //ScriptStruct EngineMessages.EngineServiceTerminate
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Username; // 0x0

    };

    struct FEngineServiceExecuteCommand //ScriptStruct EngineMessages.EngineServiceExecuteCommand
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Command; // 0x0
        struct FString Username; // 0x10

    };

    struct FEngineServiceAuthGrant //ScriptStruct EngineMessages.EngineServiceAuthGrant
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Username; // 0x0
        struct FString UserToGrant; // 0x10

    };

    struct FEngineServiceAuthDeny //ScriptStruct EngineMessages.EngineServiceAuthDeny
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Username; // 0x0
        struct FString UserToDeny; // 0x10

    };

    struct FEngineServicePong //ScriptStruct EngineMessages.EngineServicePong
    {
    //Children Prop Count (Fields): 7
    public:

        struct FString currentLevel; // 0x0
        int32_t EngineVersion; // 0x10
        bool HasBegunPlay; // 0x14
        struct FGuid instanceId; // 0x18
        struct FString InstanceType; // 0x28
        struct FGuid SessionId; // 0x38
        float WorldTimeSeconds; // 0x48

    };

    struct FEngineServicePing //ScriptStruct EngineMessages.EngineServicePing
    {
    public:


    };

    struct FGameplayTagCreationWidgetHelper //ScriptStruct GameplayTags.GameplayTagCreationWidgetHelper
    {
    public:


    };

    struct FGameplayTagReferenceHelper //ScriptStruct GameplayTags.GameplayTagReferenceHelper
    {
    public:


    };

    struct FGameplayTagRedirect //ScriptStruct GameplayTags.GameplayTagRedirect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName OldTagName; // 0x0
        struct FName NewTagName; // 0x8

    };

    struct FGameplayTagNode //ScriptStruct GameplayTags.GameplayTagNode
    {
    public:


    };

    struct FGameplayTagSource //ScriptStruct GameplayTags.GameplayTagSource
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName SourceName; // 0x0
        enum class EGameplayTagSourceType SourceType; // 0x8
        class UGameplayTagsList* SourceTagList; // 0x10
        class URestrictedGameplayTagsList* SourceRestrictedTagList; // 0x18

    };

    struct FGameplayTagTableRow : FTableRowBase //ScriptStruct GameplayTags.GameplayTagTableRow
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Tag; // 0x8
        struct FString DevComment; // 0x10

    };

    struct FRestrictedGameplayTagTableRow : FGameplayTagTableRow //ScriptStruct GameplayTags.RestrictedGameplayTagTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        bool bAllowNonRestrictedChildren; // 0x20

    };

    struct FRestrictedConfigInfo //ScriptStruct GameplayTags.RestrictedConfigInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString RestrictedConfigName; // 0x0
        struct TArray<struct FString> Owners; // 0x10

    };

    struct FGameplayTagCategoryRemap //ScriptStruct GameplayTags.GameplayTagCategoryRemap
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString BaseCategory; // 0x0
        struct TArray<struct FString> RemapCategories; // 0x10

    };

    struct FUVMapSettings //ScriptStruct StaticMeshDescription.UVMapSettings
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Size; // 0x0
        struct FVector2D UVTile; // 0xc
        struct FVector Position; // 0x14
        struct FRotator Rotation; // 0x20
        struct FVector Scale; // 0x2c

    };

    struct FPropertyAccessLibrary //ScriptStruct PropertyAccess.PropertyAccessLibrary
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FPropertyAccessSegment> PathSegments; // 0x0
        struct TArray<struct FPropertyAccessPath> SrcPaths; // 0x10
        struct TArray<struct FPropertyAccessPath> DestPaths; // 0x20
        struct FPropertyAccessCopyBatch CopyBatches; // 0x30
        struct TArray<struct FPropertyAccessIndirectionChain> SrcAccesses; // 0x70
        struct TArray<struct FPropertyAccessIndirectionChain> DestAccesses; // 0x80
        struct TArray<struct FPropertyAccessIndirection> Indirections; // 0x90
        struct TArray<int32_t> EventAccessIndices; // 0xa0

    };

    struct FPropertyAccessIndirection //ScriptStruct PropertyAccess.PropertyAccessIndirection
    {
    //Children Prop Count (Fields): 8
    public:

        struct TFieldPath<FArrayProperty> ArrayProperty; // 0x0
        class UFunction* Function; // 0x20
        int32_t ReturnBufferSize; // 0x28
        int32_t ReturnBufferAlignment; // 0x2c
        int32_t ArrayIndex; // 0x30
        uint32_t Offset; // 0x34
        enum class EPropertyAccessObjectType ObjectType; // 0x38
        enum class EPropertyAccessIndirectionType Type; // 0x39

    };

    struct FPropertyAccessIndirectionChain //ScriptStruct PropertyAccess.PropertyAccessIndirectionChain
    {
    //Children Prop Count (Fields): 4
    public:

        struct TFieldPath<FProperty> Property; // 0x0
        int32_t IndirectionStartIndex; // 0x20
        int32_t IndirectionEndIndex; // 0x24
        int32_t EventId; // 0x28

    };

    struct FPropertyAccessCopyBatch //ScriptStruct PropertyAccess.PropertyAccessCopyBatch
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FPropertyAccessCopy> Copies; // 0x0

    };

    struct FPropertyAccessCopy //ScriptStruct PropertyAccess.PropertyAccessCopy
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t AccessIndex; // 0x0
        int32_t DestAccessStartIndex; // 0x4
        int32_t DestAccessEndIndex; // 0x8
        enum class EPropertyAccessCopyType Type; // 0xc

    };

    struct FPropertyAccessPath //ScriptStruct PropertyAccess.PropertyAccessPath
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t PathSegmentStartIndex; // 0x0
        int32_t PathSegmentCount; // 0x4
        char bHasEvents; // 0x8

    };

    struct FPropertyAccessSegment //ScriptStruct PropertyAccess.PropertyAccessSegment
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Name; // 0x0
        class UStruct* Struct; // 0x8
        struct TFieldPath<FProperty> Property; // 0x10
        class UFunction* Function; // 0x30
        int32_t ArrayIndex; // 0x38
        uint16_t Flags; // 0x3c

    };

    struct FClothCollisionData //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FClothCollisionPrim_Sphere> Spheres; // 0x0
        struct TArray<struct FClothCollisionPrim_SphereConnection> SphereConnections; // 0x10
        struct TArray<struct FClothCollisionPrim_Convex> Convexes; // 0x20
        struct TArray<struct FClothCollisionPrim_Box> Boxes; // 0x30

    };

    struct FClothCollisionPrim_Box //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionPrim_Box
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector LocalPosition; // 0x0
        struct FQuat LocalRotation; // 0x10
        struct FVector HalfExtents; // 0x20
        int32_t BoneIndex; // 0x2c

    };

    struct FClothCollisionPrim_Convex //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionPrim_Convex
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FClothCollisionPrim_ConvexFace> Faces; // 0x0
        struct TArray<struct FVector> SurfacePoints; // 0x10
        int32_t BoneIndex; // 0x20

    };

    struct FClothCollisionPrim_ConvexFace //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionPrim_ConvexFace
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPlane Plane; // 0x0
        struct TArray<int32_t> Indices; // 0x10

    };

    struct FClothCollisionPrim_SphereConnection //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionPrim_SphereConnection
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t SphereIndices; // 0x0

    };

    struct FClothCollisionPrim_Sphere //ScriptStruct ClothingSystemRuntimeInterface.ClothCollisionPrim_Sphere
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t BoneIndex; // 0x0
        float Radius; // 0x4
        struct FVector LocalPosition; // 0x8

    };

    struct FClothVertBoneData //ScriptStruct ClothingSystemRuntimeInterface.ClothVertBoneData
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t NumInfluences; // 0x0
        uint16_t BoneIndices; // 0x4
        float BoneWeights; // 0x1c

    };

    struct FJsonObjectWrapper //ScriptStruct JsonUtilities.JsonObjectWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString JsonString; // 0x0

    };

    struct FMediaPlayerOptions //ScriptStruct MediaUtils.MediaPlayerOptions
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMediaPlayerTrackOptions Tracks; // 0x0
        struct FTimespan SeekTime; // 0x20
        enum class EMediaPlayerOptionBooleanOverride PlayOnOpen; // 0x28
        enum class EMediaPlayerOptionBooleanOverride Loop; // 0x29

    };

    struct FMediaPlayerTrackOptions //ScriptStruct MediaUtils.MediaPlayerTrackOptions
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t Audio; // 0x0
        int32_t Caption; // 0x4
        int32_t MetaData; // 0x8
        int32_t Script; // 0xc
        int32_t Subtitle; // 0x10
        int32_t Text; // 0x14
        int32_t Video; // 0x18

    };

    struct FMediaCaptureDevice //ScriptStruct MediaAssets.MediaCaptureDevice
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText DisplayName; // 0x0
        struct FString URL; // 0x20

    };

    struct FMediaSoundComponentSpectralData //ScriptStruct MediaAssets.MediaSoundComponentSpectralData
    {
    //Children Prop Count (Fields): 2
    public:

        float FrequencyHz; // 0x0
        float Magnitude; // 0x4

    };

    struct FLevelSequenceCameraSettings //ScriptStruct LevelSequence.LevelSequenceCameraSettings
    {
    //Children Prop Count (Fields): 2
    public:

        bool bOverrideAspectRatioAxisConstraint; // 0x0
        enum class EAspectRatioAxisConstraint AspectRatioAxisConstraint; // 0x1

    };

    struct FBoundActorProxy //ScriptStruct LevelSequence.BoundActorProxy
    {
    public:


    };

    struct FLevelSequenceAnimSequenceLinkItem //ScriptStruct LevelSequence.LevelSequenceAnimSequenceLinkItem
    {
    //Children Prop Count (Fields): 5
    public:

        struct FGuid SkelTrackGuid; // 0x0
        struct FSoftObjectPath PathToAnimSequence; // 0x10
        bool bExportTransforms; // 0x28
        bool bExportCurves; // 0x29
        bool bRecordInWorldSpace; // 0x2a

    };

    struct FLevelSequenceBindingReferences //ScriptStruct LevelSequence.LevelSequenceBindingReferences
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<struct FGuid, struct FLevelSequenceBindingReferenceArray> BindingIdToReferences; // 0x0
        struct TSet<struct FGuid> AnimSequenceInstances; // 0x50

    };

    struct FLevelSequenceBindingReferenceArray //ScriptStruct LevelSequence.LevelSequenceBindingReferenceArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FLevelSequenceBindingReference> References; // 0x0

    };

    struct FLevelSequenceBindingReference //ScriptStruct LevelSequence.LevelSequenceBindingReference
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString PackageName; // 0x0
        struct FSoftObjectPath ExternalObjectPath; // 0x10
        struct FString ObjectPath; // 0x28

    };

    struct FLevelSequenceObjectReferenceMap //ScriptStruct LevelSequence.LevelSequenceObjectReferenceMap
    {
    public:


    };

    struct FLevelSequenceLegacyObjectReference //ScriptStruct LevelSequence.LevelSequenceLegacyObjectReference
    {
    public:


    };

    struct FLevelSequenceObject //ScriptStruct LevelSequence.LevelSequenceObject
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLazyObjectProperty ObjectOrOwner; // 0x0
        struct FString ComponentName; // 0x20
        struct TWeakObjectPtr<struct UObject> CachedComponent; // 0x30

    };

    struct FLevelSequencePlayerSnapshot //ScriptStruct LevelSequence.LevelSequencePlayerSnapshot
    {
    //Children Prop Count (Fields): 11
    public:

        struct FString MasterName; // 0x0
        struct FQualifiedFrameTime MasterTime; // 0x10
        struct FQualifiedFrameTime SourceTime; // 0x20
        struct FString CurrentShotName; // 0x30
        struct FQualifiedFrameTime CurrentShotLocalTime; // 0x40
        struct FQualifiedFrameTime CurrentShotSourceTime; // 0x50
        struct FString SourceTimecode; // 0x60
        struct TSoftObjectPtr<UCameraComponent> CameraComponent; // 0x70
        struct FLevelSequenceSnapshotSettings Settings; // 0x98
        class ULevelSequence* ActiveShot; // 0xa8
        struct FMovieSceneSequenceID ShotID; // 0xb0

    };

    struct FLevelSequenceSnapshotSettings //ScriptStruct LevelSequence.LevelSequenceSnapshotSettings
    {
    //Children Prop Count (Fields): 2
    public:

        char ZeroPadAmount; // 0x0
        struct FFrameRate FrameRate; // 0x4

    };

    struct FCompositionGraphCapturePasses //ScriptStruct MovieSceneCapture.CompositionGraphCapturePasses
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FString> Value; // 0x0

    };

    struct FFrameMetrics //ScriptStruct MovieSceneCapture.FrameMetrics
    {
    //Children Prop Count (Fields): 4
    public:

        float TotalElapsedTime; // 0x0
        float FrameDelta; // 0x4
        int32_t FrameNumber; // 0x8
        int32_t NumDroppedFrames; // 0xc

    };

    struct FMovieSceneCaptureSettings //ScriptStruct MovieSceneCapture.MovieSceneCaptureSettings
    {
    //Children Prop Count (Fields): 21
    public:

        struct FDirectoryPath OutputDirectory; // 0x0
        class AGameModeBase* GameModeOverride; // 0x10
        struct FString OutputFormat; // 0x18
        bool bOverwriteExisting; // 0x28
        bool bUseRelativeFrameNumbers; // 0x29
        int32_t HandleFrames; // 0x2c
        struct FString MovieExtension; // 0x30
        char ZeroPadFrameNumbers; // 0x40
        struct FFrameRate FrameRate; // 0x44
        bool bUseCustomFrameRate; // 0x4c
        struct FFrameRate CustomFrameRate; // 0x50
        struct FCaptureResolution Resolution; // 0x58
        bool bEnableTextureStreaming; // 0x60
        bool bCinematicEngineScalability; // 0x61
        bool bCinematicMode; // 0x62
        bool bAllowMovement; // 0x63
        bool bAllowTurning; // 0x64
        bool bShowPlayer; // 0x65
        bool bShowHUD; // 0x66
        bool bUsePathTracer; // 0x67
        int32_t PathTracerSamplePerPixel; // 0x68

    };

    struct FCaptureResolution //ScriptStruct MovieSceneCapture.CaptureResolution
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t ResX; // 0x0
        int32_t ResY; // 0x4

    };

    struct FDirectoryPath //ScriptStruct Engine.DirectoryPath
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Path; // 0x0

    };

    struct FCapturedPixels //ScriptStruct MovieSceneCapture.CapturedPixels
    {
    public:


    };

    struct FCapturedPixelsID //ScriptStruct MovieSceneCapture.CapturedPixelsID
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FName, struct FName> Identifiers; // 0x0

    };

    struct FKAggregateGeom //ScriptStruct Engine.KAggregateGeom
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FKSphereElem> SphereElems; // 0x0
        struct TArray<struct FKBoxElem> BoxElems; // 0x10
        struct TArray<struct FKSphylElem> SphylElems; // 0x20
        struct TArray<struct FKConvexElem> ConvexElems; // 0x30
        struct TArray<struct FKTaperedCapsuleElem> TaperedCapsuleElems; // 0x40

    };

    struct FKShapeElem //ScriptStruct Engine.KShapeElem
    {
    //Children Prop Count (Fields): 4
    public:

        float RestOffset; // 0x8
        struct FName Name; // 0xc
        char bContributeToMass; // 0x18
        enum class ECollisionEnabled CollisionEnabled; // 0x19

    };

    struct FKTaperedCapsuleElem : FKShapeElem //ScriptStruct Engine.KTaperedCapsuleElem
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Center; // 0x30
        struct FRotator Rotation; // 0x3c
        float Radius0; // 0x48
        float Radius1; // 0x4c
        float Length; // 0x50

    };

    struct FKConvexElem : FKShapeElem //ScriptStruct Engine.KConvexElem
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FVector> VertexData; // 0x30
        struct TArray<int32_t> IndexData; // 0x40
        struct FBox ElemBox; // 0x50
        struct FTransform Transform; // 0x70

    };

    struct FKSphylElem : FKShapeElem //ScriptStruct Engine.KSphylElem
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector Center; // 0x30
        struct FRotator Rotation; // 0x3c
        float Radius; // 0x48
        float Length; // 0x4c

    };

    struct FKBoxElem : FKShapeElem //ScriptStruct Engine.KBoxElem
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Center; // 0x30
        struct FRotator Rotation; // 0x3c
        float X; // 0x48
        float Y; // 0x4c
        float Z; // 0x50

    };

    struct FKSphereElem : FKShapeElem //ScriptStruct Engine.KSphereElem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Center; // 0x30
        float Radius; // 0x3c

    };

    struct FAnimationGroupReference //ScriptStruct Engine.AnimationGroupReference
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName GroupName; // 0x0
        enum class EAnimGroupRole GroupRole; // 0x8
        enum class EAnimSyncGroupScope GroupScope; // 0x9

    };

    struct FAnimGroupInstance //ScriptStruct Engine.AnimGroupInstance
    {
    public:


    };

    struct FAnimTickRecord //ScriptStruct Engine.AnimTickRecord
    {
    //Children Prop Count (Fields): 1
    public:

        class UAnimationAsset* SourceAsset; // 0x0

    };

    struct FMarkerSyncAnimPosition //ScriptStruct Engine.MarkerSyncAnimPosition
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName PreviousMarkerName; // 0x0
        struct FName NextMarkerName; // 0x8
        float PositionBetweenMarkers; // 0x10

    };

    struct FBlendFilter //ScriptStruct Engine.BlendFilter
    {
    public:


    };

    struct FBlendSampleData //ScriptStruct Engine.BlendSampleData
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t SampleDataIndex; // 0x0
        class UAnimSequence* Animation; // 0x8
        float TotalWeight; // 0x10
        float Time; // 0x14
        float PreviousTime; // 0x18
        float SamplePlayRate; // 0x1c

    };

    struct FAnimationRecordingSettings //ScriptStruct Engine.AnimationRecordingSettings
    {
    //Children Prop Count (Fields): 9
    public:

        bool bRecordInWorldSpace; // 0x0
        bool bRemoveRootAnimation; // 0x1
        bool bAutoSaveAsset; // 0x2
        float SampleRate; // 0x4
        float Length; // 0x8
        enum class ERichCurveInterpMode InterpMode; // 0xc
        enum class ERichCurveTangentMode TangentMode; // 0xd
        bool bRecordTransforms; // 0xf
        bool bRecordCurves; // 0x10

    };

    struct FComponentSpacePose //ScriptStruct Engine.ComponentSpacePose
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FTransform> Transforms; // 0x0
        struct TArray<struct FName> Names; // 0x10

    };

    struct FLocalSpacePose //ScriptStruct Engine.LocalSpacePose
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FTransform> Transforms; // 0x0
        struct TArray<struct FName> Names; // 0x10

    };

    struct FNamedTransform //ScriptStruct Engine.NamedTransform
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Value; // 0x0
        struct FName Name; // 0x30

    };

    struct FNamedColor //ScriptStruct Engine.NamedColor
    {
    //Children Prop Count (Fields): 2
    public:

        struct FColor Value; // 0x0
        struct FName Name; // 0x4

    };

    struct FNamedVector //ScriptStruct Engine.NamedVector
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Value; // 0x0
        struct FName Name; // 0xc

    };

    struct FNamedFloat //ScriptStruct Engine.NamedFloat
    {
    //Children Prop Count (Fields): 2
    public:

        float Value; // 0x0
        struct FName Name; // 0x4

    };

    struct FAnimParentNodeAssetOverride //ScriptStruct Engine.AnimParentNodeAssetOverride
    {
    //Children Prop Count (Fields): 2
    public:

        class UAnimationAsset* NewAsset; // 0x0
        struct FGuid ParentNodeGuid; // 0x8

    };

    struct FAnimGroupInfo //ScriptStruct Engine.AnimGroupInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        struct FLinearColor Color; // 0x8

    };

    struct FAnimBlueprintDebugData //ScriptStruct Engine.AnimBlueprintDebugData
    {
    public:


    };

    struct FAnimationFrameSnapshot //ScriptStruct Engine.AnimationFrameSnapshot
    {
    public:


    };

    struct FStateMachineDebugData //ScriptStruct Engine.StateMachineDebugData
    {
    public:


    };

    struct FStateMachineStateDebugData //ScriptStruct Engine.StateMachineStateDebugData
    {
    public:


    };

    struct FAnimBlueprintFunctionData //ScriptStruct Engine.AnimBlueprintFunctionData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TFieldPath<FStructProperty> OutputPoseNodeProperty; // 0x0
        struct TArray<struct TFieldPath<FStructProperty>> InputPoseNodeProperties; // 0x20
        struct TArray<struct TFieldPath<FProperty>> InputProperties; // 0x30

    };

    struct FAnimGraphBlendOptions //ScriptStruct Engine.AnimGraphBlendOptions
    {
    //Children Prop Count (Fields): 2
    public:

        float BlendInTime; // 0x0
        float BlendOutTime; // 0x4

    };

    struct FGraphAssetPlayerInformation //ScriptStruct Engine.GraphAssetPlayerInformation
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<int32_t> PlayerNodeIndices; // 0x0

    };

    struct FCachedPoseIndices //ScriptStruct Engine.CachedPoseIndices
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<int32_t> OrderedSavedPoseNodeIndices; // 0x0

    };

    struct FAnimBlueprintFunction //ScriptStruct Engine.AnimBlueprintFunction
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName Name; // 0x0
        struct FName Group; // 0x8
        int32_t OutputPoseNodeIndex; // 0x10
        struct TArray<struct FName> InputPoseNames; // 0x18
        struct TArray<int32_t> InputPoseNodeIndices; // 0x28
        bool bImplemented; // 0x60

    };

    struct FAnimTrack //ScriptStruct Engine.AnimTrack
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FAnimSegment> AnimSegments; // 0x0

    };

    struct FAnimSegment //ScriptStruct Engine.AnimSegment
    {
    //Children Prop Count (Fields): 6
    public:

        class UAnimSequenceBase* AnimReference; // 0x0
        float StartPos; // 0x8
        float AnimStartTime; // 0xc
        float AnimEndTime; // 0x10
        float AnimPlayRate; // 0x14
        int32_t LoopingCount; // 0x18

    };

    struct FRootMotionExtractionStep //ScriptStruct Engine.RootMotionExtractionStep
    {
    //Children Prop Count (Fields): 3
    public:

        class UAnimSequence* AnimSequence; // 0x0
        float StartPosition; // 0x8
        float EndPosition; // 0xc

    };

    struct FAnimationErrorStats //ScriptStruct Engine.AnimationErrorStats
    {
    public:


    };

    struct FRawCurveTracks //ScriptStruct Engine.RawCurveTracks
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FFloatCurve> FloatCurves; // 0x0

    };

    struct FAnimCurveBase //ScriptStruct Engine.AnimCurveBase
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName LastObservedName; // 0x0
        struct FSmartName Name; // 0x8
        int32_t CurveTypeFlags; // 0x14

    };

    struct FSmartName //ScriptStruct Engine.SmartName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName DisplayName; // 0x0

    };

    struct FFloatCurve : FAnimCurveBase //ScriptStruct Engine.FloatCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRichCurve FloatCurve; // 0x18

    };

    struct FTransformCurve : FAnimCurveBase //ScriptStruct Engine.TransformCurve
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVectorCurve TranslationCurve; // 0x18
        struct FVectorCurve RotationCurve; // 0x1b0
        struct FVectorCurve ScaleCurve; // 0x348

    };

    struct FVectorCurve : FAnimCurveBase //ScriptStruct Engine.VectorCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct FRichCurve FloatCurves; // 0x18

    };

    struct FSlotEvaluationPose //ScriptStruct Engine.SlotEvaluationPose
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EAdditiveAnimationType AdditiveType; // 0x0
        float weight; // 0x4

    };

    struct FA2Pose //ScriptStruct Engine.A2Pose
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FTransform> Bones; // 0x0

    };

    struct FA2CSPose : FA2Pose //ScriptStruct Engine.A2CSPose
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> ComponentSpaceFlags; // 0x18

    };

    struct FQueuedDrawDebugItem //ScriptStruct Engine.QueuedDrawDebugItem
    {
    //Children Prop Count (Fields): 14
    public:

        enum class EDrawDebugItemType ItemType; // 0x0
        struct FVector StartLoc; // 0x4
        struct FVector EndLoc; // 0x10
        struct FVector Center; // 0x1c
        struct FRotator Rotation; // 0x28
        float Radius; // 0x34
        float Size; // 0x38
        int32_t Segments; // 0x3c
        struct FColor Color; // 0x40
        bool bPersistentLines; // 0x44
        float lifetime; // 0x48
        float Thickness; // 0x4c
        struct FString Message; // 0x50
        struct FVector2D TextScale; // 0x60

    };

    struct FAnimInstanceSubsystemData //ScriptStruct Engine.AnimInstanceSubsystemData
    {
    public:


    };

    struct FAnimLinkableElement //ScriptStruct Engine.AnimLinkableElement
    {
    //Children Prop Count (Fields): 9
    public:

        class UAnimMontage* LinkedMontage; // 0x8
        int32_t SlotIndex; // 0x10
        int32_t SegmentIndex; // 0x14
        enum class EAnimLinkMethod LinkMethod; // 0x18
        enum class EAnimLinkMethod CachedLinkMethod; // 0x19
        float SegmentBeginTime; // 0x1c
        float SegmentLength; // 0x20
        float LinkValue; // 0x24
        class UAnimSequenceBase* LinkedSequence; // 0x28

    };

    struct FAnimMontageInstance //ScriptStruct Engine.AnimMontageInstance
    {
    //Children Prop Count (Fields): 10
    public:

        class UAnimMontage* Montage; // 0x0
        bool bPlaying; // 0x28
        float DefaultBlendTimeMultiplier; // 0x2c
        struct TArray<int32_t> NextSections; // 0xe8
        struct TArray<int32_t> PrevSections; // 0xf8
        struct TArray<struct FAnimNotifyEvent> ActiveStateBranchingPoints; // 0x118
        float Position; // 0x128
        float PlayRate; // 0x12c
        struct FAlphaBlend Blend; // 0x130
        int32_t DisableRootMotionCount; // 0x18c

    };

    struct FAnimNotifyEvent : FAnimLinkableElement //ScriptStruct Engine.AnimNotifyEvent
    {
    //Children Prop Count (Fields): 17
    public:

        float DisplayTime; // 0x30
        float TriggerTimeOffset; // 0x34
        float EndTriggerTimeOffset; // 0x38
        float TriggerWeightThreshold; // 0x3c
        struct FName NotifyName; // 0x40
        class UAnimNotify* Notify; // 0x48
        class UAnimNotifyState* NotifyStateClass; // 0x50
        float Duration; // 0x58
        struct FAnimLinkableElement EndLink; // 0x60
        bool bConvertedFromBranchingPoint; // 0x90
        enum class EMontageNotifyTickType MontageTickType; // 0x91
        float NotifyTriggerChance; // 0x94
        enum class ENotifyFilterType NotifyFilterType; // 0x98
        int32_t NotifyFilterLOD; // 0x9c
        bool bTriggerOnDedicatedServer; // 0xa0
        bool bTriggerOnFollower; // 0xa1
        int32_t TrackIndex; // 0xa4

    };

    struct FBranchingPointMarker //ScriptStruct Engine.BranchingPointMarker
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t NotifyIndex; // 0x0
        float TriggerTime; // 0x4
        enum class EAnimNotifyEventType NotifyEventType; // 0x8

    };

    struct FBranchingPoint : FAnimLinkableElement //ScriptStruct Engine.BranchingPoint
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName EventName; // 0x30
        float DisplayTime; // 0x38
        float TriggerTimeOffset; // 0x3c

    };

    struct FSlotAnimationTrack //ScriptStruct Engine.SlotAnimationTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName SlotName; // 0x0
        struct FAnimTrack AnimTrack; // 0x8

    };

    struct FCompositeSection : FAnimLinkableElement //ScriptStruct Engine.CompositeSection
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName SectionName; // 0x30
        float StartTime; // 0x38
        struct FName NextSectionName; // 0x3c
        struct TArray<class UAnimMetaData*> MetaData; // 0x48

    };

    struct FAnimNode_ApplyMeshSpaceAdditive : FAnimNode_Base //ScriptStruct Engine.AnimNode_ApplyMeshSpaceAdditive
    {
    //Children Prop Count (Fields): 10
    public:

        struct FPoseLink Base; // 0x10
        struct FPoseLink Additive; // 0x20
        enum class EAnimAlphaInputType AlphaInputType; // 0x30
        float Alpha; // 0x34
        char bAlphaBoolEnabled; // 0x38
        struct FInputAlphaBoolBlend AlphaBoolBlend; // 0x40
        struct FName AlphaCurveName; // 0x88
        struct FInputScaleBias AlphaScaleBias; // 0x90
        struct FInputScaleBiasClamp AlphaScaleBiasClamp; // 0x98
        int32_t LODThreshold; // 0xc8

    };

    struct FAnimNode_Inertialization : FAnimNode_Base //ScriptStruct Engine.AnimNode_Inertialization
    {
    //Children Prop Count (Fields): 1
    public:

        struct FPoseLink Source; // 0x10

    };

    struct FInertializationPoseDiff //ScriptStruct Engine.InertializationPoseDiff
    {
    public:


    };

    struct FInertializationCurveDiff //ScriptStruct Engine.InertializationCurveDiff
    {
    public:


    };

    struct FInertializationBoneDiff //ScriptStruct Engine.InertializationBoneDiff
    {
    public:


    };

    struct FInertializationPose //ScriptStruct Engine.InertializationPose
    {
    public:


    };

    struct FAnimNode_LinkedAnimGraph : FAnimNode_CustomProperty //ScriptStruct Engine.AnimNode_LinkedAnimGraph
    {
    //Children Prop Count (Fields): 6
    public:

        struct TArray<struct FPoseLink> InputPoses; // 0x58
        struct TArray<struct FName> InputPoseNames; // 0x68
        class UAnimInstance* InstanceClass; // 0x78
        struct FName Tag; // 0x80
        char bReceiveNotifiesFromLinkedInstances; // 0x9c
        char bPropagateNotifiesToLinkedInstances; // 0x9c

    };

    struct FAnimNode_LinkedAnimLayer : FAnimNode_LinkedAnimGraph //ScriptStruct Engine.AnimNode_LinkedAnimLayer
    {
    //Children Prop Count (Fields): 2
    public:

        class UAnimLayerInterface* Interface; // 0xa0
        struct FName Layer; // 0xa8

    };

    struct FAnimNode_LinkedInputPose : FAnimNode_Base //ScriptStruct Engine.AnimNode_LinkedInputPose
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x10
        struct FName Graph; // 0x18
        struct FPoseLink InputPose; // 0x20

    };

    struct FAnimNode_SaveCachedPose : FAnimNode_Base //ScriptStruct Engine.AnimNode_SaveCachedPose
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPoseLink pose; // 0x10
        struct FName CachePoseName; // 0x20

    };

    struct FAnimNode_SequencePlayer : FAnimNode_AssetPlayerBase //ScriptStruct Engine.AnimNode_SequencePlayer
    {
    //Children Prop Count (Fields): 6
    public:

        class UAnimSequenceBase* Sequence; // 0x38
        float PlayRateBasis; // 0x40
        float PlayRate; // 0x44
        struct FInputScaleBiasClamp PlayRateScaleBiasClamp; // 0x48
        float StartPosition; // 0x78
        bool bLoopAnimation; // 0x7c

    };

    struct FAnimNode_StateMachine : FAnimNode_Base //ScriptStruct Engine.AnimNode_StateMachine
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t StateMachineIndexInClass; // 0x10
        int32_t MaxTransitionsPerFrame; // 0x14
        bool bSkipFirstUpdateTransition; // 0x18
        bool bReinitializeOnBecomingRelevant; // 0x19

    };

    struct FAnimationPotentialTransition //ScriptStruct Engine.AnimationPotentialTransition
    {
    public:


    };

    struct FAnimationActiveTransitionEntry //ScriptStruct Engine.AnimationActiveTransitionEntry
    {
    //Children Prop Count (Fields): 1
    public:

        class UBlendProfile* BlendProfile; // 0xb8

    };

    struct FAnimNode_TransitionPoseEvaluator : FAnimNode_Base //ScriptStruct Engine.AnimNode_TransitionPoseEvaluator
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t FramesToCachePose; // 0xe8
        enum class EEvaluatorDataSource DataSource; // 0xf0
        enum class EEvaluatorMode EvaluatorMode; // 0xf1

    };

    struct FAnimNode_TransitionResult : FAnimNode_Base //ScriptStruct Engine.AnimNode_TransitionResult
    {
    //Children Prop Count (Fields): 1
    public:

        bool bCanEnterTransition; // 0x10

    };

    struct FAnimNode_UseCachedPose : FAnimNode_Base //ScriptStruct Engine.AnimNode_UseCachedPose
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPoseLink LinkToCachingNode; // 0x10
        struct FName CachePoseName; // 0x20

    };

    struct FExposedValueHandler //ScriptStruct Engine.ExposedValueHandler
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName BoundFunction; // 0x0
        struct TArray<struct FExposedValueCopyRecord> CopyRecords; // 0x8
        class UFunction* Function; // 0x18
        struct TFieldPath<FStructProperty> ValueHandlerNodeProperty; // 0x20

    };

    struct FExposedValueCopyRecord //ScriptStruct Engine.ExposedValueCopyRecord
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t CopyIndex; // 0x0
        enum class EPostCopyOperation PostCopyOperation; // 0x4

    };

    struct FAnimNode_ConvertLocalToComponentSpace : FAnimNode_Base //ScriptStruct Engine.AnimNode_ConvertLocalToComponentSpace
    {
    //Children Prop Count (Fields): 1
    public:

        struct FPoseLink LocalPose; // 0x10

    };

    struct FAnimNode_ConvertComponentToLocalSpace : FAnimNode_Base //ScriptStruct Engine.AnimNode_ConvertComponentToLocalSpace
    {
    //Children Prop Count (Fields): 1
    public:

        struct FComponentSpacePoseLink ComponentPose; // 0x10

    };

    struct FAnimNotifyQueue //ScriptStruct Engine.AnimNotifyQueue
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FAnimNotifyEventReference> AnimNotifies; // 0x10
        struct TMap<struct FName, struct FAnimNotifyArray> UnfilteredMontageAnimNotifies; // 0x20

    };

    struct FAnimNotifyArray //ScriptStruct Engine.AnimNotifyArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FAnimNotifyEventReference> Notifies; // 0x0

    };

    struct FAnimNotifyEventReference //ScriptStruct Engine.AnimNotifyEventReference
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* NotifySource; // 0x8

    };

    struct FCompressedTrack //ScriptStruct Engine.CompressedTrack
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<char> ByteStream; // 0x0
        struct TArray<float> Times; // 0x10
        float Mins; // 0x20
        float Ranges; // 0x2c

    };

    struct FCurveTrack //ScriptStruct Engine.CurveTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName CurveName; // 0x0
        struct TArray<float> CurveWeights; // 0x8

    };

    struct FScaleTrack //ScriptStruct Engine.ScaleTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FVector> ScaleKeys; // 0x0
        struct TArray<float> Times; // 0x10

    };

    struct FRotationTrack //ScriptStruct Engine.RotationTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FQuat> RotKeys; // 0x0
        struct TArray<float> Times; // 0x10

    };

    struct FTranslationTrack //ScriptStruct Engine.TranslationTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FVector> PosKeys; // 0x0
        struct TArray<float> Times; // 0x10

    };

    struct FAnimSequenceTrackContainer //ScriptStruct Engine.AnimSequenceTrackContainer
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FRawAnimSequenceTrack> AnimationTracks; // 0x0
        struct TArray<struct FName> TrackNames; // 0x10

    };

    struct FRawAnimSequenceTrack //ScriptStruct Engine.RawAnimSequenceTrack
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FVector> PosKeys; // 0x0
        struct TArray<struct FQuat> RotKeys; // 0x10
        struct TArray<struct FVector> ScaleKeys; // 0x20

    };

    struct FAnimSetMeshLinkup //ScriptStruct Engine.AnimSetMeshLinkup
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<int32_t> BoneToTrackTable; // 0x0

    };

    struct FAnimSingleNodeInstanceProxy : FAnimInstanceProxy //ScriptStruct Engine.AnimSingleNodeInstanceProxy
    {
    public:


    };

    struct FAnimNode_SingleNode : FAnimNode_Base //ScriptStruct Engine.AnimNode_SingleNode
    {
    //Children Prop Count (Fields): 1
    public:

        struct FPoseLink SourcePose; // 0x10

    };

    struct FBakedAnimationStateMachine //ScriptStruct Engine.BakedAnimationStateMachine
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName MachineName; // 0x0
        int32_t InitialState; // 0x8
        struct TArray<struct FBakedAnimationState> States; // 0x10
        struct TArray<struct FAnimationTransitionBetweenStates> Transitions; // 0x20

    };

    struct FAnimationStateBase //ScriptStruct Engine.AnimationStateBase
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName StateName; // 0x0

    };

    struct FAnimationTransitionBetweenStates : FAnimationStateBase //ScriptStruct Engine.AnimationTransitionBetweenStates
    {
    //Children Prop Count (Fields): 10
    public:

        int32_t PreviousState; // 0x8
        int32_t NextState; // 0xc
        float CrossfadeDuration; // 0x10
        int32_t StartNotify; // 0x14
        int32_t EndNotify; // 0x18
        int32_t InterruptNotify; // 0x1c
        enum class EAlphaBlendOption BlendMode; // 0x20
        class UCurveFloat* CustomCurve; // 0x28
        class UBlendProfile* BlendProfile; // 0x30
        enum class ETransitionLogicType LogicType; // 0x38

    };

    struct FBakedAnimationState //ScriptStruct Engine.BakedAnimationState
    {
    //Children Prop Count (Fields): 11
    public:

        struct FName StateName; // 0x0
        struct TArray<struct FBakedStateExitTransition> Transitions; // 0x8
        int32_t StateRootNodeIndex; // 0x18
        int32_t StartNotify; // 0x1c
        int32_t EndNotify; // 0x20
        int32_t FullyBlendedNotify; // 0x24
        bool bIsAConduit; // 0x28
        int32_t EntryRuleNodeIndex; // 0x2c
        struct TArray<int32_t> PlayerNodeIndices; // 0x30
        struct TArray<int32_t> LayerNodeIndices; // 0x40
        bool bAlwaysResetOnEntry; // 0x50

    };

    struct FBakedStateExitTransition //ScriptStruct Engine.BakedStateExitTransition
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t CanTakeDelegateIndex; // 0x0
        int32_t CustomResultNodeIndex; // 0x4
        int32_t TransitionIndex; // 0x8
        bool bDesiredTransitionReturnValue; // 0xc
        bool bAutomaticRemainingTimeRule; // 0xd
        struct TArray<int32_t> PoseEvaluatorLinks; // 0x10

    };

    struct FAnimationState : FAnimationStateBase //ScriptStruct Engine.AnimationState
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FAnimationTransitionRule> Transitions; // 0x8
        int32_t StateRootNodeIndex; // 0x18
        int32_t StartNotify; // 0x1c
        int32_t EndNotify; // 0x20
        int32_t FullyBlendedNotify; // 0x24

    };

    struct FAnimationTransitionRule //ScriptStruct Engine.AnimationTransitionRule
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName RuleToExecute; // 0x0
        bool TransitionReturnVal; // 0x8
        int32_t TransitionIndex; // 0xc

    };

    struct FTrackToSkeletonMap //ScriptStruct Engine.TrackToSkeletonMap
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t BoneTreeIndex; // 0x0

    };

    struct FMarkerSyncData //ScriptStruct Engine.MarkerSyncData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FAnimSyncMarker> AuthoredSyncMarkers; // 0x0

    };

    struct FAnimSyncMarker //ScriptStruct Engine.AnimSyncMarker
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName MarkerName; // 0x0
        float Time; // 0x8

    };

    struct FAnimNotifyTrack //ScriptStruct Engine.AnimNotifyTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName TrackName; // 0x0
        struct FLinearColor TrackColor; // 0x8

    };

    struct FPerBoneBlendWeights //ScriptStruct Engine.PerBoneBlendWeights
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FPerBoneBlendWeight> BoneBlendWeights; // 0x0

    };

    struct FAssetImportInfo //ScriptStruct Engine.AssetImportInfo
    {
    public:


    };

    struct FPrimaryAssetRulesCustomOverride //ScriptStruct Engine.PrimaryAssetRulesCustomOverride
    {
    //Children Prop Count (Fields): 4
    public:

        struct FPrimaryAssetType PrimaryAssetType; // 0x0
        struct FDirectoryPath FilterDirectory; // 0x8
        struct FString FilterString; // 0x18
        struct FPrimaryAssetRules Rules; // 0x28

    };

    struct FPrimaryAssetRules //ScriptStruct Engine.PrimaryAssetRules
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Priority; // 0x0
        int32_t chunkID; // 0x4
        bool bApplyRecursively; // 0x8
        enum class EPrimaryAssetCookRule CookRule; // 0x9

    };

    struct FPrimaryAssetRulesOverride //ScriptStruct Engine.PrimaryAssetRulesOverride
    {
    //Children Prop Count (Fields): 2
    public:

        struct FPrimaryAssetId PrimaryAssetId; // 0x0
        struct FPrimaryAssetRules Rules; // 0x10

    };

    struct FAssetManagerRedirect //ScriptStruct Engine.AssetManagerRedirect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Old; // 0x0
        struct FString New; // 0x10

    };

    struct FAssetManagerSearchRules //ScriptStruct Engine.AssetManagerSearchRules
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<struct FString> AssetScanPaths; // 0x0
        struct TArray<struct FString> IncludePatterns; // 0x10
        struct TArray<struct FString> ExcludePatterns; // 0x20
        class UObject* AssetBaseClass; // 0x30
        bool bHasBlueprintClasses; // 0x38
        bool bForceSynchronousScan; // 0x39
        bool bSkipVirtualPathExpansion; // 0x3a
        bool bSkipManagerIncludeCheck; // 0x3b

    };

    struct FPrimaryAssetTypeInfo //ScriptStruct Engine.PrimaryAssetTypeInfo
    {
    //Children Prop Count (Fields): 11
    public:

        struct FName PrimaryAssetType; // 0x0
        struct FSoftClassProperty AssetBaseClass; // 0x8
        class UObject* AssetBaseClassLoaded; // 0x30
        bool bHasBlueprintClasses; // 0x38
        bool bIsEditorOnly; // 0x39
        struct TArray<struct FDirectoryPath> Directories; // 0x40
        struct TArray<struct FSoftObjectPath> SpecificAssets; // 0x50
        struct FPrimaryAssetRules Rules; // 0x60
        struct TArray<struct FString> AssetScanPaths; // 0x70
        bool bIsDynamicAsset; // 0x80
        int32_t NumberOfAssets; // 0x84

    };

    struct FAssetMapping //ScriptStruct Engine.AssetMapping
    {
    //Children Prop Count (Fields): 2
    public:

        class UAnimationAsset* SourceAsset; // 0x0
        class UAnimationAsset* TargetAsset; // 0x8

    };

    struct FAtmospherePrecomputeInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.AtmospherePrecomputeInstanceData
    {
    public:


    };

    struct FAtmospherePrecomputeParameters //ScriptStruct Engine.AtmospherePrecomputeParameters
    {
    //Children Prop Count (Fields): 11
    public:

        float DensityHeight; // 0x0
        float DecayHeight; // 0x4
        int32_t MaxScatteringOrder; // 0x8
        int32_t TransmittanceTexWidth; // 0xc
        int32_t TransmittanceTexHeight; // 0x10
        int32_t IrradianceTexWidth; // 0x14
        int32_t IrradianceTexHeight; // 0x18
        int32_t InscatterAltitudeSampleNum; // 0x1c
        int32_t InscatterMuNum; // 0x20
        int32_t InscatterMuSNum; // 0x24
        int32_t InscatterNuNum; // 0x28

    };

    struct FBaseAttenuationSettings //ScriptStruct Engine.BaseAttenuationSettings
    {
    //Children Prop Count (Fields): 8
    public:

        enum class EAttenuationDistanceModel DistanceAlgorithm; // 0x8
        enum class EAttenuationShape AttenuationShape; // 0x9
        float dBAttenuationAtMax; // 0xc
        enum class ENaturalSoundFalloffMode FalloffMode; // 0x10
        struct FVector AttenuationShapeExtents; // 0x14
        float ConeOffset; // 0x20
        float FalloffDistance; // 0x24
        struct FRuntimeFloatCurve CustomAttenuationCurve; // 0x28

    };

    struct FAudioComponentParam //ScriptStruct Engine.AudioComponentParam
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName ParamName; // 0x0
        float FloatParam; // 0x8
        bool BoolParam; // 0xc
        int32_t IntParam; // 0x10
        class USoundWave* SoundWaveParam; // 0x18

    };

    struct FAudioEffectParameters //ScriptStruct Engine.AudioEffectParameters
    {
    public:


    };

    struct FAudioReverbEffect : FAudioEffectParameters //ScriptStruct Engine.AudioReverbEffect
    {
    public:


    };

    struct FDefaultAudioBusSettings //ScriptStruct Engine.DefaultAudioBusSettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct FSoftObjectPath AudioBus; // 0x0

    };

    struct FSoundDebugEntry //ScriptStruct Engine.SoundDebugEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName DebugName; // 0x0
        struct FSoftObjectPath Sound; // 0x8

    };

    struct FAudioQualitySettings //ScriptStruct Engine.AudioQualitySettings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText DisplayName; // 0x0
        int32_t MaxChannels; // 0x20

    };

    struct FInteriorSettings //ScriptStruct Engine.InteriorSettings
    {
    //Children Prop Count (Fields): 9
    public:

        bool bIsWorldSettings; // 0x0
        float ExteriorVolume; // 0x4
        float ExteriorTime; // 0x8
        float ExteriorLPF; // 0xc
        float ExteriorLPFTime; // 0x10
        float InteriorVolume; // 0x14
        float InteriorTime; // 0x18
        float InteriorLPF; // 0x1c
        float InteriorLPFTime; // 0x20

    };

    struct FAudioVolumeSubmixOverrideSettings //ScriptStruct Engine.AudioVolumeSubmixOverrideSettings
    {
    //Children Prop Count (Fields): 3
    public:

        class USoundSubmix* Submix; // 0x0
        struct TArray<class USoundEffectSubmixPreset*> SubmixEffectChain; // 0x8
        float CrossfadeTime; // 0x18

    };

    struct FAudioVolumeSubmixSendSettings //ScriptStruct Engine.AudioVolumeSubmixSendSettings
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EAudioVolumeLocationState ListenerLocationState; // 0x0
        enum class EAudioVolumeLocationState SourceLocationState; // 0x1
        struct TArray<struct FSoundSubmixSendInfo> SubmixSends; // 0x8

    };

    struct FSoundSubmixSendInfo //ScriptStruct Engine.SoundSubmixSendInfo
    {
    //Children Prop Count (Fields): 9
    public:

        enum class ESendLevelControlMethod SendLevelControlMethod; // 0x0
        enum class ESubmixSendStage SendStage; // 0x1
        class USoundSubmixBase* SoundSubmix; // 0x8
        float SendLevel; // 0x10
        float MinSendLevel; // 0x14
        float MaxSendLevel; // 0x18
        float MinSendDistance; // 0x1c
        float MaxSendDistance; // 0x20
        struct FRuntimeFloatCurve CustomSendLevelCurve; // 0x28

    };

    struct FLaunchOnTestSettings //ScriptStruct Engine.LaunchOnTestSettings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFilePath LaunchOnTestmap; // 0x0
        struct FString DeviceID; // 0x10

    };

    struct FFilePath //ScriptStruct Engine.FilePath
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString FilePath; // 0x0

    };

    struct FEditorMapPerformanceTestDefinition //ScriptStruct Engine.EditorMapPerformanceTestDefinition
    {
    //Children Prop Count (Fields): 2
    public:

        struct FSoftObjectPath PerformanceTestmap; // 0x0
        int32_t TestTimer; // 0x18

    };

    struct FBuildPromotionTestSettings //ScriptStruct Engine.BuildPromotionTestSettings
    {
    //Children Prop Count (Fields): 5
    public:

        struct FFilePath DefaultStaticMeshAsset; // 0x0
        struct FBuildPromotionImportWorkflowSettings ImportWorkflow; // 0x10
        struct FBuildPromotionOpenAssetSettings OpenAssets; // 0x160
        struct FBuildPromotionNewProjectSettings NewProjectSettings; // 0x1c0
        struct FFilePath SourceControlMaterial; // 0x1e0

    };

    struct FBuildPromotionNewProjectSettings //ScriptStruct Engine.BuildPromotionNewProjectSettings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDirectoryPath NewProjectFolderOverride; // 0x0
        struct FString NewProjectNameOverride; // 0x10

    };

    struct FBuildPromotionOpenAssetSettings //ScriptStruct Engine.BuildPromotionOpenAssetSettings
    {
    //Children Prop Count (Fields): 6
    public:

        struct FFilePath BlueprintAsset; // 0x0
        struct FFilePath MaterialAsset; // 0x10
        struct FFilePath ParticleSystemAsset; // 0x20
        struct FFilePath SkeletalMeshAsset; // 0x30
        struct FFilePath StaticMeshAsset; // 0x40
        struct FFilePath TextureAsset; // 0x50

    };

    struct FBuildPromotionImportWorkflowSettings //ScriptStruct Engine.BuildPromotionImportWorkflowSettings
    {
    //Children Prop Count (Fields): 11
    public:

        struct FEditorImportWorkflowDefinition Diffuse; // 0x0
        struct FEditorImportWorkflowDefinition Normal; // 0x20
        struct FEditorImportWorkflowDefinition StaticMesh; // 0x40
        struct FEditorImportWorkflowDefinition ReimportStaticMesh; // 0x60
        struct FEditorImportWorkflowDefinition BlendShapeMesh; // 0x80
        struct FEditorImportWorkflowDefinition MorphMesh; // 0xa0
        struct FEditorImportWorkflowDefinition SkeletalMesh; // 0xc0
        struct FEditorImportWorkflowDefinition Animation; // 0xe0
        struct FEditorImportWorkflowDefinition Sound; // 0x100
        struct FEditorImportWorkflowDefinition SurroundSound; // 0x120
        struct TArray<struct FEditorImportWorkflowDefinition> OtherAssetsToImport; // 0x140

    };

    struct FEditorImportWorkflowDefinition //ScriptStruct Engine.EditorImportWorkflowDefinition
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFilePath ImportFilePath; // 0x0
        struct TArray<struct FImportFactorySettingValues> FactorySettings; // 0x10

    };

    struct FImportFactorySettingValues //ScriptStruct Engine.ImportFactorySettingValues
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString SettingName; // 0x0
        struct FString Value; // 0x10

    };

    struct FBlueprintEditorPromotionSettings //ScriptStruct Engine.BlueprintEditorPromotionSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFilePath FirstMeshPath; // 0x0
        struct FFilePath SecondMeshPath; // 0x10
        struct FFilePath DefaultParticleAsset; // 0x20

    };

    struct FParticleEditorPromotionSettings //ScriptStruct Engine.ParticleEditorPromotionSettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct FFilePath DefaultParticleAsset; // 0x0

    };

    struct FMaterialEditorPromotionSettings //ScriptStruct Engine.MaterialEditorPromotionSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FFilePath DefaultMaterialAsset; // 0x0
        struct FFilePath DefaultDiffuseTexture; // 0x10
        struct FFilePath DefaultNormalTexture; // 0x20

    };

    struct FEditorImportExportTestDefinition //ScriptStruct Engine.EditorImportExportTestDefinition
    {
    //Children Prop Count (Fields): 4
    public:

        struct FFilePath ImportFilePath; // 0x0
        struct FString ExportFileExtension; // 0x10
        bool bSkipExport; // 0x20
        struct TArray<struct FImportFactorySettingValues> FactorySettings; // 0x28

    };

    struct FExternalToolDefinition //ScriptStruct Engine.ExternalToolDefinition
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString ToolName; // 0x0
        struct FFilePath ExecutablePath; // 0x10
        struct FString CommandLineOptions; // 0x20
        struct FDirectoryPath WorkingDirectory; // 0x30
        struct FString ScriptExtension; // 0x40
        struct FDirectoryPath ScriptDirectory; // 0x50

    };

    struct FNavAvoidanceData //ScriptStruct Engine.NavAvoidanceData
    {
    public:


    };

    struct FBandwidthTestGenerator //ScriptStruct Engine.BandwidthTestGenerator
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FBandwidthTestItem> ReplicatedBuffers; // 0x0

    };

    struct FBandwidthTestItem //ScriptStruct Engine.BandwidthTestItem
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> Kilobyte; // 0x0

    };

    struct FBlendProfileBoneEntry //ScriptStruct Engine.BlendProfileBoneEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference BoneReference; // 0x0
        float BlendScale; // 0x10

    };

    struct FPerBoneInterpolation //ScriptStruct Engine.PerBoneInterpolation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FBoneReference BoneReference; // 0x0
        float InterpolationSpeedPerSec; // 0x10

    };

    struct FGridBlendSample //ScriptStruct Engine.GridBlendSample
    {
    //Children Prop Count (Fields): 2
    public:

        struct FEditorElement GridElement; // 0x0
        float BlendWeight; // 0x18

    };

    struct FEditorElement //ScriptStruct Engine.EditorElement
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Indices; // 0x0
        float Weights; // 0xc

    };

    struct FBlendSample //ScriptStruct Engine.BlendSample
    {
    //Children Prop Count (Fields): 3
    public:

        class UAnimSequence* Animation; // 0x0
        struct FVector SampleValue; // 0x8
        float RateScale; // 0x14

    };

    struct FBlendParameter //ScriptStruct Engine.BlendParameter
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString DisplayName; // 0x0
        float Min; // 0x10
        float Max; // 0x14
        int32_t GridNum; // 0x18

    };

    struct FInterpolationParameter //ScriptStruct Engine.InterpolationParameter
    {
    //Children Prop Count (Fields): 2
    public:

        float InterpolationTime; // 0x0
        enum class EFilterInterpolationType InterpolationType; // 0x4

    };

    struct FBPEditorBookmarkNode //ScriptStruct Engine.BPEditorBookmarkNode
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid NodeGuid; // 0x0
        struct FGuid ParentGuid; // 0x10
        struct FText DisplayName; // 0x20

    };

    struct FEditedDocumentInfo //ScriptStruct Engine.EditedDocumentInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSoftObjectPath EditedObjectPath; // 0x0
        struct FVector2D SavedViewOffset; // 0x18
        float SavedZoomAmount; // 0x20
        class UObject* EditedObject; // 0x28

    };

    struct FBPInterfaceDescription //ScriptStruct Engine.BPInterfaceDescription
    {
    //Children Prop Count (Fields): 2
    public:

        class UInterface* Interface; // 0x0
        struct TArray<class UEdGraph*> Graphs; // 0x8

    };

    struct FBPVariableDescription //ScriptStruct Engine.BPVariableDescription
    {
    //Children Prop Count (Fields): 10
    public:

        struct FName VarName; // 0x0
        struct FGuid VarGuid; // 0x8
        struct FEdGraphPinType VarType; // 0x18
        struct FString FriendlyName; // 0x70
        struct FText Category; // 0x80
        uint64_t PropertyFlags; // 0xa0
        struct FName RepNotifyFunc; // 0xa8
        enum class ELifetimeCondition ReplicationCondition; // 0xb0
        struct TArray<struct FBPVariableMetaDataEntry> MetaDataArray; // 0xb8
        struct FString DefaultValue; // 0xc8

    };

    struct FBPVariableMetaDataEntry //ScriptStruct Engine.BPVariableMetaDataEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName DataKey; // 0x0
        struct FString DataValue; // 0x8

    };

    struct FEdGraphPinType //ScriptStruct Engine.EdGraphPinType
    {
    //Children Prop Count (Fields): 11
    public:

        struct FName PinCategory; // 0x0
        struct FName PinSubCategory; // 0x8
        struct TWeakObjectPtr<struct UObject> PinSubCategoryObject; // 0x10
        struct FSimpleMemberReference PinSubCategoryMemberReference; // 0x18
        struct FEdGraphTerminalType PinValueType; // 0x38
        enum class EPinContainerType ContainerType; // 0x54
        char bIsArray; // 0x55
        char bIsReference; // 0x55
        char bIsConst; // 0x55
        char bIsWeakPointer; // 0x55
        char bIsUObjectWrapper; // 0x55

    };

    struct FEdGraphTerminalType //ScriptStruct Engine.EdGraphTerminalType
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName TerminalCategory; // 0x0
        struct FName TerminalSubCategory; // 0x8
        struct TWeakObjectPtr<struct UObject> TerminalSubCategoryObject; // 0x10
        bool bTerminalIsConst; // 0x18
        bool bTerminalIsWeakPointer; // 0x19
        bool bTerminalIsUObjectWrapper; // 0x1a

    };

    struct FBlueprintMacroCosmeticInfo //ScriptStruct Engine.BlueprintMacroCosmeticInfo
    {
    public:


    };

    struct FCompilerNativizationOptions //ScriptStruct Engine.CompilerNativizationOptions
    {
    //Children Prop Count (Fields): 7
    public:

        struct FName PlatformName; // 0x0
        bool ServerOnlyPlatform; // 0x8
        bool ClientOnlyPlatform; // 0x9
        bool bExcludeMonolithicHeaders; // 0xa
        struct TArray<struct FName> ExcludedModules; // 0x10
        struct TSet<struct FSoftObjectPath> ExcludedAssets; // 0x20
        struct TArray<struct FString> ExcludedFolderPaths; // 0x70

    };

    struct FBPComponentClassOverride //ScriptStruct Engine.BPComponentClassOverride
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ComponentName; // 0x0
        class UObject* ComponentClass; // 0x8

    };

    struct FBlueprintCookedComponentInstancingData //ScriptStruct Engine.BlueprintCookedComponentInstancingData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FBlueprintComponentChangedPropertyInfo> ChangedPropertyList; // 0x0
        bool bHasValidCookedData; // 0x21

    };

    struct FBlueprintComponentChangedPropertyInfo //ScriptStruct Engine.BlueprintComponentChangedPropertyInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName PropertyName; // 0x0
        int32_t ArrayIndex; // 0x8
        class UStruct* PropertyScope; // 0x10

    };

    struct FEventGraphFastCallPair //ScriptStruct Engine.EventGraphFastCallPair
    {
    //Children Prop Count (Fields): 2
    public:

        class UFunction* FunctionToPatch; // 0x0
        int32_t EventGraphCallOffset; // 0x8

    };

    struct FBlueprintDebugData //ScriptStruct Engine.BlueprintDebugData
    {
    public:


    };

    struct FPointerToUberGraphFrame //ScriptStruct Engine.PointerToUberGraphFrame
    {
    public:


    };

    struct FDebuggingInfoForSingleFunction //ScriptStruct Engine.DebuggingInfoForSingleFunction
    {
    public:


    };

    struct FNodeToCodeAssociation //ScriptStruct Engine.NodeToCodeAssociation
    {
    public:


    };

    struct FAnimCurveType //ScriptStruct Engine.AnimCurveType
    {
    public:


    };

    struct FBookmarkBaseJumpToSettings //ScriptStruct Engine.BookmarkBaseJumpToSettings
    {
    public:


    };

    struct FBookmarkJumpToSettings : FBookmarkBaseJumpToSettings //ScriptStruct Engine.BookmarkJumpToSettings
    {
    public:


    };

    struct FBookmark2DJumpToSettings //ScriptStruct Engine.Bookmark2DJumpToSettings
    {
    public:


    };

    struct FGeomSelection //ScriptStruct Engine.GeomSelection
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Type; // 0x0
        int32_t Index; // 0x4
        int32_t SelectionIndex; // 0x8

    };

    struct FBuilderPoly //ScriptStruct Engine.BuilderPoly
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<int32_t> VertexIndices; // 0x0
        int32_t Direction; // 0x10
        struct FName ItemName; // 0x14
        int32_t PolyFlags; // 0x1c

    };

    struct FCachedAnimTransitionData //ScriptStruct Engine.CachedAnimTransitionData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName StateMachineName; // 0x0
        struct FName FromStateName; // 0x8
        struct FName ToStateName; // 0x10

    };

    struct FCachedAnimRelevancyData //ScriptStruct Engine.CachedAnimRelevancyData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName StateMachineName; // 0x0
        struct FName StateName; // 0x8

    };

    struct FCachedAnimAssetPlayerData //ScriptStruct Engine.CachedAnimAssetPlayerData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName StateMachineName; // 0x0
        struct FName StateName; // 0x8

    };

    struct FCachedAnimStateArray //ScriptStruct Engine.CachedAnimStateArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FCachedAnimStateData> States; // 0x0

    };

    struct FCachedAnimStateData //ScriptStruct Engine.CachedAnimStateData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName StateMachineName; // 0x0
        struct FName StateName; // 0x8

    };

    struct FActiveCameraShakeInfo //ScriptStruct Engine.ActiveCameraShakeInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UCameraShakeBase* ShakeInstance; // 0x0
        struct TWeakObjectPtr<struct UCameraShakeSourceComponent> ShakeSource; // 0x8
        bool bIsCustomInitialized; // 0x10

    };

    struct FPooledCameraShakes //ScriptStruct Engine.PooledCameraShakes
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UCameraShakeBase*> PooledShakes; // 0x0

    };

    struct FCameraShakeInfo //ScriptStruct Engine.CameraShakeInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FCameraShakeDuration Duration; // 0x0
        float BlendIn; // 0x8
        float BlendOut; // 0xc

    };

    struct FCameraShakeDuration //ScriptStruct Engine.CameraShakeDuration
    {
    //Children Prop Count (Fields): 2
    public:

        float Duration; // 0x0
        enum class ECameraShakeDurationType Type; // 0x4

    };

    struct FCameraShakeStopParams //ScriptStruct Engine.CameraShakeStopParams
    {
    //Children Prop Count (Fields): 1
    public:

        bool bImmediately; // 0x0

    };

    struct FCameraShakeUpdateResult //ScriptStruct Engine.CameraShakeUpdateResult
    {
    public:


    };

    struct FCameraShakeScrubParams //ScriptStruct Engine.CameraShakeScrubParams
    {
    //Children Prop Count (Fields): 5
    public:

        float AbsoluteTime; // 0x0
        float ShakeScale; // 0x4
        float DynamicScale; // 0x8
        float BlendingWeight; // 0xc
        struct FMinimalViewInfo POV; // 0x10

    };

    struct FMinimalViewInfo //ScriptStruct Engine.MinimalViewInfo
    {
    //Children Prop Count (Fields): 14
    public:

        struct FVector Location; // 0x0
        struct FRotator Rotation; // 0xc
        float FOV; // 0x18
        float DesiredFOV; // 0x1c
        float OrthoWidth; // 0x20
        float OrthoNearClipPlane; // 0x24
        float OrthoFarClipPlane; // 0x28
        float AspectRatio; // 0x2c
        char bConstrainAspectRatio; // 0x30
        char bUseFieldOfViewForLOD; // 0x30
        enum class ECameraProjectionMode ProjectionMode; // 0x34
        float PostProcessBlendWeight; // 0x38
        struct FPostProcessSettings PostProcessSettings; // 0x40
        struct FVector2D OffCenterProjectionOffset; // 0x530

    };

    struct FCameraShakeUpdateParams //ScriptStruct Engine.CameraShakeUpdateParams
    {
    //Children Prop Count (Fields): 5
    public:

        float DeltaTime; // 0x0
        float ShakeScale; // 0x4
        float DynamicScale; // 0x8
        float BlendingWeight; // 0xc
        struct FMinimalViewInfo POV; // 0x10

    };

    struct FCameraShakeStartParams //ScriptStruct Engine.CameraShakeStartParams
    {
    //Children Prop Count (Fields): 1
    public:

        bool bIsRestarting; // 0x0

    };

    struct FDummySpacerCameraTypes //ScriptStruct Engine.DummySpacerCameraTypes
    {
    public:


    };

    struct FCanvasIcon //ScriptStruct Engine.CanvasIcon
    {
    //Children Prop Count (Fields): 5
    public:

        class UTexture* Texture; // 0x0
        float U; // 0x8
        float V; // 0xc
        float UL; // 0x10
        float VL; // 0x14

    };

    struct FWrappedStringElement //ScriptStruct Engine.WrappedStringElement
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Value; // 0x0
        struct FVector2D LineExtent; // 0x10

    };

    struct FTextSizingParameters //ScriptStruct Engine.TextSizingParameters
    {
    //Children Prop Count (Fields): 7
    public:

        float DrawX; // 0x0
        float DrawY; // 0x4
        float DrawXL; // 0x8
        float DrawYL; // 0xc
        struct FVector2D Scaling; // 0x10
        class UFont* DrawFont; // 0x18
        struct FVector2D SpacingAdjust; // 0x20

    };

    struct FCharacterMovementComponentPostPhysicsTickFunction : FTickFunction //ScriptStruct Engine.CharacterMovementComponentPostPhysicsTickFunction
    {
    public:


    };

    struct FFindFloorResult //ScriptStruct Engine.FindFloorResult
    {
    //Children Prop Count (Fields): 6
    public:

        char bBlockingHit; // 0x0
        char bWalkableFloor; // 0x0
        char bLineTrace; // 0x0
        float FloorDist; // 0x4
        float LineDist; // 0x8
        struct FHitResult HitResult; // 0xc

    };

    struct FChildActorComponentInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.ChildActorComponentInstanceData
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* ChildActorClass; // 0xb8
        struct FName ChildActorName; // 0xc0
        struct TArray<struct FChildActorAttachedActorInfo> AttachedActors; // 0xc8

    };

    struct FChildActorAttachedActorInfo //ScriptStruct Engine.ChildActorAttachedActorInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct TWeakObjectPtr<struct AActor> Actor; // 0x0
        struct FName SocketName; // 0x8
        struct FTransform RelativeTransform; // 0x10

    };

    struct FCustomProfile //ScriptStruct Engine.CustomProfile
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        struct TArray<struct FResponseChannel> CustomResponses; // 0x8

    };

    struct FCustomChannelSetup //ScriptStruct Engine.CustomChannelSetup
    {
    //Children Prop Count (Fields): 5
    public:

        enum class ECollisionChannel Channel; // 0x0
        enum class ECollisionResponse DefaultResponse; // 0x1
        bool bTraceType; // 0x2
        bool bStaticObject; // 0x3
        struct FName Name; // 0x4

    };

    struct FCollisionResponseTemplate //ScriptStruct Engine.CollisionResponseTemplate
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x0
        enum class ECollisionEnabled CollisionEnabled; // 0x8
        bool bCanModify; // 0xa
        struct FName ObjectTypeName; // 0x2c
        struct TArray<struct FResponseChannel> CustomResponses; // 0x38

    };

    struct FBlueprintComponentDelegateBinding //ScriptStruct Engine.BlueprintComponentDelegateBinding
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName ComponentPropertyName; // 0x0
        struct FName DelegatePropertyName; // 0x8
        struct FName FunctionNameToBind; // 0x10

    };

    struct FMeshUVChannelInfo //ScriptStruct Engine.MeshUVChannelInfo
    {
    //Children Prop Count (Fields): 3
    public:

        bool bInitialized; // 0x0
        bool bOverrideDensities; // 0x1
        float LocalUVDensities; // 0x4

    };

    struct FAutoCompleteNode //ScriptStruct Engine.AutoCompleteNode
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t IndexChar; // 0x0
        struct TArray<int32_t> AutoCompleteListIndices; // 0x8

    };

    struct FAngularDriveConstraint //ScriptStruct Engine.AngularDriveConstraint
    {
    //Children Prop Count (Fields): 6
    public:

        struct FConstraintDrive TwistDrive; // 0x0
        struct FConstraintDrive SwingDrive; // 0x10
        struct FConstraintDrive SlerpDrive; // 0x20
        struct FRotator OrientationTarget; // 0x30
        struct FVector AngularVelocityTarget; // 0x3c
        enum class EAngularDriveMode AngularDriveMode; // 0x48

    };

    struct FConstraintDrive //ScriptStruct Engine.ConstraintDrive
    {
    //Children Prop Count (Fields): 5
    public:

        float Stiffness; // 0x0
        float Damping; // 0x4
        float MaxForce; // 0x8
        char bEnablePositionDrive; // 0xc
        char bEnableVelocityDrive; // 0xc

    };

    struct FLinearDriveConstraint //ScriptStruct Engine.LinearDriveConstraint
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector PositionTarget; // 0x0
        struct FVector VelocityTarget; // 0xc
        struct FConstraintDrive XDrive; // 0x18
        struct FConstraintDrive YDrive; // 0x28
        struct FConstraintDrive ZDrive; // 0x38
        char bEnablePositionDrive; // 0x48

    };

    struct FConstraintInstanceBase //ScriptStruct Engine.ConstraintInstanceBase
    {
    public:


    };

    struct FConstraintInstance : FConstraintInstanceBase //ScriptStruct Engine.ConstraintInstance
    {
    //Children Prop Count (Fields): 12
    public:

        struct FName JointName; // 0x18
        struct FName ConstraintBone1; // 0x20
        struct FName ConstraintBone2; // 0x28
        struct FVector Pos1; // 0x30
        struct FVector PriAxis1; // 0x3c
        struct FVector SecAxis1; // 0x48
        struct FVector Pos2; // 0x54
        struct FVector PriAxis2; // 0x60
        struct FVector SecAxis2; // 0x6c
        struct FRotator AngularRotationOffset; // 0x78
        char bScaleLinearLimits; // 0x84
        struct FConstraintProfileProperties ProfileInstance; // 0x8c

    };

    struct FConstraintProfileProperties //ScriptStruct Engine.ConstraintProfileProperties
    {
    //Children Prop Count (Fields): 21
    public:

        float ProjectionLinearTolerance; // 0x0
        float ProjectionAngularTolerance; // 0x4
        float ProjectionLinearAlpha; // 0x8
        float ProjectionAngularAlpha; // 0xc
        float LinearBreakThreshold; // 0x10
        float LinearPlasticityThreshold; // 0x14
        float AngularBreakThreshold; // 0x18
        float AngularPlasticityThreshold; // 0x1c
        struct FLinearConstraint LinearLimit; // 0x20
        struct FConeConstraint ConeLimit; // 0x3c
        struct FTwistConstraint TwistLimit; // 0x5c
        struct FLinearDriveConstraint LinearDrive; // 0x78
        struct FAngularDriveConstraint AngularDrive; // 0xc4
        char bDisableCollision; // 0x110
        char bParentDominates; // 0x110
        char bEnableProjection; // 0x110
        char bEnableSoftProjection; // 0x110
        char bAngularBreakable; // 0x110
        char bAngularPlasticity; // 0x110
        char bLinearBreakable; // 0x110
        char bLinearPlasticity; // 0x110

    };

    struct FConstraintBaseParams //ScriptStruct Engine.ConstraintBaseParams
    {
    //Children Prop Count (Fields): 5
    public:

        float Stiffness; // 0x0
        float Damping; // 0x4
        float Restitution; // 0x8
        float ContactDistance; // 0xc
        char bSoftConstraint; // 0x10

    };

    struct FTwistConstraint : FConstraintBaseParams //ScriptStruct Engine.TwistConstraint
    {
    //Children Prop Count (Fields): 2
    public:

        float TwistLimitDegrees; // 0x14
        enum class EAngularConstraintMotion TwistMotion; // 0x18

    };

    struct FConeConstraint : FConstraintBaseParams //ScriptStruct Engine.ConeConstraint
    {
    //Children Prop Count (Fields): 4
    public:

        float Swing1LimitDegrees; // 0x14
        float Swing2LimitDegrees; // 0x18
        enum class EAngularConstraintMotion Swing1Motion; // 0x1c
        enum class EAngularConstraintMotion Swing2Motion; // 0x1d

    };

    struct FLinearConstraint : FConstraintBaseParams //ScriptStruct Engine.LinearConstraint
    {
    //Children Prop Count (Fields): 4
    public:

        float Limit; // 0x14
        enum class ELinearConstraintMotion XMotion; // 0x18
        enum class ELinearConstraintMotion YMotion; // 0x19
        enum class ELinearConstraintMotion ZMotion; // 0x1a

    };

    struct FCullDistanceSizePair //ScriptStruct Engine.CullDistanceSizePair
    {
    //Children Prop Count (Fields): 2
    public:

        float Size; // 0x0
        float CullDistance; // 0x4

    };

    struct FCurveAtlasColorAdjustments //ScriptStruct Engine.CurveAtlasColorAdjustments
    {
    //Children Prop Count (Fields): 9
    public:

        char bChromaKeyTexture; // 0x0
        float AdjustBrightness; // 0x4
        float AdjustBrightnessCurve; // 0x8
        float AdjustVibrance; // 0xc
        float AdjustSaturation; // 0x10
        float AdjustRGBCurve; // 0x14
        float AdjustHue; // 0x18
        float AdjustMinAlpha; // 0x1c
        float AdjustMaxAlpha; // 0x20

    };

    struct FNamedCurveValue //ScriptStruct Engine.NamedCurveValue
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        float Value; // 0x8

    };

    struct FBakedCustomAttributePerBoneData //ScriptStruct Engine.BakedCustomAttributePerBoneData
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t BoneTreeIndex; // 0x0
        struct TArray<struct FBakedStringCustomAttribute> StringAttributes; // 0x8
        struct TArray<struct FBakedIntegerCustomAttribute> IntAttributes; // 0x18
        struct TArray<struct FBakedFloatCustomAttribute> FloatAttributes; // 0x28

    };

    struct FBakedFloatCustomAttribute //ScriptStruct Engine.BakedFloatCustomAttribute
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName AttributeName; // 0x0
        struct FSimpleCurve FloatCurve; // 0x8

    };

    struct FSimpleCurve : FRealCurve //ScriptStruct Engine.SimpleCurve
    {
    //Children Prop Count (Fields): 2
    public:

        enum class ERichCurveInterpMode InterpMode; // 0x70
        struct TArray<struct FSimpleCurveKey> Keys; // 0x78

    };

    struct FSimpleCurveKey //ScriptStruct Engine.SimpleCurveKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        float Value; // 0x4

    };

    struct FBakedIntegerCustomAttribute //ScriptStruct Engine.BakedIntegerCustomAttribute
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName AttributeName; // 0x0
        struct FIntegralCurve IntCurve; // 0x8

    };

    struct FIntegralCurve : FIndexedCurve //ScriptStruct Engine.IntegralCurve
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FIntegralKey> Keys; // 0x68
        int32_t DefaultValue; // 0x78
        bool bUseDefaultValueBeforeFirstKey; // 0x7c

    };

    struct FIntegralKey //ScriptStruct Engine.IntegralKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        int32_t Value; // 0x4

    };

    struct FBakedStringCustomAttribute //ScriptStruct Engine.BakedStringCustomAttribute
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName AttributeName; // 0x0
        struct FStringCurve StringCurve; // 0x8

    };

    struct FStringCurve : FIndexedCurve //ScriptStruct Engine.StringCurve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString DefaultValue; // 0x68
        struct TArray<struct FStringCurveKey> Keys; // 0x78

    };

    struct FStringCurveKey //ScriptStruct Engine.StringCurveKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        struct FString Value; // 0x8

    };

    struct FCustomAttributePerBoneData //ScriptStruct Engine.CustomAttributePerBoneData
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t BoneTreeIndex; // 0x0
        struct TArray<struct FCustomAttribute> Attributes; // 0x8

    };

    struct FCustomAttribute //ScriptStruct Engine.CustomAttribute
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        int32_t VariantType; // 0x8
        struct TArray<float> Times; // 0x10

    };

    struct FCustomAttributeSetting //ScriptStruct Engine.CustomAttributeSetting
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString Name; // 0x0
        struct FString Meaning; // 0x10

    };

    struct FDataDrivenConsoleVariable //ScriptStruct Engine.DataDrivenConsoleVariable
    {
    //Children Prop Count (Fields): 6
    public:

        enum class FDataDrivenCVarType Type; // 0x0
        struct FString Name; // 0x8
        struct FString Tooltip; // 0x18
        float DefaultValueFloat; // 0x28
        int32_t DefaultValueInt; // 0x2c
        bool DefaultValueBool; // 0x30

    };

    struct FDataTableCategoryHandle //ScriptStruct Engine.DataTableCategoryHandle
    {
    //Children Prop Count (Fields): 3
    public:

        class UDataTable* DataTable; // 0x0
        struct FName ColumnName; // 0x8
        struct FName RowContents; // 0x10

    };

    struct FYRowFilter //ScriptStruct Engine.YRowFilter
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText m_filterName; // 0x0
        struct FText m_filterNameTooltip; // 0x20
        int32_t m_cellDataIndex; // 0x40
        struct FString m_filterValue; // 0x48

    };

    struct FDebugCameraControllerSettingsViewModeIndex //ScriptStruct Engine.DebugCameraControllerSettingsViewModeIndex
    {
    //Children Prop Count (Fields): 1
    public:

        enum class EViewModeIndex ViewModeIndex; // 0x8

    };

    struct FMulticastRecordOptions //ScriptStruct Engine.MulticastRecordOptions
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString FuncPathName; // 0x0
        bool bServerSkip; // 0x10
        bool bClientSkip; // 0x11

    };

    struct FRollbackNetStartupActorInfo //ScriptStruct Engine.RollbackNetStartupActorInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UObject* Archetype; // 0x8
        class ULevel* Level; // 0x38
        struct TArray<class UObject*> ObjReferences; // 0xa0

    };

    struct FDialogueWaveParameter //ScriptStruct Engine.DialogueWaveParameter
    {
    //Children Prop Count (Fields): 2
    public:

        class UDialogueWave* DialogueWave; // 0x0
        struct FDialogueContext Context; // 0x8

    };

    struct FDialogueContext //ScriptStruct Engine.DialogueContext
    {
    //Children Prop Count (Fields): 2
    public:

        class UDialogueVoice* Speaker; // 0x0
        struct TArray<class UDialogueVoice*> Targets; // 0x8

    };

    struct FDialogueContextMapping //ScriptStruct Engine.DialogueContextMapping
    {
    //Children Prop Count (Fields): 4
    public:

        struct FDialogueContext Context; // 0x0
        class USoundWave* SoundWave; // 0x18
        struct FString LocalizationKeyFormat; // 0x20
        class UDialogueSoundWaveProxy* Proxy; // 0x30

    };

    struct FRawDistributionFloat : FRawDistribution //ScriptStruct Engine.RawDistributionFloat
    {
    //Children Prop Count (Fields): 3
    public:

        float MinValue; // 0x20
        float MaxValue; // 0x24
        class UDistributionFloat* Distribution; // 0x28

    };

    struct FRawDistributionVector : FRawDistribution //ScriptStruct Engine.RawDistributionVector
    {
    //Children Prop Count (Fields): 5
    public:

        float MinValue; // 0x20
        float MaxValue; // 0x24
        struct FVector MinValueVec; // 0x28
        struct FVector MaxValueVec; // 0x34
        class UDistributionVector* Distribution; // 0x40

    };

    struct FGraphReference //ScriptStruct Engine.GraphReference
    {
    //Children Prop Count (Fields): 3
    public:

        class UEdGraph* MacroGraph; // 0x0
        class UBlueprint* GraphBlueprint; // 0x8
        struct FGuid GraphGuid; // 0x10

    };

    struct FEdGraphPinReference //ScriptStruct Engine.EdGraphPinReference
    {
    //Children Prop Count (Fields): 2
    public:

        struct TWeakObjectPtr<struct UEdGraphNode> OwningNode; // 0x0
        struct FGuid PinId; // 0x8

    };

    struct FEdGraphSchemaAction //ScriptStruct Engine.EdGraphSchemaAction
    {
    //Children Prop Count (Fields): 15
    public:

        struct FText MenuDescription; // 0x8
        struct FText TooltipDescription; // 0x28
        struct FText Category; // 0x48
        struct FText Keywords; // 0x68
        int32_t Grouping; // 0x88
        int32_t SectionID; // 0x8c
        struct TArray<struct FString> MenuDescriptionArray; // 0x90
        struct TArray<struct FString> FullSearchTitlesArray; // 0xa0
        struct TArray<struct FString> FullSearchKeywordsArray; // 0xb0
        struct TArray<struct FString> FullSearchCategoryArray; // 0xc0
        struct TArray<struct FString> LocalizedMenuDescriptionArray; // 0xd0
        struct TArray<struct FString> LocalizedFullSearchTitlesArray; // 0xe0
        struct TArray<struct FString> LocalizedFullSearchKeywordsArray; // 0xf0
        struct TArray<struct FString> LocalizedFullSearchCategoryArray; // 0x100
        struct FString SearchText; // 0x110

    };

    struct FEdGraphSchemaAction_NewNode : FEdGraphSchemaAction //ScriptStruct Engine.EdGraphSchemaAction_NewNode
    {
    //Children Prop Count (Fields): 1
    public:

        class UEdGraphNode* NodeTemplate; // 0x120

    };

    struct FPluginRedirect //ScriptStruct Engine.PluginRedirect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString OldPluginName; // 0x0
        struct FString NewPluginName; // 0x10

    };

    struct FStructRedirect //ScriptStruct Engine.StructRedirect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName OldStructName; // 0x0
        struct FName NewStructName; // 0x8

    };

    struct FClassRedirect //ScriptStruct Engine.ClassRedirect
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName ObjectName; // 0x0
        struct FName OldClassName; // 0x8
        struct FName NewClassName; // 0x10
        struct FName OldSubobjName; // 0x18
        struct FName NewSubobjName; // 0x20
        struct FName NewClassClass; // 0x28
        struct FName NewClassPackage; // 0x30
        bool InstanceOnly; // 0x38

    };

    struct FGameNameRedirect //ScriptStruct Engine.GameNameRedirect
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName OldGameName; // 0x0
        struct FName NewGameName; // 0x8

    };

    struct FScreenMessageString //ScriptStruct Engine.ScreenMessageString
    {
    //Children Prop Count (Fields): 6
    public:

        uint64_t Key; // 0x0
        struct FString ScreenMessage; // 0x8
        struct FColor DisplayColor; // 0x18
        float TimeToDisplay; // 0x1c
        float CurrentTimeDisplayed; // 0x20
        struct FVector2D TextScale; // 0x24

    };

    struct FDropNoteInfo //ScriptStruct Engine.DropNoteInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Location; // 0x0
        struct FRotator Rotation; // 0xc
        struct FString Comment; // 0x18

    };

    struct FStatColorMapping //ScriptStruct Engine.StatColorMapping
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString statName; // 0x0
        struct TArray<struct FStatColorMapEntry> ColorMap; // 0x10
        char DisableBlend; // 0x20

    };

    struct FStatColorMapEntry //ScriptStruct Engine.StatColorMapEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float In; // 0x0
        struct FColor Out; // 0x4

    };

    struct FNetDriverDefinition //ScriptStruct Engine.NetDriverDefinition
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName DefName; // 0x0
        struct FName DriverClassName; // 0x8
        struct FName DriverClassNameFallback; // 0x10

    };

    struct FYChartResultData //ScriptStruct Engine.YChartResultData
    {
    //Children Prop Count (Fields): 20
    public:

        int32_t m_framesCollected; // 0x0
        float m_secondSpent; // 0x4
        float m_secondsDisregarded; // 0x8
        float m_averageFps; // 0xc
        float m_percentMissedVsyncsThirty; // 0x10
        float m_percentMissedVsyncsSixty; // 0x14
        float m_averageGameTime; // 0x18
        float m_minGameTime; // 0x1c
        float m_maxGameTime; // 0x20
        float m_averageDrawTime; // 0x24
        float m_minDrawTime; // 0x28
        float m_maxDrawTime; // 0x2c
        float m_averageGpuTime; // 0x30
        float m_minGpuTime; // 0x34
        float m_maxGpuTime; // 0x38
        float m_boundGameThreadPercent; // 0x3c
        float m_boundRenderThreadPercent; // 0x40
        float m_boundGPUThreadPercent; // 0x44
        float m_maxFps; // 0x48
        float m_minFps; // 0x4c

    };

    struct FExposureSettings //ScriptStruct Engine.ExposureSettings
    {
    //Children Prop Count (Fields): 2
    public:

        float FixedEV100; // 0x0
        bool bFixed; // 0x4

    };

    struct FTickPrerequisite //ScriptStruct Engine.TickPrerequisite
    {
    public:


    };

    struct FCanvasUVTri //ScriptStruct Engine.CanvasUVTri
    {
    //Children Prop Count (Fields): 9
    public:

        struct FVector2D V0_Pos; // 0x0
        struct FVector2D V0_UV; // 0x8
        struct FLinearColor V0_Color; // 0x10
        struct FVector2D V1_Pos; // 0x20
        struct FVector2D V1_UV; // 0x28
        struct FLinearColor V1_Color; // 0x30
        struct FVector2D V2_Pos; // 0x40
        struct FVector2D V2_UV; // 0x48
        struct FLinearColor V2_Color; // 0x50

    };

    struct FFontRenderInfo //ScriptStruct Engine.FontRenderInfo
    {
    //Children Prop Count (Fields): 3
    public:

        char bClipText; // 0x0
        char bEnableShadow; // 0x0
        struct FDepthFieldGlowInfo GlowInfo; // 0x4

    };

    struct FDepthFieldGlowInfo //ScriptStruct Engine.DepthFieldGlowInfo
    {
    //Children Prop Count (Fields): 4
    public:

        char bEnableGlow; // 0x0
        struct FLinearColor GlowColor; // 0x4
        struct FVector2D GlowOuterRadius; // 0x14
        struct FVector2D GlowInnerRadius; // 0x1c

    };

    struct FRedirector //ScriptStruct Engine.Redirector
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName OldName; // 0x0
        struct FName NewName; // 0x8

    };

    struct FCollectionReference //ScriptStruct Engine.CollectionReference
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName CollectionName; // 0x0

    };

    struct FConstrainComponentPropName //ScriptStruct Engine.ConstrainComponentPropName
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName ComponentName; // 0x0

    };

    struct FDamageEvent //ScriptStruct Engine.DamageEvent
    {
    //Children Prop Count (Fields): 1
    public:

        class UDamageType* DamageTypeClass; // 0x8

    };

    struct FRadialDamageEvent : FDamageEvent //ScriptStruct Engine.RadialDamageEvent
    {
    //Children Prop Count (Fields): 3
    public:

        struct FRadialDamageParams Params; // 0x10
        struct FVector Origin; // 0x24
        struct TArray<struct FHitResult> ComponentHits; // 0x30

    };

    struct FRadialDamageParams //ScriptStruct Engine.RadialDamageParams
    {
    //Children Prop Count (Fields): 5
    public:

        float BaseDamage; // 0x0
        float MinimumDamage; // 0x4
        float InnerRadius; // 0x8
        float OuterRadius; // 0xc
        float DamageFalloff; // 0x10

    };

    struct FPointDamageEvent : FDamageEvent //ScriptStruct Engine.PointDamageEvent
    {
    //Children Prop Count (Fields): 3
    public:

        float Damage; // 0x10
        struct FVector_NetQuantizeNormal ShotDirection; // 0x14
        struct FHitResult HitInfo; // 0x20

    };

    struct FSkeletalMeshBuildSettings //ScriptStruct Engine.SkeletalMeshBuildSettings
    {
    //Children Prop Count (Fields): 12
    public:

        char bRecomputeNormals; // 0x0
        char bRecomputeTangents; // 0x0
        char bUseMikkTSpace; // 0x0
        char bComputeWeightedNormals; // 0x0
        char bRemoveDegenerates; // 0x0
        char bUseHighPrecisionTangentBasis; // 0x0
        char bUseFullPrecisionUVs; // 0x0
        char bBuildAdjacencyBuffer; // 0x0
        float ThresholdPosition; // 0x4
        float ThresholdTangentNormal; // 0x8
        float ThresholdUV; // 0xc
        float MorphThresholdPosition; // 0x10

    };

    struct FMeshBuildSettings //ScriptStruct Engine.MeshBuildSettings
    {
    //Children Prop Count (Fields): 19
    public:

        char bUseMikkTSpace; // 0x0
        char bRecomputeNormals; // 0x0
        char bRecomputeTangents; // 0x0
        char bComputeWeightedNormals; // 0x0
        char bRemoveDegenerates; // 0x0
        char bBuildAdjacencyBuffer; // 0x0
        char bBuildReversedIndexBuffer; // 0x0
        char bUseHighPrecisionTangentBasis; // 0x0
        char bUseFullPrecisionUVs; // 0x1
        char bGenerateLightmapUVs; // 0x1
        char bGenerateDistanceFieldAsIfTwoSided; // 0x1
        char bSupportFaceRemap; // 0x1
        int32_t MinLightmapResolution; // 0x4
        int32_t SrcLightmapIndex; // 0x8
        int32_t DstLightmapIndex; // 0xc
        float BuildScale; // 0x10
        struct FVector BuildScale3D; // 0x14
        float DistanceFieldResolutionScale; // 0x20
        class UStaticMesh* DistanceFieldReplacementMesh; // 0x28

    };

    struct FPOV //ScriptStruct Engine.POV
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Location; // 0x0
        struct FRotator Rotation; // 0xc
        float FOV; // 0x18

    };

    struct FAnimUpdateRateParameters //ScriptStruct Engine.AnimUpdateRateParameters
    {
    //Children Prop Count (Fields): 16
    public:

        enum class EUpdateRateShiftBucket ShiftBucket; // 0x1
        char bInterpolateSkippedFrames; // 0x2
        char bShouldUseLodMap; // 0x2
        char bShouldUseMinLod; // 0x2
        char bSkipUpdate; // 0x2
        char bSkipEvaluation; // 0x2
        int32_t UpdateRate; // 0x4
        int32_t EvaluationRate; // 0x8
        float TickedPoseOffestTime; // 0xc
        float AdditionalTime; // 0x10
        int32_t BaseNonRenderedUpdateRate; // 0x18
        int32_t MaxEvalRateForInterpolation; // 0x1c
        struct TArray<float> BaseVisibleDistanceFactorThesholds; // 0x20
        struct TMap<int32_t, int32_t> LODToFrameSkipMap; // 0x30
        int32_t SkippedUpdateFrames; // 0x80
        int32_t SkippedEvalFrames; // 0x84

    };

    struct FAnimSlotDesc //ScriptStruct Engine.AnimSlotDesc
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName SlotName; // 0x0
        int32_t NumChannels; // 0x8

    };

    struct FAnimSlotInfo //ScriptStruct Engine.AnimSlotInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName SlotName; // 0x0
        struct TArray<float> ChannelWeights; // 0x8

    };

    struct FMTDResult //ScriptStruct Engine.MTDResult
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Direction; // 0x0
        float Distance; // 0xc

    };

    struct FOverlapResult //ScriptStruct Engine.OverlapResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TWeakObjectPtr<struct AActor> Actor; // 0x0
        struct TWeakObjectPtr<struct UPrimitiveComponent> Component; // 0x8
        char bBlockingHit; // 0x14

    };

    struct FPrimitiveMaterialRef //ScriptStruct Engine.PrimitiveMaterialRef
    {
    //Children Prop Count (Fields): 3
    public:

        class UPrimitiveComponent* Primitive; // 0x0
        class UDecalComponent* Decal; // 0x8
        int32_t ElementIndex; // 0x10

    };

    struct FSwarmDebugOptions //ScriptStruct Engine.SwarmDebugOptions
    {
    //Children Prop Count (Fields): 3
    public:

        char bDistributionEnabled; // 0x0
        char bForceContentExport; // 0x0
        char bInitialized; // 0x0

    };

    struct FLightmassDebugOptions //ScriptStruct Engine.LightmassDebugOptions
    {
    //Children Prop Count (Fields): 16
    public:

        char bDebugMode; // 0x0
        char bStatsEnabled; // 0x0
        char bGatherBSPSurfacesAcrossComponents; // 0x0
        float CoplanarTolerance; // 0x4
        char bUseImmediateImport; // 0x8
        char bImmediateProcessMappings; // 0x8
        char bSortMappings; // 0x8
        char bDumpBinaryFiles; // 0x8
        char bDebugMaterials; // 0x8
        char bPadMappings; // 0x8
        char bDebugPaddings; // 0x8
        char bOnlyCalcDebugTexelMappings; // 0x8
        char bUseRandomColors; // 0x9
        char bColorBordersGreen; // 0x9
        char bColorByExecutionTime; // 0x9
        float ExecutionTimeDivisor; // 0xc

    };

    struct FLightmassPrimitiveSettings //ScriptStruct Engine.LightmassPrimitiveSettings
    {
    //Children Prop Count (Fields): 9
    public:

        char bUseTwoSidedLighting; // 0x0
        char bShadowIndirectOnly; // 0x0
        char bUseEmissiveForStaticLighting; // 0x0
        char bUseVertexNormalForHemisphereGather; // 0x0
        float EmissiveLightFalloffExponent; // 0x4
        float EmissiveLightExplicitInfluenceRadius; // 0x8
        float EmissiveBoost; // 0xc
        float DiffuseBoost; // 0x10
        float FullyOccludedSamplesFraction; // 0x14

    };

    struct FLightmassLightSettings //ScriptStruct Engine.LightmassLightSettings
    {
    //Children Prop Count (Fields): 3
    public:

        float IndirectLightingSaturation; // 0x0
        float ShadowExponent; // 0x4
        bool bUseAreaShadowsForStationaryLight; // 0x8

    };

    struct FLightmassDirectionalLightSettings : FLightmassLightSettings //ScriptStruct Engine.LightmassDirectionalLightSettings
    {
    //Children Prop Count (Fields): 1
    public:

        float LightSourceAngle; // 0xc

    };

    struct FLightmassPointLightSettings : FLightmassLightSettings //ScriptStruct Engine.LightmassPointLightSettings
    {
    public:


    };

    struct FBasedPosition //ScriptStruct Engine.BasedPosition
    {
    //Children Prop Count (Fields): 5
    public:

        class AActor* Base; // 0x0
        struct FVector Position; // 0x8
        struct FVector CachedBaseLocation; // 0x14
        struct FRotator CachedBaseRotation; // 0x20
        struct FVector CachedTransPosition; // 0x2c

    };

    struct FFractureEffect //ScriptStruct Engine.FractureEffect
    {
    //Children Prop Count (Fields): 2
    public:

        class UParticleSystem* ParticleSystem; // 0x0
        class USoundBase* Sound; // 0x8

    };

    struct FCollisionImpactData //ScriptStruct Engine.CollisionImpactData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FRigidBodyContactInfo> ContactInfos; // 0x0
        struct FVector TotalNormalImpulse; // 0x10
        struct FVector TotalFrictionImpulse; // 0x1c
        bool bIsVelocityDeltaUnderThreshold; // 0x28

    };

    struct FRigidBodyContactInfo //ScriptStruct Engine.RigidBodyContactInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector ContactPosition; // 0x0
        struct FVector ContactNormal; // 0xc
        float ContactPenetration; // 0x18
        class UPhysicalMaterial* PhysMaterial; // 0x20

    };

    struct FRigidBodyErrorCorrection //ScriptStruct Engine.RigidBodyErrorCorrection
    {
    //Children Prop Count (Fields): 13
    public:

        float PingExtrapolation; // 0x0
        float PingLimit; // 0x4
        float ErrorPerLinearDifference; // 0x8
        float ErrorPerAngularDifference; // 0xc
        float MaxRestoredStateError; // 0x10
        float MaxLinearHardSnapDistance; // 0x14
        float PositionLerp; // 0x18
        float AngleLerp; // 0x1c
        float LinearVelocityCoefficient; // 0x20
        float AngularVelocityCoefficient; // 0x24
        float ErrorAccumulationSeconds; // 0x28
        float ErrorAccumulationDistanceSq; // 0x2c
        float ErrorAccumulationSimilarity; // 0x30

    };

    struct FRigidBodyState //ScriptStruct Engine.RigidBodyState
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector_NetQuantize100 Position; // 0x0
        struct FQuat Quaternion; // 0x10
        struct FVector_NetQuantize100 LinVel; // 0x20
        struct FVector_NetQuantize100 AngVel; // 0x2c
        char Flags; // 0x38

    };

    struct FMaterialShadingModelField //ScriptStruct Engine.MaterialShadingModelField
    {
    //Children Prop Count (Fields): 1
    public:

        uint16_t ShadingModelField; // 0x0

    };

    struct FExponentialHeightFogData //ScriptStruct Engine.ExponentialHeightFogData
    {
    //Children Prop Count (Fields): 3
    public:

        float FogDensity; // 0x0
        float FogHeightFalloff; // 0x4
        float FogHeightOffset; // 0x8

    };

    struct FFontCharacter //ScriptStruct Engine.FontCharacter
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t StartU; // 0x0
        int32_t StartV; // 0x4
        int32_t USize; // 0x8
        int32_t VSize; // 0xc
        char TextureIndex; // 0x10
        int32_t VerticalOffset; // 0x14

    };

    struct FFontImportOptionsData //ScriptStruct Engine.FontImportOptionsData
    {
    //Children Prop Count (Fields): 29
    public:

        struct FString FontName; // 0x0
        float Height; // 0x10
        char bEnableAntialiasing; // 0x14
        char bEnableBold; // 0x14
        char bEnableItalic; // 0x14
        char bEnableUnderline; // 0x14
        char bAlphaOnly; // 0x14
        enum class EFontImportCharacterSet CharacterSet; // 0x18
        struct FString Chars; // 0x20
        struct FString UnicodeRange; // 0x30
        struct FString CharsFilePath; // 0x40
        struct FString CharsFileWildcard; // 0x50
        char bCreatePrintableOnly; // 0x60
        char bIncludeASCIIRange; // 0x60
        struct FLinearColor ForegroundColor; // 0x64
        char bEnableDropShadow; // 0x74
        int32_t TexturePageWidth; // 0x78
        int32_t TexturePageMaxHeight; // 0x7c
        int32_t XPadding; // 0x80
        int32_t YPadding; // 0x84
        int32_t ExtendBoxTop; // 0x88
        int32_t ExtendBoxBottom; // 0x8c
        int32_t ExtendBoxRight; // 0x90
        int32_t ExtendBoxLeft; // 0x94
        char bEnableLegacyMode; // 0x98
        int32_t Kerning; // 0x9c
        char bUseDistanceFieldAlpha; // 0xa0
        int32_t DistanceFieldScaleFactor; // 0xa4
        float DistanceFieldScanRadiusScale; // 0xa8

    };

    struct FForceFeedbackAttenuationSettings : FBaseAttenuationSettings //ScriptStruct Engine.ForceFeedbackAttenuationSettings
    {
    public:


    };

    struct FForceFeedbackChannelDetails //ScriptStruct Engine.ForceFeedbackChannelDetails
    {
    //Children Prop Count (Fields): 5
    public:

        char bAffectsLeftLarge; // 0x0
        char bAffectsLeftSmall; // 0x0
        char bAffectsRightLarge; // 0x0
        char bAffectsRightSmall; // 0x0
        struct FRuntimeFloatCurve Curve; // 0x8

    };

    struct FPredictProjectilePathResult //ScriptStruct Engine.PredictProjectilePathResult
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FPredictProjectilePathPointData> PathData; // 0x0
        struct FPredictProjectilePathPointData LastTraceDestination; // 0x10
        struct FHitResult HitResult; // 0x2c

    };

    struct FPredictProjectilePathPointData //ScriptStruct Engine.PredictProjectilePathPointData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Location; // 0x0
        struct FVector Velocity; // 0xc
        float Time; // 0x18

    };

    struct FActiveHapticFeedbackEffect //ScriptStruct Engine.ActiveHapticFeedbackEffect
    {
    //Children Prop Count (Fields): 1
    public:

        class UHapticFeedbackEffect_Base* HapticEffect; // 0x0

    };

    struct FHapticFeedbackDetails_Curve //ScriptStruct Engine.HapticFeedbackDetails_Curve
    {
    //Children Prop Count (Fields): 2
    public:

        struct FRuntimeFloatCurve Frequency; // 0x0
        struct FRuntimeFloatCurve Amplitude; // 0x88

    };

    struct FClusterNode //ScriptStruct Engine.ClusterNode
    {
    //Children Prop Count (Fields): 8
    public:

        struct FVector BoundMin; // 0x0
        int32_t FirstChild; // 0xc
        struct FVector BoundMax; // 0x10
        int32_t LastChild; // 0x1c
        int32_t FirstInstance; // 0x20
        int32_t LastInstance; // 0x24
        struct FVector MinInstanceScale; // 0x28
        struct FVector MaxInstanceScale; // 0x34

    };

    struct FClusterNode_DEPRECATED //ScriptStruct Engine.ClusterNode_DEPRECATED
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector BoundMin; // 0x0
        int32_t FirstChild; // 0xc
        struct FVector BoundMax; // 0x10
        int32_t LastChild; // 0x1c
        int32_t FirstInstance; // 0x20
        int32_t LastInstance; // 0x24

    };

    struct FHLODISMComponentDesc //ScriptStruct Engine.HLODISMComponentDesc
    {
    //Children Prop Count (Fields): 3
    public:

        class UStaticMesh* StaticMesh; // 0x0
        class UMaterialInterface* Material; // 0x8
        struct TArray<struct FTransform> Instances; // 0x10

    };

    struct FHLODProxyMesh //ScriptStruct Engine.HLODProxyMesh
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLazyObjectProperty LODActor; // 0x0
        class UStaticMesh* StaticMesh; // 0x20
        struct FName Key; // 0x28

    };

    struct FImportanceTexture //ScriptStruct Engine.ImportanceTexture
    {
    //Children Prop Count (Fields): 7
    public:

        struct FIntPoint Size; // 0x0
        int32_t NumMips; // 0x8
        struct TArray<float> MarginalCDF; // 0x10
        struct TArray<float> ConditionalCDF; // 0x20
        struct TArray<struct FColor> TextureData; // 0x30
        struct TWeakObjectPtr<struct UTexture2D> Texture; // 0x40
        enum class EImportanceWeight Weighting; // 0x48

    };

    struct FComponentOverrideRecord //ScriptStruct Engine.ComponentOverrideRecord
    {
    //Children Prop Count (Fields): 4
    public:

        class UObject* ComponentClass; // 0x0
        class UActorComponent* ComponentTemplate; // 0x8
        struct FComponentKey ComponentKey; // 0x10
        struct FBlueprintCookedComponentInstancingData CookedComponentInstancingData; // 0x30

    };

    struct FComponentKey //ScriptStruct Engine.ComponentKey
    {
    //Children Prop Count (Fields): 3
    public:

        class UObject* OwnerClass; // 0x0
        struct FName SCSVariableName; // 0x8
        struct FGuid AssociatedGuid; // 0x10

    };

    struct FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputDelegateBinding
    {
    //Children Prop Count (Fields): 3
    public:

        char bConsumeInput; // 0x0
        char bExecuteWhenPaused; // 0x0
        char bOverrideParentBinding; // 0x0

    };

    struct FBlueprintInputActionDelegateBinding : FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputActionDelegateBinding
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName inputActionName; // 0x4
        enum class EInputEvent InputKeyEvent; // 0xc
        struct FName FunctionNameToBind; // 0x10

    };

    struct FBlueprintInputAxisDelegateBinding : FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputAxisDelegateBinding
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InputAxisName; // 0x4
        struct FName FunctionNameToBind; // 0xc

    };

    struct FBlueprintInputAxisKeyDelegateBinding : FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputAxisKeyDelegateBinding
    {
    //Children Prop Count (Fields): 2
    public:

        struct FKey AxisKey; // 0x8
        struct FName FunctionNameToBind; // 0x20

    };

    struct FCachedKeyToActionInfo //ScriptStruct Engine.CachedKeyToActionInfo
    {
    //Children Prop Count (Fields): 1
    public:

        class UPlayerInput* PlayerInput; // 0x0

    };

    struct FBlueprintInputKeyDelegateBinding : FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputKeyDelegateBinding
    {
    //Children Prop Count (Fields): 3
    public:

        struct FInputChord InputChord; // 0x8
        enum class EInputEvent InputKeyEvent; // 0x28
        struct FName FunctionNameToBind; // 0x2c

    };

    struct FBlueprintInputTouchDelegateBinding : FBlueprintInputDelegateBinding //ScriptStruct Engine.BlueprintInputTouchDelegateBinding
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EInputEvent InputKeyEvent; // 0x4
        struct FName FunctionNameToBind; // 0x8

    };

    struct FInstancedStaticMeshComponentInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.InstancedStaticMeshComponentInstanceData
    {
    //Children Prop Count (Fields): 5
    public:

        class UStaticMesh* StaticMesh; // 0xb8
        struct FInstancedStaticMeshLightMapInstanceData CachedStaticLighting; // 0xc0
        struct TArray<struct FInstancedStaticMeshInstanceData> PerInstanceSMData; // 0x100
        struct TArray<float> PerInstanceSMCustomData; // 0x110
        int32_t InstancingRandomSeed; // 0x140

    };

    struct FInstancedStaticMeshInstanceData //ScriptStruct Engine.InstancedStaticMeshInstanceData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMatrix Transform; // 0x0

    };

    struct FInstancedStaticMeshLightMapInstanceData //ScriptStruct Engine.InstancedStaticMeshLightMapInstanceData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FTransform Transform; // 0x0
        struct TArray<struct FGuid> MapBuildDataIds; // 0x30

    };

    struct FInstancedStaticMeshMappingInfo //ScriptStruct Engine.InstancedStaticMeshMappingInfo
    {
    public:


    };

    struct FCurveEdTab //ScriptStruct Engine.CurveEdTab
    {
    //Children Prop Count (Fields): 6
    public:

        struct FString TabName; // 0x0
        struct TArray<struct FCurveEdEntry> Curves; // 0x10
        float ViewStartInput; // 0x20
        float ViewEndInput; // 0x24
        float ViewStartOutput; // 0x28
        float ViewEndOutput; // 0x2c

    };

    struct FCurveEdEntry //ScriptStruct Engine.CurveEdEntry
    {
    //Children Prop Count (Fields): 9
    public:

        class UObject* CurveObject; // 0x0
        struct FColor CurveColor; // 0x8
        struct FString CurveName; // 0x10
        int32_t bHideCurve; // 0x20
        int32_t bColorCurve; // 0x24
        int32_t bFloatingPointColorCurve; // 0x28
        int32_t bClamp; // 0x2c
        float ClampLow; // 0x30
        float ClampHigh; // 0x34

    };

    struct FInterpEdSelKey //ScriptStruct Engine.InterpEdSelKey
    {
    //Children Prop Count (Fields): 4
    public:

        class UInterpGroup* Group; // 0x0
        class UInterpTrack* Track; // 0x8
        int32_t KeyIndex; // 0x10
        float UnsnappedPosition; // 0x14

    };

    struct FCameraPreviewInfo //ScriptStruct Engine.CameraPreviewInfo
    {
    //Children Prop Count (Fields): 5
    public:

        class APawn* PawnClass; // 0x0
        class UAnimSequence* AnimSeq; // 0x8
        struct FVector Location; // 0x10
        struct FRotator Rotation; // 0x1c
        class APawn* PawnInst; // 0x28

    };

    struct FSubTrackGroup //ScriptStruct Engine.SubTrackGroup
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString GroupName; // 0x0
        struct TArray<int32_t> TrackIndices; // 0x10
        char bIsCollapsed; // 0x20
        char bIsSelected; // 0x20

    };

    struct FSupportedSubTrackInfo //ScriptStruct Engine.SupportedSubTrackInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class UInterpTrack* SupportedClass; // 0x0
        struct FString SubTrackName; // 0x8
        int32_t GroupIndex; // 0x18

    };

    struct FAnimControlTrackKey //ScriptStruct Engine.AnimControlTrackKey
    {
    //Children Prop Count (Fields): 7
    public:

        float StartTime; // 0x0
        class UAnimSequence* AnimSeq; // 0x8
        float AnimStartOffset; // 0x10
        float AnimEndOffset; // 0x14
        float AnimPlayRate; // 0x18
        char bLooping; // 0x1c
        char bReverse; // 0x1c

    };

    struct FBoolTrackKey //ScriptStruct Engine.BoolTrackKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        char Value; // 0x4

    };

    struct FDirectorTrackCut //ScriptStruct Engine.DirectorTrackCut
    {
    //Children Prop Count (Fields): 4
    public:

        float Time; // 0x0
        float transitionTime; // 0x4
        struct FName TargetCamGroup; // 0x8
        int32_t ShotNumber; // 0x10

    };

    struct FEventTrackKey //ScriptStruct Engine.EventTrackKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        struct FName EventName; // 0x4

    };

    struct FInterpLookupTrack //ScriptStruct Engine.InterpLookupTrack
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FInterpLookupPoint> Points; // 0x0

    };

    struct FInterpLookupPoint //ScriptStruct Engine.InterpLookupPoint
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName GroupName; // 0x0
        float Time; // 0x8

    };

    struct FParticleReplayTrackKey //ScriptStruct Engine.ParticleReplayTrackKey
    {
    //Children Prop Count (Fields): 3
    public:

        float Time; // 0x0
        float Duration; // 0x4
        int32_t ClipIDNumber; // 0x8

    };

    struct FSoundTrackKey //ScriptStruct Engine.SoundTrackKey
    {
    //Children Prop Count (Fields): 4
    public:

        float Time; // 0x0
        float Volume; // 0x4
        float Pitch; // 0x8
        class USoundBase* Sound; // 0x10

    };

    struct FToggleTrackKey //ScriptStruct Engine.ToggleTrackKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        enum class ETrackToggleAction ToggleAction; // 0x4

    };

    struct FVisibilityTrackKey //ScriptStruct Engine.VisibilityTrackKey
    {
    //Children Prop Count (Fields): 3
    public:

        float Time; // 0x0
        enum class EVisibilityTrackAction Action; // 0x4
        enum class EVisibilityTrackCondition ActiveCondition; // 0x5

    };

    struct FVectorSpringState //ScriptStruct Engine.VectorSpringState
    {
    public:


    };

    struct FFloatSpringState //ScriptStruct Engine.FloatSpringState
    {
    public:


    };

    struct FDrawToRenderTargetContext //ScriptStruct Engine.DrawToRenderTargetContext
    {
    //Children Prop Count (Fields): 1
    public:

        class UTextureRenderTarget2D* RenderTarget; // 0x0

    };

    struct FLatentActionManager //ScriptStruct Engine.LatentActionManager
    {
    public:


    };

    struct FLayerActorStats //ScriptStruct Engine.LayerActorStats
    {
    //Children Prop Count (Fields): 2
    public:

        class UObject* Type; // 0x0
        int32_t Total; // 0x8

    };

    struct FReplicatedStaticActorDestructionInfo //ScriptStruct Engine.ReplicatedStaticActorDestructionInfo
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* ObjClass; // 0x30

    };

    struct FLevelSimplificationDetails //ScriptStruct Engine.LevelSimplificationDetails
    {
    //Children Prop Count (Fields): 17
    public:

        bool bCreatePackagePerAsset; // 0x0
        float DetailsPercentage; // 0x4
        float m_minSquaredBounds; // 0x8
        struct FMaterialProxySettings StaticMeshMaterialSettings; // 0xc
        bool bOverrideLandscapeExportLOD; // 0x94
        int32_t LandscapeExportLOD; // 0x98
        struct FMaterialProxySettings LandscapeMaterialSettings; // 0x9c
        bool bBakeFoliageToLandscape; // 0x124
        bool bBakeGrassToLandscape; // 0x125
        bool bGenerateMeshNormalMap; // 0x126
        bool bGenerateMeshMetallicMap; // 0x127
        bool bGenerateMeshRoughnessMap; // 0x128
        bool bGenerateMeshSpecularMap; // 0x129
        bool bGenerateLandscapeNormalMap; // 0x12a
        bool bGenerateLandscapeMetallicMap; // 0x12b
        bool bGenerateLandscapeRoughnessMap; // 0x12c
        bool bGenerateLandscapeSpecularMap; // 0x12d

    };

    struct FMaterialProxySettings //ScriptStruct Engine.MaterialProxySettings
    {
    //Children Prop Count (Fields): 34
    public:

        struct FIntPoint TextureSize; // 0x0
        float GutterSpace; // 0x8
        float MetallicConstant; // 0xc
        float RoughnessConstant; // 0x10
        float AnisotropyConstant; // 0x14
        float SpecularConstant; // 0x18
        float OpacityConstant; // 0x1c
        float OpacityMaskConstant; // 0x20
        float AmbientOcclusionConstant; // 0x24
        enum class ETextureSizingType TextureSizingType; // 0x28
        enum class EMaterialMergeType MaterialMergeType; // 0x29
        enum class EBlendMode BlendMode; // 0x2a
        char bAllowTwoSidedMaterial; // 0x2b
        char bNormalMap; // 0x2b
        char bTangentMap; // 0x2b
        char bMetallicMap; // 0x2b
        char bRoughnessMap; // 0x2b
        char bAnisotropyMap; // 0x2b
        char bSpecularMap; // 0x2b
        char bEmissiveMap; // 0x2b
        char bOpacityMap; // 0x2c
        char bOpacityMaskMap; // 0x2c
        char bAmbientOcclusionMap; // 0x2c
        struct FIntPoint DiffuseTextureSize; // 0x30
        struct FIntPoint NormalTextureSize; // 0x38
        struct FIntPoint TangentTextureSize; // 0x40
        struct FIntPoint MetallicTextureSize; // 0x48
        struct FIntPoint RoughnessTextureSize; // 0x50
        struct FIntPoint AnisotropyTextureSize; // 0x58
        struct FIntPoint SpecularTextureSize; // 0x60
        struct FIntPoint EmissiveTextureSize; // 0x68
        struct FIntPoint OpacityTextureSize; // 0x70
        struct FIntPoint OpacityMaskTextureSize; // 0x78
        struct FIntPoint AmbientOcclusionTextureSize; // 0x80

    };

    struct FStreamableTextureInstance //ScriptStruct Engine.StreamableTextureInstance
    {
    public:


    };

    struct FDynamicTextureInstance : FStreamableTextureInstance //ScriptStruct Engine.DynamicTextureInstance
    {
    //Children Prop Count (Fields): 3
    public:

        class UTexture2D* Texture; // 0x28
        bool bAttached; // 0x30
        float OriginalRadius; // 0x34

    };

    struct FPrecomputedLightInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.PrecomputedLightInstanceData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform Transform; // 0xc0
        struct FGuid LightGuid; // 0xf0
        int32_t PreviewShadowMapChannel; // 0x100

    };

    struct FBatchedPoint //ScriptStruct Engine.BatchedPoint
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector Position; // 0x0
        struct FLinearColor Color; // 0xc
        float PointSize; // 0x1c
        float RemainingLifeTime; // 0x20
        char DepthPriority; // 0x24

    };

    struct FBatchedLine //ScriptStruct Engine.BatchedLine
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector Start; // 0x0
        struct FVector End; // 0xc
        struct FLinearColor Color; // 0x18
        float Thickness; // 0x28
        float RemainingLifeTime; // 0x2c
        char DepthPriority; // 0x30

    };

    struct FClientReceiveData //ScriptStruct Engine.ClientReceiveData
    {
    //Children Prop Count (Fields): 7
    public:

        class APlayerController* LocalPC; // 0x0
        struct FName messageType; // 0x8
        int32_t MessageIndex; // 0x10
        struct FString MessageString; // 0x18
        class APlayerState* RelatedPlayerState_2; // 0x28
        class APlayerState* RelatedPlayerState_3; // 0x30
        class UObject* OptionalObject; // 0x38

    };

    struct FHLODInstancingKey //ScriptStruct Engine.HLODInstancingKey
    {
    //Children Prop Count (Fields): 2
    public:

        class UStaticMesh* StaticMesh; // 0x0
        class UMaterialInterface* Material; // 0x8

    };

    struct FComponentSync //ScriptStruct Engine.ComponentSync
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        enum class ESyncOption SyncOption; // 0x8

    };

    struct FLODMappingData //ScriptStruct Engine.LODMappingData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<int32_t> Mapping; // 0x0
        struct TArray<int32_t> InverseMapping; // 0x10

    };

    struct FParameterGroupData //ScriptStruct Engine.ParameterGroupData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString GroupName; // 0x0
        int32_t GroupSortPriority; // 0x10

    };

    struct FMaterialSpriteElement //ScriptStruct Engine.MaterialSpriteElement
    {
    //Children Prop Count (Fields): 6
    public:

        class UMaterialInterface* Material; // 0x0
        class UCurveFloat* DistanceToOpacityCurve; // 0x8
        char bSizeIsInScreenSpace; // 0x10
        float BaseSizeX; // 0x14
        float BaseSizeY; // 0x18
        class UCurveFloat* DistanceToSizeCurve; // 0x20

    };

    struct FMaterialCachedExpressionData //ScriptStruct Engine.MaterialCachedExpressionData
    {
    //Children Prop Count (Fields): 11
    public:

        struct FMaterialCachedParameters Parameters; // 0x0
        struct TArray<class UObject*> ReferencedTextures; // 0x150
        struct TArray<struct FMaterialFunctionInfo> FunctionInfos; // 0x160
        struct TArray<struct FMaterialParameterCollectionInfo> ParameterCollectionInfos; // 0x170
        struct TArray<class UMaterialFunctionInterface*> DefaultLayers; // 0x180
        struct TArray<class UMaterialFunctionInterface*> DefaultLayerBlends; // 0x190
        struct TArray<class ULandscapeGrassType*> GrassTypes; // 0x1a0
        struct TArray<struct FName> DynamicParameterNames; // 0x1b0
        struct TArray<bool> QualityLevelsUsed; // 0x1c0
        char bHasRuntimeVirtualTextureOutput; // 0x1d0
        char bHasSceneColor; // 0x1d0

    };

    struct FMaterialParameterCollectionInfo //ScriptStruct Engine.MaterialParameterCollectionInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid StateId; // 0x0
        class UMaterialParameterCollection* ParameterCollection; // 0x10

    };

    struct FMaterialFunctionInfo //ScriptStruct Engine.MaterialFunctionInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid StateId; // 0x0
        class UMaterialFunctionInterface* Function; // 0x10

    };

    struct FMaterialCachedParameters //ScriptStruct Engine.MaterialCachedParameters
    {
    //Children Prop Count (Fields): 7
    public:

        struct FMaterialCachedParameterEntry RuntimeEntries; // 0x0
        struct TArray<float> ScalarValues; // 0xf0
        struct TArray<struct FLinearColor> VectorValues; // 0x100
        struct TArray<class UTexture*> TextureValues; // 0x110
        struct TArray<class UFont*> FontValues; // 0x120
        struct TArray<int32_t> FontPageValues; // 0x130
        struct TArray<class URuntimeVirtualTexture*> RuntimeVirtualTextureValues; // 0x140

    };

    struct FMaterialCachedParameterEntry //ScriptStruct Engine.MaterialCachedParameterEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<uint64_t> NameHashes; // 0x0
        struct TArray<struct FMaterialParameterInfo> ParameterInfos; // 0x10
        struct TArray<struct FGuid> ExpressionGuids; // 0x20

    };

    struct FMaterialParameterInfo //ScriptStruct Engine.MaterialParameterInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        enum class EMaterialParameterAssociation Association; // 0x8
        int32_t Index; // 0xc

    };

    struct FStaticComponentMaskValue //ScriptStruct Engine.StaticComponentMaskValue
    {
    //Children Prop Count (Fields): 4
    public:

        bool R; // 0x0
        bool G; // 0x1
        bool B; // 0x2
        bool A; // 0x3

    };

    struct FParameterChannelNames //ScriptStruct Engine.ParameterChannelNames
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText R; // 0x0
        struct FText G; // 0x20
        struct FText B; // 0x40
        struct FText A; // 0x60

    };

    struct FCustomDefine //ScriptStruct Engine.CustomDefine
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString DefineName; // 0x0
        struct FString DefineValue; // 0x10

    };

    struct FCustomOutput //ScriptStruct Engine.CustomOutput
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName OutputName; // 0x0
        enum class ECustomMaterialOutputType OutputType; // 0x8

    };

    struct FCustomInput //ScriptStruct Engine.CustomInput
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName InputName; // 0x0
        struct FExpressionInput Input; // 0x8

    };

    struct FFunctionExpressionOutput //ScriptStruct Engine.FunctionExpressionOutput
    {
    //Children Prop Count (Fields): 3
    public:

        class UMaterialExpressionFunctionOutput* ExpressionOutput; // 0x0
        struct FGuid ExpressionOutputId; // 0x8
        struct FExpressionOutput Output; // 0x18

    };

    struct FFunctionExpressionInput //ScriptStruct Engine.FunctionExpressionInput
    {
    //Children Prop Count (Fields): 3
    public:

        class UMaterialExpressionFunctionInput* ExpressionInput; // 0x0
        struct FGuid ExpressionInputId; // 0x8
        struct FExpressionInput Input; // 0x18

    };

    struct FFontParameterValue //ScriptStruct Engine.FontParameterValue
    {
    //Children Prop Count (Fields): 4
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        class UFont* FontValue; // 0x10
        int32_t FontPage; // 0x18
        struct FGuid ExpressionGUID; // 0x1c

    };

    struct FRuntimeVirtualTextureParameterValue //ScriptStruct Engine.RuntimeVirtualTextureParameterValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        class URuntimeVirtualTexture* ParameterValue; // 0x10
        struct FGuid ExpressionGUID; // 0x18

    };

    struct FTextureParameterValue //ScriptStruct Engine.TextureParameterValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        class UTexture* ParameterValue; // 0x10
        struct FGuid ExpressionGUID; // 0x18

    };

    struct FVectorParameterValue //ScriptStruct Engine.VectorParameterValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        struct FLinearColor ParameterValue; // 0x10
        struct FGuid ExpressionGUID; // 0x20

    };

    struct FScalarParameterValue //ScriptStruct Engine.ScalarParameterValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        float ParameterValue; // 0x10
        struct FGuid ExpressionGUID; // 0x14

    };

    struct FScalarParameterAtlasInstanceData //ScriptStruct Engine.ScalarParameterAtlasInstanceData
    {
    //Children Prop Count (Fields): 3
    public:

        bool bIsUsedAsAtlasPosition; // 0x0
        struct TSoftObjectPtr<UCurveLinearColor> Curve; // 0x8
        struct TSoftObjectPtr<UCurveLinearColorAtlas> Atlas; // 0x30

    };

    struct FMaterialInstanceBasePropertyOverrides //ScriptStruct Engine.MaterialInstanceBasePropertyOverrides
    {
    //Children Prop Count (Fields): 12
    public:

        char bOverride_OpacityMaskClipValue; // 0x0
        char bOverride_BlendMode; // 0x0
        char bOverride_ShadingModel; // 0x0
        char bOverride_DitheredLODTransition; // 0x0
        char bOverride_CastDynamicShadowAsMasked; // 0x0
        char bOverride_TwoSided; // 0x0
        char TwoSided; // 0x0
        char DitheredLODTransition; // 0x0
        char bCastDynamicShadowAsMasked; // 0x1
        enum class EBlendMode BlendMode; // 0x2
        enum class EMaterialShadingModel ShadingModel; // 0x3
        float OpacityMaskClipValue; // 0x4

    };

    struct FMaterialTextureInfo //ScriptStruct Engine.MaterialTextureInfo
    {
    //Children Prop Count (Fields): 3
    public:

        float SamplingScale; // 0x0
        int32_t UVChannelIndex; // 0x4
        struct FName TextureName; // 0x8

    };

    struct FLightmassMaterialInterfaceSettings //ScriptStruct Engine.LightmassMaterialInterfaceSettings
    {
    //Children Prop Count (Fields): 8
    public:

        float EmissiveBoost; // 0x0
        float DiffuseBoost; // 0x4
        float ExportResolutionScale; // 0x8
        char bCastShadowAsMasked; // 0xc
        char bOverrideCastShadowAsMasked; // 0xc
        char bOverrideEmissiveBoost; // 0xc
        char bOverrideDiffuseBoost; // 0xc
        char bOverrideExportResolutionScale; // 0xc

    };

    struct FMaterialLayersFunctions //ScriptStruct Engine.MaterialLayersFunctions
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<class UMaterialFunctionInterface*> Layers; // 0x0
        struct TArray<class UMaterialFunctionInterface*> Blends; // 0x10
        struct TArray<bool> LayerStates; // 0x20
        struct FString KeyString; // 0x30

    };

    struct FCollectionParameterBase //ScriptStruct Engine.CollectionParameterBase
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParameterName; // 0x0
        struct FGuid ID; // 0x8

    };

    struct FCollectionVectorParameter : FCollectionParameterBase //ScriptStruct Engine.CollectionVectorParameter
    {
    //Children Prop Count (Fields): 1
    public:

        struct FLinearColor DefaultValue; // 0x18

    };

    struct FCollectionScalarParameter : FCollectionParameterBase //ScriptStruct Engine.CollectionScalarParameter
    {
    //Children Prop Count (Fields): 1
    public:

        float DefaultValue; // 0x18

    };

    struct FInterpGroupActorInfo //ScriptStruct Engine.InterpGroupActorInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ObjectName; // 0x0
        struct TArray<class AActor*> actors; // 0x8

    };

    struct FCameraCutInfo //ScriptStruct Engine.CameraCutInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Location; // 0x0
        float Timestamp; // 0xc

    };

    struct FMemberReference //ScriptStruct Engine.MemberReference
    {
    //Children Prop Count (Fields): 6
    public:

        class UObject* MemberParent; // 0x0
        struct FString MemberScope; // 0x8
        struct FName MemberName; // 0x18
        struct FGuid MemberGuid; // 0x20
        bool bSelfContext; // 0x30
        bool bWasDeprecated; // 0x31

    };

    struct FMeshInstancingSettings //ScriptStruct Engine.MeshInstancingSettings
    {
    //Children Prop Count (Fields): 6
    public:

        class AActor* ActorClassToUse; // 0x0
        int32_t InstanceReplacementThreshold; // 0x8
        enum class EMeshInstancingReplacementMethod MeshReplacementMethod; // 0xc
        bool bSkipMeshesWithVertexColors; // 0xd
        bool bUseHLODVolumes; // 0xe
        class UInstancedStaticMeshComponent* ISMComponentToUse; // 0x10

    };

    struct FMeshMergingSettings //ScriptStruct Engine.MeshMergingSettings
    {
    //Children Prop Count (Fields): 20
    public:

        int32_t TargetLightMapResolution; // 0x0
        enum class EUVOutput OutputUVs; // 0x4
        struct FMaterialProxySettings MaterialSettings; // 0xc
        int32_t GutterSize; // 0x94
        int32_t SpecificLOD; // 0x98
        enum class EMeshLODSelectionType LODSelectionType; // 0x9c
        char bGenerateLightMapUV; // 0x9d
        char bComputedLightMapResolution; // 0x9d
        char bPivotPointAtZero; // 0x9d
        char bMergePhysicsData; // 0x9d
        char bMergeMaterials; // 0x9d
        char bCreateMergedMaterial; // 0x9d
        char bBakeVertexDataToMesh; // 0x9d
        char bUseVertexDataForBakingMaterial; // 0x9d
        char bUseTextureBinning; // 0x9e
        char bReuseMeshLightmapUVs; // 0x9e
        char bMergeEquivalentMaterials; // 0x9e
        char bUseLandscapeCulling; // 0x9e
        char bIncludeImposters; // 0x9e
        char bAllowDistanceField; // 0x9e

    };

    struct FMeshProxySettings //ScriptStruct Engine.MeshProxySettings
    {
    //Children Prop Count (Fields): 23
    public:

        int32_t ScreenSize; // 0x0
        float VoxelSize; // 0x4
        struct FMaterialProxySettings MaterialSettings; // 0x8
        float MergeDistance; // 0x90
        struct FColor UnresolvedGeometryColor; // 0x94
        float MaxRayCastDist; // 0x98
        float HardAngleThreshold; // 0x9c
        int32_t LightMapResolution; // 0xa0
        enum class EProxyNormalComputationMethod NormalCalculationMethod; // 0xa4
        enum class ELandscapeCullingPrecision LandscapeCullingPrecision; // 0xa5
        char bCalculateCorrectLODModel; // 0xa6
        char bOverrideVoxelSize; // 0xa6
        char bOverrideTransferDistance; // 0xa6
        char bUseHardAngleThreshold; // 0xa6
        char bComputeLightMapResolution; // 0xa6
        char bRecalculateNormals; // 0xa6
        char bUseLandscapeCulling; // 0xa6
        char bAllowAdjacency; // 0xa6
        char bAllowDistanceField; // 0xa7
        char bReuseMeshLightmapUVs; // 0xa7
        char bCreateCollision; // 0xa7
        char bAllowVertexColors; // 0xa7
        char bGenerateLightmapUVs; // 0xa7

    };

    struct FMeshReductionSettings //ScriptStruct Engine.MeshReductionSettings
    {
    //Children Prop Count (Fields): 18
    public:

        float PercentTriangles; // 0x0
        float PercentVertices; // 0x4
        float MaxDeviation; // 0x8
        float PixelError; // 0xc
        float WeldingThreshold; // 0x10
        float HardAngleThreshold; // 0x14
        int32_t BaseLODModel; // 0x18
        enum class EMeshFeatureImportance SilhouetteImportance; // 0x1c
        enum class EMeshFeatureImportance TextureImportance; // 0x1d
        enum class EMeshFeatureImportance ShadingImportance; // 0x1e
        char bRecalculateNormals; // 0x1f
        char bGenerateUniqueLightmapUVs; // 0x1f
        char bKeepSymmetry; // 0x1f
        char bVisibilityAided; // 0x1f
        char bCullOccluded; // 0x1f
        enum class EStaticMeshReductionTerimationCriterion TerminationCriterion; // 0x20
        enum class EMeshFeatureImportance VisibilityAggressiveness; // 0x21
        enum class EMeshFeatureImportance VertexColorImportance; // 0x22

    };

    struct FPurchaseInfo //ScriptStruct Engine.PurchaseInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FString Identifier; // 0x0
        struct FString DisplayName; // 0x10
        struct FString DisplayDescription; // 0x20
        struct FString DisplayPrice; // 0x30

    };

    struct FNameCurve : FIndexedCurve //ScriptStruct Engine.NameCurve
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FNameCurveKey> Keys; // 0x68

    };

    struct FNameCurveKey //ScriptStruct Engine.NameCurveKey
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        struct FName Value; // 0x4

    };

    struct FNavAvoidanceMask //ScriptStruct Engine.NavAvoidanceMask
    {
    //Children Prop Count (Fields): 32
    public:

        char bGroup0; // 0x0
        char bGroup1; // 0x0
        char bGroup2; // 0x0
        char bGroup3; // 0x0
        char bGroup4; // 0x0
        char bGroup5; // 0x0
        char bGroup6; // 0x0
        char bGroup7; // 0x0
        char bGroup8; // 0x1
        char bGroup9; // 0x1
        char bGroup10; // 0x1
        char bGroup11; // 0x1
        char bGroup12; // 0x1
        char bGroup13; // 0x1
        char bGroup14; // 0x1
        char bGroup15; // 0x1
        char bGroup16; // 0x2
        char bGroup17; // 0x2
        char bGroup18; // 0x2
        char bGroup19; // 0x2
        char bGroup20; // 0x2
        char bGroup21; // 0x2
        char bGroup22; // 0x2
        char bGroup23; // 0x2
        char bGroup24; // 0x3
        char bGroup25; // 0x3
        char bGroup26; // 0x3
        char bGroup27; // 0x3
        char bGroup28; // 0x3
        char bGroup29; // 0x3
        char bGroup30; // 0x3
        char bGroup31; // 0x3

    };

    struct FMovementProperties //ScriptStruct Engine.MovementProperties
    {
    //Children Prop Count (Fields): 5
    public:

        char bCanCrouch; // 0x0
        char bCanJump; // 0x0
        char bCanWalk; // 0x0
        char bCanSwim; // 0x0
        char bCanFly; // 0x0

    };

    struct FNavAgentProperties : FMovementProperties //ScriptStruct Engine.NavAgentProperties
    {
    //Children Prop Count (Fields): 5
    public:

        float AgentRadius; // 0x4
        float AgentHeight; // 0x8
        float AgentStepHeight; // 0xc
        float NavWalkingSearchHeightScale; // 0x10
        struct FSoftClassPath PreferredNavData; // 0x18

    };

    struct FNavDataConfig : FNavAgentProperties //ScriptStruct Engine.NavDataConfig
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x30
        struct FColor Color; // 0x38
        struct FVector DefaultQueryExtent; // 0x3c
        class AActor* NavigationDataClass; // 0x48
        struct FSoftClassProperty NavDataClass; // 0x50

    };

    struct FNavAgentSelector //ScriptStruct Engine.NavAgentSelector
    {
    //Children Prop Count (Fields): 16
    public:

        char bSupportsAgent0; // 0x0
        char bSupportsAgent1; // 0x0
        char bSupportsAgent2; // 0x0
        char bSupportsAgent3; // 0x0
        char bSupportsAgent4; // 0x0
        char bSupportsAgent5; // 0x0
        char bSupportsAgent6; // 0x0
        char bSupportsAgent7; // 0x0
        char bSupportsAgent8; // 0x1
        char bSupportsAgent9; // 0x1
        char bSupportsAgent10; // 0x1
        char bSupportsAgent11; // 0x1
        char bSupportsAgent12; // 0x1
        char bSupportsAgent13; // 0x1
        char bSupportsAgent14; // 0x1
        char bSupportsAgent15; // 0x1

    };

    struct FNavigationLinkBase //ScriptStruct Engine.NavigationLinkBase
    {
    //Children Prop Count (Fields): 33
    public:

        float LeftProjectHeight; // 0x0
        float MaxFallDownLength; // 0x4
        float SnapRadius; // 0xc
        float SnapHeight; // 0x10
        struct FNavAgentSelector SupportedAgents; // 0x14
        char bSupportsAgent0; // 0x18
        char bSupportsAgent1; // 0x18
        char bSupportsAgent2; // 0x18
        char bSupportsAgent3; // 0x18
        char bSupportsAgent4; // 0x18
        char bSupportsAgent5; // 0x18
        char bSupportsAgent6; // 0x18
        char bSupportsAgent7; // 0x18
        char bSupportsAgent8; // 0x19
        char bSupportsAgent9; // 0x19
        char bSupportsAgent10; // 0x19
        char bSupportsAgent11; // 0x19
        char bSupportsAgent12; // 0x19
        char bSupportsAgent13; // 0x19
        char bSupportsAgent14; // 0x19
        char bSupportsAgent15; // 0x19
        enum class ENavLinkDirection Direction; // 0x1c
        char bUseSnapHeight; // 0x1d
        char bSnapToCheapestArea; // 0x1d
        char bCustomFlag0; // 0x1d
        char bCustomFlag1; // 0x1d
        char bCustomFlag2; // 0x1d
        char bCustomFlag3; // 0x1d
        char bCustomFlag4; // 0x1d
        char bCustomFlag5; // 0x1d
        char bCustomFlag6; // 0x1e
        char bCustomFlag7; // 0x1e
        class UNavAreaBase* AreaClass; // 0x20

    };

    struct FNavigationSegmentLink : FNavigationLinkBase //ScriptStruct Engine.NavigationSegmentLink
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector LeftStart; // 0x30
        struct FVector LeftEnd; // 0x3c
        struct FVector RightStart; // 0x48
        struct FVector RightEnd; // 0x54

    };

    struct FNavigationLink : FNavigationLinkBase //ScriptStruct Engine.NavigationLink
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Left; // 0x30
        struct FVector Right; // 0x3c

    };

    struct FChannelDefinition //ScriptStruct Engine.ChannelDefinition
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName ChannelName; // 0x0
        struct FName ClassName; // 0x8
        class UObject* ChannelClass; // 0x10
        int32_t StaticChannelIndex; // 0x18
        bool bTickOnCreate; // 0x1c
        bool bServerOpen; // 0x1d
        bool bClientOpen; // 0x1e
        bool bInitialServer; // 0x1f
        bool bInitialClient; // 0x20

    };

    struct FPacketSimulationSettings //ScriptStruct Engine.PacketSimulationSettings
    {
    //Children Prop Count (Fields): 13
    public:

        int32_t PktLoss; // 0x0
        int32_t PktLossMaxSize; // 0x4
        int32_t PktLossMinSize; // 0x8
        int32_t PktOrder; // 0xc
        int32_t PktDup; // 0x10
        int32_t PktLag; // 0x14
        int32_t PktLagVariance; // 0x18
        int32_t PktLagMin; // 0x1c
        int32_t PktLagMax; // 0x20
        int32_t PktIncomingLagMin; // 0x24
        int32_t PktIncomingLagMax; // 0x28
        int32_t PktIncomingLoss; // 0x2c
        int32_t PktJitter; // 0x30

    };

    struct FNetworkEmulationProfileDescription //ScriptStruct Engine.NetworkEmulationProfileDescription
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ProfileName; // 0x0
        struct FString Tooltip; // 0x10

    };

    struct FNodeItem //ScriptStruct Engine.NodeItem
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ParentName; // 0x0
        struct FTransform Transform; // 0x10

    };

    struct FParticleBurst //ScriptStruct Engine.ParticleBurst
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Count; // 0x0
        int32_t CountLow; // 0x4
        float Time; // 0x8

    };

    struct FParticleRandomSeedInfo //ScriptStruct Engine.ParticleRandomSeedInfo
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName ParameterName; // 0x0
        char bGetSeedFromInstance; // 0x8
        char bInstanceSeedIsIndex; // 0x8
        char bResetSeedOnEmitterLooping; // 0x8
        char bRandomlySelectSeedArray; // 0x8
        struct TArray<int32_t> RandomSeeds; // 0x10

    };

    struct FParticleCurvePair //ScriptStruct Engine.ParticleCurvePair
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString CurveName; // 0x0
        class UObject* CurveObject; // 0x10

    };

    struct FBeamModifierOptions //ScriptStruct Engine.BeamModifierOptions
    {
    //Children Prop Count (Fields): 3
    public:

        char bModify; // 0x0
        char bScale; // 0x0
        char bLock; // 0x0

    };

    struct FParticleEvent_GenerateInfo //ScriptStruct Engine.ParticleEvent_GenerateInfo
    {
    //Children Prop Count (Fields): 9
    public:

        enum class EParticleEventType Type; // 0x0
        int32_t Frequency; // 0x4
        int32_t ParticleFrequency; // 0x8
        char FirstTimeOnly; // 0xc
        char LastTimeOnly; // 0xc
        char UseReflectedImpactVector; // 0xc
        char bUseOrbitOffset; // 0xc
        struct FName CustomName; // 0x10
        struct TArray<class UParticleModuleEventSendToGame*> ParticleModuleEventsToSendToGame; // 0x18

    };

    struct FLocationBoneSocketInfo //ScriptStruct Engine.LocationBoneSocketInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName BoneSocketName; // 0x0
        struct FVector Offset; // 0x8

    };

    struct FOrbitOptions //ScriptStruct Engine.OrbitOptions
    {
    //Children Prop Count (Fields): 3
    public:

        char bProcessDuringSpawn; // 0x0
        char bProcessDuringUpdate; // 0x0
        char bUseEmitterTime; // 0x0

    };

    struct FEmitterDynamicParameter //ScriptStruct Engine.EmitterDynamicParameter
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName ParamName; // 0x0
        char bUseEmitterTime; // 0x8
        char bSpawnTimeOnly; // 0x8
        enum class EEmitterDynamicParameterValue ValueMethod; // 0xc
        char bScaleVelocityByParamValue; // 0x10
        struct FRawDistributionFloat ParamValue; // 0x18

    };

    struct FBeamTargetData //ScriptStruct Engine.BeamTargetData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName targetName; // 0x0
        float TargetPercentage; // 0x8

    };

    struct FGPUSpriteResourceData //ScriptStruct Engine.GPUSpriteResourceData
    {
    //Children Prop Count (Fields): 40
    public:

        struct TArray<struct FColor> QuantizedColorSamples; // 0x0
        struct TArray<struct FColor> QuantizedMiscSamples; // 0x10
        struct TArray<struct FColor> QuantizedSimulationAttrSamples; // 0x20
        struct FVector4 ColorScale; // 0x30
        struct FVector4 ColorBias; // 0x40
        struct FVector4 MiscScale; // 0x50
        struct FVector4 MiscBias; // 0x60
        struct FVector4 SimulationAttrCurveScale; // 0x70
        struct FVector4 SimulationAttrCurveBias; // 0x80
        struct FVector4 SubImageSize; // 0x90
        struct FVector4 SizeBySpeed; // 0xa0
        struct FVector ConstantAcceleration; // 0xb0
        struct FVector OrbitOffsetBase; // 0xbc
        struct FVector OrbitOffsetRange; // 0xc8
        struct FVector OrbitFrequencyBase; // 0xd4
        struct FVector OrbitFrequencyRange; // 0xe0
        struct FVector OrbitPhaseBase; // 0xec
        struct FVector OrbitPhaseRange; // 0xf8
        float GlobalVectorFieldScale; // 0x104
        float GlobalVectorFieldTightness; // 0x108
        float PerParticleVectorFieldScale; // 0x10c
        float PerParticleVectorFieldBias; // 0x110
        float DragCoefficientScale; // 0x114
        float DragCoefficientBias; // 0x118
        float ResilienceScale; // 0x11c
        float ResilienceBias; // 0x120
        float CollisionRadiusScale; // 0x124
        float CollisionRadiusBias; // 0x128
        float CollisionTimeBias; // 0x12c
        float CollisionRandomSpread; // 0x130
        float CollisionRandomDistribution; // 0x134
        float OneMinusFriction; // 0x138
        float RotationRateScale; // 0x13c
        float CameraMotionBlurAmount; // 0x140
        enum class EParticleScreenAlignment ScreenAlignment; // 0x144
        enum class EParticleAxisLock LockAxisFlag; // 0x145
        struct FVector2D PivotOffset; // 0x148
        char bRemoveHMDRoll; // 0x150
        float MinFacingCameraBlendDistance; // 0x154
        float MaxFacingCameraBlendDistance; // 0x158

    };

    struct FGPUSpriteEmitterInfo //ScriptStruct Engine.GPUSpriteEmitterInfo
    {
    //Children Prop Count (Fields): 29
    public:

        class UParticleModuleRequired* RequiredModule; // 0x0
        class UParticleModuleSpawn* SpawnModule; // 0x8
        class UParticleModuleSpawnPerUnit* SpawnPerUnitModule; // 0x10
        struct TArray<class UParticleModule*> SpawnModules; // 0x18
        struct FGPUSpriteLocalVectorFieldInfo LocalVectorField; // 0x30
        struct FFloatDistribution VectorFieldScale; // 0xa0
        struct FFloatDistribution DragCoefficient; // 0xc0
        struct FFloatDistribution PointAttractorStrength; // 0xe0
        struct FFloatDistribution Resilience; // 0x100
        struct FVector ConstantAcceleration; // 0x120
        struct FVector PointAttractorPosition; // 0x12c
        float PointAttractorRadiusSq; // 0x138
        struct FVector OrbitOffsetBase; // 0x13c
        struct FVector OrbitOffsetRange; // 0x148
        struct FVector2D InvMaxSize; // 0x154
        float InvRotationRateScale; // 0x15c
        float MaxLifetime; // 0x160
        int32_t MaxParticleCount; // 0x164
        enum class EParticleScreenAlignment ScreenAlignment; // 0x168
        enum class EParticleAxisLock LockAxisFlag; // 0x169
        char bEnableCollision; // 0x16c
        enum class EParticleCollisionMode CollisionMode; // 0x170
        char bRemoveHMDRoll; // 0x174
        float MinFacingCameraBlendDistance; // 0x178
        float MaxFacingCameraBlendDistance; // 0x17c
        struct FRawDistributionVector DynamicColor; // 0x180
        struct FRawDistributionFloat DynamicAlpha; // 0x1c8
        struct FRawDistributionVector DynamicColorScale; // 0x1f8
        struct FRawDistributionFloat DynamicAlphaScale; // 0x240

    };

    struct FGPUSpriteLocalVectorFieldInfo //ScriptStruct Engine.GPUSpriteLocalVectorFieldInfo
    {
    //Children Prop Count (Fields): 12
    public:

        class UVectorField* Field; // 0x0
        struct FTransform Transform; // 0x10
        struct FRotator MinInitialRotation; // 0x40
        struct FRotator MaxInitialRotation; // 0x4c
        struct FRotator RotationRate; // 0x58
        float Intensity; // 0x64
        float Tightness; // 0x68
        char bIgnoreComponentTransform; // 0x6c
        char bTileX; // 0x6c
        char bTileY; // 0x6c
        char bTileZ; // 0x6c
        char bUseFixDT; // 0x6c

    };

    struct FNamedEmitterMaterial //ScriptStruct Engine.NamedEmitterMaterial
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        class UMaterialInterface* Material; // 0x8

    };

    struct FLODSoloTrack //ScriptStruct Engine.LODSoloTrack
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<char> SoloEnableSetting; // 0x0

    };

    struct FParticleSystemLOD //ScriptStruct Engine.ParticleSystemLOD
    {
    public:


    };

    struct FParticleSysParam //ScriptStruct Engine.ParticleSysParam
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName Name; // 0x0
        enum class EParticleSysParamType ParamType; // 0x8
        float Scalar; // 0xc
        float Scalar_Low; // 0x10
        struct FVector Vector; // 0x14
        struct FVector Vector_Low; // 0x20
        struct FColor Color; // 0x2c
        class AActor* Actor; // 0x30
        class UMaterialInterface* Material; // 0x38

    };

    struct FParticleSystemWorldManagerTickFunction : FTickFunction //ScriptStruct Engine.ParticleSystemWorldManagerTickFunction
    {
    public:


    };

    struct FParticleSystemReplayFrame //ScriptStruct Engine.ParticleSystemReplayFrame
    {
    public:


    };

    struct FParticleEmitterReplayFrame //ScriptStruct Engine.ParticleEmitterReplayFrame
    {
    public:


    };

    struct FFreezablePerPlatformInt //ScriptStruct Engine.FreezablePerPlatformInt
    {
    public:


    };

    struct FPhysicalAnimationData //ScriptStruct Engine.PhysicalAnimationData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FName BodyName; // 0x0
        char bIsLocalSimulation; // 0x8
        float OrientationStrength; // 0xc
        float AngularVelocityStrength; // 0x10
        float PositionStrength; // 0x14
        float VelocityStrength; // 0x18
        float MaxLinearForce; // 0x1c
        float MaxAngularForce; // 0x20

    };

    struct FPhysicalAnimationProfile //ScriptStruct Engine.PhysicalAnimationProfile
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ProfileName; // 0x0
        struct FPhysicalAnimationData PhysicalAnimationData; // 0x8

    };

    struct FSolverIterations //ScriptStruct Engine.SolverIterations
    {
    //Children Prop Count (Fields): 7
    public:

        float FixedTimeStep; // 0x0
        int32_t SolverIterations; // 0x4
        int32_t JointIterations; // 0x8
        int32_t CollisionIterations; // 0xc
        int32_t SolverPushOutIterations; // 0x10
        int32_t JointPushOutIterations; // 0x14
        int32_t CollisionPushOutIterations; // 0x18

    };

    struct FPhysicsConstraintProfileHandle //ScriptStruct Engine.PhysicsConstraintProfileHandle
    {
    //Children Prop Count (Fields): 2
    public:

        struct FConstraintProfileProperties ProfileProperties; // 0x0
        struct FName ProfileName; // 0x114

    };

    struct FChaosPhysicsSettings //ScriptStruct Engine.ChaosPhysicsSettings
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EChaosThreadingMode DefaultThreadingModel; // 0x0
        enum class EChaosSolverTickMode DedicatedThreadTickMode; // 0x1
        enum class EChaosBufferMode DedicatedThreadBufferMode; // 0x2

    };

    struct FPhysicalSurfaceName //ScriptStruct Engine.PhysicalSurfaceName
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EPhysicalSurface Type; // 0x0
        struct FName Name; // 0x4

    };

    struct FDelegateArray //ScriptStruct Engine.DelegateArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FDelegate> Delegates; // 0x0

    };

    struct FTViewTarget //ScriptStruct Engine.TViewTarget
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* Target; // 0x0
        struct FMinimalViewInfo POV; // 0x10
        class APlayerState* PlayerState; // 0x590

    };

    struct FCameraCacheEntry //ScriptStruct Engine.CameraCacheEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float Timestamp; // 0x0
        struct FMinimalViewInfo POV; // 0x10

    };

    struct FInputActionSpeechMapping //ScriptStruct Engine.InputActionSpeechMapping
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ActionName; // 0x0
        struct FName SpeechKeyword; // 0x8

    };

    struct FInputAxisKeyMapping //ScriptStruct Engine.InputAxisKeyMapping
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName AxisName; // 0x0
        float Scale; // 0x8
        struct FKey Key; // 0x10
        int32_t R; // 0x28
        int32_t G; // 0x2c
        int32_t B; // 0x30

    };

    struct FInputActionKeyMapping //ScriptStruct Engine.InputActionKeyMapping
    {
    //Children Prop Count (Fields): 9
    public:

        struct FName ActionName; // 0x0
        char bShift; // 0x8
        char bCtrl; // 0x8
        char bAlt; // 0x8
        char bCmd; // 0x8
        struct FKey Key; // 0x10
        int32_t R; // 0x28
        int32_t G; // 0x2c
        int32_t B; // 0x30

    };

    struct FInputAxisConfigEntry //ScriptStruct Engine.InputAxisConfigEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName AxisKeyName; // 0x0
        struct FInputAxisProperties AxisProperties; // 0x8

    };

    struct FInputAxisProperties //ScriptStruct Engine.InputAxisProperties
    {
    //Children Prop Count (Fields): 4
    public:

        float DeadZone; // 0x0
        float sensitivity; // 0x4
        float Exponent; // 0x8
        char bInvert; // 0xc

    };

    struct FKeyBind //ScriptStruct Engine.KeyBind
    {
    //Children Prop Count (Fields): 11
    public:

        struct FKey Key; // 0x0
        struct FString Command; // 0x18
        char Control; // 0x28
        char Shift; // 0x28
        char Alt; // 0x28
        char Cmd; // 0x28
        char bIgnoreCtrl; // 0x28
        char bIgnoreShift; // 0x28
        char bIgnoreAlt; // 0x28
        char bIgnoreCmd; // 0x28
        char bDisabled; // 0x29

    };

    struct FPlayerMuteList //ScriptStruct Engine.PlayerMuteList
    {
    //Children Prop Count (Fields): 2
    public:

        bool bHasVoiceHandshakeCompleted; // 0x30
        int32_t VoiceChannelIdx; // 0x34

    };

    struct FPoseDataContainer //ScriptStruct Engine.PoseDataContainer
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<struct FSmartName> PoseNames; // 0x0
        struct TArray<struct FName> Tracks; // 0x10
        struct TMap<struct FName, int32_t> TrackMap; // 0x20
        struct TArray<struct FPoseData> Poses; // 0x70
        struct TArray<struct FAnimCurveBase> Curves; // 0x80

    };

    struct FPoseData //ScriptStruct Engine.PoseData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FTransform> LocalSpacePose; // 0x0
        struct TMap<int32_t, int32_t> TrackToBufferIndex; // 0x10
        struct TArray<float> CurveData; // 0x60

    };

    struct FPreviewAssetAttachContainer //ScriptStruct Engine.PreviewAssetAttachContainer
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FPreviewAttachedObjectPair> AttachedObjects; // 0x0

    };

    struct FPreviewAttachedObjectPair //ScriptStruct Engine.PreviewAttachedObjectPair
    {
    //Children Prop Count (Fields): 3
    public:

        struct TSoftObjectPtr<UObject> AttachedObject; // 0x0
        class UObject* Object; // 0x28
        struct FName AttachedTo; // 0x30

    };

    struct FPreviewMeshCollectionEntry //ScriptStruct Engine.PreviewMeshCollectionEntry
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSoftObjectPtr<USkeletalMesh> SkeletalMesh; // 0x0

    };

    struct FPrimitiveComponentInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.PrimitiveComponentInstanceData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FTransform ComponentTransform; // 0xc0
        int32_t VisibilityId; // 0xf0
        class UPrimitiveComponent* LODParent; // 0xf8

    };

    struct FSpriteCategoryInfo //ScriptStruct Engine.SpriteCategoryInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Category; // 0x0
        struct FText DisplayName; // 0x8
        struct FText Description; // 0x28

    };

    struct FQuartzClockSettings //ScriptStruct Engine.QuartzClockSettings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FQuartzTimeSignature TimeSignature; // 0x0
        bool bIgnoreLevelChange; // 0x18

    };

    struct FQuartzTimeSignature //ScriptStruct Engine.QuartzTimeSignature
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t NumBeats; // 0x0
        enum class EQuartzTimeSignatureQuantization BeatType; // 0x4
        struct TArray<struct FQuartzPulseOverrideStep> OptionalPulseOverride; // 0x8

    };

    struct FQuartzPulseOverrideStep //ScriptStruct Engine.QuartzPulseOverrideStep
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t NumberOfPulses; // 0x0
        enum class EQuartzCommandQuantization PulseDuration; // 0x4

    };

    struct FQuartzQuantizationBoundary //ScriptStruct Engine.QuartzQuantizationBoundary
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EQuartzCommandQuantization Quantization; // 0x0
        float Multiplier; // 0x4
        enum class EQuarztQuantizationReference CountingReferencePoint; // 0x8
        bool bFireOnClockStart; // 0x9

    };

    struct FQuartzTransportTimeStamp //ScriptStruct Engine.QuartzTransportTimeStamp
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t Bars; // 0x0
        int32_t Beat; // 0x4
        float BeatFraction; // 0x8
        float Seconds; // 0xc

    };

    struct FLevelNameAndTime //ScriptStruct Engine.LevelNameAndTime
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString LevelName; // 0x0
        uint32_t LevelChangeTimeInMS; // 0x10

    };

    struct FReverbSettings //ScriptStruct Engine.ReverbSettings
    {
    //Children Prop Count (Fields): 5
    public:

        bool bApplyReverb; // 0x0
        class UReverbEffect* ReverbEffect; // 0x8
        class USoundEffectSubmixPreset* ReverbPluginEffect; // 0x10
        float Volume; // 0x18
        float FadeTime; // 0x1c

    };

    struct FCompressedRichCurve //ScriptStruct Engine.CompressedRichCurve
    {
    public:


    };

    struct FTransformBase //ScriptStruct Engine.TransformBase
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Node; // 0x0
        struct FTransformBaseConstraint Constraints; // 0x8

    };

    struct FTransformBaseConstraint //ScriptStruct Engine.TransformBaseConstraint
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRigTransformConstraint> TransformConstraints; // 0x0

    };

    struct FRigTransformConstraint //ScriptStruct Engine.RigTransformConstraint
    {
    //Children Prop Count (Fields): 3
    public:

        enum class EConstraintTransform TranformType; // 0x0
        struct FName ParentSpace; // 0x4
        float weight; // 0xc

    };

    struct FNode //ScriptStruct Engine.Node
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x0
        struct FName ParentName; // 0x8
        struct FTransform Transform; // 0x10
        struct FString DisplayName; // 0x40
        bool bAdvanced; // 0x50

    };

    struct FRootMotionSource //ScriptStruct Engine.RootMotionSource
    {
    //Children Prop Count (Fields): 13
    public:

        uint16_t Priority; // 0x10
        uint16_t LocalID; // 0x12
        enum class ERootMotionAccumulateMode AccumulateMode; // 0x14
        struct FName InstanceName; // 0x18
        float StartTime; // 0x20
        float currentTime; // 0x24
        float PreviousTime; // 0x28
        float Duration; // 0x2c
        struct FRootMotionSourceStatus Status; // 0x30
        struct FRootMotionSourceSettings Settings; // 0x31
        bool bInLocalSpace; // 0x32
        struct FRootMotionMovementParams RootMotionParams; // 0x40
        struct FRootMotionFinishVelocitySettings FinishVelocityParams; // 0x80

    };

    struct FRootMotionFinishVelocitySettings //ScriptStruct Engine.RootMotionFinishVelocitySettings
    {
    //Children Prop Count (Fields): 3
    public:

        enum class ERootMotionFinishVelocityMode Mode; // 0x0
        struct FVector SetVelocity; // 0x4
        float ClampVelocity; // 0x10

    };

    struct FRootMotionSourceStatus //ScriptStruct Engine.RootMotionSourceStatus
    {
    //Children Prop Count (Fields): 1
    public:

        char Flags; // 0x0

    };

    struct FRootMotionSource_JumpForce : FRootMotionSource //ScriptStruct Engine.RootMotionSource_JumpForce
    {
    //Children Prop Count (Fields): 6
    public:

        struct FRotator Rotation; // 0x98
        float Distance; // 0xa4
        float Height; // 0xa8
        bool bDisableTimeout; // 0xac
        class UCurveVector* PathOffsetCurve; // 0xb0
        class UCurveFloat* TimeMappingCurve; // 0xb8

    };

    struct FRootMotionSource_MoveToDynamicForce : FRootMotionSource //ScriptStruct Engine.RootMotionSource_MoveToDynamicForce
    {
    //Children Prop Count (Fields): 6
    public:

        struct FVector StartLocation; // 0x98
        struct FVector InitialTargetLocation; // 0xa4
        struct FVector TargetLocation; // 0xb0
        bool bRestrictSpeedToExpected; // 0xbc
        class UCurveVector* PathOffsetCurve; // 0xc0
        class UCurveFloat* TimeMappingCurve; // 0xc8

    };

    struct FRootMotionSource_MoveToForce : FRootMotionSource //ScriptStruct Engine.RootMotionSource_MoveToForce
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector StartLocation; // 0x98
        struct FVector TargetLocation; // 0xa4
        bool bRestrictSpeedToExpected; // 0xb0
        class UCurveVector* PathOffsetCurve; // 0xb8

    };

    struct FRootMotionSource_RadialForce : FRootMotionSource //ScriptStruct Engine.RootMotionSource_RadialForce
    {
    //Children Prop Count (Fields): 10
    public:

        struct FVector Location; // 0x98
        class AActor* LocationActor; // 0xa8
        float Radius; // 0xb0
        float Strength; // 0xb4
        bool bIsPush; // 0xb8
        bool bNoZForce; // 0xb9
        class UCurveFloat* StrengthDistanceFalloff; // 0xc0
        class UCurveFloat* StrengthOverTime; // 0xc8
        bool bUseFixedWorldDirection; // 0xd0
        struct FRotator FixedWorldDirection; // 0xd4

    };

    struct FRootMotionSource_ConstantForce : FRootMotionSource //ScriptStruct Engine.RootMotionSource_ConstantForce
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Force; // 0x98
        class UCurveFloat* StrengthOverTime; // 0xa8

    };

    struct FCameraExposureSettings //ScriptStruct Engine.CameraExposureSettings
    {
    //Children Prop Count (Fields): 14
    public:

        enum class EAutoExposureMethod Method; // 0x0
        float LowPercent; // 0x4
        float HighPercent; // 0x8
        float MinBrightness; // 0xc
        float MaxBrightness; // 0x10
        float SpeedUp; // 0x14
        float SpeedDown; // 0x18
        float Bias; // 0x1c
        class UCurveFloat* BiasCurve; // 0x20
        class UTexture* MeterMask; // 0x28
        float HistogramLogMin; // 0x30
        float HistogramLogMax; // 0x34
        float CalibrationConstant; // 0x38
        char ApplyPhysicalCameraExposure; // 0x3c

    };

    struct FLensSettings //ScriptStruct Engine.LensSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLensBloomSettings Bloom; // 0x0
        struct FLensImperfectionSettings Imperfections; // 0xb8
        float ChromaticAberration; // 0xd8

    };

    struct FLensImperfectionSettings //ScriptStruct Engine.LensImperfectionSettings
    {
    //Children Prop Count (Fields): 3
    public:

        class UTexture* DirtMask; // 0x0
        float DirtMaskIntensity; // 0x8
        struct FLinearColor DirtMaskTint; // 0xc

    };

    struct FLensBloomSettings //ScriptStruct Engine.LensBloomSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGaussianSumBloomSettings GaussianSum; // 0x0
        struct FConvolutionBloomSettings Convolution; // 0x88
        enum class EBloomMethod Method; // 0xb0

    };

    struct FConvolutionBloomSettings //ScriptStruct Engine.ConvolutionBloomSettings
    {
    //Children Prop Count (Fields): 7
    public:

        class UTexture2D* Texture; // 0x0
        float Size; // 0x8
        struct FVector2D CenterUV; // 0xc
        float PreFilterMin; // 0x14
        float PreFilterMax; // 0x18
        float PreFilterMult; // 0x1c
        float BufferScale; // 0x20

    };

    struct FGaussianSumBloomSettings //ScriptStruct Engine.GaussianSumBloomSettings
    {
    //Children Prop Count (Fields): 15
    public:

        float Intensity; // 0x0
        float Threshold; // 0x4
        float SizeScale; // 0x8
        float Filter1Size; // 0xc
        float Filter2Size; // 0x10
        float Filter3Size; // 0x14
        float Filter4Size; // 0x18
        float Filter5Size; // 0x1c
        float Filter6Size; // 0x20
        struct FLinearColor Filter1Tint; // 0x24
        struct FLinearColor Filter2Tint; // 0x34
        struct FLinearColor Filter3Tint; // 0x44
        struct FLinearColor Filter4Tint; // 0x54
        struct FLinearColor Filter5Tint; // 0x64
        struct FLinearColor Filter6Tint; // 0x74

    };

    struct FFilmStockSettings //ScriptStruct Engine.FilmStockSettings
    {
    //Children Prop Count (Fields): 5
    public:

        float Slope; // 0x0
        float Toe; // 0x4
        float Shoulder; // 0x8
        float BlackClip; // 0xc
        float WhiteClip; // 0x10

    };

    struct FColorGradingSettings //ScriptStruct Engine.ColorGradingSettings
    {
    //Children Prop Count (Fields): 6
    public:

        struct FColorGradePerRangeSettings Global; // 0x0
        struct FColorGradePerRangeSettings Shadows; // 0x50
        struct FColorGradePerRangeSettings Midtones; // 0xa0
        struct FColorGradePerRangeSettings Highlights; // 0xf0
        float ShadowsMax; // 0x140
        float HighlightsMin; // 0x144

    };

    struct FColorGradePerRangeSettings //ScriptStruct Engine.ColorGradePerRangeSettings
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector4 Saturation; // 0x0
        struct FVector4 Contrast; // 0x10
        struct FVector4 gamma; // 0x20
        struct FVector4 Gain; // 0x30
        struct FVector4 Offset; // 0x40

    };

    struct FEngineShowFlagsSetting //ScriptStruct Engine.EngineShowFlagsSetting
    {
    //Children Prop Count (Fields): 2
    public:

        struct FString ShowFlagName; // 0x0
        bool Enabled; // 0x10

    };

    struct FSceneViewExtensionIsActiveFunctor //ScriptStruct Engine.SceneViewExtensionIsActiveFunctor
    {
    public:


    };

    struct FSkeletalMaterial //ScriptStruct Engine.SkeletalMaterial
    {
    //Children Prop Count (Fields): 3
    public:

        class UMaterialInterface* MaterialInterface; // 0x0
        struct FName MaterialSlotName; // 0x8
        struct FMeshUVChannelInfo UVChannelData; // 0x10

    };

    struct FClothingAssetData_Legacy //ScriptStruct Engine.ClothingAssetData_Legacy
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName AssetName; // 0x0
        struct FString ApexFileName; // 0x8
        bool bClothPropertiesChanged; // 0x18
        struct FClothPhysicsProperties_Legacy PhysicsProperties; // 0x1c

    };

    struct FClothPhysicsProperties_Legacy //ScriptStruct Engine.ClothPhysicsProperties_Legacy
    {
    //Children Prop Count (Fields): 20
    public:

        float VerticalResistance; // 0x0
        float HorizontalResistance; // 0x4
        float BendResistance; // 0x8
        float ShearResistance; // 0xc
        float Friction; // 0x10
        float Damping; // 0x14
        float TetherStiffness; // 0x18
        float TetherLimit; // 0x1c
        float Drag; // 0x20
        float StiffnessFrequency; // 0x24
        float GravityScale; // 0x28
        float MassScale; // 0x2c
        float InertiaBlend; // 0x30
        float SelfCollisionThickness; // 0x34
        float SelfCollisionSquashScale; // 0x38
        float SelfCollisionStiffness; // 0x3c
        float SolverFrequency; // 0x40
        float FiberCompression; // 0x44
        float FiberExpansion; // 0x48
        float FiberResistance; // 0x4c

    };

    struct FSkeletalMeshLODInfo //ScriptStruct Engine.SkeletalMeshLODInfo
    {
    //Children Prop Count (Fields): 16
    public:

        struct FPerPlatformFloat ScreenSize; // 0x0
        float LODHysteresis; // 0x4
        struct TArray<int32_t> LODMaterialMap; // 0x8
        struct FSkeletalMeshBuildSettings BuildSettings; // 0x18
        struct FSkeletalMeshOptimizationSettings ReductionSettings; // 0x2c
        struct TArray<struct FBoneReference> BonesToRemove; // 0x68
        struct TArray<struct FBoneReference> BonesToPrioritize; // 0x78
        float WeightOfPrioritization; // 0x88
        class UAnimSequence* BakePose; // 0x90
        class UAnimSequence* BakePoseOverride; // 0x98
        struct FString SourceImportFilename; // 0xa0
        enum class ESkinCacheUsage SkinCacheUsage; // 0xb0
        char bHasBeenSimplified; // 0xb1
        char bHasPerLODVertexColors; // 0xb1
        char bAllowCPUAccess; // 0xb1
        char bSupportUniformlyDistributedSampling; // 0xb1

    };

    struct FSkeletalMeshOptimizationSettings //ScriptStruct Engine.SkeletalMeshOptimizationSettings
    {
    //Children Prop Count (Fields): 21
    public:

        enum class SkeletalMeshTerminationCriterion TerminationCriterion; // 0x0
        float NumOfTrianglesPercentage; // 0x4
        float NumOfVertPercentage; // 0x8
        uint32_t MaxNumOfTriangles; // 0xc
        uint32_t MaxNumOfVerts; // 0x10
        float MaxDeviationPercentage; // 0x14
        enum class SkeletalMeshOptimizationType ReductionMethod; // 0x18
        enum class SkeletalMeshOptimizationImportance SilhouetteImportance; // 0x19
        enum class SkeletalMeshOptimizationImportance TextureImportance; // 0x1a
        enum class SkeletalMeshOptimizationImportance ShadingImportance; // 0x1b
        enum class SkeletalMeshOptimizationImportance SkinningImportance; // 0x1c
        char bRemapMorphTargets; // 0x1d
        char bRecalcNormals; // 0x1d
        float WeldingThreshold; // 0x20
        float NormalsThreshold; // 0x24
        int32_t MaxBonesPerVertex; // 0x28
        char bEnforceBoneBoundaries; // 0x2c
        float VolumeImportance; // 0x30
        char bLockEdges; // 0x34
        char bLockColorBounaries; // 0x34
        int32_t BaseLOD; // 0x38

    };

    struct FSkeletalMeshClothBuildParams //ScriptStruct Engine.SkeletalMeshClothBuildParams
    {
    //Children Prop Count (Fields): 8
    public:

        struct TWeakObjectPtr<struct UClothingAssetBase> TargetAsset; // 0x0
        int32_t TargetLod; // 0x8
        bool bRemapParameters; // 0xc
        struct FString AssetName; // 0x10
        int32_t LODIndex; // 0x20
        int32_t SourceSection; // 0x24
        bool bRemoveFromMesh; // 0x28
        struct TSoftObjectPtr<UPhysicsAsset> PhysicsAsset; // 0x30

    };

    struct FBoneMirrorExport //ScriptStruct Engine.BoneMirrorExport
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName BoneName; // 0x0
        struct FName SourceBoneName; // 0x8
        enum class EAxis BoneFlipAxis; // 0x10

    };

    struct FBoneMirrorInfo //ScriptStruct Engine.BoneMirrorInfo
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t SourceIndex; // 0x0
        enum class EAxis BoneFlipAxis; // 0x4

    };

    struct FSkeletalMeshComponentClothTickFunction : FTickFunction //ScriptStruct Engine.SkeletalMeshComponentClothTickFunction
    {
    public:


    };

    struct FSkeletalMeshComponentEndPhysicsTickFunction : FTickFunction //ScriptStruct Engine.SkeletalMeshComponentEndPhysicsTickFunction
    {
    public:


    };

    struct FSkeletalMeshLODGroupSettings //ScriptStruct Engine.SkeletalMeshLODGroupSettings
    {
    //Children Prop Count (Fields): 8
    public:

        struct FPerPlatformFloat ScreenSize; // 0x0
        float LODHysteresis; // 0x4
        enum class EBoneFilterActionOption BoneFilterActionOption; // 0x8
        struct TArray<struct FBoneFilter> BoneList; // 0x10
        struct TArray<struct FName> BonesToPrioritize; // 0x20
        float WeightOfPrioritization; // 0x30
        class UAnimSequence* BakePose; // 0x38
        struct FSkeletalMeshOptimizationSettings ReductionSettings; // 0x40

    };

    struct FBoneFilter //ScriptStruct Engine.BoneFilter
    {
    //Children Prop Count (Fields): 2
    public:

        bool bExcludeSelf; // 0x0
        struct FName BoneName; // 0x4

    };

    struct FSkeletalMeshSamplingInfo //ScriptStruct Engine.SkeletalMeshSamplingInfo
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FSkeletalMeshSamplingRegion> Regions; // 0x0
        struct FSkeletalMeshSamplingBuiltData BuiltData; // 0x10

    };

    struct FSkeletalMeshSamplingBuiltData //ScriptStruct Engine.SkeletalMeshSamplingBuiltData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FSkeletalMeshSamplingLODBuiltData> WholeMeshBuiltData; // 0x0
        struct TArray<struct FSkeletalMeshSamplingRegionBuiltData> RegionBuiltData; // 0x10

    };

    struct FSkeletalMeshSamplingRegionBuiltData //ScriptStruct Engine.SkeletalMeshSamplingRegionBuiltData
    {
    public:


    };

    struct FSkeletalMeshSamplingLODBuiltData //ScriptStruct Engine.SkeletalMeshSamplingLODBuiltData
    {
    public:


    };

    struct FSkeletalMeshSamplingRegion //ScriptStruct Engine.SkeletalMeshSamplingRegion
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Name; // 0x0
        int32_t LODIndex; // 0x8
        char bSupportUniformlyDistributedSampling; // 0xc
        struct TArray<struct FSkeletalMeshSamplingRegionMaterialFilter> MaterialFilters; // 0x10
        struct TArray<struct FSkeletalMeshSamplingRegionBoneFilter> BoneFilters; // 0x20

    };

    struct FSkeletalMeshSamplingRegionBoneFilter //ScriptStruct Engine.SkeletalMeshSamplingRegionBoneFilter
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName BoneName; // 0x0
        char bIncludeOrExclude; // 0x8
        char bApplyToChildren; // 0x8

    };

    struct FSkeletalMeshSamplingRegionMaterialFilter //ScriptStruct Engine.SkeletalMeshSamplingRegionMaterialFilter
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName materialName; // 0x0

    };

    struct FVirtualBone //ScriptStruct Engine.VirtualBone
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName SourceBoneName; // 0x0
        struct FName TargetBoneName; // 0x8
        struct FName VirtualBoneName; // 0x10

    };

    struct FAnimSlotGroup //ScriptStruct Engine.AnimSlotGroup
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName GroupName; // 0x0
        struct TArray<struct FName> SlotNames; // 0x8

    };

    struct FRigConfiguration //ScriptStruct Engine.RigConfiguration
    {
    //Children Prop Count (Fields): 2
    public:

        class URig* Rig; // 0x0
        struct TArray<struct FNameMapping> BoneMappingTable; // 0x8

    };

    struct FNameMapping //ScriptStruct Engine.NameMapping
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName NodeName; // 0x0
        struct FName BoneName; // 0x8

    };

    struct FBoneReductionSetting //ScriptStruct Engine.BoneReductionSetting
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> BonesToRemove; // 0x0

    };

    struct FReferencePose //ScriptStruct Engine.ReferencePose
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName PoseName; // 0x0
        struct TArray<struct FTransform> ReferencePose; // 0x8

    };

    struct FBoneNode //ScriptStruct Engine.BoneNode
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        int32_t ParentIndex; // 0x8
        enum class EBoneTranslationRetargetingMode TranslationRetargetingMode; // 0xc

    };

    struct FSkeletonToMeshLinkup //ScriptStruct Engine.SkeletonToMeshLinkup
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<int32_t> SkeletonToMeshTable; // 0x0
        struct TArray<int32_t> MeshToSkeletonTable; // 0x10

    };

    struct FVertexOffsetUsage //ScriptStruct Engine.VertexOffsetUsage
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t Usage; // 0x0

    };

    struct FSkelMeshComponentLODInfo //ScriptStruct Engine.SkelMeshComponentLODInfo
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<bool> HiddenMaterials; // 0x0

    };

    struct FSkelMeshSkinWeightInfo //ScriptStruct Engine.SkelMeshSkinWeightInfo
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t Bones; // 0x0
        char Weights; // 0x30

    };

    struct FSkinWeightProfileInfo //ScriptStruct Engine.SkinWeightProfileInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName Name; // 0x0
        struct FPerPlatformBool DefaultProfile; // 0x8
        struct FPerPlatformInt DefaultProfileFromLODIndex; // 0xc

    };

    struct FSkinWeightProfileManagerTickFunction : FTickFunction //ScriptStruct Engine.SkinWeightProfileManagerTickFunction
    {
    public:


    };

    struct FTentDistribution //ScriptStruct Engine.TentDistribution
    {
    //Children Prop Count (Fields): 3
    public:

        float TipAltitude; // 0x0
        float TipValue; // 0x4
        float Width; // 0x8

    };

    struct FPrecomputedSkyLightInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.PrecomputedSkyLightInstanceData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid LightGuid; // 0xb8
        float AverageBrightness; // 0xc8

    };

    struct FSmartNameContainer //ScriptStruct Engine.SmartNameContainer
    {
    public:


    };

    struct FSmartNameMapping //ScriptStruct Engine.SmartNameMapping
    {
    public:


    };

    struct FCurveMetaData //ScriptStruct Engine.CurveMetaData
    {
    public:


    };

    struct FSoundAttenuationSettings : FBaseAttenuationSettings //ScriptStruct Engine.SoundAttenuationSettings
    {
    //Children Prop Count (Fields): 55
    public:

        char bAttenuate; // 0xb0
        char bSpatialize; // 0xb0
        char bAttenuateWithLPF; // 0xb0
        char bEnableListenerFocus; // 0xb0
        char bEnableFocusInterpolation; // 0xb0
        char bEnableOcclusion; // 0xb0
        char bUseComplexCollisionForOcclusion; // 0xb0
        char bEnableReverbSend; // 0xb0
        char bEnablePriorityAttenuation; // 0xb1
        char bApplyNormalizationToStereoSounds; // 0xb1
        char bEnableLogFrequencyScaling; // 0xb1
        char bEnableSubmixSends; // 0xb1
        enum class ESoundSpatializationAlgorithm SpatializationAlgorithm; // 0xb2
        float BinauralRadius; // 0xb4
        enum class EAirAbsorptionMethod AbsorptionMethod; // 0xb8
        enum class ECollisionChannel OcclusionTraceChannel; // 0xb9
        enum class EReverbSendMethod ReverbSendMethod; // 0xba
        enum class EPriorityAttenuationMethod PriorityAttenuationMethod; // 0xbb
        float OmniRadius; // 0xbc
        float StereoSpread; // 0xc0
        float LPFRadiusMin; // 0xc4
        float LPFRadiusMax; // 0xc8
        struct FRuntimeFloatCurve CustomLowpassAirAbsorptionCurve; // 0xd0
        struct FRuntimeFloatCurve CustomHighpassAirAbsorptionCurve; // 0x158
        float LPFFrequencyAtMin; // 0x1e0
        float LPFFrequencyAtMax; // 0x1e4
        float HPFFrequencyAtMin; // 0x1e8
        float HPFFrequencyAtMax; // 0x1ec
        float FocusAzimuth; // 0x1f0
        float NonFocusAzimuth; // 0x1f4
        float FocusDistanceScale; // 0x1f8
        float NonFocusDistanceScale; // 0x1fc
        float FocusPriorityScale; // 0x200
        float NonFocusPriorityScale; // 0x204
        float FocusVolumeAttenuation; // 0x208
        float NonFocusVolumeAttenuation; // 0x20c
        float FocusAttackInterpSpeed; // 0x210
        float FocusReleaseInterpSpeed; // 0x214
        float OcclusionLowPassFilterFrequency; // 0x218
        float OcclusionVolumeAttenuation; // 0x21c
        float OcclusionInterpolationTime; // 0x220
        float ReverbWetLevelMin; // 0x224
        float ReverbWetLevelMax; // 0x228
        float ReverbDistanceMin; // 0x22c
        float ReverbDistanceMax; // 0x230
        float ManualReverbSendLevel; // 0x234
        struct FRuntimeFloatCurve CustomReverbSendCurve; // 0x238
        struct TArray<struct FAttenuationSubmixSendSettings> SubmixSendSettings; // 0x2c0
        float PriorityAttenuationMin; // 0x2d0
        float PriorityAttenuationMax; // 0x2d4
        float PriorityAttenuationDistanceMin; // 0x2d8
        float PriorityAttenuationDistanceMax; // 0x2dc
        float ManualPriorityAttenuation; // 0x2e0
        struct FRuntimeFloatCurve CustomPriorityAttenuationCurve; // 0x2e8
        struct FSoundAttenuationPluginSettings PluginSettings; // 0x370

    };

    struct FSoundAttenuationPluginSettings //ScriptStruct Engine.SoundAttenuationPluginSettings
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<class USpatializationPluginSourceSettingsBase*> SpatializationPluginSettingsArray; // 0x0
        struct TArray<class UOcclusionPluginSourceSettingsBase*> OcclusionPluginSettingsArray; // 0x10
        struct TArray<class UReverbPluginSourceSettingsBase*> ReverbPluginSettingsArray; // 0x20

    };

    struct FAttenuationSubmixSendSettings //ScriptStruct Engine.AttenuationSubmixSendSettings
    {
    //Children Prop Count (Fields): 8
    public:

        class USoundSubmixBase* Submix; // 0x0
        enum class ESubmixSendMethod SubmixSendMethod; // 0x8
        float SubmixSendLevelMin; // 0xc
        float SubmixSendLevelMax; // 0x10
        float SubmixSendDistanceMin; // 0x14
        float SubmixSendDistanceMax; // 0x18
        float ManualSubmixSendLevel; // 0x1c
        struct FRuntimeFloatCurve CustomSubmixSendCurve; // 0x20

    };

    struct FPassiveSoundMixModifier //ScriptStruct Engine.PassiveSoundMixModifier
    {
    //Children Prop Count (Fields): 3
    public:

        class USoundMix* SoundMix; // 0x0
        float MinVolumeThreshold; // 0x8
        float MaxVolumeThreshold; // 0xc

    };

    struct FSoundClassProperties //ScriptStruct Engine.SoundClassProperties
    {
    //Children Prop Count (Fields): 20
    public:

        float Volume; // 0x0
        float Pitch; // 0x4
        float LowPassFilterFrequency; // 0x8
        float AttenuationDistanceScale; // 0xc
        float LFEBleed; // 0x10
        float VoiceCenterChannelVolume; // 0x14
        float RadioFilterVolume; // 0x18
        float RadioFilterVolumeThreshold; // 0x1c
        char bApplyEffects; // 0x20
        char bAlwaysPlay; // 0x20
        char bIsUISound; // 0x20
        char bIsMusic; // 0x20
        char bCenterChannelOnly; // 0x20
        char bApplyAmbientVolumes; // 0x20
        char bReverb; // 0x20
        float Default2DReverbSendAmount; // 0x24
        struct FSoundModulationDefaultSettings ModulationSettings; // 0x28
        enum class EAudioOutputTarget OutputTarget; // 0x68
        enum class ESoundWaveLoadingBehavior LoadingBehavior; // 0x69
        class USoundSubmix* DefaultSubmix; // 0x70

    };

    struct FSoundModulationDefaultSettings //ScriptStruct Engine.SoundModulationDefaultSettings
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSoundModulationDestinationSettings VolumeModulationDestination; // 0x0
        struct FSoundModulationDestinationSettings PitchModulationDestination; // 0x10
        struct FSoundModulationDestinationSettings HighpassModulationDestination; // 0x20
        struct FSoundModulationDestinationSettings LowpassModulationDestination; // 0x30

    };

    struct FSoundClassEditorData //ScriptStruct Engine.SoundClassEditorData
    {
    public:


    };

    struct FSoundConcurrencySettings //ScriptStruct Engine.SoundConcurrencySettings
    {
    //Children Prop Count (Fields): 10
    public:

        int32_t MaxCount; // 0x0
        char bLimitToOwner; // 0x4
        enum class EMaxConcurrentResolutionRule ResolutionRule; // 0x8
        float RetriggerTime; // 0xc
        float VolumeScale; // 0x10
        enum class EConcurrencyVolumeScaleMode VolumeScaleMode; // 0x14
        float VolumeScaleAttackTime; // 0x18
        char bVolumeScaleCanRelease; // 0x1c
        float VolumeScaleReleaseTime; // 0x20
        float VoiceStealReleaseTime; // 0x24

    };

    struct FSoundNodeEditorData //ScriptStruct Engine.SoundNodeEditorData
    {
    public:


    };

    struct FSourceEffectChainEntry //ScriptStruct Engine.SourceEffectChainEntry
    {
    //Children Prop Count (Fields): 2
    public:

        class USoundEffectSourcePreset* Preset; // 0x0
        char bBypass; // 0x8

    };

    struct FSoundGroup //ScriptStruct Engine.SoundGroup
    {
    //Children Prop Count (Fields): 4
    public:

        enum class ESoundGroup SoundGroup; // 0x0
        struct FString DisplayName; // 0x8
        char bAlwaysDecompressOnLoad; // 0x18
        float DecompressedDuration; // 0x1c

    };

    struct FSoundClassAdjuster //ScriptStruct Engine.SoundClassAdjuster
    {
    //Children Prop Count (Fields): 6
    public:

        class USoundClass* SoundClassObject; // 0x0
        float VolumeAdjuster; // 0x8
        float PitchAdjuster; // 0xc
        float LowPassFilterFrequency; // 0x10
        char bApplyToChildren; // 0x14
        float VoiceCenterChannelVolumeAdjuster; // 0x18

    };

    struct FAudioEQEffect : FAudioEffectParameters //ScriptStruct Engine.AudioEQEffect
    {
    //Children Prop Count (Fields): 12
    public:

        float FrequencyCenter0; // 0x10
        float Gain0; // 0x14
        float Bandwidth0; // 0x18
        float FrequencyCenter1; // 0x1c
        float Gain1; // 0x20
        float Bandwidth1; // 0x24
        float FrequencyCenter2; // 0x28
        float Gain2; // 0x2c
        float Bandwidth2; // 0x30
        float FrequencyCenter3; // 0x34
        float Gain3; // 0x38
        float Bandwidth3; // 0x3c

    };

    struct FSoundModulationDefaultRoutingSettings : FSoundModulationDefaultSettings //ScriptStruct Engine.SoundModulationDefaultRoutingSettings
    {
    //Children Prop Count (Fields): 4
    public:

        enum class EModulationRouting VolumeRouting; // 0x40
        enum class EModulationRouting PitchRouting; // 0x41
        enum class EModulationRouting HighpassRouting; // 0x42
        enum class EModulationRouting LowpassRouting; // 0x43

    };

    struct FDistanceDatum //ScriptStruct Engine.DistanceDatum
    {
    //Children Prop Count (Fields): 5
    public:

        float FadeInDistanceStart; // 0x0
        float FadeInDistanceEnd; // 0x4
        float FadeOutDistanceStart; // 0x8
        float FadeOutDistanceEnd; // 0xc
        float Volume; // 0x10

    };

    struct FSoundSourceBusSendInfo //ScriptStruct Engine.SoundSourceBusSendInfo
    {
    //Children Prop Count (Fields): 9
    public:

        enum class ESourceBusSendLevelControlMethod SourceBusSendLevelControlMethod; // 0x0
        class USoundSourceBus* SoundSourceBus; // 0x8
        class UAudioBus* AudioBus; // 0x10
        float SendLevel; // 0x18
        float MinSendLevel; // 0x1c
        float MaxSendLevel; // 0x20
        float MinSendDistance; // 0x24
        float MaxSendDistance; // 0x28
        struct FRuntimeFloatCurve CustomSendLevelCurve; // 0x30

    };

    struct FSoundSubmixSpectralAnalysisBandSettings //ScriptStruct Engine.SoundSubmixSpectralAnalysisBandSettings
    {
    //Children Prop Count (Fields): 4
    public:

        float BandFrequency; // 0x0
        int32_t AttackTimeMsec; // 0x4
        int32_t ReleaseTimeMsec; // 0x8
        float QFactor; // 0xc

    };

    struct FSoundWaveEnvelopeTimeData //ScriptStruct Engine.SoundWaveEnvelopeTimeData
    {
    //Children Prop Count (Fields): 2
    public:

        float Amplitude; // 0x0
        float TimeSec; // 0x4

    };

    struct FSoundWaveSpectralTimeData //ScriptStruct Engine.SoundWaveSpectralTimeData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FSoundWaveSpectralDataEntry> Data; // 0x0
        float TimeSec; // 0x10

    };

    struct FSoundWaveSpectralDataEntry //ScriptStruct Engine.SoundWaveSpectralDataEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float Magnitude; // 0x0
        float NormalizedMagnitude; // 0x4

    };

    struct FSoundWaveEnvelopeDataPerSound //ScriptStruct Engine.SoundWaveEnvelopeDataPerSound
    {
    //Children Prop Count (Fields): 3
    public:

        float Envelope; // 0x0
        float PlaybackTime; // 0x4
        class USoundWave* SoundWave; // 0x8

    };

    struct FSoundWaveSpectralDataPerSound //ScriptStruct Engine.SoundWaveSpectralDataPerSound
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FSoundWaveSpectralData> SpectralData; // 0x0
        float PlaybackTime; // 0x10
        class USoundWave* SoundWave; // 0x18

    };

    struct FSoundWaveSpectralData //ScriptStruct Engine.SoundWaveSpectralData
    {
    //Children Prop Count (Fields): 3
    public:

        float FrequencyHz; // 0x0
        float Magnitude; // 0x4
        float NormalizedMagnitude; // 0x8

    };

    struct FStreamedAudioPlatformData //ScriptStruct Engine.StreamedAudioPlatformData
    {
    public:


    };

    struct FSplineInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.SplineInstanceData
    {
    //Children Prop Count (Fields): 3
    public:

        bool bSplineHasBeenEdited; // 0xb8
        struct FSplineCurves SplineCurves; // 0xc0
        struct FSplineCurves SplineCurvesPreUCS; // 0x130

    };

    struct FSplineCurves //ScriptStruct Engine.SplineCurves
    {
    //Children Prop Count (Fields): 6
    public:

        struct FInterpCurveVector Position; // 0x0
        struct FInterpCurveQuat Rotation; // 0x18
        struct FInterpCurveVector Scale; // 0x30
        struct FInterpCurveFloat ReparamTable; // 0x48
        class USplineMetadata* MetaData; // 0x60
        uint32_t Version; // 0x68

    };

    struct FSplinePoint //ScriptStruct Engine.SplinePoint
    {
    //Children Prop Count (Fields): 7
    public:

        float InputKey; // 0x0
        struct FVector Position; // 0x4
        struct FVector ArriveTangent; // 0x10
        struct FVector LeaveTangent; // 0x1c
        struct FRotator Rotation; // 0x28
        struct FVector Scale; // 0x34
        enum class ESplinePointType Type; // 0x40

    };

    struct FSplineMeshInstanceData : FSceneComponentInstanceData //ScriptStruct Engine.SplineMeshInstanceData
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector StartPos; // 0xb8
        struct FVector EndPos; // 0xc4
        struct FVector StartTangent; // 0xd0
        struct FVector EndTangent; // 0xdc

    };

    struct FSplineMeshParams //ScriptStruct Engine.SplineMeshParams
    {
    //Children Prop Count (Fields): 10
    public:

        struct FVector StartPos; // 0x0
        struct FVector StartTangent; // 0xc
        struct FVector2D StartScale; // 0x18
        float StartRoll; // 0x20
        struct FVector2D StartOffset; // 0x24
        struct FVector EndPos; // 0x2c
        struct FVector2D EndScale; // 0x38
        struct FVector EndTangent; // 0x40
        float EndRoll; // 0x4c
        struct FVector2D EndOffset; // 0x50

    };

    struct FMaterialRemapIndex //ScriptStruct Engine.MaterialRemapIndex
    {
    //Children Prop Count (Fields): 2
    public:

        uint32_t ImportVersionKey; // 0x0
        struct TArray<int32_t> MaterialRemap; // 0x8

    };

    struct FStaticMaterial //ScriptStruct Engine.StaticMaterial
    {
    //Children Prop Count (Fields): 4
    public:

        class UMaterialInterface* MaterialInterface; // 0x0
        struct FName MaterialSlotName; // 0x8
        struct FName ImportedMaterialSlotName; // 0x10
        struct FMeshUVChannelInfo UVChannelData; // 0x18

    };

    struct FAssetEditorOrbitCameraPosition //ScriptStruct Engine.AssetEditorOrbitCameraPosition
    {
    //Children Prop Count (Fields): 4
    public:

        bool bIsSet; // 0x0
        struct FVector CamOrbitPoint; // 0x4
        struct FVector CamOrbitZoom; // 0x10
        struct FRotator CamOrbitRotation; // 0x1c

    };

    struct FMeshSectionInfoMap //ScriptStruct Engine.MeshSectionInfoMap
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<uint32_t, struct FMeshSectionInfo> Map; // 0x0

    };

    struct FMeshSectionInfo //ScriptStruct Engine.MeshSectionInfo
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t MaterialIndex; // 0x0
        bool bEnableCollision; // 0x4
        bool bCastShadow; // 0x5
        bool bVisibleInRayTracing; // 0x6
        bool bForceOpaque; // 0x7

    };

    struct FStaticMeshSourceModel //ScriptStruct Engine.StaticMeshSourceModel
    {
    //Children Prop Count (Fields): 5
    public:

        struct FMeshBuildSettings BuildSettings; // 0x0
        struct FMeshReductionSettings ReductionSettings; // 0x30
        float LODDistance; // 0x54
        struct FPerPlatformFloat ScreenSize; // 0x58
        struct FString SourceImportFilename; // 0x60

    };

    struct FStaticMeshOptimizationSettings //ScriptStruct Engine.StaticMeshOptimizationSettings
    {
    //Children Prop Count (Fields): 9
    public:

        enum class EOptimizationType ReductionMethod; // 0x0
        float NumOfTrianglesPercentage; // 0x4
        float MaxDeviationPercentage; // 0x8
        float WeldingThreshold; // 0xc
        bool bRecalcNormals; // 0x10
        float NormalsThreshold; // 0x14
        char SilhouetteImportance; // 0x18
        char TextureImportance; // 0x19
        char ShadingImportance; // 0x1a

    };

    struct FStaticMeshComponentInstanceData : FPrimitiveComponentInstanceData //ScriptStruct Engine.StaticMeshComponentInstanceData
    {
    //Children Prop Count (Fields): 4
    public:

        class UStaticMesh* StaticMesh; // 0x100
        struct TArray<struct FStaticMeshVertexColorLODData> VertexColorLODs; // 0x108
        struct TArray<struct FGuid> CachedStaticLighting; // 0x118
        struct TArray<struct FStreamingTextureBuildInfo> StreamingTextureData; // 0x128

    };

    struct FStreamingTextureBuildInfo //ScriptStruct Engine.StreamingTextureBuildInfo
    {
    //Children Prop Count (Fields): 3
    public:

        uint32_t PackedRelativeBox; // 0x0
        int32_t TextureLevelIndex; // 0x4
        float TexelFactor; // 0x8

    };

    struct FStaticMeshVertexColorLODData //ScriptStruct Engine.StaticMeshVertexColorLODData
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FPaintedVertex> PaintedVertices; // 0x0
        struct TArray<struct FColor> VertexBufferColors; // 0x10
        uint32_t LODIndex; // 0x20

    };

    struct FPaintedVertex //ScriptStruct Engine.PaintedVertex
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Position; // 0x0
        struct FColor Color; // 0xc
        struct FVector4 Normal; // 0x10

    };

    struct FStaticMeshComponentLODInfo //ScriptStruct Engine.StaticMeshComponentLODInfo
    {
    public:


    };

    struct FStaticParameterSet //ScriptStruct Engine.StaticParameterSet
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FStaticSwitchParameter> StaticSwitchParameters; // 0x0
        struct TArray<struct FStaticComponentMaskParameter> StaticComponentMaskParameters; // 0x10
        struct TArray<struct FStaticTerrainLayerWeightParameter> TerrainLayerWeightParameters; // 0x20
        struct TArray<struct FStaticMaterialLayersParameter> MaterialLayersParameters; // 0x30

    };

    struct FStaticParameterBase //ScriptStruct Engine.StaticParameterBase
    {
    //Children Prop Count (Fields): 3
    public:

        struct FMaterialParameterInfo ParameterInfo; // 0x0
        bool bOverride; // 0x10
        struct FGuid ExpressionGUID; // 0x14

    };

    struct FStaticMaterialLayersParameter : FStaticParameterBase //ScriptStruct Engine.StaticMaterialLayersParameter
    {
    //Children Prop Count (Fields): 1
    public:

        struct FMaterialLayersFunctions Value; // 0x28

    };

    struct FStaticTerrainLayerWeightParameter : FStaticParameterBase //ScriptStruct Engine.StaticTerrainLayerWeightParameter
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t WeightmapIndex; // 0x24
        bool bWeightBasedBlend; // 0x28

    };

    struct FStaticComponentMaskParameter : FStaticParameterBase //ScriptStruct Engine.StaticComponentMaskParameter
    {
    //Children Prop Count (Fields): 4
    public:

        bool R; // 0x24
        bool G; // 0x25
        bool B; // 0x26
        bool A; // 0x27

    };

    struct FStaticSwitchParameter : FStaticParameterBase //ScriptStruct Engine.StaticSwitchParameter
    {
    //Children Prop Count (Fields): 1
    public:

        bool Value; // 0x24

    };

    struct FEquirectProps //ScriptStruct Engine.EquirectProps
    {
    //Children Prop Count (Fields): 6
    public:

        struct FBox2D LeftUVRect; // 0x0
        struct FBox2D RightUVRect; // 0x14
        struct FVector2D LeftScale; // 0x28
        struct FVector2D RightScale; // 0x30
        struct FVector2D LeftBias; // 0x38
        struct FVector2D RightBias; // 0x40

    };

    struct FSubsurfaceProfileStruct //ScriptStruct Engine.SubsurfaceProfileStruct
    {
    //Children Prop Count (Fields): 17
    public:

        struct FLinearColor SurfaceAlbedo; // 0x0
        struct FLinearColor MeanFreePathColor; // 0x10
        float MeanFreePathDistance; // 0x20
        float WorldUnitScale; // 0x24
        bool bEnableBurley; // 0x28
        float ScatterRadius; // 0x2c
        struct FLinearColor SubsurfaceColor; // 0x30
        struct FLinearColor FalloffColor; // 0x40
        struct FLinearColor BoundaryColorBleed; // 0x50
        float ExtinctionScale; // 0x60
        float NormalScale; // 0x64
        float ScatteringDistribution; // 0x68
        float IOR; // 0x6c
        float Roughness0; // 0x70
        float Roughness1; // 0x74
        float LobeMix; // 0x78
        struct FLinearColor TransmissionTintColor; // 0x7c

    };

    struct FTextureFormatSettings //ScriptStruct Engine.TextureFormatSettings
    {
    //Children Prop Count (Fields): 5
    public:

        enum class TextureCompressionSettings CompressionSettings; // 0x0
        char CompressionNoAlpha; // 0x1
        char CompressionNone; // 0x1
        char CompressionYCoCg; // 0x1
        char sRGB; // 0x1

    };

    struct FTexturePlatformData //ScriptStruct Engine.TexturePlatformData
    {
    public:


    };

    struct FTextureSource //ScriptStruct Engine.TextureSource
    {
    public:


    };

    struct FTextureSourceBlock //ScriptStruct Engine.TextureSourceBlock
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t BlockX; // 0x0
        int32_t BlockY; // 0x4
        int32_t SizeX; // 0x8
        int32_t SizeY; // 0xc
        int32_t NumSlices; // 0x10
        int32_t NumMips; // 0x14

    };

    struct FTextureLODGroup //ScriptStruct Engine.TextureLODGroup
    {
    //Children Prop Count (Fields): 22
    public:

        enum class TextureGroup Group; // 0x0
        int32_t LODBias; // 0xc
        int32_t LODBias_Smaller; // 0x10
        int32_t LODBias_Smallest; // 0x14
        int32_t NumStreamedMips; // 0x1c
        enum class TextureMipGenSettings MipGenSettings; // 0x20
        int32_t MinLODSize; // 0x24
        int32_t MaxLODSize; // 0x28
        int32_t MaxLODSize_Smaller; // 0x2c
        int32_t MaxLODSize_Smallest; // 0x30
        int32_t OptionalLODBias; // 0x34
        int32_t OptionalMaxLODSize; // 0x38
        struct FName MinMagFilter; // 0x40
        struct FName MipFilter; // 0x48
        enum class ETextureMipLoadOptions MipLoadOptions; // 0x50
        bool HighPriorityLoad; // 0x51
        bool DuplicateNonOptionalMips; // 0x52
        float Downscale; // 0x54
        enum class ETextureDownscaleOptions DownscaleOptions; // 0x58
        int32_t VirtualTextureTileCountBias; // 0x5c
        int32_t VirtualTextureTileSizeBias; // 0x60
        enum class ETextureLossyCompressionAmount LossyCompressionAmount; // 0x64

    };

    struct FStreamingRenderAssetPrimitiveInfo //ScriptStruct Engine.StreamingRenderAssetPrimitiveInfo
    {
    //Children Prop Count (Fields): 5
    public:

        class UStreamableRenderAsset* RenderAsset; // 0x0
        struct FBoxSphereBounds Bounds; // 0x8
        float TexelFactor; // 0x24
        uint32_t PackedRelativeBox; // 0x28
        char bAllowInvalidTexelFactorWhenUnregistered; // 0x2c

    };

    struct FTimeline //ScriptStruct Engine.Timeline
    {
    //Children Prop Count (Fields): 15
    public:

        enum class ETimelineLengthMode LengthMode; // 0x0
        char bLooping; // 0x1
        char bReversePlayback; // 0x1
        char bPlaying; // 0x1
        float Length; // 0x4
        float PlayRate; // 0x8
        float Position; // 0xc
        struct TArray<struct FTimelineEventEntry> Events; // 0x10
        struct TArray<struct FTimelineVectorTrack> InterpVectors; // 0x20
        struct TArray<struct FTimelineFloatTrack> InterpFloats; // 0x30
        struct TArray<struct FTimelineLinearColorTrack> InterpLinearColors; // 0x40
        struct FDelegate TimelinePostUpdateFunc; // 0x50
        struct FDelegate TimelineFinishedFunc; // 0x60
        struct TWeakObjectPtr<struct UObject> PropertySetObject; // 0x70
        struct FName DirectionPropertyName; // 0x78

    };

    struct FTimelineLinearColorTrack //ScriptStruct Engine.TimelineLinearColorTrack
    {
    //Children Prop Count (Fields): 4
    public:

        class UCurveLinearColor* LinearColorCurve; // 0x0
        struct FDelegate InterpFunc; // 0x8
        struct FName TrackName; // 0x18
        struct FName LinearColorPropertyName; // 0x20

    };

    struct FTimelineFloatTrack //ScriptStruct Engine.TimelineFloatTrack
    {
    //Children Prop Count (Fields): 4
    public:

        class UCurveFloat* FloatCurve; // 0x0
        struct FDelegate InterpFunc; // 0x8
        struct FName TrackName; // 0x18
        struct FName FloatPropertyName; // 0x20

    };

    struct FTimelineVectorTrack //ScriptStruct Engine.TimelineVectorTrack
    {
    //Children Prop Count (Fields): 4
    public:

        class UCurveVector* VectorCurve; // 0x0
        struct FDelegate InterpFunc; // 0x8
        struct FName TrackName; // 0x18
        struct FName VectorPropertyName; // 0x20

    };

    struct FTimelineEventEntry //ScriptStruct Engine.TimelineEventEntry
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        struct FDelegate EventFunc; // 0x4

    };

    struct FTTTrackBase //ScriptStruct Engine.TTTrackBase
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName TrackName; // 0x8
        bool bIsExternalCurve; // 0x10

    };

    struct FTTPropertyTrack : FTTTrackBase //ScriptStruct Engine.TTPropertyTrack
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName PropertyName; // 0x18

    };

    struct FTTLinearColorTrack : FTTPropertyTrack //ScriptStruct Engine.TTLinearColorTrack
    {
    //Children Prop Count (Fields): 1
    public:

        class UCurveLinearColor* CurveLinearColor; // 0x20

    };

    struct FTTVectorTrack : FTTPropertyTrack //ScriptStruct Engine.TTVectorTrack
    {
    //Children Prop Count (Fields): 1
    public:

        class UCurveVector* CurveVector; // 0x20

    };

    struct FTTFloatTrack : FTTPropertyTrack //ScriptStruct Engine.TTFloatTrack
    {
    //Children Prop Count (Fields): 1
    public:

        class UCurveFloat* CurveFloat; // 0x20

    };

    struct FTTEventTrack : FTTTrackBase //ScriptStruct Engine.TTEventTrack
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName FunctionName; // 0x18
        class UCurveFloat* CurveKeys; // 0x20

    };

    struct FTTTrackId //ScriptStruct Engine.TTTrackId
    {
    //Children Prop Count (Fields): 2
    public:

        int32_t TrackType; // 0x0
        int32_t TrackIndex; // 0x4

    };

    struct FTimeStretchCurveInstance //ScriptStruct Engine.TimeStretchCurveInstance
    {
    //Children Prop Count (Fields): 1
    public:

        bool bHasValidData; // 0x0

    };

    struct FTimeStretchCurve //ScriptStruct Engine.TimeStretchCurve
    {
    //Children Prop Count (Fields): 4
    public:

        float SamplingRate; // 0x0
        float CurveValueMinPrecision; // 0x4
        struct TArray<struct FTimeStretchCurveMarker> Markers; // 0x8
        float Sum_dT_i_by_C_i; // 0x18

    };

    struct FTimeStretchCurveMarker //ScriptStruct Engine.TimeStretchCurveMarker
    {
    //Children Prop Count (Fields): 2
    public:

        float Time; // 0x0
        float Alpha; // 0xc

    };

    struct FTouchInputControl //ScriptStruct Engine.TouchInputControl
    {
    //Children Prop Count (Fields): 9
    public:

        class UTexture2D* Image1; // 0x0
        class UTexture2D* Image2; // 0x8
        struct FVector2D Center; // 0x10
        struct FVector2D VisualSize; // 0x18
        struct FVector2D ThumbSize; // 0x20
        struct FVector2D InteractionSize; // 0x28
        struct FVector2D InputScale; // 0x30
        struct FKey MainInputKey; // 0x38
        struct FKey AltInputKey; // 0x50

    };

    struct FHardwareCursorReference //ScriptStruct Engine.HardwareCursorReference
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName CursorPath; // 0x0
        struct FVector2D HotSpot; // 0x8

    };

    struct FVirtualTextureBuildSettings //ScriptStruct Engine.VirtualTextureBuildSettings
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t TileSize; // 0x0
        int32_t TileBorderSize; // 0x4
        bool bEnableCompressCrunch; // 0x8
        bool bEnableCompressZlib; // 0x9

    };

    struct FVirtualTextureSpacePoolConfig //ScriptStruct Engine.VirtualTextureSpacePoolConfig
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t MinTileSize; // 0x0
        int32_t MaxTileSize; // 0x4
        struct TArray<enum class EPixelFormat> Formats; // 0x8
        int32_t SizeInMegabyte; // 0x18
        bool bAllowSizeScale; // 0x1c
        uint32_t ScalabilityGroup; // 0x20

    };

    struct FVoiceSettings //ScriptStruct Engine.VoiceSettings
    {
    //Children Prop Count (Fields): 3
    public:

        class USceneComponent* ComponentToAttachTo; // 0x0
        class USoundAttenuation* AttenuationSettings; // 0x8
        class USoundEffectSourcePresetChain* SourceEffectChain; // 0x10

    };

    struct FStreamingLevelsToConsider //ScriptStruct Engine.StreamingLevelsToConsider
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class ULevelStreaming*> StreamingLevels; // 0x0

    };

    struct FLevelCollection //ScriptStruct Engine.LevelCollection
    {
    //Children Prop Count (Fields): 5
    public:

        class AGameStateBase* GameState; // 0x8
        class UNetDriver* NetDriver; // 0x10
        class UDemoNetDriver* DemoNetDriver; // 0x18
        class ULevel* PersistentLevel; // 0x20
        struct TSet<class ULevel*> Levels; // 0x28

    };

    struct FEndPhysicsTickFunction : FTickFunction //ScriptStruct Engine.EndPhysicsTickFunction
    {
    public:


    };

    struct FStartPhysicsTickFunction : FTickFunction //ScriptStruct Engine.StartPhysicsTickFunction
    {
    public:


    };

    struct FLevelViewportInfo //ScriptStruct Engine.LevelViewportInfo
    {
    //Children Prop Count (Fields): 4
    public:

        struct FVector CamPosition; // 0x0
        struct FRotator CamRotation; // 0xc
        float CamOrthoZoom; // 0x18
        bool CamUpdated; // 0x1c

    };

    struct FWorldPSCPool //ScriptStruct Engine.WorldPSCPool
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<class UParticleSystem*, struct FPSCPool> WorldParticleSystemPools; // 0x0

    };

    struct FPSCPool //ScriptStruct Engine.PSCPool
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FPSCPoolElem> FreeElements; // 0x0

    };

    struct FPSCPoolElem //ScriptStruct Engine.PSCPoolElem
    {
    //Children Prop Count (Fields): 1
    public:

        class UParticleSystemComponent* PSC; // 0x0

    };

    struct FBroadphaseSettings //ScriptStruct Engine.BroadphaseSettings
    {
    //Children Prop Count (Fields): 6
    public:

        bool bUseMBPOnClient; // 0x0
        bool bUseMBPOnServer; // 0x1
        bool bUseMBPOuterBounds; // 0x2
        struct FBox MBPBounds; // 0x4
        struct FBox MBPOuterBounds; // 0x20
        uint32_t MBPNumSubdivs; // 0x3c

    };

    struct FHierarchicalSimplification //ScriptStruct Engine.HierarchicalSimplification
    {
    //Children Prop Count (Fields): 12
    public:

        float TransitionScreenSize; // 0x0
        float OverrideDrawDistance; // 0x4
        char bUseOverrideDrawDistance; // 0x8
        char bAllowSpecificExclusion; // 0x8
        char bSimplifyMesh; // 0x8
        char bOnlyGenerateClustersForVolumes; // 0x8
        char bReusePreviousLevelClusters; // 0x8
        struct FMeshProxySettings ProxySetting; // 0xc
        struct FMeshMergingSettings MergeSetting; // 0xb4
        float DesiredBoundRadius; // 0x154
        float DesiredFillingPercentage; // 0x158
        int32_t MinNumberOfActorsToBuild; // 0x15c

    };

    struct FNetViewer //ScriptStruct Engine.NetViewer
    {
    //Children Prop Count (Fields): 5
    public:

        class UNetConnection* Connection; // 0x0
        class AActor* InViewer; // 0x8
        class AActor* ViewTarget; // 0x10
        struct FVector ViewLocation; // 0x18
        struct FVector ViewDir; // 0x24

    };

    struct FLightmassWorldInfoSettings //ScriptStruct Engine.LightmassWorldInfoSettings
    {
    //Children Prop Count (Fields): 24
    public:

        float StaticLightingLevelScale; // 0x0
        int32_t NumIndirectLightingBounces; // 0x4
        int32_t NumSkyLightingBounces; // 0x8
        float IndirectLightingQuality; // 0xc
        float IndirectLightingSmoothness; // 0x10
        struct FColor EnvironmentColor; // 0x14
        float EnvironmentIntensity; // 0x18
        float EmissiveBoost; // 0x1c
        float DiffuseBoost; // 0x20
        enum class EVolumeLightingMethod VolumeLightingMethod; // 0x24
        char bUseAmbientOcclusion; // 0x25
        char bGenerateAmbientOcclusionMaterialMask; // 0x25
        char bVisualizeMaterialDiffuse; // 0x25
        char bVisualizeAmbientOcclusion; // 0x25
        char bCompressLightmaps; // 0x25
        float VolumetricLightmapDetailCellSize; // 0x28
        float VolumetricLightmapMaximumBrickMemoryMb; // 0x2c
        float VolumetricLightmapSphericalHarmonicSmoothing; // 0x30
        float VolumeLightSamplePlacementScale; // 0x34
        float DirectIlluminationOcclusionFraction; // 0x38
        float IndirectIlluminationOcclusionFraction; // 0x3c
        float OcclusionExponent; // 0x40
        float FullyOccludedSamplesFraction; // 0x44
        float MaxOcclusionDistance; // 0x48

    };

    struct FStructSerializerTestStruct //ScriptStruct Serialization.StructSerializerTestStruct
    {
    //Children Prop Count (Fields): 7
    public:

        struct FStructSerializerNumericTestStruct Numerics; // 0x0
        struct FStructSerializerBooleanTestStruct Booleans; // 0x30
        struct FStructSerializerObjectTestStruct Objects; // 0x38
        struct FStructSerializerBuiltinTestStruct Builtins; // 0xe0
        struct FStructSerializerArrayTestStruct Arrays; // 0x180
        struct FStructSerializerMapTestStruct maps; // 0x1e0
        struct FStructSerializerSetTestStruct Sets; // 0x320

    };

    struct FStructSerializerSetTestStruct //ScriptStruct Serialization.StructSerializerSetTestStruct
    {
    //Children Prop Count (Fields): 4
    public:

        struct TSet<struct FString> StrSet; // 0x0
        struct TSet<int32_t> IntSet; // 0x50
        struct TSet<struct FName> NameSet; // 0xa0
        struct TSet<struct FStructSerializerBuiltinTestStruct> StructSet; // 0xf0

    };

    struct FStructSerializerBuiltinTestStruct //ScriptStruct Serialization.StructSerializerBuiltinTestStruct
    {
    //Children Prop Count (Fields): 9
    public:

        struct FGuid Guid; // 0x0
        struct FName Name; // 0x10
        struct FString String; // 0x18
        struct FText Text; // 0x28
        struct FVector Vector; // 0x48
        struct FVector4 Vector4; // 0x60
        struct FRotator Rotator; // 0x70
        struct FQuat Quat; // 0x80
        struct FColor Color; // 0x90

    };

    struct FStructSerializerMapTestStruct //ScriptStruct Serialization.StructSerializerMapTestStruct
    {
    //Children Prop Count (Fields): 4
    public:

        struct TMap<int32_t, struct FString> IntToStr; // 0x0
        struct TMap<struct FString, struct FString> StrToStr; // 0x50
        struct TMap<struct FString, struct FVector> StrToVec; // 0xa0
        struct TMap<struct FString, struct FStructSerializerBuiltinTestStruct> StrToStruct; // 0xf0

    };

    struct FStructSerializerArrayTestStruct //ScriptStruct Serialization.StructSerializerArrayTestStruct
    {
    //Children Prop Count (Fields): 7
    public:

        struct TArray<int32_t> Int32Array; // 0x0
        struct TArray<char> ByteArray; // 0x10
        int32_t StaticSingleElement; // 0x20
        int32_t StaticInt32Array; // 0x24
        float StaticFloatArray; // 0x30
        struct TArray<struct FVector> VectorArray; // 0x40
        struct TArray<struct FStructSerializerBuiltinTestStruct> StructArray; // 0x50

    };

    struct FStructSerializerObjectTestStruct //ScriptStruct Serialization.StructSerializerObjectTestStruct
    {
    //Children Prop Count (Fields): 8
    public:

        class UObject* Class; // 0x0
        class UMetaData* SubClass; // 0x8
        struct FSoftClassProperty SoftClass; // 0x10
        class UObject* Object; // 0x38
        struct TWeakObjectPtr<struct UMetaData> WeakObject; // 0x40
        struct TSoftObjectPtr<UMetaData> SoftObject; // 0x48
        struct FSoftClassPath ClassPath; // 0x70
        struct FSoftObjectPath ObjectPath; // 0x88

    };

    struct FStructSerializerBooleanTestStruct //ScriptStruct Serialization.StructSerializerBooleanTestStruct
    {
    //Children Prop Count (Fields): 10
    public:

        bool BoolFalse; // 0x0
        bool BoolTrue; // 0x1
        char Bitfield0; // 0x2
        char Bitfield1; // 0x2
        char Bitfield2Set; // 0x2
        char Bitfield3; // 0x2
        char Bitfield4Set; // 0x2
        char Bitfield5Set; // 0x2
        char Bitfield6; // 0x2
        char Bitfield7Set; // 0x2

    };

    struct FStructSerializerNumericTestStruct //ScriptStruct Serialization.StructSerializerNumericTestStruct
    {
    //Children Prop Count (Fields): 10
    public:

        int8_t Int8; // 0x0
        int16_t Int16; // 0x2
        int32_t Int32; // 0x4
        int64_t Int64; // 0x8
        char UInt8; // 0x10
        uint16_t UInt16; // 0x12
        uint32_t UInt32; // 0x14
        uint64_t UInt64; // 0x18
        float Float; // 0x20
        double Double; // 0x28

    };

    struct FStructSerializerByteArray //ScriptStruct Serialization.StructSerializerByteArray
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t Dummy1; // 0x0
        struct TArray<char> ByteArray; // 0x8
        int32_t Dummy2; // 0x18
        struct TArray<int8_t> Int8Array; // 0x20
        int32_t Dummy3; // 0x30

    };

    struct FOverlayItem //ScriptStruct Overlay.OverlayItem
    {
    //Children Prop Count (Fields): 4
    public:

        struct FTimespan StartTime; // 0x0
        struct FTimespan EndTime; // 0x8
        struct FString Text; // 0x10
        struct FVector2D Position; // 0x20

    };

    struct FClothConfig_Legacy //ScriptStruct ClothingSystemRuntimeCommon.ClothConfig_Legacy
    {
    //Children Prop Count (Fields): 27
    public:

        enum class EClothingWindMethod_Legacy WindMethod; // 0x0
        struct FClothConstraintSetup_Legacy VerticalConstraintConfig; // 0x4
        struct FClothConstraintSetup_Legacy HorizontalConstraintConfig; // 0x14
        struct FClothConstraintSetup_Legacy BendConstraintConfig; // 0x24
        struct FClothConstraintSetup_Legacy ShearConstraintConfig; // 0x34
        float SelfCollisionRadius; // 0x44
        float SelfCollisionStiffness; // 0x48
        float SelfCollisionCullScale; // 0x4c
        struct FVector Damping; // 0x50
        float Friction; // 0x5c
        float WindDragCoefficient; // 0x60
        float WindLiftCoefficient; // 0x64
        struct FVector LinearDrag; // 0x68
        struct FVector AngularDrag; // 0x74
        struct FVector LinearInertiaScale; // 0x80
        struct FVector AngularInertiaScale; // 0x8c
        struct FVector CentrifugalInertiaScale; // 0x98
        float SolverFrequency; // 0xa4
        float StiffnessFrequency; // 0xa8
        float GravityScale; // 0xac
        struct FVector GravityOverride; // 0xb0
        bool bUseGravityOverride; // 0xbc
        float TetherStiffness; // 0xc0
        float TetherLimit; // 0xc4
        float CollisionThickness; // 0xc8
        float AnimDriveSpringStiffness; // 0xcc
        float AnimDriveDamperStiffness; // 0xd0

    };

    struct FClothConstraintSetup_Legacy //ScriptStruct ClothingSystemRuntimeCommon.ClothConstraintSetup_Legacy
    {
    //Children Prop Count (Fields): 4
    public:

        float Stiffness; // 0x0
        float StiffnessMultiplier; // 0x4
        float StretchLimit; // 0x8
        float CompressionLimit; // 0xc

    };

    struct FClothLODDataCommon //ScriptStruct ClothingSystemRuntimeCommon.ClothLODDataCommon
    {
    //Children Prop Count (Fields): 4
    public:

        struct FClothPhysicalMeshData PhysicalMeshData; // 0x0
        struct FClothCollisionData CollisionData; // 0xf8
        bool bUseMultipleInfluences; // 0x138
        float SkinningKernelRadius; // 0x13c

    };

    struct FClothPhysicalMeshData //ScriptStruct ClothingSystemRuntimeCommon.ClothPhysicalMeshData
    {
    //Children Prop Count (Fields): 13
    public:

        struct TArray<struct FVector> Vertices; // 0x0
        struct TArray<struct FVector> Normals; // 0x10
        struct TArray<uint32_t> Indices; // 0x20
        struct TMap<uint32_t, struct FPointWeightMap> WeightMaps; // 0x30
        struct TArray<float> InverseMasses; // 0x80
        struct TArray<struct FClothVertBoneData> BoneData; // 0x90
        int32_t MaxBoneWeights; // 0xa0
        int32_t NumFixedVerts; // 0xa4
        struct TArray<uint32_t> SelfCollisionIndices; // 0xa8
        struct TArray<float> MaxDistances; // 0xb8
        struct TArray<float> BackstopDistances; // 0xc8
        struct TArray<float> BackstopRadiuses; // 0xd8
        struct TArray<float> AnimDriveMultipliers; // 0xe8

    };

    struct FPointWeightMap //ScriptStruct ClothingSystemRuntimeCommon.PointWeightMap
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<float> Values; // 0x0

    };

    struct FClothParameterMask_Legacy //ScriptStruct ClothingSystemRuntimeCommon.ClothParameterMask_Legacy
    {
    //Children Prop Count (Fields): 6
    public:

        struct FName MaskName; // 0x0
        enum class EWeightMapTargetCommon CurrentTarget; // 0x8
        float MaxValue; // 0xc
        float MinValue; // 0x10
        struct TArray<float> Values; // 0x18
        bool bEnabled; // 0x28

    };

    struct FClothConstraintSetupNv //ScriptStruct ClothingSystemRuntimeNv.ClothConstraintSetupNv
    {
    //Children Prop Count (Fields): 4
    public:

        float Stiffness; // 0x0
        float StiffnessMultiplier; // 0x4
        float StretchLimit; // 0x8
        float CompressionLimit; // 0xc

    };

    struct FSessionServiceLogUnsubscribe //ScriptStruct SessionMessages.SessionServiceLogUnsubscribe
    {
    public:


    };

    struct FSessionServiceLogSubscribe //ScriptStruct SessionMessages.SessionServiceLogSubscribe
    {
    public:


    };

    struct FSessionServiceLog //ScriptStruct SessionMessages.SessionServiceLog
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName Category; // 0x0
        struct FString Data; // 0x8
        struct FGuid instanceId; // 0x18
        double TimeSeconds; // 0x28
        char Verbosity; // 0x30

    };

    struct FSessionServicePong //ScriptStruct SessionMessages.SessionServicePong
    {
    //Children Prop Count (Fields): 10
    public:

        bool Authorized; // 0x0
        struct FString BuildDate; // 0x8
        struct FString DeviceName; // 0x18
        struct FGuid instanceId; // 0x28
        struct FString InstanceName; // 0x38
        struct FString PlatformName; // 0x48
        struct FGuid SessionId; // 0x58
        struct FString SessionName; // 0x68
        struct FString SessionOwner; // 0x78
        bool Standalone; // 0x88

    };

    struct FSessionServicePing //ScriptStruct SessionMessages.SessionServicePing
    {
    //Children Prop Count (Fields): 1
    public:

        struct FString Username; // 0x0

    };

    struct FNavCollisionBox //ScriptStruct NavigationSystem.NavCollisionBox
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector Offset; // 0x0
        struct FVector Extent; // 0xc

    };

    struct FNavCollisionCylinder //ScriptStruct NavigationSystem.NavCollisionCylinder
    {
    //Children Prop Count (Fields): 3
    public:

        struct FVector Offset; // 0x0
        float Radius; // 0xc
        float Height; // 0x10

    };

    struct FSupportedAreaData //ScriptStruct NavigationSystem.SupportedAreaData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString AreaClassName; // 0x0
        int32_t AreaID; // 0x10
        class UObject* AreaClass; // 0x18

    };

    struct FNavGraphNode //ScriptStruct NavigationSystem.NavGraphNode
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* Owner; // 0x0

    };

    struct FNavGraphEdge //ScriptStruct NavigationSystem.NavGraphEdge
    {
    public:


    };

    struct FNavigationFilterFlags //ScriptStruct NavigationSystem.NavigationFilterFlags
    {
    //Children Prop Count (Fields): 16
    public:

        char bNavFlag0; // 0x0
        char bNavFlag1; // 0x0
        char bNavFlag2; // 0x0
        char bNavFlag3; // 0x0
        char bNavFlag4; // 0x0
        char bNavFlag5; // 0x0
        char bNavFlag6; // 0x0
        char bNavFlag7; // 0x0
        char bNavFlag8; // 0x1
        char bNavFlag9; // 0x1
        char bNavFlag10; // 0x1
        char bNavFlag11; // 0x1
        char bNavFlag12; // 0x1
        char bNavFlag13; // 0x1
        char bNavFlag14; // 0x1
        char bNavFlag15; // 0x1

    };

    struct FNavigationFilterArea //ScriptStruct NavigationSystem.NavigationFilterArea
    {
    //Children Prop Count (Fields): 6
    public:

        class UNavArea* AreaClass; // 0x0
        float TravelCostOverride; // 0x8
        float EnteringCostOverride; // 0xc
        char bIsExcluded; // 0x10
        char bOverrideTravelCost; // 0x10
        char bOverrideEnteringCost; // 0x10

    };

    struct FNavLinkCustomInstanceData : FActorComponentInstanceData //ScriptStruct NavigationSystem.NavLinkCustomInstanceData
    {
    //Children Prop Count (Fields): 1
    public:

        uint32_t NavLinkUserId; // 0x68

    };

    struct FRecastNavMeshGenerationProperties //ScriptStruct NavigationSystem.RecastNavMeshGenerationProperties
    {
    //Children Prop Count (Fields): 23
    public:

        int32_t TilePoolSize; // 0x0
        float TileSizeUU; // 0x4
        float CellSize; // 0x8
        float CellHeight; // 0xc
        float AgentRadius; // 0x10
        float AgentHeight; // 0x14
        float AgentMaxSlope; // 0x18
        float AgentMaxStepHeight; // 0x1c
        float MinRegionArea; // 0x20
        float MergeRegionSize; // 0x24
        float MaxSimplificationError; // 0x28
        int32_t TileNumberHardLimit; // 0x2c
        enum class ERecastPartitioning RegionPartitioning; // 0x30
        enum class ERecastPartitioning LayerPartitioning; // 0x31
        int32_t RegionChunkSplits; // 0x34
        int32_t LayerChunkSplits; // 0x38
        char bSortNavigationAreasByCost; // 0x3c
        char bPerformVoxelFiltering; // 0x3c
        char bMarkLowHeightAreas; // 0x3c
        char bUseExtraTopCellWhenMarkingAreas; // 0x3c
        char bFilterLowSpanSequences; // 0x3c
        char bFilterLowSpanFromTileCache; // 0x3c
        char bFixedTilePoolSize; // 0x3c

    };

    struct FAIDataProviderValue //ScriptStruct AIModule.AIDataProviderValue
    {
    //Children Prop Count (Fields): 2
    public:

        class UAIDataProvider* DataBinding; // 0x10
        struct FName DataField; // 0x18

    };

    struct FAIDataProviderTypedValue : FAIDataProviderValue //ScriptStruct AIModule.AIDataProviderTypedValue
    {
    //Children Prop Count (Fields): 1
    public:

        class UObject* PropertyType; // 0x20

    };

    struct FAIDataProviderBoolValue : FAIDataProviderTypedValue //ScriptStruct AIModule.AIDataProviderBoolValue
    {
    //Children Prop Count (Fields): 1
    public:

        bool DefaultValue; // 0x30

    };

    struct FAIDataProviderFloatValue : FAIDataProviderTypedValue //ScriptStruct AIModule.AIDataProviderFloatValue
    {
    //Children Prop Count (Fields): 1
    public:

        float DefaultValue; // 0x30

    };

    struct FAIDataProviderIntValue : FAIDataProviderTypedValue //ScriptStruct AIModule.AIDataProviderIntValue
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t DefaultValue; // 0x30

    };

    struct FAIDataProviderStructValue : FAIDataProviderValue //ScriptStruct AIModule.AIDataProviderStructValue
    {
    public:


    };

    struct FActorPerceptionBlueprintInfo //ScriptStruct AIModule.ActorPerceptionBlueprintInfo
    {
    //Children Prop Count (Fields): 3
    public:

        class AActor* Target; // 0x0
        struct TArray<struct FAIStimulus> LastSensedStimuli; // 0x8
        char bIsHostile; // 0x18

    };

    struct FAISenseAffiliationFilter //ScriptStruct AIModule.AISenseAffiliationFilter
    {
    //Children Prop Count (Fields): 3
    public:

        char bDetectEnemies; // 0x0
        char bDetectNeutrals; // 0x0
        char bDetectFriendlies; // 0x0

    };

    struct FAIDamageEvent //ScriptStruct AIModule.AIDamageEvent
    {
    //Children Prop Count (Fields): 6
    public:

        float Amount; // 0x0
        struct FVector Location; // 0x4
        struct FVector HitLocation; // 0x10
        class AActor* DamagedActor; // 0x20
        class AActor* Instigator; // 0x28
        struct FName Tag; // 0x30

    };

    struct FAINoiseEvent //ScriptStruct AIModule.AINoiseEvent
    {
    //Children Prop Count (Fields): 5
    public:

        struct FVector NoiseLocation; // 0x4
        float Loudness; // 0x10
        float MaxRange; // 0x14
        class AActor* Instigator; // 0x18
        struct FName Tag; // 0x20

    };

    struct FAIPredictionEvent //ScriptStruct AIModule.AIPredictionEvent
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* Requestor; // 0x0
        class AActor* PredictedActor; // 0x8

    };

    struct FAISightEvent //ScriptStruct AIModule.AISightEvent
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* SeenActor; // 0x8
        class AActor* Observer; // 0x10

    };

    struct FAITeamStimulusEvent //ScriptStruct AIModule.AITeamStimulusEvent
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* Broadcaster; // 0x28
        class AActor* Enemy; // 0x30

    };

    struct FAITouchEvent //ScriptStruct AIModule.AITouchEvent
    {
    //Children Prop Count (Fields): 2
    public:

        class AActor* TouchReceiver; // 0x10
        class AActor* OtherActor; // 0x18

    };

    struct FIntervalCountdown //ScriptStruct AIModule.IntervalCountdown
    {
    //Children Prop Count (Fields): 1
    public:

        float Interval; // 0x0

    };

    struct FAIMoveRequest //ScriptStruct AIModule.AIMoveRequest
    {
    //Children Prop Count (Fields): 1
    public:

        class AActor* GoalActor; // 0x0

    };

    struct FBehaviorTreeTemplateInfo //ScriptStruct AIModule.BehaviorTreeTemplateInfo
    {
    //Children Prop Count (Fields): 2
    public:

        class UBehaviorTree* Asset; // 0x0
        class UBTCompositeNode* Template; // 0x8

    };

    struct FBlackboardKeySelector //ScriptStruct AIModule.BlackboardKeySelector
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<class UBlackboardKeyType*> AllowedTypes; // 0x0
        struct FName SelectedKeyName; // 0x10
        class UBlackboardKeyType* SelectedKeyType; // 0x18
        char SelectedKeyID; // 0x20
        char bNoneIsAllowedValue; // 0x24

    };

    struct FBlackboardEntry //ScriptStruct AIModule.BlackboardEntry
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName EntryName; // 0x0
        class UBlackboardKeyType* KeyType; // 0x8
        char bInstanceSynced; // 0x10

    };

    struct FBTCompositeChild //ScriptStruct AIModule.BTCompositeChild
    {
    //Children Prop Count (Fields): 4
    public:

        class UBTCompositeNode* ChildComposite; // 0x0
        class UBTTaskNode* ChildTask; // 0x8
        struct TArray<class UBTDecorator*> Decorators; // 0x10
        struct TArray<struct FBTDecoratorLogic> DecoratorOps; // 0x20

    };

    struct FBTDecoratorLogic //ScriptStruct AIModule.BTDecoratorLogic
    {
    //Children Prop Count (Fields): 2
    public:

        enum class EBTDecoratorLogic Operation; // 0x0
        uint16_t Number; // 0x2

    };

    struct FCrowdAvoidanceSamplingPattern //ScriptStruct AIModule.CrowdAvoidanceSamplingPattern
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<float> Angles; // 0x0
        struct TArray<float> Radii; // 0x10

    };

    struct FCrowdAvoidanceConfig //ScriptStruct AIModule.CrowdAvoidanceConfig
    {
    //Children Prop Count (Fields): 10
    public:

        float VelocityBias; // 0x0
        float DesiredVelocityWeight; // 0x4
        float CurrentVelocityWeight; // 0x8
        float SideBiasWeight; // 0xc
        float ImpactTimeWeight; // 0x10
        float ImpactTimeRange; // 0x14
        char CustomPatternIdx; // 0x18
        char AdaptiveDivisions; // 0x19
        char AdaptiveRings; // 0x1a
        char AdaptiveDepth; // 0x1b

    };

    struct FEnvQueryInstanceCache //ScriptStruct AIModule.EnvQueryInstanceCache
    {
    //Children Prop Count (Fields): 1
    public:

        class UEnvQuery* Template; // 0x0

    };

    struct FEnvQueryRequest //ScriptStruct AIModule.EnvQueryRequest
    {
    //Children Prop Count (Fields): 3
    public:

        class UEnvQuery* QueryTemplate; // 0x0
        class UObject* Owner; // 0x8
        class UWorld* World; // 0x10

    };

    struct FEQSParametrizedQueryExecutionRequest //ScriptStruct AIModule.EQSParametrizedQueryExecutionRequest
    {
    //Children Prop Count (Fields): 5
    public:

        class UEnvQuery* QueryTemplate; // 0x0
        struct TArray<struct FAIDynamicParam> QueryConfig; // 0x8
        struct FBlackboardKeySelector EQSQueryBlackboardKey; // 0x18
        enum class EEnvQueryRunMode RunMode; // 0x40
        char bUseBBKeyForQueryTemplate; // 0x44

    };

    struct FAIDynamicParam //ScriptStruct AIModule.AIDynamicParam
    {
    //Children Prop Count (Fields): 4
    public:

        struct FName ParamName; // 0x0
        enum class EAIParamType ParamType; // 0x8
        float Value; // 0xc
        struct FBlackboardKeySelector BBKey; // 0x10

    };

    struct FEnvQueryResult //ScriptStruct AIModule.EnvQueryResult
    {
    //Children Prop Count (Fields): 3
    public:

        class UEnvQueryItemType* ItemType; // 0x10
        int32_t OptionIndex; // 0x2c
        int32_t QueryID; // 0x30

    };

    struct FEnvOverlapData //ScriptStruct AIModule.EnvOverlapData
    {
    //Children Prop Count (Fields): 9
    public:

        float ExtentX; // 0x0
        float ExtentY; // 0x4
        float ExtentZ; // 0x8
        struct FVector ShapeOffset; // 0xc
        enum class ECollisionChannel OverlapChannel; // 0x18
        enum class EEnvOverlapShape OverlapShape; // 0x19
        char bOnlyBlockingHits; // 0x1c
        char bOverlapComplex; // 0x1c
        char bSkipOverlapQuerier; // 0x1c

    };

    struct FEnvTraceData //ScriptStruct AIModule.EnvTraceData
    {
    //Children Prop Count (Fields): 18
    public:

        int32_t VersionNum; // 0x0
        class UNavigationQueryFilter* NavigationFilter; // 0x8
        float ProjectDown; // 0x10
        float ProjectUp; // 0x14
        float ExtentX; // 0x18
        float ExtentY; // 0x1c
        float ExtentZ; // 0x20
        float PostProjectionVerticalOffset; // 0x24
        enum class ETraceTypeQuery TraceChannel; // 0x28
        enum class ECollisionChannel SerializedChannel; // 0x29
        enum class EEnvTraceShape TraceShape; // 0x2a
        enum class EEnvQueryTrace TraceMode; // 0x2b
        char bTraceComplex; // 0x2c
        char bOnlyBlockingHits; // 0x2c
        char bCanTraceOnNavMesh; // 0x2c
        char bCanTraceOnGeometry; // 0x2c
        char bCanDisableTrace; // 0x2c
        char bCanProjectDown; // 0x2c

    };

    struct FEnvDirection //ScriptStruct AIModule.EnvDirection
    {
    //Children Prop Count (Fields): 4
    public:

        class UEnvQueryContext* LineFrom; // 0x0
        class UEnvQueryContext* LineTo; // 0x8
        class UEnvQueryContext* Rotation; // 0x10
        enum class EEnvDirection DirMode; // 0x18

    };

    struct FEnvNamedValue //ScriptStruct AIModule.EnvNamedValue
    {
    //Children Prop Count (Fields): 3
    public:

        struct FName ParamName; // 0x0
        enum class EAIParamType ParamType; // 0x8
        float Value; // 0xc

    };

    struct FPawnActionStack //ScriptStruct AIModule.PawnActionStack
    {
    //Children Prop Count (Fields): 1
    public:

        class UPawnAction* TopAction; // 0x0

    };

    struct FPawnActionEvent //ScriptStruct AIModule.PawnActionEvent
    {
    //Children Prop Count (Fields): 1
    public:

        class UPawnAction* Action; // 0x0

    };

    struct FRecastGraphWrapper //ScriptStruct AIModule.RecastGraphWrapper
    {
    //Children Prop Count (Fields): 1
    public:

        class ARecastNavMesh* RecastNavMeshActor; // 0x0

    };

    struct FWebJSCallbackBase //ScriptStruct WebBrowser.WebJSCallbackBase
    {
    public:


    };

    struct FWebJSResponse : FWebJSCallbackBase //ScriptStruct WebBrowser.WebJSResponse
    {
    public:


    };

    struct FWebJSFunction : FWebJSCallbackBase //ScriptStruct WebBrowser.WebJSFunction
    {
    public:


    };

    struct FRigVMParameter //ScriptStruct RigVM.RigVMParameter
    {
    //Children Prop Count (Fields): 6
    public:

        enum class ERigVMParameterType Type; // 0x0
        struct FName Name; // 0x4
        int32_t RegisterIndex; // 0xc
        struct FString CPPType; // 0x10
        class UScriptStruct* ScriptStruct; // 0x20
        struct FName ScriptStructPath; // 0x28

    };

    struct FRigVMByteCode //ScriptStruct RigVM.RigVMByteCode
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<char> ByteCode; // 0x0
        int32_t NumInstructions; // 0x10
        struct TArray<struct FRigVMByteCodeEntry> entries; // 0x18

    };

    struct FRigVMByteCodeEntry //ScriptStruct RigVM.RigVMByteCodeEntry
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName Name; // 0x0
        int32_t InstructionIndex; // 0x8

    };

    struct FRigVMInstructionArray //ScriptStruct RigVM.RigVMInstructionArray
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FRigVMInstruction> Instructions; // 0x0

    };

    struct FRigVMInstruction //ScriptStruct RigVM.RigVMInstruction
    {
    //Children Prop Count (Fields): 3
    public:

        uint64_t ByteCodeIndex; // 0x0
        enum class ERigVMOpCode OpCode; // 0x8
        char OperandAlignment; // 0x9

    };

    struct FRigVMBaseOp //ScriptStruct RigVM.RigVMBaseOp
    {
    public:


    };

    struct FRigVMUnaryOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMUnaryOp
    {
    public:


    };

    struct FRigVMChangeTypeOp : FRigVMUnaryOp //ScriptStruct RigVM.RigVMChangeTypeOp
    {
    public:


    };

    struct FRigVMJumpIfOp : FRigVMUnaryOp //ScriptStruct RigVM.RigVMJumpIfOp
    {
    public:


    };

    struct FRigVMJumpOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMJumpOp
    {
    public:


    };

    struct FRigVMComparisonOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMComparisonOp
    {
    public:


    };

    struct FRigVMCopyOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMCopyOp
    {
    public:


    };

    struct FRigVMBinaryOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMBinaryOp
    {
    public:


    };

    struct FRigVMExecuteOp : FRigVMBaseOp //ScriptStruct RigVM.RigVMExecuteOp
    {
    public:


    };

    struct FRigVMSlice //ScriptStruct RigVM.RigVMSlice
    {
    public:


    };

    struct FRigVMMemoryContainer //ScriptStruct RigVM.RigVMMemoryContainer
    {
    //Children Prop Count (Fields): 8
    public:

        bool bUseNameMap; // 0x0
        enum class ERigVMMemoryType MemoryType; // 0x1
        struct TArray<struct FRigVMRegister> Registers; // 0x8
        struct TArray<struct FRigVMRegisterOffset> RegisterOffsets; // 0x18
        struct TArray<char> Data; // 0x28
        struct TArray<class UScriptStruct*> ScriptStructs; // 0x38
        struct TMap<struct FName, int32_t> NameMap; // 0x48
        bool bEncounteredErrorDuringLoad; // 0x98

    };

    struct FRigVMRegisterOffset //ScriptStruct RigVM.RigVMRegisterOffset
    {
    //Children Prop Count (Fields): 8
    public:

        struct TArray<int32_t> Segments; // 0x0
        enum class ERigVMRegisterType Type; // 0x10
        struct FName CPPType; // 0x14
        class UScriptStruct* ScriptStruct; // 0x20
        class UScriptStruct* ParentScriptStruct; // 0x28
        int32_t ArrayIndex; // 0x30
        uint16_t ElementSize; // 0x34
        struct FString CachedSegmentPath; // 0x38

    };

    struct FRigVMRegister //ScriptStruct RigVM.RigVMRegister
    {
    //Children Prop Count (Fields): 11
    public:

        enum class ERigVMRegisterType Type; // 0x0
        uint32_t ByteIndex; // 0x4
        uint16_t ElementSize; // 0x8
        uint16_t ElementCount; // 0xa
        uint16_t SliceCount; // 0xc
        char AlignmentBytes; // 0xe
        uint16_t TrailingBytes; // 0x10
        struct FName Name; // 0x14
        int32_t ScriptStructIndex; // 0x1c
        bool bIsArray; // 0x20
        bool bIsDynamic; // 0x21

    };

    struct FRigVMOperand //ScriptStruct RigVM.RigVMOperand
    {
    //Children Prop Count (Fields): 3
    public:

        enum class ERigVMMemoryType MemoryType; // 0x0
        uint16_t RegisterIndex; // 0x2
        uint16_t RegisterOffset; // 0x4

    };

    struct FRigVMStatistics //ScriptStruct RigVM.RigVMStatistics
    {
    //Children Prop Count (Fields): 6
    public:

        uint32_t BytesForCDO; // 0x0
        uint32_t BytesPerInstance; // 0x4
        struct FRigVMMemoryStatistics LiteralMemory; // 0x8
        struct FRigVMMemoryStatistics WorkMemory; // 0x14
        uint32_t BytesForCaching; // 0x20
        struct FRigVMByteCodeStatistics ByteCode; // 0x24

    };

    struct FRigVMByteCodeStatistics //ScriptStruct RigVM.RigVMByteCodeStatistics
    {
    //Children Prop Count (Fields): 2
    public:

        uint32_t InstructionCount; // 0x0
        uint32_t DataBytes; // 0x4

    };

    struct FRigVMMemoryStatistics //ScriptStruct RigVM.RigVMMemoryStatistics
    {
    //Children Prop Count (Fields): 3
    public:

        uint32_t RegisterCount; // 0x0
        uint32_t DataBytes; // 0x4
        uint32_t TotalBytes; // 0x8

    };

    struct FDirectLinkMsg_HaveListMessage //ScriptStruct DirectLink.DirectLinkMsg_HaveListMessage
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t SourceStreamPort; // 0x0
        int32_t SyncCycle; // 0x4
        int32_t MessageCode; // 0x8
        char Kind; // 0xc
        struct TArray<char> Payload; // 0x10
        struct TArray<int32_t> NodeIds; // 0x20
        struct TArray<int32_t> Hashes; // 0x30

    };

    struct FDirectLinkMsg_DeltaMessage //ScriptStruct DirectLink.DirectLinkMsg_DeltaMessage
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t DestinationStreamPort; // 0x0
        int8_t BatchCode; // 0x4
        int32_t MessageCode; // 0x8
        char Kind; // 0xc
        bool CompressedPayload; // 0xd
        struct TArray<char> Payload; // 0x10

    };

    struct FDirectLinkMsg_CloseStreamRequest //ScriptStruct DirectLink.DirectLinkMsg_CloseStreamRequest
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t RecipientStreamPort; // 0x0

    };

    struct FDirectLinkMsg_OpenStreamAnswer //ScriptStruct DirectLink.DirectLinkMsg_OpenStreamAnswer
    {
    //Children Prop Count (Fields): 4
    public:

        int32_t RecipientStreamPort; // 0x0
        bool bAccepted; // 0x4
        struct FString Error; // 0x8
        int32_t OpenedStreamPort; // 0x18

    };

    struct FDirectLinkMsg_OpenStreamRequest //ScriptStruct DirectLink.DirectLinkMsg_OpenStreamRequest
    {
    //Children Prop Count (Fields): 4
    public:

        bool bRequestFromSource; // 0x0
        int32_t RequestFromStreamPort; // 0x4
        struct FGuid SourceGuid; // 0x8
        struct FGuid DestinationGuid; // 0x18

    };

    struct FDirectLinkMsg_QueryEndpointState //ScriptStruct DirectLink.DirectLinkMsg_QueryEndpointState
    {
    public:


    };

    struct FDirectLinkMsg_EndpointState //ScriptStruct DirectLink.DirectLinkMsg_EndpointState
    {
    //Children Prop Count (Fields): 11
    public:

        uint32_t StateRevision; // 0x0
        uint32_t MinProtocolVersion; // 0x4
        uint32_t ProtocolVersion; // 0x8
        struct FString UEVersion; // 0x10
        struct FString ComputerName; // 0x20
        struct FString Username; // 0x30
        uint32_t ProcessId; // 0x40
        struct FString ExecutableName; // 0x48
        struct FString NiceName; // 0x58
        struct TArray<struct FNamedId> Destinations; // 0x68
        struct TArray<struct FNamedId> Sources; // 0x78

    };

    struct FNamedId //ScriptStruct DirectLink.NamedId
    {
    //Children Prop Count (Fields): 3
    public:

        struct FString Name; // 0x0
        struct FGuid ID; // 0x10
        bool bIsPublic; // 0x20

    };

    struct FDirectLinkMsg_EndpointLifecycle //ScriptStruct DirectLink.DirectLinkMsg_EndpointLifecycle
    {
    //Children Prop Count (Fields): 2
    public:

        char LifecycleState; // 0x0
        uint32_t EndpointStateRevision; // 0x4

    };

    struct FDatasmithMeshSourceModel //ScriptStruct DatasmithCore.DatasmithMeshSourceModel
    {
    public:


    };

    struct FChaosHandlerSet //ScriptStruct ChaosSolverEngine.ChaosHandlerSet
    {
    //Children Prop Count (Fields): 1
    public:

        struct TSet<class UObject*> ChaosHandlers; // 0x8

    };

    struct FBreakEventCallbackWrapper //ScriptStruct ChaosSolverEngine.BreakEventCallbackWrapper
    {
    public:


    };

    struct FChaosDebugSubstepControl //ScriptStruct ChaosSolverEngine.ChaosDebugSubstepControl
    {
    //Children Prop Count (Fields): 3
    public:

        bool bPause; // 0x0
        bool bSubstep; // 0x1
        bool bStep; // 0x2

    };

    struct FFieldObjectCommands //ScriptStruct FieldSystemEngine.FieldObjectCommands
    {
    //Children Prop Count (Fields): 3
    public:

        struct TArray<struct FName> TargetNames; // 0x0
        struct TArray<class UFieldNodeBase*> RootNodes; // 0x10
        struct TArray<class UFieldSystemMetaData*> MetaDatas; // 0x20

    };

    struct FChaosBreakingEventRequestSettings //ScriptStruct GeometryCollectionEngine.ChaosBreakingEventRequestSettings
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t MaxNumberOfResults; // 0x0
        float MinRadius; // 0x4
        float MinSpeed; // 0x8
        float MinMass; // 0xc
        float MaxDistance; // 0x10
        enum class EChaosBreakingSortMethod SortMethod; // 0x14

    };

    struct FChaosCollisionEventRequestSettings //ScriptStruct GeometryCollectionEngine.ChaosCollisionEventRequestSettings
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t MaxNumberResults; // 0x0
        float MinMass; // 0x4
        float MinSpeed; // 0x8
        float MinImpulse; // 0xc
        float MaxDistance; // 0x10
        enum class EChaosCollisionSortMethod SortMethod; // 0x14

    };

    struct FChaosTrailingEventRequestSettings //ScriptStruct GeometryCollectionEngine.ChaosTrailingEventRequestSettings
    {
    //Children Prop Count (Fields): 6
    public:

        int32_t MaxNumberOfResults; // 0x0
        float MinMass; // 0x4
        float MinSpeed; // 0x8
        float MinAngularSpeed; // 0xc
        float MaxDistance; // 0x10
        enum class EChaosTrailingSortMethod SortMethod; // 0x14

    };

    struct FGeometryCollectionDebugDrawActorSelectedRigidBody //ScriptStruct GeometryCollectionEngine.GeometryCollectionDebugDrawActorSelectedRigidBody
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t ID; // 0x0
        class AChaosSolverActor* Solver; // 0x8
        class AGeometryCollectionActor* GeometryCollection; // 0x10

    };

    struct FGeometryCollectionDebugDrawWarningMessage //ScriptStruct GeometryCollectionEngine.GeometryCollectionDebugDrawWarningMessage
    {
    public:


    };

    struct FGeometryCollectionSizeSpecificData //ScriptStruct GeometryCollectionEngine.GeometryCollectionSizeSpecificData
    {
    //Children Prop Count (Fields): 10
    public:

        float MaxSize; // 0x0
        enum class ECollisionTypeEnum CollisionType; // 0x4
        enum class EImplicitTypeEnum ImplicitType; // 0x5
        int32_t MinLevelSetResolution; // 0x8
        int32_t MaxLevelSetResolution; // 0xc
        int32_t MinClusterLevelSetResolution; // 0x10
        int32_t MaxClusterLevelSetResolution; // 0x14
        int32_t CollisionObjectReductionPercentage; // 0x18
        float CollisionParticlesFraction; // 0x1c
        int32_t MaximumCollisionParticles; // 0x20

    };

    struct FGeometryCollectionSource //ScriptStruct GeometryCollectionEngine.GeometryCollectionSource
    {
    //Children Prop Count (Fields): 3
    public:

        struct FSoftObjectPath SourceGeometryObject; // 0x0
        struct FTransform LocalTransform; // 0x20
        struct TArray<class UMaterialInterface*> SourceMaterial; // 0x50

    };

    struct FBrushStampData //ScriptStruct InteractiveToolsFramework.BrushStampData
    {
    public:


    };

    struct FBehaviorInfo //ScriptStruct InteractiveToolsFramework.BehaviorInfo
    {
    //Children Prop Count (Fields): 1
    public:

        class UInputBehavior* Behavior; // 0x0

    };

    struct FInputRayHit //ScriptStruct InteractiveToolsFramework.InputRayHit
    {
    public:


    };

    struct FActiveGizmo //ScriptStruct InteractiveToolsFramework.ActiveGizmo
    {
    public:


    };

    struct FGizmoFloatParameterChange //ScriptStruct InteractiveToolsFramework.GizmoFloatParameterChange
    {
    //Children Prop Count (Fields): 2
    public:

        float InitialValue; // 0x0
        float CurrentValue; // 0x4

    };

    struct FGizmoVec2ParameterChange //ScriptStruct InteractiveToolsFramework.GizmoVec2ParameterChange
    {
    //Children Prop Count (Fields): 2
    public:

        struct FVector2D InitialValue; // 0x0
        struct FVector2D CurrentValue; // 0x8

    };

    struct FLiveLinkSourceHandle //ScriptStruct LiveLinkInterface.LiveLinkSourceHandle
    {
    public:


    };

    struct FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.LiveLinkBaseBlueprintData
    {
    public:


    };

    struct FSubjectFrameHandle : FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.SubjectFrameHandle
    {
    public:


    };

    struct FLiveLinkTransform //ScriptStruct LiveLinkInterface.LiveLinkTransform
    {
    public:


    };

    struct FCachedSubjectFrame //ScriptStruct LiveLinkInterface.CachedSubjectFrame
    {
    public:


    };

    struct FSubjectMetadata //ScriptStruct LiveLinkInterface.SubjectMetadata
    {
    //Children Prop Count (Fields): 3
    public:

        struct TMap<struct FName, struct FString> StringMetadata; // 0x0
        struct FTimecode SceneTimecode; // 0x50
        struct FFrameRate SceneFramerate; // 0x64

    };

    struct FLiveLinkBaseFrameData //ScriptStruct LiveLinkInterface.LiveLinkBaseFrameData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLiveLinkWorldTime WorldTime; // 0x0
        struct FLiveLinkMetaData MetaData; // 0x10
        struct TArray<float> PropertyValues; // 0x70

    };

    struct FLiveLinkMetaData //ScriptStruct LiveLinkInterface.LiveLinkMetaData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TMap<struct FName, struct FString> StringMetadata; // 0x0
        struct FQualifiedFrameTime SceneTime; // 0x50

    };

    struct FLiveLinkWorldTime //ScriptStruct LiveLinkInterface.LiveLinkWorldTime
    {
    //Children Prop Count (Fields): 2
    public:

        double Time; // 0x0
        double Offset; // 0x8

    };

    struct FLiveLinkAnimationFrameData : FLiveLinkBaseFrameData //ScriptStruct LiveLinkInterface.LiveLinkAnimationFrameData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FTransform> Transforms; // 0xa0

    };

    struct FLiveLinkBaseStaticData //ScriptStruct LiveLinkInterface.LiveLinkBaseStaticData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FName> PropertyNames; // 0x0

    };

    struct FLiveLinkSkeletonStaticData : FLiveLinkBaseStaticData //ScriptStruct LiveLinkInterface.LiveLinkSkeletonStaticData
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FName> BoneNames; // 0x10
        struct TArray<int32_t> BoneParents; // 0x20

    };

    struct FLiveLinkBasicBlueprintData : FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.LiveLinkBasicBlueprintData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkBaseStaticData StaticData; // 0x8
        struct FLiveLinkBaseFrameData FrameData; // 0x18

    };

    struct FLiveLinkCameraBlueprintData : FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.LiveLinkCameraBlueprintData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkCameraStaticData StaticData; // 0x8
        struct FLiveLinkCameraFrameData FrameData; // 0x30

    };

    struct FLiveLinkTransformFrameData : FLiveLinkBaseFrameData //ScriptStruct LiveLinkInterface.LiveLinkTransformFrameData
    {
    //Children Prop Count (Fields): 1
    public:

        struct FTransform Transform; // 0xa0

    };

    struct FLiveLinkCameraFrameData : FLiveLinkTransformFrameData //ScriptStruct LiveLinkInterface.LiveLinkCameraFrameData
    {
    //Children Prop Count (Fields): 6
    public:

        float FieldOfView; // 0xd0
        float AspectRatio; // 0xd4
        float FocalLength; // 0xd8
        float Aperture; // 0xdc
        float FocusDistance; // 0xe0
        enum class ELiveLinkCameraProjectionMode ProjectionMode; // 0xe4

    };

    struct FLiveLinkTransformStaticData : FLiveLinkBaseStaticData //ScriptStruct LiveLinkInterface.LiveLinkTransformStaticData
    {
    //Children Prop Count (Fields): 3
    public:

        bool bIsLocationSupported; // 0x10
        bool bIsRotationSupported; // 0x11
        bool bIsScaleSupported; // 0x12

    };

    struct FLiveLinkCameraStaticData : FLiveLinkTransformStaticData //ScriptStruct LiveLinkInterface.LiveLinkCameraStaticData
    {
    //Children Prop Count (Fields): 8
    public:

        bool bIsFieldOfViewSupported; // 0x18
        bool bIsAspectRatioSupported; // 0x19
        bool bIsFocalLengthSupported; // 0x1a
        bool bIsProjectionModeSupported; // 0x1b
        float FilmBackWidth; // 0x1c
        float FilmBackHeight; // 0x20
        bool bIsApertureSupported; // 0x24
        bool bIsFocusDistanceSupported; // 0x25

    };

    struct FLiveLinkCurveConversionSettings //ScriptStruct LiveLinkInterface.LiveLinkCurveConversionSettings
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<struct FString, struct FSoftObjectPath> CurveConversionAssetMap; // 0x0

    };

    struct FLiveLinkLightBlueprintData : FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.LiveLinkLightBlueprintData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkLightStaticData StaticData; // 0x8
        struct FLiveLinkLightFrameData FrameData; // 0x30

    };

    struct FLiveLinkLightFrameData : FLiveLinkTransformFrameData //ScriptStruct LiveLinkInterface.LiveLinkLightFrameData
    {
    //Children Prop Count (Fields): 9
    public:

        float Temperature; // 0xd0
        float Intensity; // 0xd4
        struct FColor LightColor; // 0xd8
        float InnerConeAngle; // 0xdc
        float OuterConeAngle; // 0xe0
        float AttenuationRadius; // 0xe4
        float SourceRadius; // 0xe8
        float SoftSourceRadius; // 0xec
        float SourceLength; // 0xf0

    };

    struct FLiveLinkLightStaticData : FLiveLinkTransformStaticData //ScriptStruct LiveLinkInterface.LiveLinkLightStaticData
    {
    //Children Prop Count (Fields): 9
    public:

        bool bIsTemperatureSupported; // 0x18
        bool bIsIntensitySupported; // 0x19
        bool bIsLightColorSupported; // 0x1a
        bool bIsInnerConeAngleSupported; // 0x1b
        bool bIsOuterConeAngleSupported; // 0x1c
        bool bIsAttenuationRadiusSupported; // 0x1d
        bool bIsSourceLenghtSupported; // 0x1e
        bool bIsSourceRadiusSupported; // 0x1f
        bool bIsSoftSourceRadiusSupported; // 0x20

    };

    struct FLiveLinkSourcePreset //ScriptStruct LiveLinkInterface.LiveLinkSourcePreset
    {
    //Children Prop Count (Fields): 3
    public:

        struct FGuid Guid; // 0x0
        class ULiveLinkSourceSettings* Settings; // 0x10
        struct FText SourceType; // 0x18

    };

    struct FLiveLinkRefSkeleton //ScriptStruct LiveLinkInterface.LiveLinkRefSkeleton
    {
    //Children Prop Count (Fields): 2
    public:

        struct TArray<struct FName> BoneNames; // 0x0
        struct TArray<int32_t> BoneParents; // 0x10

    };

    struct FLiveLinkSubjectRepresentation //ScriptStruct LiveLinkInterface.LiveLinkSubjectRepresentation
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkSubjectName Subject; // 0x0
        class ULiveLinkRole* Role; // 0x8

    };

    struct FLiveLinkInterpolationSettings //ScriptStruct LiveLinkInterface.LiveLinkInterpolationSettings
    {
    //Children Prop Count (Fields): 2
    public:

        bool bUseInterpolation; // 0x0
        float InterpolationOffset; // 0x4

    };

    struct FLiveLinkTimeSynchronizationSettings //ScriptStruct LiveLinkInterface.LiveLinkTimeSynchronizationSettings
    {
    //Children Prop Count (Fields): 2
    public:

        struct FFrameRate FrameRate; // 0x0
        struct FFrameNumber FrameOffset; // 0x8

    };

    struct FLiveLinkSourceDebugInfo //ScriptStruct LiveLinkInterface.LiveLinkSourceDebugInfo
    {
    //Children Prop Count (Fields): 3
    public:

        struct FLiveLinkSubjectName SubjectName; // 0x0
        int32_t SnapshotIndex; // 0x8
        int32_t NumberOfBufferAtSnapshot; // 0xc

    };

    struct FLiveLinkSourceBufferManagementSettings //ScriptStruct LiveLinkInterface.LiveLinkSourceBufferManagementSettings
    {
    //Children Prop Count (Fields): 15
    public:

        bool bValidEngineTimeEnabled; // 0x0
        float ValidEngineTime; // 0x4
        float EngineTimeOffset; // 0x8
        double EngineTimeClockOffset; // 0x10
        bool bGenerateSubFrame; // 0x18
        struct FFrameRate DetectedFrameRate; // 0x1c
        bool bUseTimecodeSmoothLatest; // 0x24
        struct FFrameRate SourceTimecodeFrameRate; // 0x28
        bool bValidTimecodeFrameEnabled; // 0x30
        int32_t ValidTimecodeFrame; // 0x34
        float TimecodeFrameOffset; // 0x38
        double TimecodeClockOffset; // 0x40
        int32_t LatestOffset; // 0x48
        int32_t MaxNumberOfFrameToBuffered; // 0x4c
        bool bKeepAtLeastOneFrame; // 0x50

    };

    struct FLiveLinkTransformBlueprintData : FLiveLinkBaseBlueprintData //ScriptStruct LiveLinkInterface.LiveLinkTransformBlueprintData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkTransformStaticData StaticData; // 0x8
        struct FLiveLinkTransformFrameData FrameData; // 0x20

    };

    struct FLiveLinkFrameData //ScriptStruct LiveLinkInterface.LiveLinkFrameData
    {
    //Children Prop Count (Fields): 4
    public:

        struct TArray<struct FTransform> Transforms; // 0x0
        struct TArray<struct FLiveLinkCurveElement> CurveElements; // 0x10
        struct FLiveLinkWorldTime WorldTime; // 0x20
        struct FLiveLinkMetaData MetaData; // 0x30

    };

    struct FLiveLinkCurveElement //ScriptStruct LiveLinkInterface.LiveLinkCurveElement
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName CurveName; // 0x0
        float CurveValue; // 0x8

    };

    struct FLiveLinkTimeCode_Base_DEPRECATED //ScriptStruct LiveLinkInterface.LiveLinkTimeCode_Base_DEPRECATED
    {
    //Children Prop Count (Fields): 3
    public:

        int32_t Seconds; // 0x0
        int32_t Frames; // 0x4
        struct FLiveLinkFrameRate FrameRate; // 0x8

    };

    struct FLiveLinkFrameRate : FFrameRate //ScriptStruct LiveLinkInterface.LiveLinkFrameRate
    {
    public:


    };

    struct FLiveLinkTimeCode : FLiveLinkTimeCode_Base_DEPRECATED //ScriptStruct LiveLinkInterface.LiveLinkTimeCode
    {
    public:


    };

    struct FLiveLinkTime //ScriptStruct LiveLinkInterface.LiveLinkTime
    {
    //Children Prop Count (Fields): 2
    public:

        double WorldTime; // 0x0
        struct FQualifiedFrameTime SceneTime; // 0x8

    };

    struct FLiveLinkSubjectFrameMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkSubjectFrameMessage
    {
    //Children Prop Count (Fields): 5
    public:

        struct FName SubjectName; // 0x0
        struct TArray<struct FTransform> Transforms; // 0x8
        struct TArray<struct FLiveLinkCurveElement> Curves; // 0x18
        struct FLiveLinkMetaData MetaData; // 0x28
        double Time; // 0x88

    };

    struct FLiveLinkSubjectDataMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkSubjectDataMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FLiveLinkRefSkeleton RefSkeleton; // 0x0
        struct FName SubjectName; // 0x20

    };

    struct FLiveLinkClearSubject //ScriptStruct LiveLinkMessageBusFramework.LiveLinkClearSubject
    {
    //Children Prop Count (Fields): 1
    public:

        struct FName SubjectName; // 0x0

    };

    struct FLiveLinkHeartbeatMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkHeartbeatMessage
    {
    public:


    };

    struct FLiveLinkConnectMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkConnectMessage
    {
    //Children Prop Count (Fields): 1
    public:

        int32_t LiveLinkVersion; // 0x0

    };

    struct FLiveLinkPongMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkPongMessage
    {
    //Children Prop Count (Fields): 5
    public:

        struct FString ProviderName; // 0x0
        struct FString MachineName; // 0x10
        struct FGuid PollRequest; // 0x20
        int32_t LiveLinkVersion; // 0x30
        double CreationPlatformTime; // 0x38

    };

    struct FLiveLinkPingMessage //ScriptStruct LiveLinkMessageBusFramework.LiveLinkPingMessage
    {
    //Children Prop Count (Fields): 2
    public:

        struct FGuid PollRequest; // 0x0
        int32_t LiveLinkVersion; // 0x10

    };

    struct FDefault__UserDefinedStruct //UserDefinedStruct Engine.Default__UserDefinedStruct
    {
    public:


    };

    struct FDefault__AISenseBlueprintListener //AISenseBlueprintListener AIModule.Default__AISenseBlueprintListener
    {
    public:


    };

    struct FFEvacWeightedRandomCover //UserDefinedStruct FEvacWeightedRandomCover.FEvacWeightedRandomCover
    {
    //Children Prop Count (Fields): 2
    public:

        class UStaticMesh* Mesh_2_CE0C646A454AAC9DA330C28B6F8CC601; // 0x0
        float Weight_5_7B28EB004A6DDF8045548DAC7B69BAF6; // 0x8

    };

    struct FSTR_MagnetismSettingsDesc //UserDefinedStruct STR_MagnetismSettingsDesc.STR_MagnetismSettingsDesc
    {
    //Children Prop Count (Fields): 2
    public:

        float MagnetismFriction_3_4B02D85E48D8583A8413C88222C30DFF; // 0x0
        float MagnetismFrictionMovementCoeff_11_71F3790D4B0E429D3D273B952E03B3FA; // 0x4

    };

    struct FSTR_AimAssistTarget //UserDefinedStruct STR_AimAssistTarget.STR_AimAssistTarget
    {
    //Children Prop Count (Fields): 5
    public:

        float AngleCOS_13_5D8346FA402979DE03A1E68BD674205F; // 0x0
        float Distance_16_A4030D4F431F92B26824329B80C346DC; // 0x4
        struct FVector ImpactPoint_5_C197FA754F578D0B7AB35A8CB4867CB7; // 0x8
        class AActor* HitActor_8_5DFA8E4E48B6AA2191514D9E68245B1F; // 0x18
        struct FName HitBoneName_11_28888DC14E898D69B1EA5D90C17C7172; // 0x20

    };

    struct FSTR_AimAssistPresetDesc //UserDefinedStruct STR_AimAssistPresetDesc.STR_AimAssistPresetDesc
    {
    //Children Prop Count (Fields): 8
    public:

        struct FString PresetName_2_D4E25D0B43133DE51189979C1C8A65F0; // 0x0
        float HoldTargetTime_5_81BDCDCC4E08ABFB4E0D8ABE65FDCC7C; // 0x10
        bool ApplyAutoAim_8_92D63579442B59F48DF4E2BA76E80C93; // 0x14
        bool AutoAimWithGamepadOnly_10_6DE4FD204C2E283D7EBCC4ACD1C7CEB0; // 0x15
        bool ApplyMagnetism_12_CD725E92491B8D32DD9FE28444D50F08; // 0x16
        class UCurveFloat* MagnetismInputSense_27_3D16323E4B722D7ED5E407AE82AB8207; // 0x18
        struct FSTR_MagnetismSettingsDesc MagnetismSettingsInBlindState_18_1CAD4B1F4963283BF5CC40A6C997333B; // 0x20
        struct FSTR_MagnetismSettingsDesc MagnetismSettingsInAimState_19_DD72A238482DEB2C6FCF5D8DE8F517FC; // 0x28

    };

    struct FAutomationTestStartData //UserDefinedStruct AutomationTestStartData.AutomationTestStartData
    {
    //Children Prop Count (Fields): 4
    public:

        class AAutomationManager_Base_BP_C* AutomationManager_5_52137915453161A2BF98959371D9D9D9; // 0x0
        class AYPlayerController* PlayerController_8_B01D6ABB485A0A1DC17637AE8BB6CE29; // 0x8
        bool IsStation_11_62DDFEF34B4FDCD7F39EB58C46D7C2B7; // 0x10
        struct FYPlayerAutomationData AutomationData_2_286D976D48B659DE00EB278117F04B33; // 0x18

    };

    struct FSTR_MagnetismPresetDesc //UserDefinedStruct STR_MagnetismPresetDesc.STR_MagnetismPresetDesc
    {
    //Children Prop Count (Fields): 4
    public:

        float MagnetismAngle_5_8B096E6945EFC5DDD740F1B709BE2A2B; // 0x0
        float MagnetismDistance_6_B7C62A7044585A71E22A1B846239BFBC; // 0x4
        float MagnetismFalloffDistance_7_2F2CDE734F88D80D744DD69C5D3688E8; // 0x8
        float MagnetismNearFalloffDistance_8_5DA228F54CEC13B6A73F04B5952C6072; // 0xc

    };

    struct FSTR_AutoAimPresetDesc //UserDefinedStruct STR_AutoAimPresetDesc.STR_AutoAimPresetDesc
    {
    //Children Prop Count (Fields): 5
    public:

        float MaxDeviationAngle_11_8B096E6945EFC5DDD740F1B709BE2A2B; // 0x0
        float AutoAimAngle_4_5BD8E3884B3952FF9589AABC8AA8AC38; // 0x4
        float AutoAimDistance_8_AF0AE6BC4D4E5E2AE5E76FA94E74A95F; // 0x8
        float AutoAimFalloffDistance_9_F149BE494B56BE328CA08CBA5BA33359; // 0xc
        float AutoAimNearFalloffDistance_10_A081DC6C44416D5B856998886A177939; // 0x10

    };

    struct FSTR_AimAssistWPNPresetDesc //UserDefinedStruct STR_AimAssistWPNPresetDesc.STR_AimAssistWPNPresetDesc
    {
    //Children Prop Count (Fields): 4
    public:

        struct FSTR_AutoAimPresetDesc AutoAimInBlindState_5_847152EE4ED5926D0330ADBAE7B3B297; // 0x0
        struct FSTR_AutoAimPresetDesc AutoAimInAimState_7_A47B617849A62A40601C0BB7A423A5B9; // 0x14
        struct FSTR_MagnetismPresetDesc MagnetismInBlindState_10_28A0FF9D47605D61C42402BB59B42F43; // 0x28
        struct FSTR_MagnetismPresetDesc MagnetismInAimState_12_F755CE754395431A1BDE94B2FC3E2842; // 0x38

    };

    struct FMapAreaDifficulty_ST //UserDefinedStruct MapAreaDifficulty_ST.MapAreaDifficulty_ST
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText Text_6_D9146C924A469B0435C41F8E7DE66C83; // 0x0
        struct FString StyleTag_5_FDD856DD46848DA297A2B0AD92C1EBA8; // 0x20

    };

    struct FST_EffortDataTableRow //UserDefinedStruct ST_EffortDataTableRow.ST_EffortDataTableRow
    {
    //Children Prop Count (Fields): 1
    public:

        struct TMap<enum class EN_EffortTypes, struct FST_EffortData> Efforts_8_70D960094B9CBF7FE719299E4CCEDE62; // 0x0

    };

    struct FST_EffortData //UserDefinedStruct ST_EffortData.ST_EffortData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle VO_2_DACCD7C64AEC65EC53F9B7952C5B9399; // 0x0
        bool OnlyPlayOnAutonomousProxy_12_491168E947DFFD7794F07FBE4A0D03AD; // 0x10

    };

    struct FInventoryOnboarding_ST //UserDefinedStruct InventoryOnboarding_ST.InventoryOnboarding_ST
    {
    //Children Prop Count (Fields): 5
    public:

        struct TArray<enum class EYPlayerSetType> PlayerSetType_4_DF62AE37481D51ADBAD7E2AE9D8728E7; // 0x0
        enum class EYItemType ItemType_6_DD97073647CFC11CC5BFE58D88DC1B6B; // 0x10
        bool RequiresTools_8_9810ED0047891CB88D72EDA78EACE954; // 0x11
        bool CheckSpecificEquippedType_14_CC1D35464840C5305204FEA5EB5AC3FE; // 0x12
        bool HighlightPlayerBag_17_724F8303483E11F3316CA8B18F420501; // 0x13

    };

    struct FStructure_FilterCategoryBtnData //UserDefinedStruct Structure_FilterCategoryBtnData.Structure_FilterCategoryBtnData
    {
    //Children Prop Count (Fields): 2
    public:

        struct FText Label_4_C838AB6F45AE918909F746B08FDAD6CC; // 0x0
        struct FYFilterCategoriesDataEntry FilterCategories_9_AA2554964217366855F3D0B6AE34A91C; // 0x20

    };

    struct FStucture_FilterData //UserDefinedStruct Stucture_FilterData.Stucture_FilterData
    {
    //Children Prop Count (Fields): 9
    public:

        enum class En_FilterCategoryCollection GenericCollectionType_28_48E7D0BF4620B1D1AA9F50AA355DFAE6; // 0x0
        bool UseIcon_7_1EBAB2534C0792B29A035696802C24FE; // 0x1
        bool ShowNotification_10_3663EE804DFDF8C1D6D6D8BE6DE0C94A; // 0x2
        struct FString ChildNavigationCategory_34_12AD8247457DC0F49294F0AB04F88084; // 0x8
        struct FText OverridenLabel_30_B14FDBDF4B0CB0F16C92A0B658489894; // 0x18
        struct TArray<enum class EYCustomizationCategory> AdditionalCustomizationCategories_31_94F7337740B74FDDFC233C9D0ED26C4B; // 0x38
        struct TArray<enum class EYItemType> AdditionalItemTypes_32_B7F48F2F48A17C6862BBE9AF8344367F; // 0x48
        struct FString HighlightId_37_ACC5F71B46F9CF03554A5F8CBB0D0AFF; // 0x58
        struct FDataTableRowHandle HighlightRowId_41_5879BEA645573D576808E6AD8BEADAAC; // 0x68

    };

    struct FStucture_FilterCollection //UserDefinedStruct Stucture_FilterCollection.Stucture_FilterCollection
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<struct FStucture_FilterData> Filters_20_B14FDBDF4B0CB0F16C92A0B658489894; // 0x0

    };

    struct FStucture_TabData //UserDefinedStruct Stucture_TabData.Stucture_TabData
    {
    //Children Prop Count (Fields): 8
    public:

        struct FText TabLabel_5_B14FDBDF4B0CB0F16C92A0B658489894; // 0x0
        bool UseIcon_7_1EBAB2534C0792B29A035696802C24FE; // 0x20
        bool ShowNotification_10_87374DDB4C3DA819C5C811B8950F8058; // 0x21
        enum class EYCustomizationMode CustomizationMode_13_473749A24D62878D244B9383A1ACDB65; // 0x22
        enum class EYCustomizationCategory CustomizationCategory_17_08D2C6984F40B5E55A7DCC8149351C35; // 0x23
        bool ShowDecoration_19_982CD86E42C85676EDC9449045676187; // 0x24
        bool ShowSorting_21_A8A81A4F436E95F33E7AE698C5351C55; // 0x25
        struct FDataTableRowHandle HighlightID_24_DA9B988A49E198B3CCE26B88343FA3DE; // 0x28

    };

    struct FStucture_TabBIData //UserDefinedStruct Stucture_TabBIData.Stucture_TabBIData
    {
    //Children Prop Count (Fields): 2
    public:

        bool SendBI_34_1EBAB2534C0792B29A035696802C24FE; // 0x0
        struct FString BIEventLocation_33_F27AF35F4EABA1C21F7DC2BF35FB8274; // 0x8

    };

    struct FStructure_HUD_ProgressBars //UserDefinedStruct Structure_HUD_ProgressBars.Structure_HUD_ProgressBars
    {
    //Children Prop Count (Fields): 8
    public:

        float StartValue_7_C4C15954450AAA4F616FDE8A91A5AC08; // 0x0
        float DesiredValue_3_2C117D094E4B9F91267EFF82B906EAFE; // 0x4
        float Alpha_5_D86EF2224E857BC7B927459986D8A1C8; // 0x8
        class UProgressBar* ProgressBar_10_700A577046AAB0A82FA4BF9177426292; // 0x10
        float Speed_13_7B8385DB490AC27EBC94CAB250DF4EC3; // 0x18
        float Delay_15_34041B7E4CCFD62346ED32B285990076; // 0x1c
        enum class EHorizonTweenLerpMode InterpolationMode_20_41F3AC9E428769FF838307B96C4C0791; // 0x20
        bool IsDone_22_CABD3814486E24C2C224A4BA4916C019; // 0x21

    };

    struct FStructure_SelectorData //UserDefinedStruct Structure_SelectorData.Structure_SelectorData
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText DisplayName_6_1D3030FF48F4B027C56D8885BC7ED0CF; // 0x0
        float Value_9_AEB3506B4AFD9C32EA6843BA49965EFA; // 0x20
        struct FName DataName_12_042E97B04C04EA391C7FDEA763642D53; // 0x24

    };

    struct FStructure_InputKeyNav //UserDefinedStruct Structure_InputKeyNav.Structure_InputKeyNav
    {
    //Children Prop Count (Fields): 5
    public:

        struct FText NavLabel_3_1D3030FF48F4B027C56D8885BC7ED0CF; // 0x0
        struct FText PCLabel_6_CB42A76C49016385686DDBA2B3B9382A; // 0x20
        struct FDataTableRowHandle InputBinding_10_56D77B2944E1FDD4F600E88178F6424B; // 0x40
        bool InfoOnly_12_27D855974032CC7E1BB229ABA8E16CB0; // 0x50
        struct FDataTableRowHandle HighlightID_15_9BF698024D40F7BC0089FF9BC645B114; // 0x58

    };

    struct FMS_HintMarkerReplicatedData_ST //UserDefinedStruct MS_HintMarkerReplicatedData_ST.MS_HintMarkerReplicatedData_ST
    {
    //Children Prop Count (Fields): 2
    public:

        struct FName ActiveMarkerId_9_7B44AE714CA2F178985EFB893A89AE89; // 0x0
        struct TArray<struct FTransform> HintTransforms_17_4C1A67004B0583AF2B9C328BF93AF29A; // 0x8

    };

    struct FEntityDistanceAndMovementComponent //UserDefinedStruct EntityDistanceAndMovementComponent.EntityDistanceAndMovementComponent
    {
    //Children Prop Count (Fields): 2
    public:

        float Distance_4_0883B7A645B6339E19BDA09D82D06C33; // 0x0
        class UYPlayerRenderTargetVfxMovementComponent_BP_C* RenderTargetMovementComponent_6_08E54D1B4963FEF770269899C40958C9; // 0x8

    };

    struct FLightningTuningDataInfo //UserDefinedStruct LightningTuningDataInfo.LightningTuningDataInfo
    {
    //Children Prop Count (Fields): 9
    public:

        float DistanceFromPlayerMin_3_F4D76B234A12E2778F754C91D3C00D5F; // 0x0
        float DistanceFromPlayerMax_7_A19470F14CA0202A8DA8928C10300050; // 0x4
        float CooldownMin_10_34238BE249F635E9D30E5D8984C934E5; // 0x8
        float CooldownMax_11_5EB969F24B410BAE7E702BBEA5797E9E; // 0xc
        float LightningWarningTime_17_E4FBC2B9497042C5251E7EAD754139EB; // 0x10
        float ImpactVFXTimeToImpact_40_61B4F1C14C52C95E12BD9EBCC78DF14D; // 0x14
        float Damage_27_5819B0B94E931BEF3EFC4C8C73DF31F3; // 0x18
        float DamageRadius_29_3438EAD94CEF46EF4A0BC0A172A69988; // 0x1c
        bool IsDebugForcedEnabled_34_0D770C7A476CD9B6A977AFB2D66EF13C; // 0x20

    };

    struct FAbility_Action_AudioDecoy //UserDefinedStruct Ability_Action_AudioDecoy.Ability_Action_AudioDecoy
    {
    //Children Prop Count (Fields): 3
    public:

        struct FDataTableRowHandle DecoyAudio_2_FABA0C5543E0FA95F7E37BA2306A398E; // 0x0
        float Duration_5_8E352E014F8A0DC8A08A19B47534F3B3; // 0x10
        float FadeOutDuration_7_D0758DD34263AD91F9AE839FCA0EFFED; // 0x14

    };

    struct FAbility_Action_GasGrenade //UserDefinedStruct Ability_Action_GasGrenade.Ability_Action_GasGrenade
    {
    //Children Prop Count (Fields): 7
    public:

        struct FDataTableRowHandle Audio_23_FABA0C5543E0FA95F7E37BA2306A398E; // 0x0
        float DurationAudio_22_8E352E014F8A0DC8A08A19B47534F3B3; // 0x10
        float FadeOutDuration_7_D0758DD34263AD91F9AE839FCA0EFFED; // 0x14
        float Damage_15_58F19B994E4E771D4A6195BE9FA72B0E; // 0x18
        float Radius_21_45B1D3B944793EB7D55B389C3F7ADC03; // 0x1c
        float Interval_32_A6DABB044F11F6F78F09F7A340D2BA02; // 0x20
        float Penetration_35_9ACEB69F42C354F52F33C293E4315192; // 0x24

    };

    struct FAbility_Action_RoadFlare //UserDefinedStruct Ability_Action_RoadFlare.Ability_Action_RoadFlare
    {
    //Children Prop Count (Fields): 1
    public:

        float Duration_2_C358A3414BA496CA903791A70A14995E; // 0x0

    };

    struct FStructure_DeveloperCredits //UserDefinedStruct Structure_DeveloperCredits.Structure_DeveloperCredits
    {
    //Children Prop Count (Fields): 3
    public:

        struct FText Department_9_0EA9FE534C653A4FD65C78B8B079FD73; // 0x0
        struct FText Role_10_2FF3DD614F25ED22B8737CA8063EA90C; // 0x20
        struct FText Name_8_BC4B8E2E41DD181723F964A585391D2D; // 0x40

    };

    struct FFCodexRow //UserDefinedStruct FCodexRow.FCodexRow
    {
    //Children Prop Count (Fields): 4
    public:

        struct FText Header_2_38F4917944A719B8A792DA83AE4F87A2; // 0x0
        struct FText Description_4_7250F03B40EC6EC1FDFED8A28716F5C4; // 0x20
        struct TArray<struct FDataTableRowHandle> List_8_14D813B944F31427CB452D9C511A4DB5; // 0x40
        struct TSoftObjectPtr<UTexture2D> Image_12_0D967B0C4ACCB9459C2CA38825A7BE3A; // 0x50

    };

    struct FLootSpawnVolume_Struct //UserDefinedStruct LootSpawnVolume_Struct.LootSpawnVolume_Struct
    {
    //Children Prop Count (Fields): 2
    public:

        struct FDataTableRowHandle LootItem_6_A19338914E4C3CB9AF91639FE74C0AF1; // 0x0
        float SpawnWeight_5_3FB5E80140161AA700469E99EEE3E709; // 0x10

    };

    struct FSplineMeshData //UserDefinedStruct SplineMeshData.SplineMeshData
    {
    //Children Prop Count (Fields): 7
    public:

        int32_t index_2_5FE4DEED40A6ADD8B4EB4FB0039B20E1; // 0x0
        class UStaticMesh* mesh_5_617329714D2764DF1450F989B3A2E1ED; // 0x8
        struct FVector2D startscale_19_0854F8904CB76909AE4B8D9A19DEDEC4; // 0x10
        float startroll_25_6A06494442BC531F695F12B2B40EB85C; // 0x18
        struct FVector2D endscale_20_FA4D8C914E0C66C3F145159BC5B06F62; // 0x1c
        float endroll_26_AB315D0849CD2DD6F06836BF746E2DEF; // 0x24
        class UMaterialInterface* Material_18_AB90915240DF896019F38095C08DCDA4; // 0x28

    };

    struct FDecoMeshData //UserDefinedStruct DecoMeshData.DecoMeshData
    {
    //Children Prop Count (Fields): 17
    public:

        int32_t EverXSplineMesh_8_0E6889384BCC3F4500C0CF83E129E45E; // 0x0
        struct TArray<class UStaticMesh*> DecoMeshArray_24_ED66898E4CC3C964AB4FA5B4C0FC11B4; // 0x8
        int32_t MinSocketsUsed_60_47192A004D226707FE5876896F364444; // 0x18
        int32_t MaxSocketsUsed_61_F224931E4B3BB2E2DF7805B2E7D3C52B; // 0x1c
        struct FVector ScaleMin_40_5FEBCE544F0BBED029EF9AA6DA3A92D0; // 0x20
        struct FVector ScaleMax_42_BDBA8D714E74F5C867B5BEB2666FB78E; // 0x2c
        float RollMin_11_EC9F268C4EE6C7B5039D2D8F46B1F106; // 0x38
        float RollMax_13_889FFD20424E3AB8D067E0BACB668FBE; // 0x3c
        float PitchMin_15_E342E91648CB4B3F79A8DEB0E15BFB34; // 0x40
        float PitchMax_17_9125B41249BC2C4D98DCABB91E63BDB1; // 0x44
        float YawMin_29_5284492D49C04E99ADD7AAA2FF9F0EC5; // 0x48
        float YawMax_30_C76E5E0F4A2C2642DED1E9B6797FE7C7; // 0x4c
        struct FRandomStream RandomSeed_21_83FB461B4163DC2E9B897DBE758759BF; // 0x50
        struct TArray<class UInstancedStaticMeshComponent*> DecoMesh_DO_NOT_TOUCH_49_227F006C4C41CC64B405B089BAEDC9AB; // 0x58
        struct TMap<struct FName, bool> SocketNameFlags_54_2B7B5D3A402B1FFE7BAD82A55CA1B212; // 0x68
        class AActor* Actor_67_D126AD46496D37E1AE008B99C209873E; // 0xb8
        bool AllowCullDistanceVolume_69_5A7F466B4D0ED1CD68AA5A93A9462940; // 0xc0

    };

    struct FAMB_Spawn_Cues_Data_Struct //UserDefinedStruct AMB_Spawn_Cues_Data_Struct.AMB_Spawn_Cues_Data_Struct
    {
    //Children Prop Count (Fields): 11
    public:

        struct FDataTableRowHandle Sound_2_11CC8B0D4E2DDC47875919AA2DD4579C; // 0x0
        float MinSpawnTime_5_B4107DD04913B0509CF5DBA081BECF18; // 0x10
        float MaxSpawnTime_7_98911C664C8D939837B5E99924EB7D8B; // 0x14
        float MinDistance_12_658E32E04E41214A494767AB25D55300; // 0x18
        float MaxDistance_11_0D69489440EFFB01B9C17DAFA1FDE148; // 0x1c
        float Volume_15_7D81496D4D9A5FB5D6BBBF85F46CEA95; // 0x20
        bool Day_20_16342EB540FDD2B4B262519D8A327BA7; // 0x24
        bool Dusk_25_FDDBD18B408DAC125807DDADC6453C44; // 0x25
        bool Storm_26_238F068540BE9E95D16FA2B6D9B6A954; // 0x26
        bool Peak_27_3B37D5F1421AB7E278BDFC9AA68F6F25; // 0x27
        bool Dawn_28_E7703CA94019E6A1BD6F10ABCCC9B87A; // 0x28

    };

    struct FSplineHierarchicalData //UserDefinedStruct SplineHierarchicalData.SplineHierarchicalData
    {
    //Children Prop Count (Fields): 1
    public:

        struct TArray<class UHierarchicalInstancedStaticMeshComponent*> Meshes_3_02E79BBD473816B398679987541E5A86; // 0x0

    };

    struct FSplineMeshData //UserDefinedStruct SplineMeshData.SplineMeshData
    {
    //Children Prop Count (Fields): 9
    public:

        struct TArray<class UStaticMesh*> SplineMeshes_3_150A19D1427BB24DF5D37DA7D3993AE9; // 0x0
        struct TArray<int32_t> SplineMeshSelectionProbability_23_2FD5150D4F57BFA6E97868A8805E21EC; // 0x10
        float DistanceBetweenSplineMeshes_20_D7FF36BC40359B6ECFE616B44F255AE7; // 0x20
        struct FTransform LocationOffset_22_1247D3D6436434C1658D6BAD00DDC454; // 0x30
        bool VerticalOrientation_25_740772604CEA3CAD538323B8C2FA9252; // 0x60
        bool PlaceOnGround_27_CEDD46264C4F47D99C480787F8579201; // 0x61
        int32_t Seed_32_CF4698A94C2D3C2323C337B48A11C23E; // 0x64
        struct TArray<struct FSplineOverwriteMesh> OverwriteMesh_37_CFC5ABAF49F3CCF5139A68AB6184261B; // 0x68
        class UStaticMesh* EndMesh_41_FA92AFD642E57842A1358E81F7C5ABDA; // 0x78

    };

    struct FSplineOverwriteMesh //UserDefinedStruct SplineOverwriteMesh.SplineOverwriteMesh
    {
    //Children Prop Count (Fields): 5
    public:

        int32_t IndexToOverwrite_3_09C216C14349C48EE563D59065769EB9; // 0x0
        class UStaticMesh* Mesh_6_2619AD8643A018A4B02E80B1B645E2B2; // 0x8
        struct FTransform MeshTransform_12_7AE7335949849EF7CA42469C30E6A38B; // 0x10
        float DistanceLeft_14_5087517C455845BCFA66FDA64F8A1DC9; // 0x40
        float DistanceRight_17_BC78F8B44684992F056FBCB0F8A4AB34; // 0x44

    };


}